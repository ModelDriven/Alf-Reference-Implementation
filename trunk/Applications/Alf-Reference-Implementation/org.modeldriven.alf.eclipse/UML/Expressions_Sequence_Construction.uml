<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_R42twCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_R42twScoEeSLVrU2ifxtpw" name="Expressions_Sequence_Construction" classifierBehavior="_R42tyicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_R42twicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_R42twycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_R42txCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_R42txScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_R42txicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_R42txycoEeSLVrU2ifxtpw" name="Expressions_Sequence_Construction$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42tyCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42tyScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R42tyicoEeSLVrU2ifxtpw" name="Expressions_Sequence_Construction$classifierBehavior$1" visibility="private" isActive="true" node="_R42tyycoEeSLVrU2ifxtpw" group="_R42tyycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R42tyycoEeSLVrU2ifxtpw" name="Body(Expressions_Sequence_Construction$classifierBehavior$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42tzCcoEeSLVrU2ifxtpw" target="_R42uPycoEeSLVrU2ifxtpw" source="_R42uKycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42tzScoEeSLVrU2ifxtpw" target="_R42uNycoEeSLVrU2ifxtpw" source="_R42t8ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42tzicoEeSLVrU2ifxtpw" target="_R42ubicoEeSLVrU2ifxtpw" source="_R42uLCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42tzycoEeSLVrU2ifxtpw" target="_R42uZicoEeSLVrU2ifxtpw" source="_R42uNycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t0CcoEeSLVrU2ifxtpw" target="_R42unScoEeSLVrU2ifxtpw" source="_R42uLScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t0ScoEeSLVrU2ifxtpw" target="_R42ulScoEeSLVrU2ifxtpw" source="_R42uZicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t0icoEeSLVrU2ifxtpw" target="_R42uzCcoEeSLVrU2ifxtpw" source="_R42uLicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t0ycoEeSLVrU2ifxtpw" target="_R42uxCcoEeSLVrU2ifxtpw" source="_R42ulScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t1CcoEeSLVrU2ifxtpw" target="_R42u-ycoEeSLVrU2ifxtpw" source="_R42uLycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t1ScoEeSLVrU2ifxtpw" target="_R42u8ycoEeSLVrU2ifxtpw" source="_R42uxCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t1icoEeSLVrU2ifxtpw" target="_R42vKicoEeSLVrU2ifxtpw" source="_R42uMCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t1ycoEeSLVrU2ifxtpw" target="_R42vIicoEeSLVrU2ifxtpw" source="_R42u8ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t2CcoEeSLVrU2ifxtpw" target="_R42vYycoEeSLVrU2ifxtpw" source="_R42uMScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t2ScoEeSLVrU2ifxtpw" target="_R42vUScoEeSLVrU2ifxtpw" source="_R42vIicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t2icoEeSLVrU2ifxtpw" target="_R42vcScoEeSLVrU2ifxtpw" source="_R42uMicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t2ycoEeSLVrU2ifxtpw" target="_R42vaScoEeSLVrU2ifxtpw" source="_R42vUScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t3CcoEeSLVrU2ifxtpw" target="_R42vmCcoEeSLVrU2ifxtpw" source="_R42uMycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t3ScoEeSLVrU2ifxtpw" target="_R42vgicoEeSLVrU2ifxtpw" source="_R42vaScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t3icoEeSLVrU2ifxtpw" target="_R42v3ycoEeSLVrU2ifxtpw" source="_R42uNCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t3ycoEeSLVrU2ifxtpw" target="_R42vuCcoEeSLVrU2ifxtpw" source="_R42vgicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t4CcoEeSLVrU2ifxtpw" target="_R42wCScoEeSLVrU2ifxtpw" source="_R42uNCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t4ScoEeSLVrU2ifxtpw" target="_R42v4icoEeSLVrU2ifxtpw" source="_R42vuCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t4icoEeSLVrU2ifxtpw" target="_R42wMycoEeSLVrU2ifxtpw" source="_R42uNCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t4ycoEeSLVrU2ifxtpw" target="_R42wDCcoEeSLVrU2ifxtpw" source="_R42v4icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t5CcoEeSLVrU2ifxtpw" target="_R42wXScoEeSLVrU2ifxtpw" source="_R42uNScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t5ScoEeSLVrU2ifxtpw" target="_R42wNicoEeSLVrU2ifxtpw" source="_R42wDCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t5icoEeSLVrU2ifxtpw" target="_R42whycoEeSLVrU2ifxtpw" source="_R42uNScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t5ycoEeSLVrU2ifxtpw" target="_R42wYCcoEeSLVrU2ifxtpw" source="_R42wNicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t6CcoEeSLVrU2ifxtpw" target="_R42wsScoEeSLVrU2ifxtpw" source="_R42uNScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t6ScoEeSLVrU2ifxtpw" target="_R42wiicoEeSLVrU2ifxtpw" source="_R42wYCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t6icoEeSLVrU2ifxtpw" target="_R42w1CcoEeSLVrU2ifxtpw" source="_R42uNicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t6ycoEeSLVrU2ifxtpw" target="_R42wtCcoEeSLVrU2ifxtpw" source="_R42wiicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t7CcoEeSLVrU2ifxtpw" target="_R42xFicoEeSLVrU2ifxtpw" source="_R42uNicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t7ScoEeSLVrU2ifxtpw" target="_R42w3CcoEeSLVrU2ifxtpw" source="_R42wtCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t7icoEeSLVrU2ifxtpw" target="_R42xZicoEeSLVrU2ifxtpw" source="_R42uNicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t7ycoEeSLVrU2ifxtpw" target="_R42xLCcoEeSLVrU2ifxtpw" source="_R42w3CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R42t8CcoEeSLVrU2ifxtpw" target="_R42xfCcoEeSLVrU2ifxtpw" source="_R42xLCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42t8ScoEeSLVrU2ifxtpw" name="ExpressionStatement@26a6ffc1" outgoing="_R42tzScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t8icoEeSLVrU2ifxtpw" target="_R42uKycoEeSLVrU2ifxtpw" source="_R42uACcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t8ycoEeSLVrU2ifxtpw" target="_R42uLCcoEeSLVrU2ifxtpw" source="_R42uAycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t9CcoEeSLVrU2ifxtpw" target="_R42uLScoEeSLVrU2ifxtpw" source="_R42uBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t9ScoEeSLVrU2ifxtpw" target="_R42uLicoEeSLVrU2ifxtpw" source="_R42uCScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t9icoEeSLVrU2ifxtpw" target="_R42uLycoEeSLVrU2ifxtpw" source="_R42uDCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t9ycoEeSLVrU2ifxtpw" target="_R42uMCcoEeSLVrU2ifxtpw" source="_R42uDycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t-CcoEeSLVrU2ifxtpw" target="_R42uMScoEeSLVrU2ifxtpw" source="_R42uEicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t-ScoEeSLVrU2ifxtpw" target="_R42uMicoEeSLVrU2ifxtpw" source="_R42uFScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t-icoEeSLVrU2ifxtpw" target="_R42uMycoEeSLVrU2ifxtpw" source="_R42uGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t-ycoEeSLVrU2ifxtpw" target="_R42uNCcoEeSLVrU2ifxtpw" source="_R42uGycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t_CcoEeSLVrU2ifxtpw" target="_R42uNScoEeSLVrU2ifxtpw" source="_R42uHicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t_ScoEeSLVrU2ifxtpw" target="_R42uNicoEeSLVrU2ifxtpw" source="_R42uIScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42t_icoEeSLVrU2ifxtpw" target="_R42uJCcoEeSLVrU2ifxtpw" source="_R42uKCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R42t_ycoEeSLVrU2ifxtpw" name="Call(test)" operation="_R43YKCcoEeSLVrU2ifxtpw">
              <result xmi:id="_R42uACcoEeSLVrU2ifxtpw" name="Call(test).result(seq1)" outgoing="_R42t8icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uAScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uAicoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_R42uAycoEeSLVrU2ifxtpw" name="Call(test).result(seq2)" outgoing="_R42t8ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uBCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uBScoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_R42uBicoEeSLVrU2ifxtpw" name="Call(test).result(seq3)" outgoing="_R42t9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uBycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uCCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_R42uCScoEeSLVrU2ifxtpw" name="Call(test).result(seq4)" outgoing="_R42t9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uCicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uCycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_R42uDCcoEeSLVrU2ifxtpw" name="Call(test).result(seq5)" outgoing="_R42t9icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uDScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uDicoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_R42uDycoEeSLVrU2ifxtpw" name="Call(test).result(seq6)" outgoing="_R42t9ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uECcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uEScoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_R42uEicoEeSLVrU2ifxtpw" name="Call(test).result(seq7)" outgoing="_R42t-CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uEycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uFCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_R42uFScoEeSLVrU2ifxtpw" name="Call(test).result(x)" outgoing="_R42t-ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uFicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uFycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_R42uGCcoEeSLVrU2ifxtpw" name="Call(test).result(customers)" outgoing="_R42t-icoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uGScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uGicoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_R42uGycoEeSLVrU2ifxtpw" name="Call(test).result(set1)" outgoing="_R42t-ycoEeSLVrU2ifxtpw" type="_R43ZCicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uHCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uHScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_R42uHicoEeSLVrU2ifxtpw" name="Call(test).result(set2)" outgoing="_R42t_CcoEeSLVrU2ifxtpw" type="_R43ZCicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uHycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uICcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_R42uIScoEeSLVrU2ifxtpw" name="Call(test).result(list)" outgoing="_R42t_ScoEeSLVrU2ifxtpw" type="_R439dycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uIicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uIycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_R42uJCcoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_R42t_icoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uJScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uJicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_R42uJycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_R42uKCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R42t_icoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uKScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uKicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uKycoEeSLVrU2ifxtpw" name="Fork(seq1)@456ab83f" incoming="_R42t8icoEeSLVrU2ifxtpw" outgoing="_R42tzCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uLCcoEeSLVrU2ifxtpw" name="Fork(seq2)@5013eba" incoming="_R42t8ycoEeSLVrU2ifxtpw" outgoing="_R42tzicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uLScoEeSLVrU2ifxtpw" name="Fork(seq3)@14bd27e7" incoming="_R42t9CcoEeSLVrU2ifxtpw" outgoing="_R42t0CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uLicoEeSLVrU2ifxtpw" name="Fork(seq4)@e86b954" incoming="_R42t9ScoEeSLVrU2ifxtpw" outgoing="_R42t0icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uLycoEeSLVrU2ifxtpw" name="Fork(seq5)@2ef1413f" incoming="_R42t9icoEeSLVrU2ifxtpw" outgoing="_R42t1CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uMCcoEeSLVrU2ifxtpw" name="Fork(seq6)@60f2a72c" incoming="_R42t9ycoEeSLVrU2ifxtpw" outgoing="_R42t1icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uMScoEeSLVrU2ifxtpw" name="Fork(seq7)@5abd6b6d" incoming="_R42t-CcoEeSLVrU2ifxtpw" outgoing="_R42t2CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uMicoEeSLVrU2ifxtpw" name="Fork(x)@49d7efa5" incoming="_R42t-ScoEeSLVrU2ifxtpw" outgoing="_R42t2icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uMycoEeSLVrU2ifxtpw" name="Fork(customers)@7fb65f82" incoming="_R42t-icoEeSLVrU2ifxtpw" outgoing="_R42t3CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uNCcoEeSLVrU2ifxtpw" name="Fork(set1)@1e38914f" incoming="_R42t-ycoEeSLVrU2ifxtpw" outgoing="_R42t3icoEeSLVrU2ifxtpw _R42t4CcoEeSLVrU2ifxtpw _R42t4icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uNScoEeSLVrU2ifxtpw" name="Fork(set2)@13cbe909" incoming="_R42t_CcoEeSLVrU2ifxtpw" outgoing="_R42t5CcoEeSLVrU2ifxtpw _R42t5icoEeSLVrU2ifxtpw _R42t6CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R42uNicoEeSLVrU2ifxtpw" name="Fork(list)@30305806" incoming="_R42t_ScoEeSLVrU2ifxtpw" outgoing="_R42t6icoEeSLVrU2ifxtpw _R42t7CcoEeSLVrU2ifxtpw _R42t7icoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uNycoEeSLVrU2ifxtpw" name="ExpressionStatement@33983700" incoming="_R42tzScoEeSLVrU2ifxtpw" outgoing="_R42tzycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uOCcoEeSLVrU2ifxtpw" target="_R42uPCcoEeSLVrU2ifxtpw" source="_R42uRycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uOScoEeSLVrU2ifxtpw" target="_R42uQicoEeSLVrU2ifxtpw" source="_R42uUScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42uOicoEeSLVrU2ifxtpw" target="_R42uOycoEeSLVrU2ifxtpw" source="_R42uRScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42uOycoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42uOicoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42uPCcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42uOCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uPScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uPicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42uPycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42tzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uQCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uQScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42uQicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42uOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uQycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uRCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uRScoEeSLVrU2ifxtpw" name="Tuple@65fedfd8" outgoing="_R42uOicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42uRicoEeSLVrU2ifxtpw" name="Value(&quot;seq1&quot;)">
                <result xmi:id="_R42uRycoEeSLVrU2ifxtpw" name="Value(&quot;seq1&quot;).result" outgoing="_R42uOCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uSCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uSScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42uSicoEeSLVrU2ifxtpw" value="seq1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uSycoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@43463383">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42uTCcoEeSLVrU2ifxtpw" target="_R42uWicoEeSLVrU2ifxtpw" source="_R42uVCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42uTScoEeSLVrU2ifxtpw" target="_R42uYCcoEeSLVrU2ifxtpw" source="_R42uWicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uTicoEeSLVrU2ifxtpw" target="_R42uUScoEeSLVrU2ifxtpw" source="_R42uVicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uTycoEeSLVrU2ifxtpw" target="_R42uUScoEeSLVrU2ifxtpw" source="_R42uXCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uUCcoEeSLVrU2ifxtpw" target="_R42uUScoEeSLVrU2ifxtpw" source="_R42uYicoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42uUScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@43463383.output" incoming="_R42uTicoEeSLVrU2ifxtpw _R42uTycoEeSLVrU2ifxtpw _R42uUCcoEeSLVrU2ifxtpw" outgoing="_R42uOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uUicoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uUycoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uVCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@7e9f0c3a#1" outgoing="_R42uTCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42uVScoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_R42uVicoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;).result" outgoing="_R42uTicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uVycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uWCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42uWScoEeSLVrU2ifxtpw" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uWicoEeSLVrU2ifxtpw" name="SequenceExpressionList@7e9f0c3a#2" incoming="_R42uTCcoEeSLVrU2ifxtpw" outgoing="_R42uTScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42uWycoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_R42uXCcoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;).result" outgoing="_R42uTycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uXScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uXicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42uXycoEeSLVrU2ifxtpw" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uYCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@7e9f0c3a#3" incoming="_R42uTScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42uYScoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_R42uYicoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;).result" outgoing="_R42uUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uYycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uZCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42uZScoEeSLVrU2ifxtpw" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uZicoEeSLVrU2ifxtpw" name="ExpressionStatement@633b0e85" incoming="_R42tzycoEeSLVrU2ifxtpw" outgoing="_R42t0ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uZycoEeSLVrU2ifxtpw" target="_R42uaycoEeSLVrU2ifxtpw" source="_R42udicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uaCcoEeSLVrU2ifxtpw" target="_R42ucScoEeSLVrU2ifxtpw" source="_R42ugCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42uaScoEeSLVrU2ifxtpw" target="_R42uaicoEeSLVrU2ifxtpw" source="_R42udCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42uaicoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42uaScoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42uaycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42uZycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42ubCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42ubScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42ubicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42tzicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42ubycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42ucCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42ucScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42uaCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42ucicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42ucycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42udCcoEeSLVrU2ifxtpw" name="Tuple@456809c8" outgoing="_R42uaScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42udScoEeSLVrU2ifxtpw" name="Value(&quot;seq2&quot;)">
                <result xmi:id="_R42udicoEeSLVrU2ifxtpw" name="Value(&quot;seq2&quot;).result" outgoing="_R42uZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42udycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42ueCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42ueScoEeSLVrU2ifxtpw" value="seq2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42ueicoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@5697dde3">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42ueycoEeSLVrU2ifxtpw" target="_R42uiScoEeSLVrU2ifxtpw" source="_R42ugycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42ufCcoEeSLVrU2ifxtpw" target="_R42ujycoEeSLVrU2ifxtpw" source="_R42uiScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42ufScoEeSLVrU2ifxtpw" target="_R42ugCcoEeSLVrU2ifxtpw" source="_R42uhScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uficoEeSLVrU2ifxtpw" target="_R42ugCcoEeSLVrU2ifxtpw" source="_R42uiycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42ufycoEeSLVrU2ifxtpw" target="_R42ugCcoEeSLVrU2ifxtpw" source="_R42ukScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42ugCcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@5697dde3.output" incoming="_R42ufScoEeSLVrU2ifxtpw _R42uficoEeSLVrU2ifxtpw _R42ufycoEeSLVrU2ifxtpw" outgoing="_R42uaCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42ugScoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42ugicoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42ugycoEeSLVrU2ifxtpw" name="SequenceExpressionList@614b4a8a#1" outgoing="_R42ueycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42uhCcoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_R42uhScoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;).result" outgoing="_R42ufScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uhicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uhycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42uiCcoEeSLVrU2ifxtpw" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uiScoEeSLVrU2ifxtpw" name="SequenceExpressionList@614b4a8a#2" incoming="_R42ueycoEeSLVrU2ifxtpw" outgoing="_R42ufCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42uiicoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_R42uiycoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;).result" outgoing="_R42uficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42ujCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42ujScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42ujicoEeSLVrU2ifxtpw" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42ujycoEeSLVrU2ifxtpw" name="SequenceExpressionList@614b4a8a#3" incoming="_R42ufCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42ukCcoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_R42ukScoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;).result" outgoing="_R42ufycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42ukicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42ukycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42ulCcoEeSLVrU2ifxtpw" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42ulScoEeSLVrU2ifxtpw" name="ExpressionStatement@296114ba" incoming="_R42t0ScoEeSLVrU2ifxtpw" outgoing="_R42t0ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42ulicoEeSLVrU2ifxtpw" target="_R42umicoEeSLVrU2ifxtpw" source="_R42upScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42ulycoEeSLVrU2ifxtpw" target="_R42uoCcoEeSLVrU2ifxtpw" source="_R42urycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42umCcoEeSLVrU2ifxtpw" target="_R42umScoEeSLVrU2ifxtpw" source="_R42uoycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42umScoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42umCcoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42umicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42ulicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42umycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42unCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42unScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42t0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42unicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42unycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42uoCcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42ulycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uoScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uoicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uoycoEeSLVrU2ifxtpw" name="Tuple@348ea0f7" outgoing="_R42umCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42upCcoEeSLVrU2ifxtpw" name="Value(&quot;seq3&quot;)">
                <result xmi:id="_R42upScoEeSLVrU2ifxtpw" name="Value(&quot;seq3&quot;).result" outgoing="_R42ulicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42upicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42upycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42uqCcoEeSLVrU2ifxtpw" value="seq3">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uqScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@6e82c1e3">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42uqicoEeSLVrU2ifxtpw" target="_R42uuCcoEeSLVrU2ifxtpw" source="_R42usicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42uqycoEeSLVrU2ifxtpw" target="_R42uvicoEeSLVrU2ifxtpw" source="_R42uuCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42urCcoEeSLVrU2ifxtpw" target="_R42urycoEeSLVrU2ifxtpw" source="_R42utCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42urScoEeSLVrU2ifxtpw" target="_R42urycoEeSLVrU2ifxtpw" source="_R42uuicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uricoEeSLVrU2ifxtpw" target="_R42urycoEeSLVrU2ifxtpw" source="_R42uwCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42urycoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@6e82c1e3.output" incoming="_R42urCcoEeSLVrU2ifxtpw _R42urScoEeSLVrU2ifxtpw _R42uricoEeSLVrU2ifxtpw" outgoing="_R42ulycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42usCcoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42usScoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42usicoEeSLVrU2ifxtpw" name="SequenceExpressionList@4d1f2683#1" outgoing="_R42uqicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42usycoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R42utCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R42urCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42utScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uticoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42utycoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uuCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@4d1f2683#2" incoming="_R42uqicoEeSLVrU2ifxtpw" outgoing="_R42uqycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42uuScoEeSLVrU2ifxtpw" name="Value(true)">
                    <result xmi:id="_R42uuicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_R42urScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uuycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uvCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_R42uvScoEeSLVrU2ifxtpw" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uvicoEeSLVrU2ifxtpw" name="SequenceExpressionList@4d1f2683#3" incoming="_R42uqycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42uvycoEeSLVrU2ifxtpw" name="Value(&quot;blah&quot;)">
                    <result xmi:id="_R42uwCcoEeSLVrU2ifxtpw" name="Value(&quot;blah&quot;).result" outgoing="_R42uricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uwScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uwicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42uwycoEeSLVrU2ifxtpw" value="blah">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42uxCcoEeSLVrU2ifxtpw" name="ExpressionStatement@66ecca2c" incoming="_R42t0ycoEeSLVrU2ifxtpw" outgoing="_R42t1ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uxScoEeSLVrU2ifxtpw" target="_R42uyScoEeSLVrU2ifxtpw" source="_R42u1CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42uxicoEeSLVrU2ifxtpw" target="_R42uzycoEeSLVrU2ifxtpw" source="_R42u3icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42uxycoEeSLVrU2ifxtpw" target="_R42uyCcoEeSLVrU2ifxtpw" source="_R42u0icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42uyCcoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42uxycoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42uyScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42uxScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uyicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uyycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42uzCcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42t0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42uzScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42uzicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42uzycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42uxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u0CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42u0ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42u0icoEeSLVrU2ifxtpw" name="Tuple@2a8c2005" outgoing="_R42uxycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42u0ycoEeSLVrU2ifxtpw" name="Value(&quot;seq4&quot;)">
                <result xmi:id="_R42u1CcoEeSLVrU2ifxtpw" name="Value(&quot;seq4&quot;).result" outgoing="_R42uxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u1ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42u1icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42u1ycoEeSLVrU2ifxtpw" value="seq4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42u2CcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@13e08302">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42u2ScoEeSLVrU2ifxtpw" target="_R42u5ycoEeSLVrU2ifxtpw" source="_R42u4ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42u2icoEeSLVrU2ifxtpw" target="_R42u7ScoEeSLVrU2ifxtpw" source="_R42u5ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42u2ycoEeSLVrU2ifxtpw" target="_R42u3icoEeSLVrU2ifxtpw" source="_R42u4ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42u3CcoEeSLVrU2ifxtpw" target="_R42u3icoEeSLVrU2ifxtpw" source="_R42u6ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42u3ScoEeSLVrU2ifxtpw" target="_R42u3icoEeSLVrU2ifxtpw" source="_R42u7ycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42u3icoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@13e08302.output" incoming="_R42u2ycoEeSLVrU2ifxtpw _R42u3CcoEeSLVrU2ifxtpw _R42u3ScoEeSLVrU2ifxtpw" outgoing="_R42uxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u3ycoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42u4CcoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42u4ScoEeSLVrU2ifxtpw" name="SequenceExpressionList@f5217f2#1" outgoing="_R42u2ScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42u4icoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R42u4ycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R42u2ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u5CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42u5ScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42u5icoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42u5ycoEeSLVrU2ifxtpw" name="SequenceExpressionList@f5217f2#2" incoming="_R42u2ScoEeSLVrU2ifxtpw" outgoing="_R42u2icoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42u6CcoEeSLVrU2ifxtpw" name="Value(2)">
                    <result xmi:id="_R42u6ScoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R42u3CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u6icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42u6ycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42u7CcoEeSLVrU2ifxtpw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42u7ScoEeSLVrU2ifxtpw" name="SequenceExpressionList@f5217f2#3" incoming="_R42u2icoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42u7icoEeSLVrU2ifxtpw" name="Value(3)">
                    <result xmi:id="_R42u7ycoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R42u3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u8CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42u8ScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42u8icoEeSLVrU2ifxtpw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42u8ycoEeSLVrU2ifxtpw" name="ExpressionStatement@601734ac" incoming="_R42t1ScoEeSLVrU2ifxtpw" outgoing="_R42t1ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42u9CcoEeSLVrU2ifxtpw" target="_R42u-CcoEeSLVrU2ifxtpw" source="_R42vAycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42u9ScoEeSLVrU2ifxtpw" target="_R42u_icoEeSLVrU2ifxtpw" source="_R42vDScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42u9icoEeSLVrU2ifxtpw" target="_R42u9ycoEeSLVrU2ifxtpw" source="_R42vAScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42u9ycoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42u9icoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42u-CcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42u9CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u-ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42u-icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42u-ycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42t1CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u_CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42u_ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42u_icoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42u9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42u_ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vACcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vAScoEeSLVrU2ifxtpw" name="Tuple@7361b79f" outgoing="_R42u9icoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vAicoEeSLVrU2ifxtpw" name="Value(&quot;seq5&quot;)">
                <result xmi:id="_R42vAycoEeSLVrU2ifxtpw" name="Value(&quot;seq5&quot;).result" outgoing="_R42u9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vBCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vBScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42vBicoEeSLVrU2ifxtpw" value="seq5">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vBycoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@26c74cc6">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42vCCcoEeSLVrU2ifxtpw" target="_R42vFicoEeSLVrU2ifxtpw" source="_R42vECcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42vCScoEeSLVrU2ifxtpw" target="_R42vHCcoEeSLVrU2ifxtpw" source="_R42vFicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vCicoEeSLVrU2ifxtpw" target="_R42vDScoEeSLVrU2ifxtpw" source="_R42vEicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vCycoEeSLVrU2ifxtpw" target="_R42vDScoEeSLVrU2ifxtpw" source="_R42vGCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vDCcoEeSLVrU2ifxtpw" target="_R42vDScoEeSLVrU2ifxtpw" source="_R42vHicoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42vDScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@26c74cc6.output" incoming="_R42vCicoEeSLVrU2ifxtpw _R42vCycoEeSLVrU2ifxtpw _R42vDCcoEeSLVrU2ifxtpw" outgoing="_R42u9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vDicoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vDycoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vECcoEeSLVrU2ifxtpw" name="SequenceExpressionList@1ff789f4#1" outgoing="_R42vCCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vEScoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R42vEicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R42vCicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vEycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vFCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42vFScoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vFicoEeSLVrU2ifxtpw" name="SequenceExpressionList@1ff789f4#2" incoming="_R42vCCcoEeSLVrU2ifxtpw" outgoing="_R42vCScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vFycoEeSLVrU2ifxtpw" name="Value(2)">
                    <result xmi:id="_R42vGCcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R42vCycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vGScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vGicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42vGycoEeSLVrU2ifxtpw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vHCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@1ff789f4#3" incoming="_R42vCScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vHScoEeSLVrU2ifxtpw" name="Value(3)">
                    <result xmi:id="_R42vHicoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R42vDCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vHycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vICcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42vIScoEeSLVrU2ifxtpw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vIicoEeSLVrU2ifxtpw" name="ExpressionStatement@63d5b757" incoming="_R42t1ycoEeSLVrU2ifxtpw" outgoing="_R42t2ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vIycoEeSLVrU2ifxtpw" target="_R42vJycoEeSLVrU2ifxtpw" source="_R42vMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vJCcoEeSLVrU2ifxtpw" target="_R42vLScoEeSLVrU2ifxtpw" source="_R42vPCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42vJScoEeSLVrU2ifxtpw" target="_R42vJicoEeSLVrU2ifxtpw" source="_R42vMCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42vJicoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42vJScoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42vJycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42vIycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vKCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vKScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42vKicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42t1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vKycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vLCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42vLScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42vJCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vLicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vLycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vMCcoEeSLVrU2ifxtpw" name="Tuple@32bb2118" outgoing="_R42vJScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vMScoEeSLVrU2ifxtpw" name="Value(&quot;seq6&quot;)">
                <result xmi:id="_R42vMicoEeSLVrU2ifxtpw" name="Value(&quot;seq6&quot;).result" outgoing="_R42vIycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vMycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vNCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42vNScoEeSLVrU2ifxtpw" value="seq6">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vNicoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@55c3ab8">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42vNycoEeSLVrU2ifxtpw" target="_R42vRScoEeSLVrU2ifxtpw" source="_R42vPycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42vOCcoEeSLVrU2ifxtpw" target="_R42vSycoEeSLVrU2ifxtpw" source="_R42vRScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vOScoEeSLVrU2ifxtpw" target="_R42vPCcoEeSLVrU2ifxtpw" source="_R42vQScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vOicoEeSLVrU2ifxtpw" target="_R42vPCcoEeSLVrU2ifxtpw" source="_R42vRycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vOycoEeSLVrU2ifxtpw" target="_R42vPCcoEeSLVrU2ifxtpw" source="_R42vTScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42vPCcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@55c3ab8.output" incoming="_R42vOScoEeSLVrU2ifxtpw _R42vOicoEeSLVrU2ifxtpw _R42vOycoEeSLVrU2ifxtpw" outgoing="_R42vJCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vPScoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vPicoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vPycoEeSLVrU2ifxtpw" name="SequenceExpressionList@5f270347#1" outgoing="_R42vNycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vQCcoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R42vQScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R42vOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vQicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vQycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42vRCcoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vRScoEeSLVrU2ifxtpw" name="SequenceExpressionList@5f270347#2" incoming="_R42vNycoEeSLVrU2ifxtpw" outgoing="_R42vOCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vRicoEeSLVrU2ifxtpw" name="Value(2)">
                    <result xmi:id="_R42vRycoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R42vOicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vSCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vSScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42vSicoEeSLVrU2ifxtpw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vSycoEeSLVrU2ifxtpw" name="SequenceExpressionList@5f270347#3" incoming="_R42vOCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vTCcoEeSLVrU2ifxtpw" name="Value(3)">
                    <result xmi:id="_R42vTScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R42vOycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vTicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vTycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42vUCcoEeSLVrU2ifxtpw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vUScoEeSLVrU2ifxtpw" name="ExpressionStatement@521a35b9" incoming="_R42t2ScoEeSLVrU2ifxtpw" outgoing="_R42t2ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vUicoEeSLVrU2ifxtpw" target="_R42vVicoEeSLVrU2ifxtpw" source="_R42vXicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vUycoEeSLVrU2ifxtpw" target="_R42vWScoEeSLVrU2ifxtpw" source="_R42vZicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42vVCcoEeSLVrU2ifxtpw" target="_R42vVScoEeSLVrU2ifxtpw" source="_R42vXCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42vVScoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_R42vVCcoEeSLVrU2ifxtpw" behavior="_R450KicoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42vVicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_R42vUicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vVycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vWCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42vWScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_R42vUycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vWicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vWycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vXCcoEeSLVrU2ifxtpw" name="Tuple@15d47d4f" outgoing="_R42vVCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vXScoEeSLVrU2ifxtpw" name="Value(&quot;seq7->isEmpty()&quot;)">
                <result xmi:id="_R42vXicoEeSLVrU2ifxtpw" name="Value(&quot;seq7->isEmpty()&quot;).result" outgoing="_R42vUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vXycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vYCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42vYScoEeSLVrU2ifxtpw" value="seq7->isEmpty()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42vYicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$isEmpty__PrimitiveTypes$Integer__)" behavior="_R450jScoEeSLVrU2ifxtpw">
                <argument xmi:id="_R42vYycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$isEmpty__PrimitiveTypes$Integer__).argument(seq)" incoming="_R42t2CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vZCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vZScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R42vZicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$isEmpty__PrimitiveTypes$Integer__).result()" outgoing="_R42vUycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vZycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vaCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vaScoEeSLVrU2ifxtpw" name="ExpressionStatement@165d7531" incoming="_R42t2ycoEeSLVrU2ifxtpw" outgoing="_R42t3ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vaicoEeSLVrU2ifxtpw" target="_R42vbicoEeSLVrU2ifxtpw" source="_R42veScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vaycoEeSLVrU2ifxtpw" target="_R42vdCcoEeSLVrU2ifxtpw" source="_R42vficoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42vbCcoEeSLVrU2ifxtpw" target="_R42vbScoEeSLVrU2ifxtpw" source="_R42vdycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42vbScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_R42vbCcoEeSLVrU2ifxtpw" behavior="_R450rScoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42vbicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_R42vaicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vbycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vcCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42vcScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_R42t2icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vcicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vcycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42vdCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_R42vaycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vdScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vdicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vdycoEeSLVrU2ifxtpw" name="Tuple@4746ab08" outgoing="_R42vbCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42veCcoEeSLVrU2ifxtpw" name="Value(&quot;x5&quot;)">
                <result xmi:id="_R42veScoEeSLVrU2ifxtpw" name="Value(&quot;x5&quot;).result" outgoing="_R42vaicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42veicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42veycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42vfCcoEeSLVrU2ifxtpw" value="x5">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vfScoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_R42vficoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_R42vaycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vfycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vgCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_R42vgScoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vgicoEeSLVrU2ifxtpw" name="ExpressionStatement@12abfed8" incoming="_R42t3ScoEeSLVrU2ifxtpw" outgoing="_R42t3ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vgycoEeSLVrU2ifxtpw" target="_R42viCcoEeSLVrU2ifxtpw" source="_R42vlCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vhCcoEeSLVrU2ifxtpw" target="_R42viycoEeSLVrU2ifxtpw" source="_R42vpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vhScoEeSLVrU2ifxtpw" target="_R42vjicoEeSLVrU2ifxtpw" source="_R42vqScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42vhicoEeSLVrU2ifxtpw" target="_R42vhycoEeSLVrU2ifxtpw" source="_R42vkScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42vhycoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42vhicoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42viCcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42vgycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42viScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42viicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42viycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42vhCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vjCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vjScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42vjicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42vhScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vjycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vkCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vkScoEeSLVrU2ifxtpw" name="Tuple@2fc20e96" outgoing="_R42vhicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vkicoEeSLVrU2ifxtpw" target="_R42voycoEeSLVrU2ifxtpw" source="_R42vmCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vkycoEeSLVrU2ifxtpw" name="Value(&quot;customers.name&quot;)">
                <result xmi:id="_R42vlCcoEeSLVrU2ifxtpw" name="Value(&quot;customers.name&quot;).result" outgoing="_R42vgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vlScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vlicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42vlycoEeSLVrU2ifxtpw" value="customers.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R42vmCcoEeSLVrU2ifxtpw" name="Fork(Fork(customers)@7fb65f82)" incoming="_R42t3CcoEeSLVrU2ifxtpw" outgoing="_R42vkicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42vmScoEeSLVrU2ifxtpw" name="Collect(Read(name))" mode="parallel" outputElement="_R42vpCcoEeSLVrU2ifxtpw" inputElement="_R42voycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vmicoEeSLVrU2ifxtpw" target="_R42vnScoEeSLVrU2ifxtpw" source="_R42voycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vmycoEeSLVrU2ifxtpw" target="_R42vpCcoEeSLVrU2ifxtpw" source="_R42voCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R42vnCcoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_R43YVicoEeSLVrU2ifxtpw">
                  <object xmi:id="_R42vnScoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_R42vmicoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vnicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vnycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_R42voCcoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_R42vmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42voScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42voicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42voycoEeSLVrU2ifxtpw" name="Collect(Read(name)).inputElement" incoming="_R42vkicoEeSLVrU2ifxtpw" outgoing="_R42vmicoEeSLVrU2ifxtpw" regionAsInput="_R42vmScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42vpCcoEeSLVrU2ifxtpw" name="Collect(Read(name)).outputElement" incoming="_R42vmycoEeSLVrU2ifxtpw" outgoing="_R42vhCcoEeSLVrU2ifxtpw" regionAsOutput="_R42vmScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vpScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@1ff8081c">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42vpicoEeSLVrU2ifxtpw" target="_R42vsicoEeSLVrU2ifxtpw" source="_R42vrCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vpycoEeSLVrU2ifxtpw" target="_R42vqScoEeSLVrU2ifxtpw" source="_R42vricoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vqCcoEeSLVrU2ifxtpw" target="_R42vqScoEeSLVrU2ifxtpw" source="_R42vtCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42vqScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@1ff8081c.output" incoming="_R42vpycoEeSLVrU2ifxtpw _R42vqCcoEeSLVrU2ifxtpw" outgoing="_R42vhScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vqicoEeSLVrU2ifxtpw" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vqycoEeSLVrU2ifxtpw" value="2"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vrCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@5f3df3c5#1" outgoing="_R42vpicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vrScoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;)">
                    <result xmi:id="_R42vricoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;).result" outgoing="_R42vpycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vrycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vsCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42vsScoEeSLVrU2ifxtpw" value="A">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vsicoEeSLVrU2ifxtpw" name="SequenceExpressionList@5f3df3c5#2" incoming="_R42vpicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vsycoEeSLVrU2ifxtpw" name="Value(&quot;C&quot;)">
                    <result xmi:id="_R42vtCcoEeSLVrU2ifxtpw" name="Value(&quot;C&quot;).result" outgoing="_R42vqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vtScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vticoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42vtycoEeSLVrU2ifxtpw" value="C">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vuCcoEeSLVrU2ifxtpw" name="ExpressionStatement@5353f406" incoming="_R42t3ycoEeSLVrU2ifxtpw" outgoing="_R42t4ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vuScoEeSLVrU2ifxtpw" target="_R42vvScoEeSLVrU2ifxtpw" source="_R42vxicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vuicoEeSLVrU2ifxtpw" target="_R42vwCcoEeSLVrU2ifxtpw" source="_R42v4CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42vuycoEeSLVrU2ifxtpw" target="_R42vvCcoEeSLVrU2ifxtpw" source="_R42vwycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42vvCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_R42vuycoEeSLVrU2ifxtpw" behavior="_R450KicoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42vvScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_R42vuScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vvicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vvycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42vwCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_R42vuicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vwScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vwicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42vwycoEeSLVrU2ifxtpw" name="Tuple@62528fb0" outgoing="_R42vuycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42vxCcoEeSLVrU2ifxtpw" target="_R42vyicoEeSLVrU2ifxtpw" source="_R42v4ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42vxScoEeSLVrU2ifxtpw" name="Value(&quot;set1.includes(1)&quot;)">
                <result xmi:id="_R42vxicoEeSLVrU2ifxtpw" name="Value(&quot;set1.includes(1)&quot;).result" outgoing="_R42vuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42vxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42vyCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42vyScoEeSLVrU2ifxtpw" value="set1.includes(1)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42vyicoEeSLVrU2ifxtpw" name="Collect(Call(includes))" incoming="_R42vxCcoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42v4CcoEeSLVrU2ifxtpw" inputElement="_R42v3ycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vyycoEeSLVrU2ifxtpw" target="_R42v0CcoEeSLVrU2ifxtpw" source="_R42v2ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42vzCcoEeSLVrU2ifxtpw" target="_R42vzycoEeSLVrU2ifxtpw" source="_R42v2ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vzScoEeSLVrU2ifxtpw" target="_R42v1icoEeSLVrU2ifxtpw" source="_R42v3ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42vzicoEeSLVrU2ifxtpw" target="_R42v4CcoEeSLVrU2ifxtpw" source="_R42v0ycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42vzycoEeSLVrU2ifxtpw" name="Call(includes)" incoming="_R42vzCcoEeSLVrU2ifxtpw" operation="_R438HicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_R42v0CcoEeSLVrU2ifxtpw" name="Call(includes).argument(element)" incoming="_R42vyycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v0ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v0icoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_R42v0ycoEeSLVrU2ifxtpw" name="Call(includes).result(null)" outgoing="_R42vzicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v1CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v1ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_R42v1icoEeSLVrU2ifxtpw" name="Call(includes).target" incoming="_R42vzScoEeSLVrU2ifxtpw" type="_R4378ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v1ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v2CcoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42v2ScoEeSLVrU2ifxtpw" name="Tuple@26e1728c" outgoing="_R42vzCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42v2icoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R42v2ycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R42vyycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v3CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v3ScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42v3icoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42v3ycoEeSLVrU2ifxtpw" name="Collect(Call(includes)).inputElement" incoming="_R42t3icoEeSLVrU2ifxtpw" outgoing="_R42vzScoEeSLVrU2ifxtpw" regionAsInput="_R42vyicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42v4CcoEeSLVrU2ifxtpw" name="Collect(Call(includes)).outputElement" incoming="_R42vzicoEeSLVrU2ifxtpw" outgoing="_R42vuicoEeSLVrU2ifxtpw" regionAsOutput="_R42vyicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42v4ScoEeSLVrU2ifxtpw" name="Feature(Fork(set1)@1e38914f)" outgoing="_R42vxCcoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42v4icoEeSLVrU2ifxtpw" name="ExpressionStatement@2b68f5da" incoming="_R42t4ScoEeSLVrU2ifxtpw" outgoing="_R42t4ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42v4ycoEeSLVrU2ifxtpw" target="_R42v5ycoEeSLVrU2ifxtpw" source="_R42v8CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42v5CcoEeSLVrU2ifxtpw" target="_R42v6icoEeSLVrU2ifxtpw" source="_R42wCicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42v5ScoEeSLVrU2ifxtpw" target="_R42v5icoEeSLVrU2ifxtpw" source="_R42v7ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42v5icoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_R42v5ScoEeSLVrU2ifxtpw" behavior="_R450KicoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42v5ycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_R42v4ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v6CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v6ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42v6icoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_R42v5CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v6ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v7CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42v7ScoEeSLVrU2ifxtpw" name="Tuple@1e95c523" outgoing="_R42v5ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42v7icoEeSLVrU2ifxtpw" target="_R42v9CcoEeSLVrU2ifxtpw" source="_R42wCycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42v7ycoEeSLVrU2ifxtpw" name="Value(&quot;set1.includes(3)&quot;)">
                <result xmi:id="_R42v8CcoEeSLVrU2ifxtpw" name="Value(&quot;set1.includes(3)&quot;).result" outgoing="_R42v4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v8ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v8icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42v8ycoEeSLVrU2ifxtpw" value="set1.includes(3)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42v9CcoEeSLVrU2ifxtpw" name="Collect(Call(includes))" incoming="_R42v7icoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42wCicoEeSLVrU2ifxtpw" inputElement="_R42wCScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42v9ScoEeSLVrU2ifxtpw" target="_R42v-icoEeSLVrU2ifxtpw" source="_R42wBScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42v9icoEeSLVrU2ifxtpw" target="_R42v-ScoEeSLVrU2ifxtpw" source="_R42wAycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42v9ycoEeSLVrU2ifxtpw" target="_R42wACcoEeSLVrU2ifxtpw" source="_R42wCScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42v-CcoEeSLVrU2ifxtpw" target="_R42wCicoEeSLVrU2ifxtpw" source="_R42v_ScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42v-ScoEeSLVrU2ifxtpw" name="Call(includes)" incoming="_R42v9icoEeSLVrU2ifxtpw" operation="_R438HicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_R42v-icoEeSLVrU2ifxtpw" name="Call(includes).argument(element)" incoming="_R42v9ScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v-ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v_CcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_R42v_ScoEeSLVrU2ifxtpw" name="Call(includes).result(null)" outgoing="_R42v-CcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42v_icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42v_ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_R42wACcoEeSLVrU2ifxtpw" name="Call(includes).target" incoming="_R42v9ycoEeSLVrU2ifxtpw" type="_R4378ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wAScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wAicoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wAycoEeSLVrU2ifxtpw" name="Tuple@671a823a" outgoing="_R42v9icoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wBCcoEeSLVrU2ifxtpw" name="Value(3)">
                    <result xmi:id="_R42wBScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R42v9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wBicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wBycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42wCCcoEeSLVrU2ifxtpw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wCScoEeSLVrU2ifxtpw" name="Collect(Call(includes)).inputElement" incoming="_R42t4CcoEeSLVrU2ifxtpw" outgoing="_R42v9ycoEeSLVrU2ifxtpw" regionAsInput="_R42v9CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wCicoEeSLVrU2ifxtpw" name="Collect(Call(includes)).outputElement" incoming="_R42v-CcoEeSLVrU2ifxtpw" outgoing="_R42v5CcoEeSLVrU2ifxtpw" regionAsOutput="_R42v9CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wCycoEeSLVrU2ifxtpw" name="Feature(Fork(set1)@1e38914f)" outgoing="_R42v7icoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wDCcoEeSLVrU2ifxtpw" name="ExpressionStatement@54c591c6" incoming="_R42t4ycoEeSLVrU2ifxtpw" outgoing="_R42t5ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wDScoEeSLVrU2ifxtpw" target="_R42wEScoEeSLVrU2ifxtpw" source="_R42wGicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wDicoEeSLVrU2ifxtpw" target="_R42wFCcoEeSLVrU2ifxtpw" source="_R42wNCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42wDycoEeSLVrU2ifxtpw" target="_R42wECcoEeSLVrU2ifxtpw" source="_R42wFycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42wECcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_R42wDycoEeSLVrU2ifxtpw" behavior="_R450KicoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42wEScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_R42wDScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wEicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wEycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42wFCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_R42wDicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wFScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wFicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wFycoEeSLVrU2ifxtpw" name="Tuple@77633fb3" outgoing="_R42wDycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42wGCcoEeSLVrU2ifxtpw" target="_R42wHicoEeSLVrU2ifxtpw" source="_R42wNScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wGScoEeSLVrU2ifxtpw" name="Value(&quot;set1.includes(45)&quot;)">
                <result xmi:id="_R42wGicoEeSLVrU2ifxtpw" name="Value(&quot;set1.includes(45)&quot;).result" outgoing="_R42wDScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wGycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wHCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42wHScoEeSLVrU2ifxtpw" value="set1.includes(45)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42wHicoEeSLVrU2ifxtpw" name="Collect(Call(includes))" incoming="_R42wGCcoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42wNCcoEeSLVrU2ifxtpw" inputElement="_R42wMycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wHycoEeSLVrU2ifxtpw" target="_R42wJCcoEeSLVrU2ifxtpw" source="_R42wLycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42wICcoEeSLVrU2ifxtpw" target="_R42wIycoEeSLVrU2ifxtpw" source="_R42wLScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wIScoEeSLVrU2ifxtpw" target="_R42wKicoEeSLVrU2ifxtpw" source="_R42wMycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wIicoEeSLVrU2ifxtpw" target="_R42wNCcoEeSLVrU2ifxtpw" source="_R42wJycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42wIycoEeSLVrU2ifxtpw" name="Call(includes)" incoming="_R42wICcoEeSLVrU2ifxtpw" operation="_R438HicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_R42wJCcoEeSLVrU2ifxtpw" name="Call(includes).argument(element)" incoming="_R42wHycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wJScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wJicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_R42wJycoEeSLVrU2ifxtpw" name="Call(includes).result(null)" outgoing="_R42wIicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wKCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wKScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_R42wKicoEeSLVrU2ifxtpw" name="Call(includes).target" incoming="_R42wIScoEeSLVrU2ifxtpw" type="_R4378ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wKycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wLCcoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wLScoEeSLVrU2ifxtpw" name="Tuple@637ee57" outgoing="_R42wICcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wLicoEeSLVrU2ifxtpw" name="Value(45)">
                    <result xmi:id="_R42wLycoEeSLVrU2ifxtpw" name="Value(45).result" outgoing="_R42wHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wMCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wMScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42wMicoEeSLVrU2ifxtpw" value="45">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wMycoEeSLVrU2ifxtpw" name="Collect(Call(includes)).inputElement" incoming="_R42t4icoEeSLVrU2ifxtpw" outgoing="_R42wIScoEeSLVrU2ifxtpw" regionAsInput="_R42wHicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wNCcoEeSLVrU2ifxtpw" name="Collect(Call(includes)).outputElement" incoming="_R42wIicoEeSLVrU2ifxtpw" outgoing="_R42wDicoEeSLVrU2ifxtpw" regionAsOutput="_R42wHicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wNScoEeSLVrU2ifxtpw" name="Feature(Fork(set1)@1e38914f)" outgoing="_R42wGCcoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wNicoEeSLVrU2ifxtpw" name="ExpressionStatement@259927b3" incoming="_R42t5ScoEeSLVrU2ifxtpw" outgoing="_R42t5ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wNycoEeSLVrU2ifxtpw" target="_R42wOycoEeSLVrU2ifxtpw" source="_R42wRCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wOCcoEeSLVrU2ifxtpw" target="_R42wPicoEeSLVrU2ifxtpw" source="_R42wXicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42wOScoEeSLVrU2ifxtpw" target="_R42wOicoEeSLVrU2ifxtpw" source="_R42wQScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42wOicoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_R42wOScoEeSLVrU2ifxtpw" behavior="_R450KicoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42wOycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_R42wNycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wPCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wPScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42wPicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_R42wOCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wPycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wQCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wQScoEeSLVrU2ifxtpw" name="Tuple@3de7c650" outgoing="_R42wOScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42wQicoEeSLVrU2ifxtpw" target="_R42wSCcoEeSLVrU2ifxtpw" source="_R42wXycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wQycoEeSLVrU2ifxtpw" name="Value(&quot;set2.includes(1)&quot;)">
                <result xmi:id="_R42wRCcoEeSLVrU2ifxtpw" name="Value(&quot;set2.includes(1)&quot;).result" outgoing="_R42wNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wRScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wRicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42wRycoEeSLVrU2ifxtpw" value="set2.includes(1)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42wSCcoEeSLVrU2ifxtpw" name="Collect(Call(includes))" incoming="_R42wQicoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42wXicoEeSLVrU2ifxtpw" inputElement="_R42wXScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wSScoEeSLVrU2ifxtpw" target="_R42wTicoEeSLVrU2ifxtpw" source="_R42wWScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42wSicoEeSLVrU2ifxtpw" target="_R42wTScoEeSLVrU2ifxtpw" source="_R42wVycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wSycoEeSLVrU2ifxtpw" target="_R42wVCcoEeSLVrU2ifxtpw" source="_R42wXScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wTCcoEeSLVrU2ifxtpw" target="_R42wXicoEeSLVrU2ifxtpw" source="_R42wUScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42wTScoEeSLVrU2ifxtpw" name="Call(includes)" incoming="_R42wSicoEeSLVrU2ifxtpw" operation="_R438HicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_R42wTicoEeSLVrU2ifxtpw" name="Call(includes).argument(element)" incoming="_R42wSScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wTycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wUCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_R42wUScoEeSLVrU2ifxtpw" name="Call(includes).result(null)" outgoing="_R42wTCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wUicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wUycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_R42wVCcoEeSLVrU2ifxtpw" name="Call(includes).target" incoming="_R42wSycoEeSLVrU2ifxtpw" type="_R4378ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wVScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wVicoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wVycoEeSLVrU2ifxtpw" name="Tuple@3a741857" outgoing="_R42wSicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wWCcoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R42wWScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R42wSScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wWicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wWycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42wXCcoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wXScoEeSLVrU2ifxtpw" name="Collect(Call(includes)).inputElement" incoming="_R42t5CcoEeSLVrU2ifxtpw" outgoing="_R42wSycoEeSLVrU2ifxtpw" regionAsInput="_R42wSCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wXicoEeSLVrU2ifxtpw" name="Collect(Call(includes)).outputElement" incoming="_R42wTCcoEeSLVrU2ifxtpw" outgoing="_R42wOCcoEeSLVrU2ifxtpw" regionAsOutput="_R42wSCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wXycoEeSLVrU2ifxtpw" name="Feature(Fork(set2)@13cbe909)" outgoing="_R42wQicoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wYCcoEeSLVrU2ifxtpw" name="ExpressionStatement@2f573087" incoming="_R42t5ycoEeSLVrU2ifxtpw" outgoing="_R42t6ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wYScoEeSLVrU2ifxtpw" target="_R42wZScoEeSLVrU2ifxtpw" source="_R42wbicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wYicoEeSLVrU2ifxtpw" target="_R42waCcoEeSLVrU2ifxtpw" source="_R42wiCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42wYycoEeSLVrU2ifxtpw" target="_R42wZCcoEeSLVrU2ifxtpw" source="_R42waycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42wZCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_R42wYycoEeSLVrU2ifxtpw" behavior="_R450KicoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42wZScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_R42wYScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wZicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wZycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42waCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_R42wYicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42waScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42waicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42waycoEeSLVrU2ifxtpw" name="Tuple@3456d1f5" outgoing="_R42wYycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42wbCcoEeSLVrU2ifxtpw" target="_R42wcicoEeSLVrU2ifxtpw" source="_R42wiScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wbScoEeSLVrU2ifxtpw" name="Value(&quot;set2.includes(3)&quot;)">
                <result xmi:id="_R42wbicoEeSLVrU2ifxtpw" name="Value(&quot;set2.includes(3)&quot;).result" outgoing="_R42wYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wbycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wcCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42wcScoEeSLVrU2ifxtpw" value="set2.includes(3)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42wcicoEeSLVrU2ifxtpw" name="Collect(Call(includes))" incoming="_R42wbCcoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42wiCcoEeSLVrU2ifxtpw" inputElement="_R42whycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wcycoEeSLVrU2ifxtpw" target="_R42weCcoEeSLVrU2ifxtpw" source="_R42wgycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42wdCcoEeSLVrU2ifxtpw" target="_R42wdycoEeSLVrU2ifxtpw" source="_R42wgScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wdScoEeSLVrU2ifxtpw" target="_R42wficoEeSLVrU2ifxtpw" source="_R42whycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wdicoEeSLVrU2ifxtpw" target="_R42wiCcoEeSLVrU2ifxtpw" source="_R42weycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42wdycoEeSLVrU2ifxtpw" name="Call(includes)" incoming="_R42wdCcoEeSLVrU2ifxtpw" operation="_R438HicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_R42weCcoEeSLVrU2ifxtpw" name="Call(includes).argument(element)" incoming="_R42wcycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42weScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42weicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_R42weycoEeSLVrU2ifxtpw" name="Call(includes).result(null)" outgoing="_R42wdicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wfCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wfScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_R42wficoEeSLVrU2ifxtpw" name="Call(includes).target" incoming="_R42wdScoEeSLVrU2ifxtpw" type="_R4378ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wfycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wgCcoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wgScoEeSLVrU2ifxtpw" name="Tuple@632ae7c8" outgoing="_R42wdCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wgicoEeSLVrU2ifxtpw" name="Value(3)">
                    <result xmi:id="_R42wgycoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R42wcycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42whCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42whScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42whicoEeSLVrU2ifxtpw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42whycoEeSLVrU2ifxtpw" name="Collect(Call(includes)).inputElement" incoming="_R42t5icoEeSLVrU2ifxtpw" outgoing="_R42wdScoEeSLVrU2ifxtpw" regionAsInput="_R42wcicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wiCcoEeSLVrU2ifxtpw" name="Collect(Call(includes)).outputElement" incoming="_R42wdicoEeSLVrU2ifxtpw" outgoing="_R42wYicoEeSLVrU2ifxtpw" regionAsOutput="_R42wcicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wiScoEeSLVrU2ifxtpw" name="Feature(Fork(set2)@13cbe909)" outgoing="_R42wbCcoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wiicoEeSLVrU2ifxtpw" name="ExpressionStatement@31e4b362" incoming="_R42t6ScoEeSLVrU2ifxtpw" outgoing="_R42t6ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wiycoEeSLVrU2ifxtpw" target="_R42wjycoEeSLVrU2ifxtpw" source="_R42wmCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wjCcoEeSLVrU2ifxtpw" target="_R42wkicoEeSLVrU2ifxtpw" source="_R42wsicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42wjScoEeSLVrU2ifxtpw" target="_R42wjicoEeSLVrU2ifxtpw" source="_R42wlScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42wjicoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_R42wjScoEeSLVrU2ifxtpw" behavior="_R450KicoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42wjycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_R42wiycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wkCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wkScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42wkicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_R42wjCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wkycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wlCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wlScoEeSLVrU2ifxtpw" name="Tuple@3e5489b7" outgoing="_R42wjScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42wlicoEeSLVrU2ifxtpw" target="_R42wnCcoEeSLVrU2ifxtpw" source="_R42wsycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wlycoEeSLVrU2ifxtpw" name="Value(&quot;set2.includes(45)&quot;)">
                <result xmi:id="_R42wmCcoEeSLVrU2ifxtpw" name="Value(&quot;set2.includes(45)&quot;).result" outgoing="_R42wiycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wmScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wmicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42wmycoEeSLVrU2ifxtpw" value="set2.includes(45)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42wnCcoEeSLVrU2ifxtpw" name="Collect(Call(includes))" incoming="_R42wlicoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42wsicoEeSLVrU2ifxtpw" inputElement="_R42wsScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wnScoEeSLVrU2ifxtpw" target="_R42woicoEeSLVrU2ifxtpw" source="_R42wrScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42wnicoEeSLVrU2ifxtpw" target="_R42woScoEeSLVrU2ifxtpw" source="_R42wqycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wnycoEeSLVrU2ifxtpw" target="_R42wqCcoEeSLVrU2ifxtpw" source="_R42wsScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42woCcoEeSLVrU2ifxtpw" target="_R42wsicoEeSLVrU2ifxtpw" source="_R42wpScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42woScoEeSLVrU2ifxtpw" name="Call(includes)" incoming="_R42wnicoEeSLVrU2ifxtpw" operation="_R438HicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_R42woicoEeSLVrU2ifxtpw" name="Call(includes).argument(element)" incoming="_R42wnScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42woycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wpCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_R42wpScoEeSLVrU2ifxtpw" name="Call(includes).result(null)" outgoing="_R42woCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wpicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wpycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_R42wqCcoEeSLVrU2ifxtpw" name="Call(includes).target" incoming="_R42wnycoEeSLVrU2ifxtpw" type="_R4378ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wqScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wqicoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wqycoEeSLVrU2ifxtpw" name="Tuple@2f1ca3d1" outgoing="_R42wnicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wrCcoEeSLVrU2ifxtpw" name="Value(45)">
                    <result xmi:id="_R42wrScoEeSLVrU2ifxtpw" name="Value(45).result" outgoing="_R42wnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wricoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wrycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R42wsCcoEeSLVrU2ifxtpw" value="45">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wsScoEeSLVrU2ifxtpw" name="Collect(Call(includes)).inputElement" incoming="_R42t6CcoEeSLVrU2ifxtpw" outgoing="_R42wnycoEeSLVrU2ifxtpw" regionAsInput="_R42wnCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42wsicoEeSLVrU2ifxtpw" name="Collect(Call(includes)).outputElement" incoming="_R42woCcoEeSLVrU2ifxtpw" outgoing="_R42wjCcoEeSLVrU2ifxtpw" regionAsOutput="_R42wnCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wsycoEeSLVrU2ifxtpw" name="Feature(Fork(set2)@13cbe909)" outgoing="_R42wlicoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wtCcoEeSLVrU2ifxtpw" name="ExpressionStatement@55cb40c" incoming="_R42t6ycoEeSLVrU2ifxtpw" outgoing="_R42t7ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wtScoEeSLVrU2ifxtpw" target="_R42wuicoEeSLVrU2ifxtpw" source="_R42wxicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wticoEeSLVrU2ifxtpw" target="_R42wvScoEeSLVrU2ifxtpw" source="_R42w1ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wtycoEeSLVrU2ifxtpw" target="_R42wwCcoEeSLVrU2ifxtpw" source="_R42w2CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42wuCcoEeSLVrU2ifxtpw" target="_R42wuScoEeSLVrU2ifxtpw" source="_R42wwycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42wuScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_R42wuCcoEeSLVrU2ifxtpw" behavior="_R450rScoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42wuicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_R42wtScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wuycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wvCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42wvScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_R42wticoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wvicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wvycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42wwCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_R42wtycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wwScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wwicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42wwycoEeSLVrU2ifxtpw" name="Tuple@6338a96" outgoing="_R42wuCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42wxCcoEeSLVrU2ifxtpw" target="_R42wyicoEeSLVrU2ifxtpw" source="_R42w1icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42wxScoEeSLVrU2ifxtpw" name="Value(&quot;list.size()&quot;)">
                <result xmi:id="_R42wxicoEeSLVrU2ifxtpw" name="Value(&quot;list.size()&quot;).result" outgoing="_R42wtScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42wyCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42wyScoEeSLVrU2ifxtpw" value="list.size()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42wyicoEeSLVrU2ifxtpw" name="Collect(Call(size))" incoming="_R42wxCcoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42w1ScoEeSLVrU2ifxtpw" inputElement="_R42w1CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wyycoEeSLVrU2ifxtpw" target="_R42w0ScoEeSLVrU2ifxtpw" source="_R42w1CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42wzCcoEeSLVrU2ifxtpw" target="_R42w1ScoEeSLVrU2ifxtpw" source="_R42wzicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42wzScoEeSLVrU2ifxtpw" name="Call(size)" operation="_R43-bycoEeSLVrU2ifxtpw">
                  <result xmi:id="_R42wzicoEeSLVrU2ifxtpw" name="Call(size).result(null)" outgoing="_R42wzCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42wzycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w0CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_R42w0ScoEeSLVrU2ifxtpw" name="Call(size).target" incoming="_R42wyycoEeSLVrU2ifxtpw" type="_R43-CycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42w0icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w0ycoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42w1CcoEeSLVrU2ifxtpw" name="Collect(Call(size)).inputElement" incoming="_R42t6icoEeSLVrU2ifxtpw" outgoing="_R42wyycoEeSLVrU2ifxtpw" regionAsInput="_R42wyicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42w1ScoEeSLVrU2ifxtpw" name="Collect(Call(size)).outputElement" incoming="_R42wzCcoEeSLVrU2ifxtpw" outgoing="_R42wticoEeSLVrU2ifxtpw" regionAsOutput="_R42wyicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42w1icoEeSLVrU2ifxtpw" name="Feature(Fork(list)@30305806)" outgoing="_R42wxCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42w1ycoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_R42w2CcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R42wtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42w2ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w2icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_R42w2ycoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42w3CcoEeSLVrU2ifxtpw" name="ExpressionStatement@608d8ce4" incoming="_R42t7ScoEeSLVrU2ifxtpw" outgoing="_R42t7ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42w3ScoEeSLVrU2ifxtpw" target="_R42w4icoEeSLVrU2ifxtpw" source="_R42w7ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42w3icoEeSLVrU2ifxtpw" target="_R42w5ScoEeSLVrU2ifxtpw" source="_R42w_icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42w3ycoEeSLVrU2ifxtpw" target="_R42w6CcoEeSLVrU2ifxtpw" source="_R42xHScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42w4CcoEeSLVrU2ifxtpw" target="_R42w4ScoEeSLVrU2ifxtpw" source="_R42w6ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42w4ScoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42w4CcoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42w4icoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42w3ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42w4ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w5CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42w5ScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42w3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42w5icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w5ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42w6CcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42w3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42w6ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w6icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42w6ycoEeSLVrU2ifxtpw" name="Tuple@2076dfab" outgoing="_R42w4CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R42w7CcoEeSLVrU2ifxtpw" target="_R42w_ScoEeSLVrU2ifxtpw" source="_R42xFycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42w7ScoEeSLVrU2ifxtpw" target="_R42w8ycoEeSLVrU2ifxtpw" source="_R42w_ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42w7icoEeSLVrU2ifxtpw" name="Value(&quot;list.at(1)&quot;)">
                <result xmi:id="_R42w7ycoEeSLVrU2ifxtpw" name="Value(&quot;list.at(1)&quot;).result" outgoing="_R42w3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42w8CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w8ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42w8icoEeSLVrU2ifxtpw" value="list.at(1)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42w8ycoEeSLVrU2ifxtpw" name="Collect(Call(toSequence))" incoming="_R42w7ScoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42w_icoEeSLVrU2ifxtpw" inputElement="_R42w_ScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42w9CcoEeSLVrU2ifxtpw" target="_R42w-icoEeSLVrU2ifxtpw" source="_R42w_ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42w9ScoEeSLVrU2ifxtpw" target="_R42w_icoEeSLVrU2ifxtpw" source="_R42w9ycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42w9icoEeSLVrU2ifxtpw" name="Call(toSequence)" operation="_R439ZScoEeSLVrU2ifxtpw">
                  <result xmi:id="_R42w9ycoEeSLVrU2ifxtpw" name="Call(toSequence).result(null)" outgoing="_R42w9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42w-CcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w-ScoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                  <target xmi:id="_R42w-icoEeSLVrU2ifxtpw" name="Call(toSequence).target" incoming="_R42w9CcoEeSLVrU2ifxtpw" type="_R438_ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42w-ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42w_CcoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42w_ScoEeSLVrU2ifxtpw" name="Collect(Call(toSequence)).inputElement" incoming="_R42w7CcoEeSLVrU2ifxtpw" outgoing="_R42w9CcoEeSLVrU2ifxtpw" regionAsInput="_R42w8ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42w_icoEeSLVrU2ifxtpw" name="Collect(Call(toSequence)).outputElement" incoming="_R42w9ScoEeSLVrU2ifxtpw" outgoing="_R42w3icoEeSLVrU2ifxtpw" regionAsOutput="_R42w8ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42w_ycoEeSLVrU2ifxtpw" name="Feature(Collect(Call(at)).outputElement)" outgoing="_R42w7ScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42xACcoEeSLVrU2ifxtpw" target="_R42xAScoEeSLVrU2ifxtpw" source="_R42xGCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_R42xAScoEeSLVrU2ifxtpw" name="Collect(Call(at))" incoming="_R42xACcoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42xFycoEeSLVrU2ifxtpw" inputElement="_R42xFicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xAicoEeSLVrU2ifxtpw" target="_R42xBycoEeSLVrU2ifxtpw" source="_R42xEicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R42xAycoEeSLVrU2ifxtpw" target="_R42xBicoEeSLVrU2ifxtpw" source="_R42xECcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xBCcoEeSLVrU2ifxtpw" target="_R42xDScoEeSLVrU2ifxtpw" source="_R42xFicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xBScoEeSLVrU2ifxtpw" target="_R42xFycoEeSLVrU2ifxtpw" source="_R42xCicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_R42xBicoEeSLVrU2ifxtpw" name="Call(at)" incoming="_R42xAycoEeSLVrU2ifxtpw" operation="_R439lycoEeSLVrU2ifxtpw">
                    <argument xmi:id="_R42xBycoEeSLVrU2ifxtpw" name="Call(at).argument(index)" incoming="_R42xAicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xCCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xCScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R42xCicoEeSLVrU2ifxtpw" name="Call(at).result(null)" outgoing="_R42xBScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xCycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xDCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <target xmi:id="_R42xDScoEeSLVrU2ifxtpw" name="Call(at).target" incoming="_R42xBCcoEeSLVrU2ifxtpw" type="_R439dycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xDicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xDycoEeSLVrU2ifxtpw" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xECcoEeSLVrU2ifxtpw" name="Tuple@533a0b63" outgoing="_R42xAycoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xEScoEeSLVrU2ifxtpw" name="Value(1)">
                      <result xmi:id="_R42xEicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R42xAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xEycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xFCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_R42xFScoEeSLVrU2ifxtpw" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_R42xFicoEeSLVrU2ifxtpw" name="Collect(Call(at)).inputElement" incoming="_R42t7CcoEeSLVrU2ifxtpw" outgoing="_R42xBCcoEeSLVrU2ifxtpw" regionAsInput="_R42xAScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_R42xFycoEeSLVrU2ifxtpw" name="Collect(Call(at)).outputElement" incoming="_R42xBScoEeSLVrU2ifxtpw" outgoing="_R42w7CcoEeSLVrU2ifxtpw" regionAsOutput="_R42xAScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xGCcoEeSLVrU2ifxtpw" name="Feature(Fork(list)@30305806)" outgoing="_R42xACcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xGScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@309e1550">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42xGicoEeSLVrU2ifxtpw" target="_R42xJicoEeSLVrU2ifxtpw" source="_R42xICcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xGycoEeSLVrU2ifxtpw" target="_R42xHScoEeSLVrU2ifxtpw" source="_R42xIicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xHCcoEeSLVrU2ifxtpw" target="_R42xHScoEeSLVrU2ifxtpw" source="_R42xKCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42xHScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@309e1550.output" incoming="_R42xGycoEeSLVrU2ifxtpw _R42xHCcoEeSLVrU2ifxtpw" outgoing="_R42w3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xHicoEeSLVrU2ifxtpw" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xHycoEeSLVrU2ifxtpw" value="2"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xICcoEeSLVrU2ifxtpw" name="SequenceExpressionList@79d6e927#1" outgoing="_R42xGicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xIScoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_R42xIicoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;).result" outgoing="_R42xGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xIycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xJCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42xJScoEeSLVrU2ifxtpw" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xJicoEeSLVrU2ifxtpw" name="SequenceExpressionList@79d6e927#2" incoming="_R42xGicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xJycoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_R42xKCcoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;).result" outgoing="_R42xHCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xKScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xKicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42xKycoEeSLVrU2ifxtpw" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xLCcoEeSLVrU2ifxtpw" name="ExpressionStatement@638c1104" incoming="_R42t7ycoEeSLVrU2ifxtpw" outgoing="_R42t8CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xLScoEeSLVrU2ifxtpw" target="_R42xMicoEeSLVrU2ifxtpw" source="_R42xPycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xLicoEeSLVrU2ifxtpw" target="_R42xNScoEeSLVrU2ifxtpw" source="_R42xTicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xLycoEeSLVrU2ifxtpw" target="_R42xOCcoEeSLVrU2ifxtpw" source="_R42xbScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42xMCcoEeSLVrU2ifxtpw" target="_R42xMScoEeSLVrU2ifxtpw" source="_R42xOycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42xMScoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_R42xMCcoEeSLVrU2ifxtpw" behavior="_R45yhycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42xMicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_R42xLScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xMycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xNCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R42xNScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_R42xLicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xNicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xNycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R42xOCcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_R42xLycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xOScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xOicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xOycoEeSLVrU2ifxtpw" name="Tuple@588d422b" outgoing="_R42xMCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xPCcoEeSLVrU2ifxtpw" target="_R42xTScoEeSLVrU2ifxtpw" source="_R42xZycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42xPScoEeSLVrU2ifxtpw" target="_R42xQycoEeSLVrU2ifxtpw" source="_R42xTycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xPicoEeSLVrU2ifxtpw" name="Value(&quot;list.at(2)&quot;)">
                <result xmi:id="_R42xPycoEeSLVrU2ifxtpw" name="Value(&quot;list.at(2)&quot;).result" outgoing="_R42xLScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xQCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xQScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42xQicoEeSLVrU2ifxtpw" value="list.at(2)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R42xQycoEeSLVrU2ifxtpw" name="Collect(Call(toSequence))" incoming="_R42xPScoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42xTicoEeSLVrU2ifxtpw" inputElement="_R42xTScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xRCcoEeSLVrU2ifxtpw" target="_R42xSicoEeSLVrU2ifxtpw" source="_R42xTScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xRScoEeSLVrU2ifxtpw" target="_R42xTicoEeSLVrU2ifxtpw" source="_R42xRycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R42xRicoEeSLVrU2ifxtpw" name="Call(toSequence)" operation="_R439ZScoEeSLVrU2ifxtpw">
                  <result xmi:id="_R42xRycoEeSLVrU2ifxtpw" name="Call(toSequence).result(null)" outgoing="_R42xRScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xSCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xSScoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                  <target xmi:id="_R42xSicoEeSLVrU2ifxtpw" name="Call(toSequence).target" incoming="_R42xRCcoEeSLVrU2ifxtpw" type="_R438_ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xSycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xTCcoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42xTScoEeSLVrU2ifxtpw" name="Collect(Call(toSequence)).inputElement" incoming="_R42xPCcoEeSLVrU2ifxtpw" outgoing="_R42xRCcoEeSLVrU2ifxtpw" regionAsInput="_R42xQycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R42xTicoEeSLVrU2ifxtpw" name="Collect(Call(toSequence)).outputElement" incoming="_R42xRScoEeSLVrU2ifxtpw" outgoing="_R42xLicoEeSLVrU2ifxtpw" regionAsOutput="_R42xQycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xTycoEeSLVrU2ifxtpw" name="Feature(Collect(Call(at)).outputElement)" outgoing="_R42xPScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42xUCcoEeSLVrU2ifxtpw" target="_R42xUScoEeSLVrU2ifxtpw" source="_R42xaCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_R42xUScoEeSLVrU2ifxtpw" name="Collect(Call(at))" incoming="_R42xUCcoEeSLVrU2ifxtpw" mode="parallel" outputElement="_R42xZycoEeSLVrU2ifxtpw" inputElement="_R42xZicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xUicoEeSLVrU2ifxtpw" target="_R42xVycoEeSLVrU2ifxtpw" source="_R42xYicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R42xUycoEeSLVrU2ifxtpw" target="_R42xVicoEeSLVrU2ifxtpw" source="_R42xYCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xVCcoEeSLVrU2ifxtpw" target="_R42xXScoEeSLVrU2ifxtpw" source="_R42xZicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xVScoEeSLVrU2ifxtpw" target="_R42xZycoEeSLVrU2ifxtpw" source="_R42xWicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_R42xVicoEeSLVrU2ifxtpw" name="Call(at)" incoming="_R42xUycoEeSLVrU2ifxtpw" operation="_R439lycoEeSLVrU2ifxtpw">
                    <argument xmi:id="_R42xVycoEeSLVrU2ifxtpw" name="Call(at).argument(index)" incoming="_R42xUicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xWCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xWScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R42xWicoEeSLVrU2ifxtpw" name="Call(at).result(null)" outgoing="_R42xVScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xWycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xXCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <target xmi:id="_R42xXScoEeSLVrU2ifxtpw" name="Call(at).target" incoming="_R42xVCcoEeSLVrU2ifxtpw" type="_R439dycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xXicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xXycoEeSLVrU2ifxtpw" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xYCcoEeSLVrU2ifxtpw" name="Tuple@3c92979b" outgoing="_R42xUycoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xYScoEeSLVrU2ifxtpw" name="Value(2)">
                      <result xmi:id="_R42xYicoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R42xUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xYycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xZCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_R42xZScoEeSLVrU2ifxtpw" value="2">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_R42xZicoEeSLVrU2ifxtpw" name="Collect(Call(at)).inputElement" incoming="_R42t7icoEeSLVrU2ifxtpw" outgoing="_R42xVCcoEeSLVrU2ifxtpw" regionAsInput="_R42xUScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_R42xZycoEeSLVrU2ifxtpw" name="Collect(Call(at)).outputElement" incoming="_R42xVScoEeSLVrU2ifxtpw" outgoing="_R42xPCcoEeSLVrU2ifxtpw" regionAsOutput="_R42xUScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xaCcoEeSLVrU2ifxtpw" name="Feature(Fork(list)@30305806)" outgoing="_R42xUCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xaScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@2acba4f1">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R42xaicoEeSLVrU2ifxtpw" target="_R42xdicoEeSLVrU2ifxtpw" source="_R42xcCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xaycoEeSLVrU2ifxtpw" target="_R42xbScoEeSLVrU2ifxtpw" source="_R42xcicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xbCcoEeSLVrU2ifxtpw" target="_R42xbScoEeSLVrU2ifxtpw" source="_R42xeCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R42xbScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@2acba4f1.output" incoming="_R42xaycoEeSLVrU2ifxtpw _R42xbCcoEeSLVrU2ifxtpw" outgoing="_R42xLycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xbicoEeSLVrU2ifxtpw" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xbycoEeSLVrU2ifxtpw" value="2"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xcCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@7b45cbaf#1" outgoing="_R42xaicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xcScoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_R42xcicoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;).result" outgoing="_R42xaycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xcycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xdCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42xdScoEeSLVrU2ifxtpw" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xdicoEeSLVrU2ifxtpw" name="SequenceExpressionList@7b45cbaf#2" incoming="_R42xaicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xdycoEeSLVrU2ifxtpw" name="Value(&quot;raspberry&quot;)">
                    <result xmi:id="_R42xeCcoEeSLVrU2ifxtpw" name="Value(&quot;raspberry&quot;).result" outgoing="_R42xbCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xeScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xeicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R42xeycoEeSLVrU2ifxtpw" value="raspberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xfCcoEeSLVrU2ifxtpw" name="ExpressionStatement@1d82ec55" incoming="_R42t8CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xfScoEeSLVrU2ifxtpw" target="_R42xgCcoEeSLVrU2ifxtpw" source="_R42xiCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R42xficoEeSLVrU2ifxtpw" target="_R42xfycoEeSLVrU2ifxtpw" source="_R42xhicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R42xfycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_R42xficoEeSLVrU2ifxtpw">
              <argument xmi:id="_R42xgCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_R42xfScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xgScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xgicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R42xgycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xhCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xhScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xhicoEeSLVrU2ifxtpw" name="Tuple@61ae1e9f" outgoing="_R42xficoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xhycoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_R42xiCcoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_R42xfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xiScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xiicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R42xiycoEeSLVrU2ifxtpw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R42xjCcoEeSLVrU2ifxtpw" name="getList$method$1" specification="_R43YJCcoEeSLVrU2ifxtpw" node="_R42xkicoEeSLVrU2ifxtpw _R42xkycoEeSLVrU2ifxtpw _R42xlCcoEeSLVrU2ifxtpw" group="_R42xlCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R42xjScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xjicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xjycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R42xkCcoEeSLVrU2ifxtpw" target="_R42xkycoEeSLVrU2ifxtpw" source="_R42xlScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xkScoEeSLVrU2ifxtpw" target="_R42xkicoEeSLVrU2ifxtpw" source="_R42xlycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R42xlCcoEeSLVrU2ifxtpw" name="Body(getList$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xlScoEeSLVrU2ifxtpw" name="ReturnStatement@6603b944" outgoing="_R42xkCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xlicoEeSLVrU2ifxtpw" target="_R42xlycoEeSLVrU2ifxtpw" source="_R42xoCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R42xlycoEeSLVrU2ifxtpw" name="ReturnStatement@6603b944.output" incoming="_R42xlicoEeSLVrU2ifxtpw" outgoing="_R42xkScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xmCcoEeSLVrU2ifxtpw" value="3"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xmScoEeSLVrU2ifxtpw" value="3"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xmicoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@dbe0560">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42xmycoEeSLVrU2ifxtpw" target="_R42xqScoEeSLVrU2ifxtpw" source="_R42xoycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R42xnCcoEeSLVrU2ifxtpw" target="_R42xrycoEeSLVrU2ifxtpw" source="_R42xqScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xnScoEeSLVrU2ifxtpw" target="_R42xoCcoEeSLVrU2ifxtpw" source="_R42xpScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xnicoEeSLVrU2ifxtpw" target="_R42xoCcoEeSLVrU2ifxtpw" source="_R42xqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R42xnycoEeSLVrU2ifxtpw" target="_R42xoCcoEeSLVrU2ifxtpw" source="_R42xsScoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_R42xoCcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@dbe0560.output" incoming="_R42xnScoEeSLVrU2ifxtpw _R42xnicoEeSLVrU2ifxtpw _R42xnycoEeSLVrU2ifxtpw" outgoing="_R42xlicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xoScoEeSLVrU2ifxtpw" value="3"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xoicoEeSLVrU2ifxtpw" value="3"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xoycoEeSLVrU2ifxtpw" name="SequenceExpressionList@5f08a40c#1" outgoing="_R42xmycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xpCcoEeSLVrU2ifxtpw" name="Value(4)">
                  <result xmi:id="_R42xpScoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_R42xnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xpicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xpycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_R42xqCcoEeSLVrU2ifxtpw" value="4">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xqScoEeSLVrU2ifxtpw" name="SequenceExpressionList@5f08a40c#2" incoming="_R42xmycoEeSLVrU2ifxtpw" outgoing="_R42xnCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xqicoEeSLVrU2ifxtpw" name="Value(5)">
                  <result xmi:id="_R42xqycoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_R42xnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xrCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xrScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_R42xricoEeSLVrU2ifxtpw" value="5">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R42xrycoEeSLVrU2ifxtpw" name="SequenceExpressionList@5f08a40c#3" incoming="_R42xnCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R42xsCcoEeSLVrU2ifxtpw" name="Value(6)">
                  <result xmi:id="_R42xsScoEeSLVrU2ifxtpw" name="Value(6).result" outgoing="_R42xnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xsicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xsycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_R42xtCcoEeSLVrU2ifxtpw" value="6">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R42xkicoEeSLVrU2ifxtpw" name="Return" incoming="_R42xkScoEeSLVrU2ifxtpw" parameter="_R42xjScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R42xkycoEeSLVrU2ifxtpw" name="Final" incoming="_R42xkCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R42xtScoEeSLVrU2ifxtpw" name="test$method$1" specification="_R43YKCcoEeSLVrU2ifxtpw" node="_R43U6icoEeSLVrU2ifxtpw _R43U6ycoEeSLVrU2ifxtpw _R43U7CcoEeSLVrU2ifxtpw _R43U7ScoEeSLVrU2ifxtpw _R43U7icoEeSLVrU2ifxtpw _R43U7ycoEeSLVrU2ifxtpw _R43U8CcoEeSLVrU2ifxtpw _R43U8ScoEeSLVrU2ifxtpw _R43U8icoEeSLVrU2ifxtpw _R43U8ycoEeSLVrU2ifxtpw _R43U9CcoEeSLVrU2ifxtpw _R43U9ScoEeSLVrU2ifxtpw _R43U9icoEeSLVrU2ifxtpw" group="_R43U9icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R42xticoEeSLVrU2ifxtpw" name="seq1" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xtycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xuCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R42xuScoEeSLVrU2ifxtpw" name="seq2" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xuicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xuycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R42xvCcoEeSLVrU2ifxtpw" name="seq3" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xvScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xvicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R42xvycoEeSLVrU2ifxtpw" name="seq4" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xwCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xwScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R42xwicoEeSLVrU2ifxtpw" name="seq5" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xwycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xxCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R42xxScoEeSLVrU2ifxtpw" name="seq6" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xxicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xxycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R42xyCcoEeSLVrU2ifxtpw" name="seq7" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R42xyScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R42xyicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R42xyycoEeSLVrU2ifxtpw" name="x" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43U0CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43U0ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43U0icoEeSLVrU2ifxtpw" name="customers" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43U0ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43U1CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43U1ScoEeSLVrU2ifxtpw" name="set1" type="_R43ZCicoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43U1icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43U1ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43U2CcoEeSLVrU2ifxtpw" name="set2" type="_R43ZCicoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43U2ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43U2icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43U2ycoEeSLVrU2ifxtpw" name="list" type="_R439dycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43U3CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43U3ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U3icoEeSLVrU2ifxtpw" target="_R43U6icoEeSLVrU2ifxtpw" source="_R43VEicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U3ycoEeSLVrU2ifxtpw" target="_R43U6ycoEeSLVrU2ifxtpw" source="_R43VFScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U4CcoEeSLVrU2ifxtpw" target="_R43U7CcoEeSLVrU2ifxtpw" source="_R43VGCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U4ScoEeSLVrU2ifxtpw" target="_R43U7ScoEeSLVrU2ifxtpw" source="_R43VGycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U4icoEeSLVrU2ifxtpw" target="_R43U7icoEeSLVrU2ifxtpw" source="_R43VHicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U4ycoEeSLVrU2ifxtpw" target="_R43U7ycoEeSLVrU2ifxtpw" source="_R43VIScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U5CcoEeSLVrU2ifxtpw" target="_R43U8CcoEeSLVrU2ifxtpw" source="_R43VJCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U5ScoEeSLVrU2ifxtpw" target="_R43U8ScoEeSLVrU2ifxtpw" source="_R43VJycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U5icoEeSLVrU2ifxtpw" target="_R43U8icoEeSLVrU2ifxtpw" source="_R43VKicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U5ycoEeSLVrU2ifxtpw" target="_R43U8ycoEeSLVrU2ifxtpw" source="_R43VLScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U6CcoEeSLVrU2ifxtpw" target="_R43U9CcoEeSLVrU2ifxtpw" source="_R43VMCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43U6ScoEeSLVrU2ifxtpw" target="_R43U9ScoEeSLVrU2ifxtpw" source="_R43VMycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43U9icoEeSLVrU2ifxtpw" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U9ycoEeSLVrU2ifxtpw" target="_R43VVScoEeSLVrU2ifxtpw" source="_R43VNicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U-CcoEeSLVrU2ifxtpw" target="_R43VdCcoEeSLVrU2ifxtpw" source="_R43VVScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U-ScoEeSLVrU2ifxtpw" target="_R43VkycoEeSLVrU2ifxtpw" source="_R43VdCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U-icoEeSLVrU2ifxtpw" target="_R43VsicoEeSLVrU2ifxtpw" source="_R43VkycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U-ycoEeSLVrU2ifxtpw" target="_R43V0ScoEeSLVrU2ifxtpw" source="_R43VsicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U_CcoEeSLVrU2ifxtpw" target="_R43WOicoEeSLVrU2ifxtpw" source="_R43V0ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U_ScoEeSLVrU2ifxtpw" target="_R43WQycoEeSLVrU2ifxtpw" source="_R43WOicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U_icoEeSLVrU2ifxtpw" target="_R43WaCcoEeSLVrU2ifxtpw" source="_R43WQycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43U_ycoEeSLVrU2ifxtpw" target="_R43WcScoEeSLVrU2ifxtpw" source="_R43WaCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VACcoEeSLVrU2ifxtpw" target="_R43WtCcoEeSLVrU2ifxtpw" source="_R43WcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VAScoEeSLVrU2ifxtpw" target="_R43WtycoEeSLVrU2ifxtpw" source="_R43WaicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43VAicoEeSLVrU2ifxtpw" target="_R43WrCcoEeSLVrU2ifxtpw" source="_R43WcScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43VAycoEeSLVrU2ifxtpw" target="_R43W2ScoEeSLVrU2ifxtpw" source="_R43WrCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43VBCcoEeSLVrU2ifxtpw" target="_R43XCicoEeSLVrU2ifxtpw" source="_R43W2ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43VBScoEeSLVrU2ifxtpw" target="_R43XOycoEeSLVrU2ifxtpw" source="_R43XCicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VBicoEeSLVrU2ifxtpw" target="_R43VEicoEeSLVrU2ifxtpw" source="_R43VOCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VBycoEeSLVrU2ifxtpw" target="_R43VFScoEeSLVrU2ifxtpw" source="_R43VVycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VCCcoEeSLVrU2ifxtpw" target="_R43VGCcoEeSLVrU2ifxtpw" source="_R43VdicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VCScoEeSLVrU2ifxtpw" target="_R43VGycoEeSLVrU2ifxtpw" source="_R43VlScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VCicoEeSLVrU2ifxtpw" target="_R43VHicoEeSLVrU2ifxtpw" source="_R43VtCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VCycoEeSLVrU2ifxtpw" target="_R43VIScoEeSLVrU2ifxtpw" source="_R43V0ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VDCcoEeSLVrU2ifxtpw" target="_R43VJCcoEeSLVrU2ifxtpw" source="_R43WPCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VDScoEeSLVrU2ifxtpw" target="_R43VJycoEeSLVrU2ifxtpw" source="_R43WRScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VDicoEeSLVrU2ifxtpw" target="_R43VKicoEeSLVrU2ifxtpw" source="_R43WwCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VDycoEeSLVrU2ifxtpw" target="_R43VLScoEeSLVrU2ifxtpw" source="_R43W2ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VECcoEeSLVrU2ifxtpw" target="_R43VMCcoEeSLVrU2ifxtpw" source="_R43XDCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VEScoEeSLVrU2ifxtpw" target="_R43VMycoEeSLVrU2ifxtpw" source="_R43XPScoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_R43VEicoEeSLVrU2ifxtpw" name="Output(seq1)" incoming="_R43VBicoEeSLVrU2ifxtpw" outgoing="_R43U3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VEycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VFCcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VFScoEeSLVrU2ifxtpw" name="Output(seq2)" incoming="_R43VBycoEeSLVrU2ifxtpw" outgoing="_R43U3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VFicoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VFycoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VGCcoEeSLVrU2ifxtpw" name="Output(seq3)" incoming="_R43VCCcoEeSLVrU2ifxtpw" outgoing="_R43U4CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VGScoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VGicoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VGycoEeSLVrU2ifxtpw" name="Output(seq4)" incoming="_R43VCScoEeSLVrU2ifxtpw" outgoing="_R43U4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VHCcoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VHScoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VHicoEeSLVrU2ifxtpw" name="Output(seq5)" incoming="_R43VCicoEeSLVrU2ifxtpw" outgoing="_R43U4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VHycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VICcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VIScoEeSLVrU2ifxtpw" name="Output(seq6)" incoming="_R43VCycoEeSLVrU2ifxtpw" outgoing="_R43U4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VIicoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VIycoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VJCcoEeSLVrU2ifxtpw" name="Output(seq7)" incoming="_R43VDCcoEeSLVrU2ifxtpw" outgoing="_R43U5CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VJScoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VJicoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VJycoEeSLVrU2ifxtpw" name="Output(x)" incoming="_R43VDScoEeSLVrU2ifxtpw" outgoing="_R43U5ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VKCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VKScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VKicoEeSLVrU2ifxtpw" name="Output(customers)" incoming="_R43VDicoEeSLVrU2ifxtpw" outgoing="_R43U5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VKycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VLCcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VLScoEeSLVrU2ifxtpw" name="Output(set1)" incoming="_R43VDycoEeSLVrU2ifxtpw" outgoing="_R43U5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VLicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VLycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VMCcoEeSLVrU2ifxtpw" name="Output(set2)" incoming="_R43VECcoEeSLVrU2ifxtpw" outgoing="_R43U6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VMScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VMicoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_R43VMycoEeSLVrU2ifxtpw" name="Output(list)" incoming="_R43VEScoEeSLVrU2ifxtpw" outgoing="_R43U6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VNCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VNScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VNicoEeSLVrU2ifxtpw" name="ExpressionStatement@3d693ce1" outgoing="_R43U9ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VNycoEeSLVrU2ifxtpw" target="_R43VOCcoEeSLVrU2ifxtpw" source="_R43VQCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43VOCcoEeSLVrU2ifxtpw" name="Fork(seq1)@45063cad" incoming="_R43VNycoEeSLVrU2ifxtpw" outgoing="_R43VBicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VOScoEeSLVrU2ifxtpw" name="RightHandSide@481bf746">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VOicoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@481bf746">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VOycoEeSLVrU2ifxtpw" target="_R43VSScoEeSLVrU2ifxtpw" source="_R43VQycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VPCcoEeSLVrU2ifxtpw" target="_R43VTycoEeSLVrU2ifxtpw" source="_R43VSScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VPScoEeSLVrU2ifxtpw" target="_R43VQCcoEeSLVrU2ifxtpw" source="_R43VRScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VPicoEeSLVrU2ifxtpw" target="_R43VQCcoEeSLVrU2ifxtpw" source="_R43VSycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VPycoEeSLVrU2ifxtpw" target="_R43VQCcoEeSLVrU2ifxtpw" source="_R43VUScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R43VQCcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@481bf746.output" incoming="_R43VPScoEeSLVrU2ifxtpw _R43VPicoEeSLVrU2ifxtpw _R43VPycoEeSLVrU2ifxtpw" outgoing="_R43VNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VQScoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VQicoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VQycoEeSLVrU2ifxtpw" name="SequenceExpressionList@2ec778ff#1" outgoing="_R43VOycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VRCcoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_R43VRScoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;).result" outgoing="_R43VPScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VRicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VRycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R43VSCcoEeSLVrU2ifxtpw" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VSScoEeSLVrU2ifxtpw" name="SequenceExpressionList@2ec778ff#2" incoming="_R43VOycoEeSLVrU2ifxtpw" outgoing="_R43VPCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VSicoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_R43VSycoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;).result" outgoing="_R43VPicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VTCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VTScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R43VTicoEeSLVrU2ifxtpw" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VTycoEeSLVrU2ifxtpw" name="SequenceExpressionList@2ec778ff#3" incoming="_R43VPCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VUCcoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_R43VUScoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;).result" outgoing="_R43VPycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VUicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VUycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R43VVCcoEeSLVrU2ifxtpw" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VVScoEeSLVrU2ifxtpw" name="ExpressionStatement@55d78541" incoming="_R43U9ycoEeSLVrU2ifxtpw" outgoing="_R43U-CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VVicoEeSLVrU2ifxtpw" target="_R43VVycoEeSLVrU2ifxtpw" source="_R43VXycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43VVycoEeSLVrU2ifxtpw" name="Fork(seq2)@4b8e8905" incoming="_R43VVicoEeSLVrU2ifxtpw" outgoing="_R43VBycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VWCcoEeSLVrU2ifxtpw" name="RightHandSide@386d9a6e">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VWScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@386d9a6e">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VWicoEeSLVrU2ifxtpw" target="_R43VaCcoEeSLVrU2ifxtpw" source="_R43VYicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VWycoEeSLVrU2ifxtpw" target="_R43VbicoEeSLVrU2ifxtpw" source="_R43VaCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VXCcoEeSLVrU2ifxtpw" target="_R43VXycoEeSLVrU2ifxtpw" source="_R43VZCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VXScoEeSLVrU2ifxtpw" target="_R43VXycoEeSLVrU2ifxtpw" source="_R43VaicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VXicoEeSLVrU2ifxtpw" target="_R43VXycoEeSLVrU2ifxtpw" source="_R43VcCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R43VXycoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@386d9a6e.output" incoming="_R43VXCcoEeSLVrU2ifxtpw _R43VXScoEeSLVrU2ifxtpw _R43VXicoEeSLVrU2ifxtpw" outgoing="_R43VVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VYCcoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VYScoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VYicoEeSLVrU2ifxtpw" name="SequenceExpressionList@662b32c1#1" outgoing="_R43VWicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VYycoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_R43VZCcoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;).result" outgoing="_R43VXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VZScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VZicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R43VZycoEeSLVrU2ifxtpw" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VaCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@662b32c1#2" incoming="_R43VWicoEeSLVrU2ifxtpw" outgoing="_R43VWycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VaScoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_R43VaicoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;).result" outgoing="_R43VXScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VaycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VbCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R43VbScoEeSLVrU2ifxtpw" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VbicoEeSLVrU2ifxtpw" name="SequenceExpressionList@662b32c1#3" incoming="_R43VWycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VbycoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_R43VcCcoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;).result" outgoing="_R43VXicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VcScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VcicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R43VcycoEeSLVrU2ifxtpw" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VdCcoEeSLVrU2ifxtpw" name="ExpressionStatement@38ff2ba4" incoming="_R43U-CcoEeSLVrU2ifxtpw" outgoing="_R43U-ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VdScoEeSLVrU2ifxtpw" target="_R43VdicoEeSLVrU2ifxtpw" source="_R43VficoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43VdicoEeSLVrU2ifxtpw" name="Fork(seq3)@73b4f681" incoming="_R43VdScoEeSLVrU2ifxtpw" outgoing="_R43VCCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VdycoEeSLVrU2ifxtpw" name="RightHandSide@788a3937">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VeCcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@788a3937">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VeScoEeSLVrU2ifxtpw" target="_R43VhycoEeSLVrU2ifxtpw" source="_R43VgScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VeicoEeSLVrU2ifxtpw" target="_R43VjScoEeSLVrU2ifxtpw" source="_R43VhycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VeycoEeSLVrU2ifxtpw" target="_R43VficoEeSLVrU2ifxtpw" source="_R43VgycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VfCcoEeSLVrU2ifxtpw" target="_R43VficoEeSLVrU2ifxtpw" source="_R43ViScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VfScoEeSLVrU2ifxtpw" target="_R43VficoEeSLVrU2ifxtpw" source="_R43VjycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R43VficoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@788a3937.output" incoming="_R43VeycoEeSLVrU2ifxtpw _R43VfCcoEeSLVrU2ifxtpw _R43VfScoEeSLVrU2ifxtpw" outgoing="_R43VdScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VfycoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VgCcoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VgScoEeSLVrU2ifxtpw" name="SequenceExpressionList@54d69f0d#1" outgoing="_R43VeScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VgicoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R43VgycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R43VeycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VhCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VhScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R43VhicoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VhycoEeSLVrU2ifxtpw" name="SequenceExpressionList@54d69f0d#2" incoming="_R43VeScoEeSLVrU2ifxtpw" outgoing="_R43VeicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43ViCcoEeSLVrU2ifxtpw" name="Value(true)">
                    <result xmi:id="_R43ViScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_R43VfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43ViicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43ViycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_R43VjCcoEeSLVrU2ifxtpw" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VjScoEeSLVrU2ifxtpw" name="SequenceExpressionList@54d69f0d#3" incoming="_R43VeicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VjicoEeSLVrU2ifxtpw" name="Value(&quot;blah&quot;)">
                    <result xmi:id="_R43VjycoEeSLVrU2ifxtpw" name="Value(&quot;blah&quot;).result" outgoing="_R43VfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VkCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VkScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R43VkicoEeSLVrU2ifxtpw" value="blah">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VkycoEeSLVrU2ifxtpw" name="ExpressionStatement@2f8525c0" incoming="_R43U-ScoEeSLVrU2ifxtpw" outgoing="_R43U-icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VlCcoEeSLVrU2ifxtpw" target="_R43VlScoEeSLVrU2ifxtpw" source="_R43VnScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43VlScoEeSLVrU2ifxtpw" name="Fork(seq4)@261cde84" incoming="_R43VlCcoEeSLVrU2ifxtpw" outgoing="_R43VCScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VlicoEeSLVrU2ifxtpw" name="RightHandSide@4e71789f">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VlycoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@4e71789f">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VmCcoEeSLVrU2ifxtpw" target="_R43VpicoEeSLVrU2ifxtpw" source="_R43VoCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VmScoEeSLVrU2ifxtpw" target="_R43VrCcoEeSLVrU2ifxtpw" source="_R43VpicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VmicoEeSLVrU2ifxtpw" target="_R43VnScoEeSLVrU2ifxtpw" source="_R43VoicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VmycoEeSLVrU2ifxtpw" target="_R43VnScoEeSLVrU2ifxtpw" source="_R43VqCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VnCcoEeSLVrU2ifxtpw" target="_R43VnScoEeSLVrU2ifxtpw" source="_R43VricoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R43VnScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@4e71789f.output" incoming="_R43VmicoEeSLVrU2ifxtpw _R43VmycoEeSLVrU2ifxtpw _R43VnCcoEeSLVrU2ifxtpw" outgoing="_R43VlCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VnicoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VnycoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VoCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@6f12a9b8#1" outgoing="_R43VmCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VoScoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R43VoicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R43VmicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VoycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VpCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R43VpScoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VpicoEeSLVrU2ifxtpw" name="SequenceExpressionList@6f12a9b8#2" incoming="_R43VmCcoEeSLVrU2ifxtpw" outgoing="_R43VmScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VpycoEeSLVrU2ifxtpw" name="Value(2)">
                    <result xmi:id="_R43VqCcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R43VmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VqScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VqicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R43VqycoEeSLVrU2ifxtpw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VrCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@6f12a9b8#3" incoming="_R43VmScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VrScoEeSLVrU2ifxtpw" name="Value(3)">
                    <result xmi:id="_R43VricoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R43VnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VrycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VsCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R43VsScoEeSLVrU2ifxtpw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VsicoEeSLVrU2ifxtpw" name="ExpressionStatement@67f9aeed" incoming="_R43U-icoEeSLVrU2ifxtpw" outgoing="_R43U-ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VsycoEeSLVrU2ifxtpw" target="_R43VtCcoEeSLVrU2ifxtpw" source="_R43VvCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43VtCcoEeSLVrU2ifxtpw" name="Fork(seq5)@57c33330" incoming="_R43VsycoEeSLVrU2ifxtpw" outgoing="_R43VCicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VtScoEeSLVrU2ifxtpw" name="RightHandSide@394b7eef">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VticoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@394b7eef">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VtycoEeSLVrU2ifxtpw" target="_R43VxScoEeSLVrU2ifxtpw" source="_R43VvycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43VuCcoEeSLVrU2ifxtpw" target="_R43VyycoEeSLVrU2ifxtpw" source="_R43VxScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VuScoEeSLVrU2ifxtpw" target="_R43VvCcoEeSLVrU2ifxtpw" source="_R43VwScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VuicoEeSLVrU2ifxtpw" target="_R43VvCcoEeSLVrU2ifxtpw" source="_R43VxycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43VuycoEeSLVrU2ifxtpw" target="_R43VvCcoEeSLVrU2ifxtpw" source="_R43VzScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R43VvCcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@394b7eef.output" incoming="_R43VuScoEeSLVrU2ifxtpw _R43VuicoEeSLVrU2ifxtpw _R43VuycoEeSLVrU2ifxtpw" outgoing="_R43VsycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VvScoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VvicoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VvycoEeSLVrU2ifxtpw" name="SequenceExpressionList@7658aad7#1" outgoing="_R43VtycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VwCcoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R43VwScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R43VuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VwicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VwycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R43VxCcoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VxScoEeSLVrU2ifxtpw" name="SequenceExpressionList@7658aad7#2" incoming="_R43VtycoEeSLVrU2ifxtpw" outgoing="_R43VuCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VxicoEeSLVrU2ifxtpw" name="Value(2)">
                    <result xmi:id="_R43VxycoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R43VuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VyCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VyScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R43VyicoEeSLVrU2ifxtpw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43VyycoEeSLVrU2ifxtpw" name="SequenceExpressionList@7658aad7#3" incoming="_R43VuCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43VzCcoEeSLVrU2ifxtpw" name="Value(3)">
                    <result xmi:id="_R43VzScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R43VuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43VzicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43VzycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R43V0CcoEeSLVrU2ifxtpw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43V0ScoEeSLVrU2ifxtpw" name="ExpressionStatement@459d3b6f" incoming="_R43U-ycoEeSLVrU2ifxtpw" outgoing="_R43U_CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V0icoEeSLVrU2ifxtpw" target="_R43V0ycoEeSLVrU2ifxtpw" source="_R43V2ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43V0ycoEeSLVrU2ifxtpw" name="Fork(seq6)@1e131684" incoming="_R43V0icoEeSLVrU2ifxtpw" outgoing="_R43VCycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43V1CcoEeSLVrU2ifxtpw" name="RightHandSide@55a9181d">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43V1ScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@55a9181d">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V1icoEeSLVrU2ifxtpw" target="_R43WKCcoEeSLVrU2ifxtpw" source="_R43V3ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V1ycoEeSLVrU2ifxtpw" target="_R43WKycoEeSLVrU2ifxtpw" source="_R43V4icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V2CcoEeSLVrU2ifxtpw" target="_R43V2ScoEeSLVrU2ifxtpw" source="_R43WNycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R43V2ScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@55a9181d.output" incoming="_R43V2CcoEeSLVrU2ifxtpw" outgoing="_R43V0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43V2icoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43V2ycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43V3CcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_R43V3ScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R43V1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43V3icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43V3ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_R43V4CcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43V4ScoEeSLVrU2ifxtpw" name="Value(3)">
                  <result xmi:id="_R43V4icoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R43V1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43V4ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43V5CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_R43V5ScoEeSLVrU2ifxtpw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:LoopNode" xmi:id="_R43V5icoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f" bodyOutput="_R43WCicoEeSLVrU2ifxtpw _R43WEicoEeSLVrU2ifxtpw _R43WHCcoEeSLVrU2ifxtpw" bodyPart="_R43V_icoEeSLVrU2ifxtpw _R43WAycoEeSLVrU2ifxtpw _R43WDScoEeSLVrU2ifxtpw _R43WFScoEeSLVrU2ifxtpw" decider="_R43V-ycoEeSLVrU2ifxtpw" isTestedFirst="true" test="_R43V9CcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V5ycoEeSLVrU2ifxtpw" target="_R43V8ScoEeSLVrU2ifxtpw" source="_R43WHycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V6CcoEeSLVrU2ifxtpw" target="_R43V8icoEeSLVrU2ifxtpw" source="_R43WIicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V6ScoEeSLVrU2ifxtpw" target="_R43V8ycoEeSLVrU2ifxtpw" source="_R43WJScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V6icoEeSLVrU2ifxtpw" target="_R43V9ScoEeSLVrU2ifxtpw" source="_R43V8ScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V6ycoEeSLVrU2ifxtpw" target="_R43V-CcoEeSLVrU2ifxtpw" source="_R43V8icoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V7CcoEeSLVrU2ifxtpw" target="_R43WBCcoEeSLVrU2ifxtpw" source="_R43V8ScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V7ScoEeSLVrU2ifxtpw" target="_R43WBycoEeSLVrU2ifxtpw" source="_R43V_ycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V7icoEeSLVrU2ifxtpw" target="_R43WDycoEeSLVrU2ifxtpw" source="_R43V8icoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V7ycoEeSLVrU2ifxtpw" target="_R43WFicoEeSLVrU2ifxtpw" source="_R43WJScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43V8CcoEeSLVrU2ifxtpw" target="_R43WGScoEeSLVrU2ifxtpw" source="_R43V8ScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_R43V8ScoEeSLVrU2ifxtpw" name="Fork(SequenceRange@5265fd6f.loopVariable()(rangeLower))" incoming="_R43V5ycoEeSLVrU2ifxtpw" outgoing="_R43V6icoEeSLVrU2ifxtpw _R43V7CcoEeSLVrU2ifxtpw _R43V8CcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_R43V8icoEeSLVrU2ifxtpw" name="Fork(SequenceRange@5265fd6f.loopVariable()(rangeUpper))" incoming="_R43V6CcoEeSLVrU2ifxtpw" outgoing="_R43V6ycoEeSLVrU2ifxtpw _R43V7icoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_R43V8ycoEeSLVrU2ifxtpw" name="Fork(SequenceRange@5265fd6f.loopVariable()(range))" incoming="_R43V6ScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43V9CcoEeSLVrU2ifxtpw" name="Call(&lt;=)">
                    <argument xmi:id="_R43V9ScoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_R43V6icoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43V9icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43V9ycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_R43V-CcoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_R43V6ycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43V-ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43V-icoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R43V-ycoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43V_CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43V_ScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43V_icoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_R43V_ycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R43V7ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WACcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WAScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_R43WAicoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43WAycoEeSLVrU2ifxtpw" name="Call(+)">
                    <argument xmi:id="_R43WBCcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_R43V7CcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WBScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WBicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_R43WBycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_R43V7ScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WCCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WCScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R43WCicoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WCycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WDCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WDScoEeSLVrU2ifxtpw" name="Node(SequenceRange@5265fd6f.loopVariable()(rangeUpper)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WDicoEeSLVrU2ifxtpw" target="_R43WEicoEeSLVrU2ifxtpw" source="_R43WDycoEeSLVrU2ifxtpw"/>
                    <structuredNodeInput xmi:id="_R43WDycoEeSLVrU2ifxtpw" name="Node(SequenceRange@5265fd6f.loopVariable()(rangeUpper).input" incoming="_R43V7icoEeSLVrU2ifxtpw" outgoing="_R43WDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WECcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WEScoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_R43WEicoEeSLVrU2ifxtpw" name="Node(SequenceRange@5265fd6f.loopVariable()(rangeUpper).output" incoming="_R43WDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WEycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WFCcoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43WFScoEeSLVrU2ifxtpw" name="Call(Including)">
                    <argument xmi:id="_R43WFicoEeSLVrU2ifxtpw" name="Call(Including).argument(seq)" incoming="_R43V7ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WFycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WGCcoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_R43WGScoEeSLVrU2ifxtpw" name="Call(Including).argument(element)" incoming="_R43V8CcoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WGicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WGycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R43WHCcoEeSLVrU2ifxtpw" name="Call(Including).result()" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WHScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WHicoEeSLVrU2ifxtpw" value="*"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                  </node>
                  <loopVariable xmi:id="_R43WHycoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.loopVariable()(rangeLower)" outgoing="_R43V5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WICcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WIScoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_R43WIicoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.loopVariable()(rangeUpper)" outgoing="_R43V6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WIycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WJCcoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_R43WJScoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.loopVariable()(range)" outgoing="_R43V6ScoEeSLVrU2ifxtpw _R43V7ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WJicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WJycoEeSLVrU2ifxtpw" value="*"/>
                  </loopVariable>
                  <loopVariableInput xmi:id="_R43WKCcoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.loopVariableInput(rangeLower)" incoming="_R43V1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WKScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WKicoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_R43WKycoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.loopVariableInput(rangeUpper)" incoming="_R43V1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WLCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WLScoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_R43WLicoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.loopVariableInput(range)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WLycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WMCcoEeSLVrU2ifxtpw" value="*"/>
                  </loopVariableInput>
                  <result xmi:id="_R43WMScoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.result(rangeLower)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WMicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WMycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <result xmi:id="_R43WNCcoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.result(rangeUpper)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WNScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WNicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <result xmi:id="_R43WNycoEeSLVrU2ifxtpw" name="SequenceRange@5265fd6f.result(range)" outgoing="_R43V2CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WOCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WOScoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WOicoEeSLVrU2ifxtpw" name="ExpressionStatement@354f11b5" incoming="_R43U_CcoEeSLVrU2ifxtpw" outgoing="_R43U_ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WOycoEeSLVrU2ifxtpw" target="_R43WPCcoEeSLVrU2ifxtpw" source="_R43WPycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43WPCcoEeSLVrU2ifxtpw" name="Fork(seq7)@2bdb1704" incoming="_R43WOycoEeSLVrU2ifxtpw" outgoing="_R43VDCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WPScoEeSLVrU2ifxtpw" name="RightHandSide@3cc41e1a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43WPicoEeSLVrU2ifxtpw" name="Value(null)">
                <result xmi:id="_R43WPycoEeSLVrU2ifxtpw" name="Value(null).result" outgoing="_R43WOycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WQCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WQScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_R43WQicoEeSLVrU2ifxtpw"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WQycoEeSLVrU2ifxtpw" name="ExpressionStatement@5875a963" incoming="_R43U_ScoEeSLVrU2ifxtpw" outgoing="_R43U_icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WRCcoEeSLVrU2ifxtpw" target="_R43WRScoEeSLVrU2ifxtpw" source="_R43WUicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43WRScoEeSLVrU2ifxtpw" name="Fork(x)@3689640" incoming="_R43WRCcoEeSLVrU2ifxtpw" outgoing="_R43VDScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WRicoEeSLVrU2ifxtpw" name="RightHandSide@4760457f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WRycoEeSLVrU2ifxtpw" target="_R43WTCcoEeSLVrU2ifxtpw" source="_R43WWCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WSCcoEeSLVrU2ifxtpw" target="_R43WZycoEeSLVrU2ifxtpw" source="_R43WYycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R43WSScoEeSLVrU2ifxtpw" target="_R43WSycoEeSLVrU2ifxtpw" source="_R43WVScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WSicoEeSLVrU2ifxtpw" target="_R43WTycoEeSLVrU2ifxtpw" source="_R43WZycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43WSycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_R43WSScoEeSLVrU2ifxtpw">
                <argument xmi:id="_R43WTCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_R43WRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WTScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WTicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_R43WTycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_R43WSicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WUCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WUScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_R43WUicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_R43WRCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WUycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WVCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WVScoEeSLVrU2ifxtpw" name="Tuple@37ee925d" outgoing="_R43WSScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WVicoEeSLVrU2ifxtpw" target="_R43WWycoEeSLVrU2ifxtpw" source="_R43WXycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_R43WVycoEeSLVrU2ifxtpw" name="Call(getList)" operation="_R43YJCcoEeSLVrU2ifxtpw">
                  <result xmi:id="_R43WWCcoEeSLVrU2ifxtpw" name="Call(getList).result()" outgoing="_R43WRycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WWScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WWicoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                  <target xmi:id="_R43WWycoEeSLVrU2ifxtpw" name="Call(getList).target" incoming="_R43WVicoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WXCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WXScoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ReadSelfAction" xmi:id="_R43WXicoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_R43WXycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R43WVicoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WYCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WYScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43WYicoEeSLVrU2ifxtpw" name="Value(2)">
                  <result xmi:id="_R43WYycoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R43WSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WZCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WZScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_R43WZicoEeSLVrU2ifxtpw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R43WZycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_R43WSCcoEeSLVrU2ifxtpw" outgoing="_R43WSicoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WaCcoEeSLVrU2ifxtpw" name="ExpressionStatement@4a1dd98e" incoming="_R43U_icoEeSLVrU2ifxtpw" outgoing="_R43U_ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WaScoEeSLVrU2ifxtpw" target="_R43WaicoEeSLVrU2ifxtpw" source="_R43WbScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43WaicoEeSLVrU2ifxtpw" name="Fork(i)@7d57a15e" incoming="_R43WaScoEeSLVrU2ifxtpw" outgoing="_R43VAScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WaycoEeSLVrU2ifxtpw" name="RightHandSide@423629c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43WbCcoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_R43WbScoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_R43WaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WbicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WbycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_R43WcCcoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WcScoEeSLVrU2ifxtpw" name="ExpressionStatement@3785ff15" incoming="_R43U_ycoEeSLVrU2ifxtpw" outgoing="_R43VAicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WcicoEeSLVrU2ifxtpw" target="_R43WcycoEeSLVrU2ifxtpw" source="_R43WeScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43WcycoEeSLVrU2ifxtpw" name="Fork(customers)@288077e6" incoming="_R43WcicoEeSLVrU2ifxtpw" outgoing="_R43VACcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WdCcoEeSLVrU2ifxtpw" name="RightHandSide@3e2dd82d">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WdScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@3e2dd82d">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43WdicoEeSLVrU2ifxtpw" target="_R43WlCcoEeSLVrU2ifxtpw" source="_R43WfCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WdycoEeSLVrU2ifxtpw" target="_R43WeScoEeSLVrU2ifxtpw" source="_R43WhCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WeCcoEeSLVrU2ifxtpw" target="_R43WeScoEeSLVrU2ifxtpw" source="_R43WnCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R43WeScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@3e2dd82d.output" incoming="_R43WdycoEeSLVrU2ifxtpw _R43WeCcoEeSLVrU2ifxtpw" outgoing="_R43WcicoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WeicoEeSLVrU2ifxtpw" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WeycoEeSLVrU2ifxtpw" value="2"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WfCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@4ecdbfc1#1" outgoing="_R43WdicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WfScoEeSLVrU2ifxtpw" target="_R43WhycoEeSLVrU2ifxtpw" source="_R43WiycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WficoEeSLVrU2ifxtpw" target="_R43WgScoEeSLVrU2ifxtpw" source="_R43WkCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R43WfycoEeSLVrU2ifxtpw" target="_R43WgCcoEeSLVrU2ifxtpw" source="_R43WjicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_R43WgCcoEeSLVrU2ifxtpw" name="Call(Customer)" incoming="_R43WfycoEeSLVrU2ifxtpw" operation="_R43ZAicoEeSLVrU2ifxtpw">
                    <argument xmi:id="_R43WgScoEeSLVrU2ifxtpw" name="Call(Customer).argument(name)" incoming="_R43WficoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WgicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WgycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R43WhCcoEeSLVrU2ifxtpw" name="Call(Customer).result()" outgoing="_R43WdycoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WhScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WhicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <target xmi:id="_R43WhycoEeSLVrU2ifxtpw" name="Call(Customer).target" incoming="_R43WfScoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WiCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WiScoEeSLVrU2ifxtpw" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_R43WiicoEeSLVrU2ifxtpw" name="Create(Customer)" classifier="_R43YUicoEeSLVrU2ifxtpw">
                    <result xmi:id="_R43WiycoEeSLVrU2ifxtpw" name="Create(Customer).result" outgoing="_R43WfScoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WjCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WjScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WjicoEeSLVrU2ifxtpw" name="Tuple@11b551da" outgoing="_R43WfycoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43WjycoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;)">
                      <result xmi:id="_R43WkCcoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;).result" outgoing="_R43WficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WkScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WkicoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_R43WkycoEeSLVrU2ifxtpw" value="A">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WlCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@4ecdbfc1#2" incoming="_R43WdicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WlScoEeSLVrU2ifxtpw" target="_R43WnycoEeSLVrU2ifxtpw" source="_R43WoycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WlicoEeSLVrU2ifxtpw" target="_R43WmScoEeSLVrU2ifxtpw" source="_R43WqCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R43WlycoEeSLVrU2ifxtpw" target="_R43WmCcoEeSLVrU2ifxtpw" source="_R43WpicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_R43WmCcoEeSLVrU2ifxtpw" name="Call(Customer)" incoming="_R43WlycoEeSLVrU2ifxtpw" operation="_R43ZAicoEeSLVrU2ifxtpw">
                    <argument xmi:id="_R43WmScoEeSLVrU2ifxtpw" name="Call(Customer).argument(name)" incoming="_R43WlicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WmicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WmycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R43WnCcoEeSLVrU2ifxtpw" name="Call(Customer).result()" outgoing="_R43WeCcoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WnScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WnicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <target xmi:id="_R43WnycoEeSLVrU2ifxtpw" name="Call(Customer).target" incoming="_R43WlScoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WoCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WoScoEeSLVrU2ifxtpw" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_R43WoicoEeSLVrU2ifxtpw" name="Create(Customer)" classifier="_R43YUicoEeSLVrU2ifxtpw">
                    <result xmi:id="_R43WoycoEeSLVrU2ifxtpw" name="Create(Customer).result" outgoing="_R43WlScoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WpCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WpScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WpicoEeSLVrU2ifxtpw" name="Tuple@4992a8df" outgoing="_R43WlycoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43WpycoEeSLVrU2ifxtpw" name="Value(&quot;B&quot;)">
                      <result xmi:id="_R43WqCcoEeSLVrU2ifxtpw" name="Value(&quot;B&quot;).result" outgoing="_R43WlicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WqScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WqicoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_R43WqycoEeSLVrU2ifxtpw" value="B">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WrCcoEeSLVrU2ifxtpw" name="ExpressionStatement@1ee3f393" incoming="_R43VAicoEeSLVrU2ifxtpw" outgoing="_R43VAycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WrScoEeSLVrU2ifxtpw" target="_R43WuicoEeSLVrU2ifxtpw" source="_R43WsScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WricoEeSLVrU2ifxtpw" target="_R43WwCcoEeSLVrU2ifxtpw" source="_R43WvScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WrycoEeSLVrU2ifxtpw" target="_R43WsScoEeSLVrU2ifxtpw" source="_R43WyScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R43WsCcoEeSLVrU2ifxtpw" target="_R43WsicoEeSLVrU2ifxtpw" source="_R43WwScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43WsScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@58db6d09)" incoming="_R43WrycoEeSLVrU2ifxtpw" outgoing="_R43WrScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WsicoEeSLVrU2ifxtpw" name="Index(LeftHandSide@58db6d09)" incoming="_R43WsCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43WsycoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_R43WtCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_R43VACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WtScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WticoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R43WtycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_R43VAScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WuCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WuScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R43WuicoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_R43WrScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WuycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WvCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R43WvScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_R43WricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WvicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WvycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_R43WwCcoEeSLVrU2ifxtpw" name="Fork(customers)" incoming="_R43WricoEeSLVrU2ifxtpw" outgoing="_R43VDicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43WwScoEeSLVrU2ifxtpw" name="RightHandSide@25c59585" outgoing="_R43WsCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WwicoEeSLVrU2ifxtpw" target="_R43WzCcoEeSLVrU2ifxtpw" source="_R43W0CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43WwycoEeSLVrU2ifxtpw" target="_R43WxicoEeSLVrU2ifxtpw" source="_R43W1ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R43WxCcoEeSLVrU2ifxtpw" target="_R43WxScoEeSLVrU2ifxtpw" source="_R43W0ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_R43WxScoEeSLVrU2ifxtpw" name="Call(Customer)" incoming="_R43WxCcoEeSLVrU2ifxtpw" operation="_R43ZAicoEeSLVrU2ifxtpw">
                <argument xmi:id="_R43WxicoEeSLVrU2ifxtpw" name="Call(Customer).argument(name)" incoming="_R43WwycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WyCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_R43WyScoEeSLVrU2ifxtpw" name="Call(Customer).result()" outgoing="_R43WrycoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WyicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WyycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_R43WzCcoEeSLVrU2ifxtpw" name="Call(Customer).target" incoming="_R43WwicoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43WzScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43WzicoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_R43WzycoEeSLVrU2ifxtpw" name="Create(Customer)" classifier="_R43YUicoEeSLVrU2ifxtpw">
                <result xmi:id="_R43W0CcoEeSLVrU2ifxtpw" name="Create(Customer).result" outgoing="_R43WwicoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43W0ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43W0icoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43W0ycoEeSLVrU2ifxtpw" name="Tuple@32ec603e" outgoing="_R43WxCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43W1CcoEeSLVrU2ifxtpw" name="Value(&quot;C&quot;)">
                  <result xmi:id="_R43W1ScoEeSLVrU2ifxtpw" name="Value(&quot;C&quot;).result" outgoing="_R43WwycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43W1icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43W1ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_R43W2CcoEeSLVrU2ifxtpw" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43W2ScoEeSLVrU2ifxtpw" name="ExpressionStatement@3bb1a3a6" incoming="_R43VAycoEeSLVrU2ifxtpw" outgoing="_R43VBCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43W2icoEeSLVrU2ifxtpw" target="_R43W2ycoEeSLVrU2ifxtpw" source="_R43W5CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43W2ycoEeSLVrU2ifxtpw" name="Fork(set1)@79e61605" incoming="_R43W2icoEeSLVrU2ifxtpw" outgoing="_R43VDycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43W3CcoEeSLVrU2ifxtpw" name="RightHandSide@70afe0c8">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43W3ScoEeSLVrU2ifxtpw" target="_R43W5ycoEeSLVrU2ifxtpw" source="_R43W6ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43W3icoEeSLVrU2ifxtpw" target="_R43W4ScoEeSLVrU2ifxtpw" source="_R43W9ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R43W3ycoEeSLVrU2ifxtpw" target="_R43W4CcoEeSLVrU2ifxtpw" source="_R43W7icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_R43W4CcoEeSLVrU2ifxtpw" name="Call(Set)" incoming="_R43W3ycoEeSLVrU2ifxtpw" operation="_R44jvicoEeSLVrU2ifxtpw">
                <argument xmi:id="_R43W4ScoEeSLVrU2ifxtpw" name="Call(Set).argument(seq)" incoming="_R43W3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43W4icoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43W4ycoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R43W5CcoEeSLVrU2ifxtpw" name="Call(Set).result()" outgoing="_R43W2icoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43W5ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43W5icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_R43W5ycoEeSLVrU2ifxtpw" name="Call(Set).target" incoming="_R43W3ScoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43W6CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43W6ScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_R43W6icoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__)" classifier="_R43-hScoEeSLVrU2ifxtpw">
                <result xmi:id="_R43W6ycoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__).result" outgoing="_R43W3ScoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43W7CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43W7ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43W7icoEeSLVrU2ifxtpw" name="Tuple@bef07c1" outgoing="_R43W3ycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43W7ycoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@7eb0f7c7">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R43W8CcoEeSLVrU2ifxtpw" target="_R43W_icoEeSLVrU2ifxtpw" source="_R43W-CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R43W8ScoEeSLVrU2ifxtpw" target="_R43XBCcoEeSLVrU2ifxtpw" source="_R43W_icoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43W8icoEeSLVrU2ifxtpw" target="_R43W9ScoEeSLVrU2ifxtpw" source="_R43W-icoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43W8ycoEeSLVrU2ifxtpw" target="_R43W9ScoEeSLVrU2ifxtpw" source="_R43XACcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43W9CcoEeSLVrU2ifxtpw" target="_R43W9ScoEeSLVrU2ifxtpw" source="_R43XBicoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_R43W9ScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@7eb0f7c7.output" incoming="_R43W8icoEeSLVrU2ifxtpw _R43W8ycoEeSLVrU2ifxtpw _R43W9CcoEeSLVrU2ifxtpw" outgoing="_R43W3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43W9icoEeSLVrU2ifxtpw" value="3"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43W9ycoEeSLVrU2ifxtpw" value="3"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43W-CcoEeSLVrU2ifxtpw" name="SequenceExpressionList@2936a818#1" outgoing="_R43W8CcoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43W-ScoEeSLVrU2ifxtpw" name="Value(1)">
                      <result xmi:id="_R43W-icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R43W8icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43W-ycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43W_CcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_R43W_ScoEeSLVrU2ifxtpw" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43W_icoEeSLVrU2ifxtpw" name="SequenceExpressionList@2936a818#2" incoming="_R43W8CcoEeSLVrU2ifxtpw" outgoing="_R43W8ScoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43W_ycoEeSLVrU2ifxtpw" name="Value(3)">
                      <result xmi:id="_R43XACcoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R43W8ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XAScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XAicoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_R43XAycoEeSLVrU2ifxtpw" value="3">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XBCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@2936a818#3" incoming="_R43W8ScoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XBScoEeSLVrU2ifxtpw" name="Value(45)">
                      <result xmi:id="_R43XBicoEeSLVrU2ifxtpw" name="Value(45).result" outgoing="_R43W9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XBycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XCCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_R43XCScoEeSLVrU2ifxtpw" value="45">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XCicoEeSLVrU2ifxtpw" name="ExpressionStatement@22b0cedf" incoming="_R43VBCcoEeSLVrU2ifxtpw" outgoing="_R43VBScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XCycoEeSLVrU2ifxtpw" target="_R43XDCcoEeSLVrU2ifxtpw" source="_R43XFScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43XDCcoEeSLVrU2ifxtpw" name="Fork(set2)@7a6450fd" incoming="_R43XCycoEeSLVrU2ifxtpw" outgoing="_R43VECcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XDScoEeSLVrU2ifxtpw" name="RightHandSide@500150d1">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XDicoEeSLVrU2ifxtpw" target="_R43XGCcoEeSLVrU2ifxtpw" source="_R43XHCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XDycoEeSLVrU2ifxtpw" target="_R43XEicoEeSLVrU2ifxtpw" source="_R43XJicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R43XECcoEeSLVrU2ifxtpw" target="_R43XEScoEeSLVrU2ifxtpw" source="_R43XHycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_R43XEScoEeSLVrU2ifxtpw" name="Call(Set)" incoming="_R43XECcoEeSLVrU2ifxtpw" operation="_R44jvicoEeSLVrU2ifxtpw">
                <argument xmi:id="_R43XEicoEeSLVrU2ifxtpw" name="Call(Set).argument(seq)" incoming="_R43XDycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XEycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XFCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R43XFScoEeSLVrU2ifxtpw" name="Call(Set).result()" outgoing="_R43XCycoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XFicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XFycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_R43XGCcoEeSLVrU2ifxtpw" name="Call(Set).target" incoming="_R43XDicoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XGScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XGicoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_R43XGycoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__)" classifier="_R43-hScoEeSLVrU2ifxtpw">
                <result xmi:id="_R43XHCcoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__).result" outgoing="_R43XDicoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XHScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XHicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XHycoEeSLVrU2ifxtpw" name="Tuple@3cccbfd" outgoing="_R43XECcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XICcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@145b6acc">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R43XIScoEeSLVrU2ifxtpw" target="_R43XLycoEeSLVrU2ifxtpw" source="_R43XKScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R43XIicoEeSLVrU2ifxtpw" target="_R43XNScoEeSLVrU2ifxtpw" source="_R43XLycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XIycoEeSLVrU2ifxtpw" target="_R43XJicoEeSLVrU2ifxtpw" source="_R43XKycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XJCcoEeSLVrU2ifxtpw" target="_R43XJicoEeSLVrU2ifxtpw" source="_R43XMScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XJScoEeSLVrU2ifxtpw" target="_R43XJicoEeSLVrU2ifxtpw" source="_R43XNycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_R43XJicoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@145b6acc.output" incoming="_R43XIycoEeSLVrU2ifxtpw _R43XJCcoEeSLVrU2ifxtpw _R43XJScoEeSLVrU2ifxtpw" outgoing="_R43XDycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XJycoEeSLVrU2ifxtpw" value="3"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XKCcoEeSLVrU2ifxtpw" value="3"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XKScoEeSLVrU2ifxtpw" name="SequenceExpressionList@560cb988#1" outgoing="_R43XIScoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XKicoEeSLVrU2ifxtpw" name="Value(1)">
                      <result xmi:id="_R43XKycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R43XIycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XLCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XLScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_R43XLicoEeSLVrU2ifxtpw" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XLycoEeSLVrU2ifxtpw" name="SequenceExpressionList@560cb988#2" incoming="_R43XIScoEeSLVrU2ifxtpw" outgoing="_R43XIicoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XMCcoEeSLVrU2ifxtpw" name="Value(3)">
                      <result xmi:id="_R43XMScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_R43XJCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XMicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XMycoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_R43XNCcoEeSLVrU2ifxtpw" value="3">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XNScoEeSLVrU2ifxtpw" name="SequenceExpressionList@560cb988#3" incoming="_R43XIicoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XNicoEeSLVrU2ifxtpw" name="Value(45)">
                      <result xmi:id="_R43XNycoEeSLVrU2ifxtpw" name="Value(45).result" outgoing="_R43XJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XOCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XOScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_R43XOicoEeSLVrU2ifxtpw" value="45">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XOycoEeSLVrU2ifxtpw" name="ExpressionStatement@50ea6809" incoming="_R43VBScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XPCcoEeSLVrU2ifxtpw" target="_R43XPScoEeSLVrU2ifxtpw" source="_R43XRicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R43XPScoEeSLVrU2ifxtpw" name="Fork(list)@30316703" incoming="_R43XPCcoEeSLVrU2ifxtpw" outgoing="_R43VEScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XPicoEeSLVrU2ifxtpw" name="RightHandSide@7b620eac">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XPycoEeSLVrU2ifxtpw" target="_R43XSScoEeSLVrU2ifxtpw" source="_R43XTScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XQCcoEeSLVrU2ifxtpw" target="_R43XQycoEeSLVrU2ifxtpw" source="_R43XVScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R43XQScoEeSLVrU2ifxtpw" target="_R43XQicoEeSLVrU2ifxtpw" source="_R43XUCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_R43XQicoEeSLVrU2ifxtpw" name="Call(List)" incoming="_R43XQScoEeSLVrU2ifxtpw" operation="_R45xvScoEeSLVrU2ifxtpw">
                <argument xmi:id="_R43XQycoEeSLVrU2ifxtpw" name="Call(List).argument(seq)" incoming="_R43XQCcoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XRCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XRScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R43XRicoEeSLVrU2ifxtpw" name="Call(List).result()" outgoing="_R43XPCcoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XRycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XSCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_R43XSScoEeSLVrU2ifxtpw" name="Call(List).target" incoming="_R43XPycoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XSicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XSycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_R43XTCcoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$List__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____)" classifier="_R45LKScoEeSLVrU2ifxtpw">
                <result xmi:id="_R43XTScoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$List__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____).result" outgoing="_R43XPycoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XTicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XTycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XUCcoEeSLVrU2ifxtpw" name="Tuple@1a107bd3" outgoing="_R43XQScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XUScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@1713522f">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_R43XUicoEeSLVrU2ifxtpw" target="_R43XficoEeSLVrU2ifxtpw" source="_R43XWCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XUycoEeSLVrU2ifxtpw" target="_R43XVScoEeSLVrU2ifxtpw" source="_R43XYCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XVCcoEeSLVrU2ifxtpw" target="_R43XVScoEeSLVrU2ifxtpw" source="_R43XhicoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_R43XVScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@1713522f.output" incoming="_R43XUycoEeSLVrU2ifxtpw _R43XVCcoEeSLVrU2ifxtpw" outgoing="_R43XQCcoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XVicoEeSLVrU2ifxtpw" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XVycoEeSLVrU2ifxtpw" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XWCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@61f9667b#1" outgoing="_R43XUicoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XWScoEeSLVrU2ifxtpw" target="_R43XYycoEeSLVrU2ifxtpw" source="_R43XZycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XWicoEeSLVrU2ifxtpw" target="_R43XXScoEeSLVrU2ifxtpw" source="_R43XbycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_R43XWycoEeSLVrU2ifxtpw" target="_R43XXCcoEeSLVrU2ifxtpw" source="_R43XaicoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:CallOperationAction" xmi:id="_R43XXCcoEeSLVrU2ifxtpw" name="Call(List)" incoming="_R43XWycoEeSLVrU2ifxtpw" operation="_R45KXycoEeSLVrU2ifxtpw">
                      <argument xmi:id="_R43XXScoEeSLVrU2ifxtpw" name="Call(List).argument(seq)" incoming="_R43XWicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XXicoEeSLVrU2ifxtpw"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XXycoEeSLVrU2ifxtpw" value="*"/>
                      </argument>
                      <result xmi:id="_R43XYCcoEeSLVrU2ifxtpw" name="Call(List).result()" outgoing="_R43XUycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XYScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XYicoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <target xmi:id="_R43XYycoEeSLVrU2ifxtpw" name="Call(List).target" incoming="_R43XWScoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XZCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XZScoEeSLVrU2ifxtpw" value="1"/>
                      </target>
                    </node>
                    <node xmi:type="uml:CreateObjectAction" xmi:id="_R43XZicoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__)" classifier="_R44kQycoEeSLVrU2ifxtpw">
                      <result xmi:id="_R43XZycoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__).result" outgoing="_R43XWScoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XaCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XaScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XaicoEeSLVrU2ifxtpw" name="Tuple@37fd789c" outgoing="_R43XWycoEeSLVrU2ifxtpw">
                      <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XaycoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@78aa6e60">
                        <edge xmi:type="uml:ControlFlow" xmi:id="_R43XbCcoEeSLVrU2ifxtpw" target="_R43XeCcoEeSLVrU2ifxtpw" source="_R43XcicoEeSLVrU2ifxtpw"/>
                        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XbScoEeSLVrU2ifxtpw" target="_R43XbycoEeSLVrU2ifxtpw" source="_R43XdCcoEeSLVrU2ifxtpw"/>
                        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XbicoEeSLVrU2ifxtpw" target="_R43XbycoEeSLVrU2ifxtpw" source="_R43XeicoEeSLVrU2ifxtpw"/>
                        <structuredNodeOutput xmi:id="_R43XbycoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@78aa6e60.output" incoming="_R43XbScoEeSLVrU2ifxtpw _R43XbicoEeSLVrU2ifxtpw" outgoing="_R43XWicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XcCcoEeSLVrU2ifxtpw" value="2"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XcScoEeSLVrU2ifxtpw" value="2"/>
                        </structuredNodeOutput>
                        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XcicoEeSLVrU2ifxtpw" name="SequenceExpressionList@571172d1#1" outgoing="_R43XbCcoEeSLVrU2ifxtpw">
                          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XcycoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;)">
                            <result xmi:id="_R43XdCcoEeSLVrU2ifxtpw" name="Value(&quot;apple&quot;).result" outgoing="_R43XbScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XdScoEeSLVrU2ifxtpw" value="1"/>
                              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XdicoEeSLVrU2ifxtpw" value="1"/>
                            </result>
                            <value xmi:type="uml:LiteralString" xmi:id="_R43XdycoEeSLVrU2ifxtpw" value="apple">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                            </value>
                          </node>
                        </node>
                        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XeCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@571172d1#2" incoming="_R43XbCcoEeSLVrU2ifxtpw">
                          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XeScoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;)">
                            <result xmi:id="_R43XeicoEeSLVrU2ifxtpw" name="Value(&quot;orange&quot;).result" outgoing="_R43XbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XeycoEeSLVrU2ifxtpw" value="1"/>
                              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XfCcoEeSLVrU2ifxtpw" value="1"/>
                            </result>
                            <value xmi:type="uml:LiteralString" xmi:id="_R43XfScoEeSLVrU2ifxtpw" value="orange">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                            </value>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XficoEeSLVrU2ifxtpw" name="SequenceExpressionList@61f9667b#2" incoming="_R43XUicoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XfycoEeSLVrU2ifxtpw" target="_R43XiScoEeSLVrU2ifxtpw" source="_R43XjScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XgCcoEeSLVrU2ifxtpw" target="_R43XgycoEeSLVrU2ifxtpw" source="_R43XlScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_R43XgScoEeSLVrU2ifxtpw" target="_R43XgicoEeSLVrU2ifxtpw" source="_R43XkCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:CallOperationAction" xmi:id="_R43XgicoEeSLVrU2ifxtpw" name="Call(List)" incoming="_R43XgScoEeSLVrU2ifxtpw" operation="_R45KXycoEeSLVrU2ifxtpw">
                      <argument xmi:id="_R43XgycoEeSLVrU2ifxtpw" name="Call(List).argument(seq)" incoming="_R43XgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XhCcoEeSLVrU2ifxtpw"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XhScoEeSLVrU2ifxtpw" value="*"/>
                      </argument>
                      <result xmi:id="_R43XhicoEeSLVrU2ifxtpw" name="Call(List).result()" outgoing="_R43XVCcoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XhycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XiCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <target xmi:id="_R43XiScoEeSLVrU2ifxtpw" name="Call(List).target" incoming="_R43XfycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XiicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XiycoEeSLVrU2ifxtpw" value="1"/>
                      </target>
                    </node>
                    <node xmi:type="uml:CreateObjectAction" xmi:id="_R43XjCcoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__)" classifier="_R44kQycoEeSLVrU2ifxtpw">
                      <result xmi:id="_R43XjScoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__).result" outgoing="_R43XfycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XjicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XjycoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XkCcoEeSLVrU2ifxtpw" name="Tuple@4f60dcc" outgoing="_R43XgScoEeSLVrU2ifxtpw">
                      <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XkScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@7d349e83">
                        <edge xmi:type="uml:ControlFlow" xmi:id="_R43XkicoEeSLVrU2ifxtpw" target="_R43XnicoEeSLVrU2ifxtpw" source="_R43XmCcoEeSLVrU2ifxtpw"/>
                        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XkycoEeSLVrU2ifxtpw" target="_R43XlScoEeSLVrU2ifxtpw" source="_R43XmicoEeSLVrU2ifxtpw"/>
                        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XlCcoEeSLVrU2ifxtpw" target="_R43XlScoEeSLVrU2ifxtpw" source="_R43XoCcoEeSLVrU2ifxtpw"/>
                        <structuredNodeOutput xmi:id="_R43XlScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@7d349e83.output" incoming="_R43XkycoEeSLVrU2ifxtpw _R43XlCcoEeSLVrU2ifxtpw" outgoing="_R43XgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XlicoEeSLVrU2ifxtpw" value="2"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XlycoEeSLVrU2ifxtpw" value="2"/>
                        </structuredNodeOutput>
                        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XmCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@3f287183#1" outgoing="_R43XkicoEeSLVrU2ifxtpw">
                          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XmScoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;)">
                            <result xmi:id="_R43XmicoEeSLVrU2ifxtpw" name="Value(&quot;strawberry&quot;).result" outgoing="_R43XkycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XmycoEeSLVrU2ifxtpw" value="1"/>
                              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XnCcoEeSLVrU2ifxtpw" value="1"/>
                            </result>
                            <value xmi:type="uml:LiteralString" xmi:id="_R43XnScoEeSLVrU2ifxtpw" value="strawberry">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                            </value>
                          </node>
                        </node>
                        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XnicoEeSLVrU2ifxtpw" name="SequenceExpressionList@3f287183#2" incoming="_R43XkicoEeSLVrU2ifxtpw">
                          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XnycoEeSLVrU2ifxtpw" name="Value(&quot;raspberry&quot;)">
                            <result xmi:id="_R43XoCcoEeSLVrU2ifxtpw" name="Value(&quot;raspberry&quot;).result" outgoing="_R43XlCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XoScoEeSLVrU2ifxtpw" value="1"/>
                              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XoicoEeSLVrU2ifxtpw" value="1"/>
                            </result>
                            <value xmi:type="uml:LiteralString" xmi:id="_R43XoycoEeSLVrU2ifxtpw" value="raspberry">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                            </value>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U6icoEeSLVrU2ifxtpw" name="Output(seq1)" incoming="_R43U3icoEeSLVrU2ifxtpw" parameter="_R42xticoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U6ycoEeSLVrU2ifxtpw" name="Output(seq2)" incoming="_R43U3ycoEeSLVrU2ifxtpw" parameter="_R42xuScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U7CcoEeSLVrU2ifxtpw" name="Output(seq3)" incoming="_R43U4CcoEeSLVrU2ifxtpw" parameter="_R42xvCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U7ScoEeSLVrU2ifxtpw" name="Output(seq4)" incoming="_R43U4ScoEeSLVrU2ifxtpw" parameter="_R42xvycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U7icoEeSLVrU2ifxtpw" name="Output(seq5)" incoming="_R43U4icoEeSLVrU2ifxtpw" parameter="_R42xwicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U7ycoEeSLVrU2ifxtpw" name="Output(seq6)" incoming="_R43U4ycoEeSLVrU2ifxtpw" parameter="_R42xxScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U8CcoEeSLVrU2ifxtpw" name="Output(seq7)" incoming="_R43U5CcoEeSLVrU2ifxtpw" parameter="_R42xyCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U8ScoEeSLVrU2ifxtpw" name="Output(x)" incoming="_R43U5ScoEeSLVrU2ifxtpw" parameter="_R42xyycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U8icoEeSLVrU2ifxtpw" name="Output(customers)" incoming="_R43U5icoEeSLVrU2ifxtpw" parameter="_R43U0icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U8ycoEeSLVrU2ifxtpw" name="Output(set1)" incoming="_R43U5ycoEeSLVrU2ifxtpw" parameter="_R43U1ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U9CcoEeSLVrU2ifxtpw" name="Output(set2)" incoming="_R43U6CcoEeSLVrU2ifxtpw" parameter="_R43U2CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43U9ScoEeSLVrU2ifxtpw" name="Output(list)" incoming="_R43U6ScoEeSLVrU2ifxtpw" parameter="_R43U2ycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43XpCcoEeSLVrU2ifxtpw" name="Expressions_Sequence_Construction$method$1" specification="_R43YTScoEeSLVrU2ifxtpw" node="_R43XqScoEeSLVrU2ifxtpw _R43XqicoEeSLVrU2ifxtpw" group="_R43XqicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43XpScoEeSLVrU2ifxtpw" name="" type="_R42twScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XpicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XpycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XqCcoEeSLVrU2ifxtpw" target="_R43XqScoEeSLVrU2ifxtpw" source="_R43XuycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43XqicoEeSLVrU2ifxtpw" name="Body(Expressions_Sequence_Construction$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XqycoEeSLVrU2ifxtpw" target="_R43XuycoEeSLVrU2ifxtpw" source="_R43XuCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XrCcoEeSLVrU2ifxtpw" target="_R43XvScoEeSLVrU2ifxtpw" source="_R43XuycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43XrScoEeSLVrU2ifxtpw" target="_R43XticoEeSLVrU2ifxtpw" source="_R43XvCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XricoEeSLVrU2ifxtpw" target="_R43XwScoEeSLVrU2ifxtpw" source="_R43XuycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XrycoEeSLVrU2ifxtpw" target="_R43XyCcoEeSLVrU2ifxtpw" source="_R43XxCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XsCcoEeSLVrU2ifxtpw" target="_R43X1CcoEeSLVrU2ifxtpw" source="_R43XyycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XsScoEeSLVrU2ifxtpw" target="_R43X2icoEeSLVrU2ifxtpw" source="_R43XzycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43XsicoEeSLVrU2ifxtpw" target="_R43X3icoEeSLVrU2ifxtpw" source="_R43X3ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43XsycoEeSLVrU2ifxtpw" target="_R43X3icoEeSLVrU2ifxtpw" source="_R43X1ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43XtCcoEeSLVrU2ifxtpw" target="_R43XvCcoEeSLVrU2ifxtpw" source="_R43X3icoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R43XtScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43XticoEeSLVrU2ifxtpw" name="Body" incoming="_R43XrScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_R43XtycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_R43XuCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R43XqycoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XuScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XuicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R43XuycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R43XqycoEeSLVrU2ifxtpw" outgoing="_R43XqCcoEeSLVrU2ifxtpw _R43XrCcoEeSLVrU2ifxtpw _R43XricoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_R43XvCcoEeSLVrU2ifxtpw" name="Call(Expressions_Sequence_Construction$initialization$1)" incoming="_R43XtCcoEeSLVrU2ifxtpw" outgoing="_R43XrScoEeSLVrU2ifxtpw" operation="_R43YIycoEeSLVrU2ifxtpw">
            <target xmi:id="_R43XvScoEeSLVrU2ifxtpw" name="Call(Expressions_Sequence_Construction$initialization$1).target" incoming="_R43XrCcoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XvicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XvycoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R43XwCcoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Construction$initializationFlag$1)" structuralFeature="_R42txycoEeSLVrU2ifxtpw">
            <object xmi:id="_R43XwScoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Construction$initializationFlag$1).object" incoming="_R43XricoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XwicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XwycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_R43XxCcoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Construction$initializationFlag$1).result" outgoing="_R43XrycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XxScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XxicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43XxycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_R43XyCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R43XrycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XyScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XyicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R43XyycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R43XsCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43XzCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43XzScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43XzicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_R43XzycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R43XsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43X0CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43X0ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_R43X0icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R43X0ycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_R43X1CcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R43XsCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43X1ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43X1icoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R43X1ycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R43XsycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43X2CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43X2ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R43X2icoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R43XsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43X2ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43X3CcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R43X3ScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R43XsicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R43X3icoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Sequence_Construction$initializationFlag$1))" incoming="_R43XsicoEeSLVrU2ifxtpw _R43XsycoEeSLVrU2ifxtpw" outgoing="_R43XtCcoEeSLVrU2ifxtpw" decisionInputFlow="_R43XsycoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43XqScoEeSLVrU2ifxtpw" name="Return" incoming="_R43XqCcoEeSLVrU2ifxtpw" parameter="_R43XpScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43X3ycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_R43YUScoEeSLVrU2ifxtpw" node="_R43X4CcoEeSLVrU2ifxtpw" group="_R43X4CcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R43X4CcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43X4ScoEeSLVrU2ifxtpw" name="Expressions_Sequence_Construction$initialization$1" specification="_R43YIycoEeSLVrU2ifxtpw" node="_R43X4icoEeSLVrU2ifxtpw" group="_R43X4icoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R43X4icoEeSLVrU2ifxtpw" name="Body(Expressions_Sequence_Construction$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43X4ycoEeSLVrU2ifxtpw" target="_R43X8ScoEeSLVrU2ifxtpw" source="_R43X7icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43X5CcoEeSLVrU2ifxtpw" target="_R43X-ycoEeSLVrU2ifxtpw" source="_R43X8ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43X5ScoEeSLVrU2ifxtpw" target="_R43YBScoEeSLVrU2ifxtpw" source="_R43X8ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43X5icoEeSLVrU2ifxtpw" target="_R43YDCcoEeSLVrU2ifxtpw" source="_R43YCCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43X5ycoEeSLVrU2ifxtpw" target="_R43YGCcoEeSLVrU2ifxtpw" source="_R43YDycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43X6CcoEeSLVrU2ifxtpw" target="_R43YHicoEeSLVrU2ifxtpw" source="_R43YEycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43X6ScoEeSLVrU2ifxtpw" target="_R43YIicoEeSLVrU2ifxtpw" source="_R43YIScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43X6icoEeSLVrU2ifxtpw" target="_R43YIicoEeSLVrU2ifxtpw" source="_R43YGycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43X6ycoEeSLVrU2ifxtpw" target="_R43X8icoEeSLVrU2ifxtpw" source="_R43YIicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R43X7CcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_R43X7ScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_R43X7icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R43X4ycoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43X7ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43X8CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R43X8ScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R43X4ycoEeSLVrU2ifxtpw" outgoing="_R43X5CcoEeSLVrU2ifxtpw _R43X5ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43X8icoEeSLVrU2ifxtpw" name="Initialization" incoming="_R43X6ycoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43X8ycoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R43X9CcoEeSLVrU2ifxtpw" target="_R43YAScoEeSLVrU2ifxtpw" source="_R43X9icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43X9ScoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_R43X9icoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_R43X9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43X9ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43X-CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_R43X-ScoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_R43X-icoEeSLVrU2ifxtpw" name="Write(Expressions_Sequence_Construction$initializationFlag$1)" structuralFeature="_R42txycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_R43X-ycoEeSLVrU2ifxtpw" name="Write(Expressions_Sequence_Construction$initializationFlag$1).object" incoming="_R43X5CcoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43X_CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43X_ScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R43X_icoEeSLVrU2ifxtpw" name="Write(Expressions_Sequence_Construction$initializationFlag$1).result" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43X_ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YACcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_R43YAScoEeSLVrU2ifxtpw" name="Write(Expressions_Sequence_Construction$initializationFlag$1).value" incoming="_R43X9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YAicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YAycoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R43YBCcoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Construction$initializationFlag$1)" structuralFeature="_R42txycoEeSLVrU2ifxtpw">
            <object xmi:id="_R43YBScoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Construction$initializationFlag$1).object" incoming="_R43X5ScoEeSLVrU2ifxtpw" type="_R42twScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YBicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YBycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_R43YCCcoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Construction$initializationFlag$1).result" outgoing="_R43X5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YCScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YCicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43YCycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_R43YDCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R43X5icoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YDScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YDicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R43YDycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R43X5ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YECcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YEScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43YEicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_R43YEycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R43X6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YFCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YFScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_R43YFicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R43YFycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_R43YGCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R43X5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YGScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YGicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R43YGycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R43X6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YHCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YHScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R43YHicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R43X6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YHycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YICcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R43YIScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R43X6ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R43YIicoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Sequence_Construction$initializationFlag$1))" incoming="_R43X6ScoEeSLVrU2ifxtpw _R43X6icoEeSLVrU2ifxtpw" outgoing="_R43X6ycoEeSLVrU2ifxtpw" decisionInputFlow="_R43X6icoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_R43YIycoEeSLVrU2ifxtpw" name="Expressions_Sequence_Construction$initialization$1" visibility="protected" method="_R43X4ScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R43YJCcoEeSLVrU2ifxtpw" name="getList" visibility="package" method="_R42xjCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43YJScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YJicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YJycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43YKCcoEeSLVrU2ifxtpw" name="test" visibility="package" method="_R42xtScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43YKScoEeSLVrU2ifxtpw" name="seq1" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YKicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YKycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YLCcoEeSLVrU2ifxtpw" name="seq2" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YLScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YLicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YLycoEeSLVrU2ifxtpw" name="seq3" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YMCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YMScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YMicoEeSLVrU2ifxtpw" name="seq4" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YMycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YNCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YNScoEeSLVrU2ifxtpw" name="seq5" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YNicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YNycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YOCcoEeSLVrU2ifxtpw" name="seq6" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YOScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YOicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YOycoEeSLVrU2ifxtpw" name="seq7" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YPCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YPScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YPicoEeSLVrU2ifxtpw" name="x" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YPycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YQCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YQScoEeSLVrU2ifxtpw" name="customers" visibility="package" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YQicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YQycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YRCcoEeSLVrU2ifxtpw" name="set1" visibility="package" type="_R43ZCicoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YRScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YRicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YRycoEeSLVrU2ifxtpw" name="set2" visibility="package" type="_R43ZCicoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YSCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YSScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43YSicoEeSLVrU2ifxtpw" name="list" visibility="package" type="_R439dycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YSycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YTCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43YTScoEeSLVrU2ifxtpw" name="Expressions_Sequence_Construction" visibility="package" method="_R43XpCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43YTicoEeSLVrU2ifxtpw" name="" visibility="package" type="_R42twScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YTycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YUCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43YUScoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_R43X3ycoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_R43YUicoEeSLVrU2ifxtpw" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_R43YUycoEeSLVrU2ifxtpw" name="Customer$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YVCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YVScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_R43YVicoEeSLVrU2ifxtpw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YVycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YWCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43YWScoEeSLVrU2ifxtpw" name="Customer$method$1" specification="_R43ZAicoEeSLVrU2ifxtpw" node="_R43YYycoEeSLVrU2ifxtpw _R43YZCcoEeSLVrU2ifxtpw _R43YZScoEeSLVrU2ifxtpw _R43YZicoEeSLVrU2ifxtpw" group="_R43YZicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_R43YWicoEeSLVrU2ifxtpw" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YWycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YXCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_R43YXScoEeSLVrU2ifxtpw" name="" type="_R43YUicoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YXicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YXycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YYCcoEeSLVrU2ifxtpw" target="_R43YZCcoEeSLVrU2ifxtpw" source="_R43YYycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YYScoEeSLVrU2ifxtpw" target="_R43YhCcoEeSLVrU2ifxtpw" source="_R43YZCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YYicoEeSLVrU2ifxtpw" target="_R43YZScoEeSLVrU2ifxtpw" source="_R43YmScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_R43YZicoEeSLVrU2ifxtpw" name="Body(Customer$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YZycoEeSLVrU2ifxtpw" target="_R43YmScoEeSLVrU2ifxtpw" source="_R43YlicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YaCcoEeSLVrU2ifxtpw" target="_R43YmycoEeSLVrU2ifxtpw" source="_R43YmScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R43YaScoEeSLVrU2ifxtpw" target="_R43YcicoEeSLVrU2ifxtpw" source="_R43YmicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YaicoEeSLVrU2ifxtpw" target="_R43YnycoEeSLVrU2ifxtpw" source="_R43YmScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YaycoEeSLVrU2ifxtpw" target="_R43YpicoEeSLVrU2ifxtpw" source="_R43YoicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YbCcoEeSLVrU2ifxtpw" target="_R43YsicoEeSLVrU2ifxtpw" source="_R43YqScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YbScoEeSLVrU2ifxtpw" target="_R43YuCcoEeSLVrU2ifxtpw" source="_R43YrScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R43YbicoEeSLVrU2ifxtpw" target="_R43YvCcoEeSLVrU2ifxtpw" source="_R43YuycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YbycoEeSLVrU2ifxtpw" target="_R43YvCcoEeSLVrU2ifxtpw" source="_R43YtScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R43YcCcoEeSLVrU2ifxtpw" target="_R43YmicoEeSLVrU2ifxtpw" source="_R43YvCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_R43YcScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43YcicoEeSLVrU2ifxtpw" name="Body" incoming="_R43YaScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43YcycoEeSLVrU2ifxtpw" name="ExpressionStatement@1b7047c2">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YdCcoEeSLVrU2ifxtpw" target="_R43YficoEeSLVrU2ifxtpw" source="_R43YeicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YdScoEeSLVrU2ifxtpw" target="_R43YhycoEeSLVrU2ifxtpw" source="_R43YhCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YdicoEeSLVrU2ifxtpw" target="_R43YiycoEeSLVrU2ifxtpw" source="_R43YgScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R43YdycoEeSLVrU2ifxtpw" target="_R43YeCcoEeSLVrU2ifxtpw" source="_R43YlCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43YeCcoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@68771fa0)" incoming="_R43YdycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_R43YeScoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_R43YeicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R43YdCcoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YeycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YfCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_R43YfScoEeSLVrU2ifxtpw" name="Clear(name)" structuralFeature="_R43YVicoEeSLVrU2ifxtpw">
                  <object xmi:id="_R43YficoEeSLVrU2ifxtpw" name="Clear(name).object" incoming="_R43YdCcoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YfycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YgCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_R43YgScoEeSLVrU2ifxtpw" name="Clear(name).result" outgoing="_R43YdicoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YgicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YgycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_R43YhCcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@68771fa0)" incoming="_R43YYScoEeSLVrU2ifxtpw" outgoing="_R43YdScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43YhScoEeSLVrU2ifxtpw" name="WriteAll(Customer::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YhicoEeSLVrU2ifxtpw" target="_R43YkScoEeSLVrU2ifxtpw" source="_R43YhycoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_R43YhycoEeSLVrU2ifxtpw" name="WriteAll(Customer::name).input(Customer::name)" incoming="_R43YdScoEeSLVrU2ifxtpw" outgoing="_R43YhicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YiCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YiScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_R43YiicoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_R43YVicoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_R43YiycoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_R43YdicoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YjCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YjScoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_R43YjicoEeSLVrU2ifxtpw" name="Write(name).result" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YjycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YkCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_R43YkScoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_R43YhicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YkicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YkycoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43YlCcoEeSLVrU2ifxtpw" name="RightHandSide@1ce6bccd" outgoing="_R43YdycoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_R43YlScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_R43YlicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R43YZycoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YlycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YmCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_R43YmScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R43YZycoEeSLVrU2ifxtpw" outgoing="_R43YYicoEeSLVrU2ifxtpw _R43YaCcoEeSLVrU2ifxtpw _R43YaicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R43YmicoEeSLVrU2ifxtpw" name="Call(Customer$initialization$1)" incoming="_R43YcCcoEeSLVrU2ifxtpw" outgoing="_R43YaScoEeSLVrU2ifxtpw" operation="_R43ZAScoEeSLVrU2ifxtpw">
              <target xmi:id="_R43YmycoEeSLVrU2ifxtpw" name="Call(Customer$initialization$1).target" incoming="_R43YaCcoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YnCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YnScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R43YnicoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1)" structuralFeature="_R43YUycoEeSLVrU2ifxtpw">
              <object xmi:id="_R43YnycoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1).object" incoming="_R43YaicoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YoCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YoScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_R43YoicoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1).result" outgoing="_R43YaycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YoycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YpCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43YpScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_R43YpicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R43YaycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YpycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YqCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R43YqScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R43YbCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YqycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43YrCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_R43YrScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R43YbScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YricoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YrycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_R43YsCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_R43YsScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_R43YsicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R43YbCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YsycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YtCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_R43YtScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R43YbycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YticoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YtycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_R43YuCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R43YbScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YuScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YuicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_R43YuycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R43YbicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_R43YvCcoEeSLVrU2ifxtpw" name="Decision(Test(Customer$initializationFlag$1))" incoming="_R43YbicoEeSLVrU2ifxtpw _R43YbycoEeSLVrU2ifxtpw" outgoing="_R43YcCcoEeSLVrU2ifxtpw" decisionInputFlow="_R43YbycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43YYycoEeSLVrU2ifxtpw" name="Input(name)" outgoing="_R43YYCcoEeSLVrU2ifxtpw" parameter="_R43YWicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_R43YZCcoEeSLVrU2ifxtpw" name="Fork(name)" incoming="_R43YYCcoEeSLVrU2ifxtpw" outgoing="_R43YYScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43YZScoEeSLVrU2ifxtpw" name="Return" incoming="_R43YYicoEeSLVrU2ifxtpw" parameter="_R43YXScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43YvScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_R43ZCScoEeSLVrU2ifxtpw" node="_R43YvicoEeSLVrU2ifxtpw" group="_R43YvicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_R43YvicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43YvycoEeSLVrU2ifxtpw" name="Customer$initialization$1" specification="_R43ZAScoEeSLVrU2ifxtpw" node="_R43YwCcoEeSLVrU2ifxtpw" group="_R43YwCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_R43YwCcoEeSLVrU2ifxtpw" name="Body(Customer$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YwScoEeSLVrU2ifxtpw" target="_R43YzycoEeSLVrU2ifxtpw" source="_R43YzCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YwicoEeSLVrU2ifxtpw" target="_R43Y2ScoEeSLVrU2ifxtpw" source="_R43YzycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YwycoEeSLVrU2ifxtpw" target="_R43Y4ycoEeSLVrU2ifxtpw" source="_R43YzycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YxCcoEeSLVrU2ifxtpw" target="_R43Y6icoEeSLVrU2ifxtpw" source="_R43Y5icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YxScoEeSLVrU2ifxtpw" target="_R43Y9icoEeSLVrU2ifxtpw" source="_R43Y7ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YxicoEeSLVrU2ifxtpw" target="_R43Y_CcoEeSLVrU2ifxtpw" source="_R43Y8ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R43YxycoEeSLVrU2ifxtpw" target="_R43ZACcoEeSLVrU2ifxtpw" source="_R43Y_ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43YyCcoEeSLVrU2ifxtpw" target="_R43ZACcoEeSLVrU2ifxtpw" source="_R43Y-ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R43YyScoEeSLVrU2ifxtpw" target="_R43Y0CcoEeSLVrU2ifxtpw" source="_R43ZACcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_R43YyicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_R43YyycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_R43YzCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R43YwScoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43YzScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43YzicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_R43YzycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R43YwScoEeSLVrU2ifxtpw" outgoing="_R43YwicoEeSLVrU2ifxtpw _R43YwycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43Y0CcoEeSLVrU2ifxtpw" name="Initialization" incoming="_R43YyScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43Y0ScoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R43Y0icoEeSLVrU2ifxtpw" target="_R43Y3ycoEeSLVrU2ifxtpw" source="_R43Y1CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43Y0ycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_R43Y1CcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_R43Y0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y1ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y1icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_R43Y1ycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_R43Y2CcoEeSLVrU2ifxtpw" name="Write(Customer$initializationFlag$1)" structuralFeature="_R43YUycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_R43Y2ScoEeSLVrU2ifxtpw" name="Write(Customer$initializationFlag$1).object" incoming="_R43YwicoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y2icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y2ycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_R43Y3CcoEeSLVrU2ifxtpw" name="Write(Customer$initializationFlag$1).result" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y3ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y3icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_R43Y3ycoEeSLVrU2ifxtpw" name="Write(Customer$initializationFlag$1).value" incoming="_R43Y0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y4CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y4ScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R43Y4icoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1)" structuralFeature="_R43YUycoEeSLVrU2ifxtpw">
              <object xmi:id="_R43Y4ycoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1).object" incoming="_R43YwycoEeSLVrU2ifxtpw" type="_R43YUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y5CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y5ScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_R43Y5icoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1).result" outgoing="_R43YxCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y5ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y6CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43Y6ScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_R43Y6icoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R43YxCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y6ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y7CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R43Y7ScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R43YxScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y7icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y7ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43Y8CcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_R43Y8ScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R43YxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y8icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y8ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_R43Y9CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_R43Y9ScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_R43Y9icoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R43YxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y9ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y-CcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_R43Y-ScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R43YyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y-icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y-ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_R43Y_CcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R43YxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43Y_ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43Y_icoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_R43Y_ycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R43YxycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_R43ZACcoEeSLVrU2ifxtpw" name="Decision(Test(Customer$initializationFlag$1))" incoming="_R43YxycoEeSLVrU2ifxtpw _R43YyCcoEeSLVrU2ifxtpw" outgoing="_R43YyScoEeSLVrU2ifxtpw" decisionInputFlow="_R43YyCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_R43ZAScoEeSLVrU2ifxtpw" name="Customer$initialization$1" visibility="protected" method="_R43YvycoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_R43ZAicoEeSLVrU2ifxtpw" name="Customer" visibility="package" method="_R43YWScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_R43ZAycoEeSLVrU2ifxtpw" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43ZBCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43ZBScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_R43ZBicoEeSLVrU2ifxtpw" name="" visibility="package" type="_R43YUicoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43ZBycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43ZCCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_R43ZCScoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_R43YvScoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R43ZCicoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Set__PrimitiveTypes$Integer__" isAbstract="true">
      <ownedComment xmi:id="_R43ZCycoEeSLVrU2ifxtpw" annotatedElement="_R43ZCicoEeSLVrU2ifxtpw">
        <body>A concrete unordered, unique collection. Does not support duplicate entries.
            </body>
      </ownedComment>
      <generalization xmi:id="_R43ZDCcoEeSLVrU2ifxtpw" general="_R4378ycoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R43ZDScoEeSLVrU2ifxtpw" name="Set" isAbstract="true">
        <ownedComment xmi:id="_R43ZDicoEeSLVrU2ifxtpw" annotatedElement="_R43ZDScoEeSLVrU2ifxtpw">
          <body>Construct a set and add all elements in the given sequence. post:
                result.toSequence()->asSet() = seq->asSet() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43ZDycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false" effect="create">
          <ownedComment xmi:id="_R43ZECcoEeSLVrU2ifxtpw" annotatedElement="_R43ZDycoEeSLVrU2ifxtpw">
            <body>A sequence of elements of type &lt;T> to be added to the set</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43ZEScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43ZEicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43ZEycoEeSLVrU2ifxtpw" type="_R4378CcoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R43ZFCcoEeSLVrU2ifxtpw" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_R43ZFScoEeSLVrU2ifxtpw" annotatedElement="_R43ZFCcoEeSLVrU2ifxtpw">
          <body>Destroy this set. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_R43ZFicoEeSLVrU2ifxtpw" name="add" isAbstract="true" redefinedOperation="_R4379ScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R43ZFycoEeSLVrU2ifxtpw" annotatedElement="_R43ZFicoEeSLVrU2ifxtpw">
          <body>Insert the given element into this set. Return true if a new element is actually
                inserted. post: self.toSequence()->asSet()
                = self@pre.toSequence()->asSet()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43ZGCcoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R43ZGScoEeSLVrU2ifxtpw" annotatedElement="_R43ZGCcoEeSLVrU2ifxtpw">
            <body>Element to be appended to this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43ZGicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43ZGycoEeSLVrU2ifxtpw" name="addAll" isAbstract="true" precondition="_R43ZHScoEeSLVrU2ifxtpw" redefinedOperation="_R437-ycoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R43ZHCcoEeSLVrU2ifxtpw" annotatedElement="_R43ZGycoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this set. Returns true if this
                collection increased in size. post: self.toSequence()->asSet() =
                self@pre.toSequence()->asSet()->union(seq->asSet()) </body>
        </ownedComment>
        <ownedRule xmi:id="_R43ZHScoEeSLVrU2ifxtpw" constrainedElement="_R43ZGycoEeSLVrU2ifxtpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4374CcoEeSLVrU2ifxtpw">
            <language>OCL</language>
            <body>self.toSequence()->size()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_R4374ScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4374icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4374ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4375CcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R4375ScoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true" redefinedOperation="_R438BCcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R4375icoEeSLVrU2ifxtpw" annotatedElement="_R4375ScoEeSLVrU2ifxtpw">
          <body>The number of elements in this set that match a specified element. post: result
                = if self@pre.includes(element) then 1 else 0 endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4375ycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R4376CcoEeSLVrU2ifxtpw" annotatedElement="_R4375ycoEeSLVrU2ifxtpw">
            <body>The element to be counted</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4376ScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R4376icoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_R438CicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R4376ycoEeSLVrU2ifxtpw" annotatedElement="_R4376icoEeSLVrU2ifxtpw">
          <body>Return true if the content of this set is equal to the given sequence considered
                as a set. post: result = (self@pre.toSequence()->asSet() =
                seq->asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4377CcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4377ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4377icoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4377ycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_R4378CcoEeSLVrU2ifxtpw" name="Set&lt;T>">
        <templateBinding xmi:id="_R4378ScoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_R4378icoEeSLVrU2ifxtpw">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R4378ycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Collection__PrimitiveTypes$Integer__" isAbstract="true">
      <ownedComment xmi:id="_R4379CcoEeSLVrU2ifxtpw" annotatedElement="_R4378ycoEeSLVrU2ifxtpw">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_R4379ScoEeSLVrU2ifxtpw" name="add" isAbstract="true">
        <ownedComment xmi:id="_R4379icoEeSLVrU2ifxtpw" annotatedElement="_R4379ScoEeSLVrU2ifxtpw">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4379ycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R437-CcoEeSLVrU2ifxtpw" annotatedElement="_R4379ycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R437-ScoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R437-icoEeSLVrU2ifxtpw" annotatedElement="_R437-ScoEeSLVrU2ifxtpw">
            <body>Element to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R437-ycoEeSLVrU2ifxtpw" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_R437_CcoEeSLVrU2ifxtpw" annotatedElement="_R437-ycoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R437_ScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R437_icoEeSLVrU2ifxtpw" annotatedElement="_R437_ScoEeSLVrU2ifxtpw">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R437_ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438ACcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438AScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438AicoEeSLVrU2ifxtpw" name="clear" isAbstract="true">
        <ownedComment xmi:id="_R438AycoEeSLVrU2ifxtpw" annotatedElement="_R438AicoEeSLVrU2ifxtpw">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_R438BCcoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438BScoEeSLVrU2ifxtpw" annotatedElement="_R438BCcoEeSLVrU2ifxtpw">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438BicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438BycoEeSLVrU2ifxtpw" annotatedElement="_R438BicoEeSLVrU2ifxtpw">
            <body>Element to be counted.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438CCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R438CScoEeSLVrU2ifxtpw" annotatedElement="_R438CCcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438CicoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438CycoEeSLVrU2ifxtpw" annotatedElement="_R438CicoEeSLVrU2ifxtpw">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438DCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R438DScoEeSLVrU2ifxtpw" annotatedElement="_R438DCcoEeSLVrU2ifxtpw">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438DicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438DycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438ECcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438EScoEeSLVrU2ifxtpw" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438EicoEeSLVrU2ifxtpw" annotatedElement="_R438EScoEeSLVrU2ifxtpw">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438EycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438FCcoEeSLVrU2ifxtpw" annotatedElement="_R438EycoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438FScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R438FicoEeSLVrU2ifxtpw" annotatedElement="_R438FScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438FycoEeSLVrU2ifxtpw" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438GCcoEeSLVrU2ifxtpw" annotatedElement="_R438FycoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438GScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R438GicoEeSLVrU2ifxtpw" annotatedElement="_R438GScoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438GycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438HCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438HScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438HicoEeSLVrU2ifxtpw" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438HycoEeSLVrU2ifxtpw" annotatedElement="_R438HicoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438ICcoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438IScoEeSLVrU2ifxtpw" annotatedElement="_R438ICcoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438IicoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R438IycoEeSLVrU2ifxtpw" annotatedElement="_R438IicoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438JCcoEeSLVrU2ifxtpw" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438JScoEeSLVrU2ifxtpw" annotatedElement="_R438JCcoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438JicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R438JycoEeSLVrU2ifxtpw" annotatedElement="_R438JicoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438KCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438KScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438KicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438KycoEeSLVrU2ifxtpw" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438LCcoEeSLVrU2ifxtpw" annotatedElement="_R438KycoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438LScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R438LicoEeSLVrU2ifxtpw" annotatedElement="_R438LScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438LycoEeSLVrU2ifxtpw" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438MCcoEeSLVrU2ifxtpw" annotatedElement="_R438LycoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438MScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438MicoEeSLVrU2ifxtpw" name="remove" isAbstract="true">
        <ownedComment xmi:id="_R438MycoEeSLVrU2ifxtpw" annotatedElement="_R438MicoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438NCcoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438NScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438NicoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_R438NycoEeSLVrU2ifxtpw" annotatedElement="_R438NicoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438OCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R438OScoEeSLVrU2ifxtpw" annotatedElement="_R438OCcoEeSLVrU2ifxtpw">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438OicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438OycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438PCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438PScoEeSLVrU2ifxtpw" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_R438PicoEeSLVrU2ifxtpw" annotatedElement="_R438PScoEeSLVrU2ifxtpw">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438PycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438QCcoEeSLVrU2ifxtpw" annotatedElement="_R438PycoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438QScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438QicoEeSLVrU2ifxtpw" name="replace" isAbstract="true">
        <ownedComment xmi:id="_R438QycoEeSLVrU2ifxtpw" annotatedElement="_R438QicoEeSLVrU2ifxtpw">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438RCcoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438RScoEeSLVrU2ifxtpw" annotatedElement="_R438RCcoEeSLVrU2ifxtpw">
            <body>Element to be replaced.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438RicoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_R438RycoEeSLVrU2ifxtpw" annotatedElement="_R438RicoEeSLVrU2ifxtpw">
            <body>Element to replace original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438SCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438SScoEeSLVrU2ifxtpw" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_R438SicoEeSLVrU2ifxtpw" annotatedElement="_R438SScoEeSLVrU2ifxtpw">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438SycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438TCcoEeSLVrU2ifxtpw" annotatedElement="_R438SycoEeSLVrU2ifxtpw">
            <body>Element to be replaced. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438TScoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_R438TicoEeSLVrU2ifxtpw" annotatedElement="_R438TScoEeSLVrU2ifxtpw">
            <body>Element to replace the original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438TycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438UCcoEeSLVrU2ifxtpw" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_R438UScoEeSLVrU2ifxtpw" annotatedElement="_R438UCcoEeSLVrU2ifxtpw">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438UicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R438UycoEeSLVrU2ifxtpw" annotatedElement="_R438UicoEeSLVrU2ifxtpw">
            <body>Elements to retain. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438VCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438VScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438VicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438VycoEeSLVrU2ifxtpw" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438WCcoEeSLVrU2ifxtpw" annotatedElement="_R438VycoEeSLVrU2ifxtpw">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438WScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R438WicoEeSLVrU2ifxtpw" annotatedElement="_R438WScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438WycoEeSLVrU2ifxtpw" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438XCcoEeSLVrU2ifxtpw" annotatedElement="_R438WycoEeSLVrU2ifxtpw">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438XScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_R438XicoEeSLVrU2ifxtpw" annotatedElement="_R438XScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438XycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438YCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R438YScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R438YicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R438YycoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R438ZCcoEeSLVrU2ifxtpw" client="_R4378ycoEeSLVrU2ifxtpw" supplier="_R438YScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R438ZScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R438ZicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R438ZycoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R438aCcoEeSLVrU2ifxtpw" client="_R43ZCicoEeSLVrU2ifxtpw" supplier="_R438ZScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R438aScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String__" isAbstract="true">
      <ownedComment xmi:id="_R438aicoEeSLVrU2ifxtpw" annotatedElement="_R438aScoEeSLVrU2ifxtpw">
        <body>Concrete ordered, nonunique collection. Supports duplicate entries. Ordered by
              position in list. </body>
      </ownedComment>
      <generalization xmi:id="_R438aycoEeSLVrU2ifxtpw" general="_R4383ScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R438bCcoEeSLVrU2ifxtpw" name="List" isAbstract="true">
        <ownedComment xmi:id="_R438bScoEeSLVrU2ifxtpw" annotatedElement="_R438bCcoEeSLVrU2ifxtpw">
          <body>Construct a list and add all elements in the given sequence post:
                result.toSequence() = seq </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438bicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438bycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438cCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438cScoEeSLVrU2ifxtpw" type="_R4382icoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R438cicoEeSLVrU2ifxtpw" name="add" isAbstract="true" redefinedOperation="_R4386ScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R438cycoEeSLVrU2ifxtpw" annotatedElement="_R438cicoEeSLVrU2ifxtpw">
          <body>Append the given element into this list at the end. Always returns true. post:
                self.toSequence() = self@pre.toSequence()->append(element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438dCcoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438dScoEeSLVrU2ifxtpw" annotatedElement="_R438dCcoEeSLVrU2ifxtpw">
            <body>Element to be appended to this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438dicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438dycoEeSLVrU2ifxtpw" name="addAll" isAbstract="true" redefinedOperation="_R4387icoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R438eCcoEeSLVrU2ifxtpw" annotatedElement="_R438dycoEeSLVrU2ifxtpw">
          <body>Append all elements in the given sequence onto the end of this list. Return true
                if the given collection is not empty. post: self.toSequence() =
                self@pre.toSequence()->union(seq) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438eScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438eicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438eycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438fCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438fScoEeSLVrU2ifxtpw" name="addAllAt" isAbstract="true">
        <ownedComment xmi:id="_R438ficoEeSLVrU2ifxtpw" annotatedElement="_R438fScoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this list at the given position
                index. Return true if the given collection is not empty. pre: index >= 1 and
                index &lt;= self.size()+1 post:  result = self.size() > self@pre.size()
                and self.toSequence() = Sequence{1..seq->size()}->iterate(i; s =
                self@pre.toSequence() | s->insertAt(index+i-1, sequence->at(i))
                e->at(i)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438fycoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438gCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438gScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438gicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438gycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438hCcoEeSLVrU2ifxtpw" name="addAt" isAbstract="true">
        <ownedComment xmi:id="_R438hScoEeSLVrU2ifxtpw" annotatedElement="_R438hCcoEeSLVrU2ifxtpw">
          <body>Insert an element into this list at the given position index. Always return
                true. pre: index > 1 and index &lt;= self.size()+1 post: result = true
                and         self.toSequence() =
                self@pre.toSequence()->insertAt(index,element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438hicoEeSLVrU2ifxtpw" name="index" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438hycoEeSLVrU2ifxtpw" name="element" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438iCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438iScoEeSLVrU2ifxtpw" name="at" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438iicoEeSLVrU2ifxtpw" annotatedElement="_R438iScoEeSLVrU2ifxtpw">
          <body>Return the element at the given position index or nothing if there is no element
                at the given position. pre: index > 0 and index &lt;= self.size()
                post: result = self@pre.toSequence()->at(index) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438iycoEeSLVrU2ifxtpw" name="index" effect="create">
          <ownedComment xmi:id="_R438jCcoEeSLVrU2ifxtpw" annotatedElement="_R438iycoEeSLVrU2ifxtpw">
            <body>The position of the element to be returned</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438jScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438jicoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438jycoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_R4389CcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R438kCcoEeSLVrU2ifxtpw" annotatedElement="_R438jycoEeSLVrU2ifxtpw">
          <body>Return true if the content of this list is equal to the given sequence. post:
                result = (self@pre.toSequence() = seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438kScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438kicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438kycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438lCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438lScoEeSLVrU2ifxtpw" name="first" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438licoEeSLVrU2ifxtpw" annotatedElement="_R438lScoEeSLVrU2ifxtpw">
          <body>Returns the first element in this list, if one exists pre: self.notEmpty() post:
                result = self@pre.toSequence()->first() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438lycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438mCcoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438mScoEeSLVrU2ifxtpw" name="indexOf" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438micoEeSLVrU2ifxtpw" annotatedElement="_R438mScoEeSLVrU2ifxtpw">
          <body>Return the position of the first occurrence of the given element in this list or
                nothing if the element is not included in this collection. pre:
                self.includes(element) post: result = self@pre.toSequence() ->
                indexOf(element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438mycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438nCcoEeSLVrU2ifxtpw" annotatedElement="_R438mycoEeSLVrU2ifxtpw">
            <body>Element for which to retrieve the position post: result
                  = self.toSequence()->indexOf(element)</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438nScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438nicoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438nycoEeSLVrU2ifxtpw" name="last" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R438oCcoEeSLVrU2ifxtpw" annotatedElement="_R438nycoEeSLVrU2ifxtpw">
          <body>Returns the last element  in this list, if one exists pre: self.notEmpty() post:
                result = self@pre.toSequence()->first() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438oScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438oicoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438oycoEeSLVrU2ifxtpw" name="remove" isAbstract="true" redefinedOperation="_R439PCcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R438pCcoEeSLVrU2ifxtpw" annotatedElement="_R438oycoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of the given element from this list and return the count
                of elements removed. post: self.toSequence() =
                self@pre.toSequence()->excluding(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438pScoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438picoEeSLVrU2ifxtpw" annotatedElement="_R438pScoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438pycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438qCcoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true" redefinedOperation="_R439QCcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R438qScoEeSLVrU2ifxtpw" annotatedElement="_R438qCcoEeSLVrU2ifxtpw">
          <body>Remove all elements in the given sequence from this list. Return true if the
                size of this list changes. post: self.toSequence() = seq->iterate(element; s
                = self@pre.toSequence() | s->excluding(element)) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438qicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438qycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438rCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438rScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438ricoEeSLVrU2ifxtpw" name="removeOne" isAbstract="true" redefinedOperation="_R439RycoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R438rycoEeSLVrU2ifxtpw" annotatedElement="_R438ricoEeSLVrU2ifxtpw">
          <body>Remove first occurrence of the given element from this list and return true if
                an occurrence of element was removed. post: self.toSequence() = let preSeq =
                self@pre.toSequence() in if result then let index = self@pre.indexOf(element) in
                        self.toSequence() = preSeq->subSequence(1, index-1)->
                union(preSeq->subSequence(index+1, self@pre.size())) else preSeq endif
                (index+1, self@pre.size())) else preSeq endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438sCcoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438sScoEeSLVrU2ifxtpw" annotatedElement="_R438sCcoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438sicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438sycoEeSLVrU2ifxtpw" name="removeAt" isAbstract="true">
        <ownedComment xmi:id="_R438tCcoEeSLVrU2ifxtpw" annotatedElement="_R438sycoEeSLVrU2ifxtpw">
          <body>Remove the element at the given position index and shift all trailing elements
                left by one position. Return the removed element, or nothing if the index is out of
                bounds. pre: index > 0 and index &lt;= self.size() post: result =
                self@pre.at(index) and let preSeq = self@pre.toSequence() in        
                self.toSequence() = preSeq->subSequence(1,
                index-1)->union(preSeq->subSequence(index+1, self@pre.size()))
                re.size())) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438tScoEeSLVrU2ifxtpw" name="index" effect="create">
          <ownedComment xmi:id="_R438ticoEeSLVrU2ifxtpw" annotatedElement="_R438tScoEeSLVrU2ifxtpw">
            <body>The position of the element to remove</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438tycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438uCcoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438uScoEeSLVrU2ifxtpw" name="replace" isAbstract="true" redefinedOperation="_R439TCcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R438uicoEeSLVrU2ifxtpw" annotatedElement="_R438uScoEeSLVrU2ifxtpw">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: Sequence{1..self.size()}->forAll(i |
                self.at(i) = if self@pre.at(i) = element then newElement else self@pre.at(i) endif)
                else self@pre.at(i) endif) i) endif) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438uycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438vCcoEeSLVrU2ifxtpw" annotatedElement="_R438uycoEeSLVrU2ifxtpw">
            <body>Element to be replaced</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438vScoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_R438vicoEeSLVrU2ifxtpw" annotatedElement="_R438vScoEeSLVrU2ifxtpw">
            <body>Element to replace element</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438vycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438wCcoEeSLVrU2ifxtpw" name="replaceOne" isAbstract="true" redefinedOperation="_R439UycoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R438wScoEeSLVrU2ifxtpw" annotatedElement="_R438wCcoEeSLVrU2ifxtpw">
          <body>Replace one occurrence of the given element with
                newElement and return true if an element was replaced. post:
                Sequence{1..self.size()}->forAll(i | self.at(i) = if result and i =
                self@pre.indexOf(element) then newElement else self@pre.at(i) endif) else
                self@pre.at(i) endif) ) endif) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438wicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438wycoEeSLVrU2ifxtpw" annotatedElement="_R438wicoEeSLVrU2ifxtpw">
            <body>element to replace (first occurrence)</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438xCcoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_R438xScoEeSLVrU2ifxtpw" annotatedElement="_R438xCcoEeSLVrU2ifxtpw">
            <body>new element to replace first occurrence of element</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438xicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438xycoEeSLVrU2ifxtpw" name="replaceAt" isAbstract="true">
        <ownedComment xmi:id="_R438yCcoEeSLVrU2ifxtpw" annotatedElement="_R438xycoEeSLVrU2ifxtpw">
          <body>Replace the element at the given position index with the given new element.
                Return the replaced element, or nothing if the index is out of bounds pre: index
                > 0 and index &lt;= self.size() post: result = self@pre.at(index) and let
                preSeq = self@pre.toSequence() in         self.toSequence() =
                preSeq->subSequence(1,
                index-1)->append(newElement)->union(preSeq->subSequence(index+1,
                self@pre.size())) re.size())) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R438yScoEeSLVrU2ifxtpw" name="index" effect="create">
          <ownedComment xmi:id="_R438yicoEeSLVrU2ifxtpw" annotatedElement="_R438yScoEeSLVrU2ifxtpw">
            <body>The position of the element to be replaced by element</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438yycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R438zCcoEeSLVrU2ifxtpw" annotatedElement="_R438yycoEeSLVrU2ifxtpw">
            <body>Element to replace the element at position index</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438zScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R438zicoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R438zycoEeSLVrU2ifxtpw" name="retainAll" isAbstract="true" redefinedOperation="_R439WicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R4380CcoEeSLVrU2ifxtpw" annotatedElement="_R438zycoEeSLVrU2ifxtpw">
          <body>Remove all instances of all elements in this list that are NOT in the given
                collection. Return true if the size of this collection changes.
                post: self.toSequence() = (self@pre.toSequence()->asSet() -
                seq->asSet())->iterate(element; a = self@pre.toSequence() |
                seq->excluding(element)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4380ScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4380icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4380ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4381CcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R4381ScoEeSLVrU2ifxtpw" name="subList" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R4381icoEeSLVrU2ifxtpw" annotatedElement="_R4381ScoEeSLVrU2ifxtpw">
          <body>Return a new list containing all elements of this list from the lower position
                index up to and including the upper position index. post: if lower &lt; 1 or
                upper > self.size() then result.toSequence()->empty() else
                result.toSequence() = self.toSequence()->subSequence(lower,upper) endif
                e()->subSequence(lower,upper) endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4381ycoEeSLVrU2ifxtpw" name="fromIndex" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4382CcoEeSLVrU2ifxtpw" name="toIndex" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4382ScoEeSLVrU2ifxtpw" type="_R4382icoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_R4382icoEeSLVrU2ifxtpw" name="List&lt;T>">
        <templateBinding xmi:id="_R4382ycoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_R4383CcoEeSLVrU2ifxtpw">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R4383ScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Bag__PrimitiveTypes$String__" isAbstract="true">
      <ownedComment xmi:id="_R4383icoEeSLVrU2ifxtpw" annotatedElement="_R4383ScoEeSLVrU2ifxtpw">
        <body>Concrete unordered, non-unique collection. Supports duplicate entries. </body>
      </ownedComment>
      <generalization xmi:id="_R4383ycoEeSLVrU2ifxtpw" general="_R438_ScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R4384CcoEeSLVrU2ifxtpw" name="Bag" isAbstract="true">
        <ownedComment xmi:id="_R4384ScoEeSLVrU2ifxtpw" annotatedElement="_R4384CcoEeSLVrU2ifxtpw">
          <body>Construct a bag and add all elements in the given sequence. post:
                result.toSequence()->asBag() = seq->asBag() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4384icoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R4384ycoEeSLVrU2ifxtpw" annotatedElement="_R4384icoEeSLVrU2ifxtpw">
            <body>Elements to be added to the new bag. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4385CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4385ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4385icoEeSLVrU2ifxtpw" type="_R438-icoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R4385ycoEeSLVrU2ifxtpw" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_R4386CcoEeSLVrU2ifxtpw" annotatedElement="_R4385ycoEeSLVrU2ifxtpw">
          <body>Destroy this bag. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_R4386ScoEeSLVrU2ifxtpw" name="add" isAbstract="true" redefinedOperation="_R438_ycoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R4386icoEeSLVrU2ifxtpw" annotatedElement="_R4386ScoEeSLVrU2ifxtpw">
          <body>Insert the given element into this bag. Always returns true. post:
                self.toSequence()->asBag()
                = self@pre.toSequence()->asBag()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4386ycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R4387CcoEeSLVrU2ifxtpw" annotatedElement="_R4386ycoEeSLVrU2ifxtpw">
            <body>Element to be appended to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4387ScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R4387icoEeSLVrU2ifxtpw" name="addAll" isAbstract="true" redefinedOperation="_R439BScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R4387ycoEeSLVrU2ifxtpw" annotatedElement="_R4387icoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this bag. Return true if the
                given sequence is not empty. post: self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->union(seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4388CcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4388ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4388icoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4388ycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R4389CcoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_R439FCcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R4389ScoEeSLVrU2ifxtpw" annotatedElement="_R4389CcoEeSLVrU2ifxtpw">
          <body>Return true if the content of this bag is equal to the given sequence considered
                as a bag. post: result = (self@pre.toSequence()->asBag() =
                seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4389icoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4389ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R438-CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R438-ScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_R438-icoEeSLVrU2ifxtpw" name="Bag&lt;T>">
        <templateBinding xmi:id="_R438-ycoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_R438_CcoEeSLVrU2ifxtpw">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R438_ScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Collection__PrimitiveTypes$String__" isAbstract="true">
      <ownedComment xmi:id="_R438_icoEeSLVrU2ifxtpw" annotatedElement="_R438_ScoEeSLVrU2ifxtpw">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_R438_ycoEeSLVrU2ifxtpw" name="add" isAbstract="true">
        <ownedComment xmi:id="_R439ACcoEeSLVrU2ifxtpw" annotatedElement="_R438_ycoEeSLVrU2ifxtpw">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439AScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R439AicoEeSLVrU2ifxtpw" annotatedElement="_R439AScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439AycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R439BCcoEeSLVrU2ifxtpw" annotatedElement="_R439AycoEeSLVrU2ifxtpw">
            <body>Element to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439BScoEeSLVrU2ifxtpw" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_R439BicoEeSLVrU2ifxtpw" annotatedElement="_R439BScoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439BycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R439CCcoEeSLVrU2ifxtpw" annotatedElement="_R439BycoEeSLVrU2ifxtpw">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439CScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439CicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439CycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439DCcoEeSLVrU2ifxtpw" name="clear" isAbstract="true">
        <ownedComment xmi:id="_R439DScoEeSLVrU2ifxtpw" annotatedElement="_R439DCcoEeSLVrU2ifxtpw">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_R439DicoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439DycoEeSLVrU2ifxtpw" annotatedElement="_R439DicoEeSLVrU2ifxtpw">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439ECcoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R439EScoEeSLVrU2ifxtpw" annotatedElement="_R439ECcoEeSLVrU2ifxtpw">
            <body>Element to be counted.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439EicoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R439EycoEeSLVrU2ifxtpw" annotatedElement="_R439EicoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439FCcoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439FScoEeSLVrU2ifxtpw" annotatedElement="_R439FCcoEeSLVrU2ifxtpw">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439FicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R439FycoEeSLVrU2ifxtpw" annotatedElement="_R439FicoEeSLVrU2ifxtpw">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439GCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439GScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439GicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439GycoEeSLVrU2ifxtpw" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439HCcoEeSLVrU2ifxtpw" annotatedElement="_R439GycoEeSLVrU2ifxtpw">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439HScoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R439HicoEeSLVrU2ifxtpw" annotatedElement="_R439HScoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439HycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R439ICcoEeSLVrU2ifxtpw" annotatedElement="_R439HycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439IScoEeSLVrU2ifxtpw" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439IicoEeSLVrU2ifxtpw" annotatedElement="_R439IScoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439IycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R439JCcoEeSLVrU2ifxtpw" annotatedElement="_R439IycoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439JScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439JicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439JycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439KCcoEeSLVrU2ifxtpw" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439KScoEeSLVrU2ifxtpw" annotatedElement="_R439KCcoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439KicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R439KycoEeSLVrU2ifxtpw" annotatedElement="_R439KicoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439LCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R439LScoEeSLVrU2ifxtpw" annotatedElement="_R439LCcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439LicoEeSLVrU2ifxtpw" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439LycoEeSLVrU2ifxtpw" annotatedElement="_R439LicoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439MCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R439MScoEeSLVrU2ifxtpw" annotatedElement="_R439MCcoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439MicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439MycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439NCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439NScoEeSLVrU2ifxtpw" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439NicoEeSLVrU2ifxtpw" annotatedElement="_R439NScoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439NycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R439OCcoEeSLVrU2ifxtpw" annotatedElement="_R439NycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439OScoEeSLVrU2ifxtpw" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439OicoEeSLVrU2ifxtpw" annotatedElement="_R439OScoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439OycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439PCcoEeSLVrU2ifxtpw" name="remove" isAbstract="true">
        <ownedComment xmi:id="_R439PScoEeSLVrU2ifxtpw" annotatedElement="_R439PCcoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439PicoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439PycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439QCcoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_R439QScoEeSLVrU2ifxtpw" annotatedElement="_R439QCcoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439QicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R439QycoEeSLVrU2ifxtpw" annotatedElement="_R439QicoEeSLVrU2ifxtpw">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439RCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439RScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439RicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439RycoEeSLVrU2ifxtpw" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_R439SCcoEeSLVrU2ifxtpw" annotatedElement="_R439RycoEeSLVrU2ifxtpw">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439SScoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R439SicoEeSLVrU2ifxtpw" annotatedElement="_R439SScoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439SycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439TCcoEeSLVrU2ifxtpw" name="replace" isAbstract="true">
        <ownedComment xmi:id="_R439TScoEeSLVrU2ifxtpw" annotatedElement="_R439TCcoEeSLVrU2ifxtpw">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439TicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R439TycoEeSLVrU2ifxtpw" annotatedElement="_R439TicoEeSLVrU2ifxtpw">
            <body>Element to be replaced.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439UCcoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_R439UScoEeSLVrU2ifxtpw" annotatedElement="_R439UCcoEeSLVrU2ifxtpw">
            <body>Element to replace original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439UicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439UycoEeSLVrU2ifxtpw" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_R439VCcoEeSLVrU2ifxtpw" annotatedElement="_R439UycoEeSLVrU2ifxtpw">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439VScoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_R439VicoEeSLVrU2ifxtpw" annotatedElement="_R439VScoEeSLVrU2ifxtpw">
            <body>Element to be replaced. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439VycoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_R439WCcoEeSLVrU2ifxtpw" annotatedElement="_R439VycoEeSLVrU2ifxtpw">
            <body>Element to replace the original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439WScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439WicoEeSLVrU2ifxtpw" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_R439WycoEeSLVrU2ifxtpw" annotatedElement="_R439WicoEeSLVrU2ifxtpw">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439XCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R439XScoEeSLVrU2ifxtpw" annotatedElement="_R439XCcoEeSLVrU2ifxtpw">
            <body>Elements to retain. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439XicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439XycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439YCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439YScoEeSLVrU2ifxtpw" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439YicoEeSLVrU2ifxtpw" annotatedElement="_R439YScoEeSLVrU2ifxtpw">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439YycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R439ZCcoEeSLVrU2ifxtpw" annotatedElement="_R439YycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439ZScoEeSLVrU2ifxtpw" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439ZicoEeSLVrU2ifxtpw" annotatedElement="_R439ZScoEeSLVrU2ifxtpw">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439ZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_R439aCcoEeSLVrU2ifxtpw" annotatedElement="_R439ZycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439aScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439aicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R439aycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R439bCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R439bScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R439bicoEeSLVrU2ifxtpw" client="_R438_ScoEeSLVrU2ifxtpw" supplier="_R439aycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R439bycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R439cCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R439cScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R439cicoEeSLVrU2ifxtpw" client="_R4383ScoEeSLVrU2ifxtpw" supplier="_R439bycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R439cycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R439dCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R439dScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R439dicoEeSLVrU2ifxtpw" client="_R438aScoEeSLVrU2ifxtpw" supplier="_R439cycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R439dycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$List__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____" isAbstract="true">
      <ownedComment xmi:id="_R439eCcoEeSLVrU2ifxtpw" annotatedElement="_R439dycoEeSLVrU2ifxtpw">
        <body>Concrete ordered, nonunique collection. Supports duplicate entries. Ordered by
              position in list. </body>
      </ownedComment>
      <generalization xmi:id="_R439eScoEeSLVrU2ifxtpw" general="_R4396ycoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R439eicoEeSLVrU2ifxtpw" name="List" isAbstract="true">
        <ownedComment xmi:id="_R439eycoEeSLVrU2ifxtpw" annotatedElement="_R439eicoEeSLVrU2ifxtpw">
          <body>Construct a list and add all elements in the given sequence post:
                result.toSequence() = seq </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439fCcoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" effect="create">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439fScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439ficoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439fycoEeSLVrU2ifxtpw" type="_R4396CcoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R439gCcoEeSLVrU2ifxtpw" name="add" isAbstract="true" redefinedOperation="_R4399ycoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439gScoEeSLVrU2ifxtpw" annotatedElement="_R439gCcoEeSLVrU2ifxtpw">
          <body>Append the given element into this list at the end. Always returns true. post:
                self.toSequence() = self@pre.toSequence()->append(element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439gicoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R439gycoEeSLVrU2ifxtpw" annotatedElement="_R439gicoEeSLVrU2ifxtpw">
            <body>Element to be appended to this collection</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R439hCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439hScoEeSLVrU2ifxtpw" name="addAll" isAbstract="true" redefinedOperation="_R439_CcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439hicoEeSLVrU2ifxtpw" annotatedElement="_R439hScoEeSLVrU2ifxtpw">
          <body>Append all elements in the given sequence onto the end of this list. Return true
                if the given collection is not empty. post: self.toSequence() =
                self@pre.toSequence()->union(seq) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439hycoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439iCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439iScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439iicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439iycoEeSLVrU2ifxtpw" name="addAllAt" isAbstract="true">
        <ownedComment xmi:id="_R439jCcoEeSLVrU2ifxtpw" annotatedElement="_R439iycoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this list at the given position
                index. Return true if the given collection is not empty. pre: index >= 1 and
                index &lt;= self.size()+1 post:  result = self.size() > self@pre.size()
                and self.toSequence() = Sequence{1..seq->size()}->iterate(i; s =
                self@pre.toSequence() | s->insertAt(index+i-1, sequence->at(i))
                e->at(i)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439jScoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439jicoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439jycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439kCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439kScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439kicoEeSLVrU2ifxtpw" name="addAt" isAbstract="true">
        <ownedComment xmi:id="_R439kycoEeSLVrU2ifxtpw" annotatedElement="_R439kicoEeSLVrU2ifxtpw">
          <body>Insert an element into this list at the given position index. Always return
                true. pre: index > 1 and index &lt;= self.size()+1 post: result = true
                and         self.toSequence() =
                self@pre.toSequence()->insertAt(index,element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439lCcoEeSLVrU2ifxtpw" name="index" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439lScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create"/>
        <ownedParameter xmi:id="_R439licoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439lycoEeSLVrU2ifxtpw" name="at" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439mCcoEeSLVrU2ifxtpw" annotatedElement="_R439lycoEeSLVrU2ifxtpw">
          <body>Return the element at the given position index or nothing if there is no element
                at the given position. pre: index > 0 and index &lt;= self.size()
                post: result = self@pre.toSequence()->at(index) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439mScoEeSLVrU2ifxtpw" name="index" effect="create">
          <ownedComment xmi:id="_R439micoEeSLVrU2ifxtpw" annotatedElement="_R439mScoEeSLVrU2ifxtpw">
            <body>The position of the element to be returned</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439mycoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439nCcoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439nScoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_R43-AicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439nicoEeSLVrU2ifxtpw" annotatedElement="_R439nScoEeSLVrU2ifxtpw">
          <body>Return true if the content of this list is equal to the given sequence. post:
                result = (self@pre.toSequence() = seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439nycoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439oCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439oScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439oicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439oycoEeSLVrU2ifxtpw" name="first" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439pCcoEeSLVrU2ifxtpw" annotatedElement="_R439oycoEeSLVrU2ifxtpw">
          <body>Returns the first element in this list, if one exists pre: self.notEmpty() post:
                result = self@pre.toSequence()->first() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439pScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439picoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439pycoEeSLVrU2ifxtpw" name="indexOf" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439qCcoEeSLVrU2ifxtpw" annotatedElement="_R439pycoEeSLVrU2ifxtpw">
          <body>Return the position of the first occurrence of the given element in this list or
                nothing if the element is not included in this collection. pre:
                self.includes(element) post: result = self@pre.toSequence() ->
                indexOf(element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439qScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R439qicoEeSLVrU2ifxtpw" annotatedElement="_R439qScoEeSLVrU2ifxtpw">
            <body>Element for which to retrieve the position post: result
                  = self.toSequence()->indexOf(element)</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R439qycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439rCcoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439rScoEeSLVrU2ifxtpw" name="last" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R439ricoEeSLVrU2ifxtpw" annotatedElement="_R439rScoEeSLVrU2ifxtpw">
          <body>Returns the last element  in this list, if one exists pre: self.notEmpty() post:
                result = self@pre.toSequence()->first() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439rycoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439sCcoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439sScoEeSLVrU2ifxtpw" name="remove" isAbstract="true" redefinedOperation="_R43-SicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439sicoEeSLVrU2ifxtpw" annotatedElement="_R439sScoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of the given element from this list and return the count
                of elements removed. post: self.toSequence() =
                self@pre.toSequence()->excluding(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439sycoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R439tCcoEeSLVrU2ifxtpw" annotatedElement="_R439sycoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R439tScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439ticoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true" redefinedOperation="_R43-TicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439tycoEeSLVrU2ifxtpw" annotatedElement="_R439ticoEeSLVrU2ifxtpw">
          <body>Remove all elements in the given sequence from this list. Return true if the
                size of this list changes. post: self.toSequence() = seq->iterate(element; s
                = self@pre.toSequence() | s->excluding(element)) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439uCcoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439uScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R439uicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439uycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439vCcoEeSLVrU2ifxtpw" name="removeOne" isAbstract="true" redefinedOperation="_R43-VScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439vScoEeSLVrU2ifxtpw" annotatedElement="_R439vCcoEeSLVrU2ifxtpw">
          <body>Remove first occurrence of the given element from this list and return true if
                an occurrence of element was removed. post: self.toSequence() = let preSeq =
                self@pre.toSequence() in if result then let index = self@pre.indexOf(element) in
                        self.toSequence() = preSeq->subSequence(1, index-1)->
                union(preSeq->subSequence(index+1, self@pre.size())) else preSeq endif
                (index+1, self@pre.size())) else preSeq endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439vicoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R439vycoEeSLVrU2ifxtpw" annotatedElement="_R439vicoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R439wCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439wScoEeSLVrU2ifxtpw" name="removeAt" isAbstract="true">
        <ownedComment xmi:id="_R439wicoEeSLVrU2ifxtpw" annotatedElement="_R439wScoEeSLVrU2ifxtpw">
          <body>Remove the element at the given position index and shift all trailing elements
                left by one position. Return the removed element, or nothing if the index is out of
                bounds. pre: index > 0 and index &lt;= self.size() post: result =
                self@pre.at(index) and let preSeq = self@pre.toSequence() in        
                self.toSequence() = preSeq->subSequence(1,
                index-1)->union(preSeq->subSequence(index+1, self@pre.size()))
                re.size())) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439wycoEeSLVrU2ifxtpw" name="index" effect="create">
          <ownedComment xmi:id="_R439xCcoEeSLVrU2ifxtpw" annotatedElement="_R439wycoEeSLVrU2ifxtpw">
            <body>The position of the element to remove</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R439xScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439xicoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439xycoEeSLVrU2ifxtpw" name="replace" isAbstract="true" redefinedOperation="_R43-WicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439yCcoEeSLVrU2ifxtpw" annotatedElement="_R439xycoEeSLVrU2ifxtpw">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: Sequence{1..self.size()}->forAll(i |
                self.at(i) = if self@pre.at(i) = element then newElement else self@pre.at(i) endif)
                else self@pre.at(i) endif) i) endif) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439yScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R439yicoEeSLVrU2ifxtpw" annotatedElement="_R439yScoEeSLVrU2ifxtpw">
            <body>Element to be replaced</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R439yycoEeSLVrU2ifxtpw" name="newElement" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R439zCcoEeSLVrU2ifxtpw" annotatedElement="_R439yycoEeSLVrU2ifxtpw">
            <body>Element to replace element</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R439zScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439zicoEeSLVrU2ifxtpw" name="replaceOne" isAbstract="true" redefinedOperation="_R43-YScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439zycoEeSLVrU2ifxtpw" annotatedElement="_R439zicoEeSLVrU2ifxtpw">
          <body>Replace one occurrence of the given element with
                newElement and return true if an element was replaced. post:
                Sequence{1..self.size()}->forAll(i | self.at(i) = if result and i =
                self@pre.indexOf(element) then newElement else self@pre.at(i) endif) else
                self@pre.at(i) endif) ) endif) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4390CcoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R4390ScoEeSLVrU2ifxtpw" annotatedElement="_R4390CcoEeSLVrU2ifxtpw">
            <body>element to replace (first occurrence)</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R4390icoEeSLVrU2ifxtpw" name="newElement" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R4390ycoEeSLVrU2ifxtpw" annotatedElement="_R4390icoEeSLVrU2ifxtpw">
            <body>new element to replace first occurrence of element</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R4391CcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R4391ScoEeSLVrU2ifxtpw" name="replaceAt" isAbstract="true">
        <ownedComment xmi:id="_R4391icoEeSLVrU2ifxtpw" annotatedElement="_R4391ScoEeSLVrU2ifxtpw">
          <body>Replace the element at the given position index with the given new element.
                Return the replaced element, or nothing if the index is out of bounds pre: index
                > 0 and index &lt;= self.size() post: result = self@pre.at(index) and let
                preSeq = self@pre.toSequence() in         self.toSequence() =
                preSeq->subSequence(1,
                index-1)->append(newElement)->union(preSeq->subSequence(index+1,
                self@pre.size())) re.size())) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4391ycoEeSLVrU2ifxtpw" name="index" effect="create">
          <ownedComment xmi:id="_R4392CcoEeSLVrU2ifxtpw" annotatedElement="_R4391ycoEeSLVrU2ifxtpw">
            <body>The position of the element to be replaced by element</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4392ScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R4392icoEeSLVrU2ifxtpw" annotatedElement="_R4392ScoEeSLVrU2ifxtpw">
            <body>Element to replace the element at position index</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R4392ycoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4393CcoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R4393ScoEeSLVrU2ifxtpw" name="retainAll" isAbstract="true" redefinedOperation="_R43-aCcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R4393icoEeSLVrU2ifxtpw" annotatedElement="_R4393ScoEeSLVrU2ifxtpw">
          <body>Remove all instances of all elements in this list that are NOT in the given
                collection. Return true if the size of this collection changes.
                post: self.toSequence() = (self@pre.toSequence()->asSet() -
                seq->asSet())->iterate(element; a = self@pre.toSequence() |
                seq->excluding(element)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4393ycoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4394CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4394ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4394icoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R4394ycoEeSLVrU2ifxtpw" name="subList" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R4395CcoEeSLVrU2ifxtpw" annotatedElement="_R4394ycoEeSLVrU2ifxtpw">
          <body>Return a new list containing all elements of this list from the lower position
                index up to and including the upper position index. post: if lower &lt; 1 or
                upper > self.size() then result.toSequence()->empty() else
                result.toSequence() = self.toSequence()->subSequence(lower,upper) endif
                e()->subSequence(lower,upper) endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4395ScoEeSLVrU2ifxtpw" name="fromIndex" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4395icoEeSLVrU2ifxtpw" name="toIndex" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4395ycoEeSLVrU2ifxtpw" type="_R4396CcoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_R4396CcoEeSLVrU2ifxtpw" name="List&lt;T>">
        <templateBinding xmi:id="_R4396ScoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_R4396icoEeSLVrU2ifxtpw" actual="_R438aScoEeSLVrU2ifxtpw">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R4396ycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Bag__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____" isAbstract="true">
      <ownedComment xmi:id="_R4397CcoEeSLVrU2ifxtpw" annotatedElement="_R4396ycoEeSLVrU2ifxtpw">
        <body>Concrete unordered, non-unique collection. Supports duplicate entries. </body>
      </ownedComment>
      <generalization xmi:id="_R4397ScoEeSLVrU2ifxtpw" general="_R43-CycoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R4397icoEeSLVrU2ifxtpw" name="Bag" isAbstract="true">
        <ownedComment xmi:id="_R4397ycoEeSLVrU2ifxtpw" annotatedElement="_R4397icoEeSLVrU2ifxtpw">
          <body>Construct a bag and add all elements in the given sequence. post:
                result.toSequence()->asBag() = seq->asBag() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R4398CcoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R4398ScoEeSLVrU2ifxtpw" annotatedElement="_R4398CcoEeSLVrU2ifxtpw">
            <body>Elements to be added to the new bag. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4398icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4398ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R4399CcoEeSLVrU2ifxtpw" type="_R43-CCcoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R4399ScoEeSLVrU2ifxtpw" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_R4399icoEeSLVrU2ifxtpw" annotatedElement="_R4399ScoEeSLVrU2ifxtpw">
          <body>Destroy this bag. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_R4399ycoEeSLVrU2ifxtpw" name="add" isAbstract="true" redefinedOperation="_R43-DScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439-CcoEeSLVrU2ifxtpw" annotatedElement="_R4399ycoEeSLVrU2ifxtpw">
          <body>Insert the given element into this bag. Always returns true. post:
                self.toSequence()->asBag()
                = self@pre.toSequence()->asBag()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439-ScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R439-icoEeSLVrU2ifxtpw" annotatedElement="_R439-ScoEeSLVrU2ifxtpw">
            <body>Element to be appended to this collection.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R439-ycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R439_CcoEeSLVrU2ifxtpw" name="addAll" isAbstract="true" redefinedOperation="_R43-EycoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R439_ScoEeSLVrU2ifxtpw" annotatedElement="_R439_CcoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this bag. Return true if the
                given sequence is not empty. post: self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->union(seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R439_icoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R439_ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-ACcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-AScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-AicoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_R43-IicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_R43-AycoEeSLVrU2ifxtpw" annotatedElement="_R43-AicoEeSLVrU2ifxtpw">
          <body>Return true if the content of this bag is equal to the given sequence considered
                as a bag. post: result = (self@pre.toSequence()->asBag() =
                seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-BCcoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-BScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-BicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-BycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_R43-CCcoEeSLVrU2ifxtpw" name="Bag&lt;T>">
        <templateBinding xmi:id="_R43-CScoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_R43-CicoEeSLVrU2ifxtpw" actual="_R438aScoEeSLVrU2ifxtpw">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R43-CycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Collection__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____" isAbstract="true">
      <ownedComment xmi:id="_R43-DCcoEeSLVrU2ifxtpw" annotatedElement="_R43-CycoEeSLVrU2ifxtpw">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_R43-DScoEeSLVrU2ifxtpw" name="add" isAbstract="true">
        <ownedComment xmi:id="_R43-DicoEeSLVrU2ifxtpw" annotatedElement="_R43-DScoEeSLVrU2ifxtpw">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-DycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R43-ECcoEeSLVrU2ifxtpw" annotatedElement="_R43-DycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-EScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-EicoEeSLVrU2ifxtpw" annotatedElement="_R43-EScoEeSLVrU2ifxtpw">
            <body>Element to be added to this collection.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-EycoEeSLVrU2ifxtpw" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_R43-FCcoEeSLVrU2ifxtpw" annotatedElement="_R43-EycoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-FScoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R43-FicoEeSLVrU2ifxtpw" annotatedElement="_R43-FScoEeSLVrU2ifxtpw">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-FycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-GCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-GScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-GicoEeSLVrU2ifxtpw" name="clear" isAbstract="true">
        <ownedComment xmi:id="_R43-GycoEeSLVrU2ifxtpw" annotatedElement="_R43-GicoEeSLVrU2ifxtpw">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-HCcoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-HScoEeSLVrU2ifxtpw" annotatedElement="_R43-HCcoEeSLVrU2ifxtpw">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-HicoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-HycoEeSLVrU2ifxtpw" annotatedElement="_R43-HicoEeSLVrU2ifxtpw">
            <body>Element to be counted.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-ICcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R43-IScoEeSLVrU2ifxtpw" annotatedElement="_R43-ICcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-IicoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-IycoEeSLVrU2ifxtpw" annotatedElement="_R43-IicoEeSLVrU2ifxtpw">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-JCcoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R43-JScoEeSLVrU2ifxtpw" annotatedElement="_R43-JCcoEeSLVrU2ifxtpw">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-JicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-JycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-KCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-KScoEeSLVrU2ifxtpw" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-KicoEeSLVrU2ifxtpw" annotatedElement="_R43-KScoEeSLVrU2ifxtpw">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-KycoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-LCcoEeSLVrU2ifxtpw" annotatedElement="_R43-KycoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-LScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R43-LicoEeSLVrU2ifxtpw" annotatedElement="_R43-LScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-LycoEeSLVrU2ifxtpw" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-MCcoEeSLVrU2ifxtpw" annotatedElement="_R43-LycoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-MScoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R43-MicoEeSLVrU2ifxtpw" annotatedElement="_R43-MScoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-MycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-NCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-NScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-NicoEeSLVrU2ifxtpw" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-NycoEeSLVrU2ifxtpw" annotatedElement="_R43-NicoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-OCcoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-OScoEeSLVrU2ifxtpw" annotatedElement="_R43-OCcoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-OicoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R43-OycoEeSLVrU2ifxtpw" annotatedElement="_R43-OicoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-PCcoEeSLVrU2ifxtpw" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-PScoEeSLVrU2ifxtpw" annotatedElement="_R43-PCcoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-PicoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R43-PycoEeSLVrU2ifxtpw" annotatedElement="_R43-PicoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-QCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-QScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-QicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-QycoEeSLVrU2ifxtpw" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-RCcoEeSLVrU2ifxtpw" annotatedElement="_R43-QycoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-RScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R43-RicoEeSLVrU2ifxtpw" annotatedElement="_R43-RScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-RycoEeSLVrU2ifxtpw" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-SCcoEeSLVrU2ifxtpw" annotatedElement="_R43-RycoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-SScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-SicoEeSLVrU2ifxtpw" name="remove" isAbstract="true">
        <ownedComment xmi:id="_R43-SycoEeSLVrU2ifxtpw" annotatedElement="_R43-SicoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-TCcoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw"/>
        <ownedParameter xmi:id="_R43-TScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-TicoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_R43-TycoEeSLVrU2ifxtpw" annotatedElement="_R43-TicoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-UCcoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R43-UScoEeSLVrU2ifxtpw" annotatedElement="_R43-UCcoEeSLVrU2ifxtpw">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-UicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-UycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-VCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-VScoEeSLVrU2ifxtpw" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_R43-VicoEeSLVrU2ifxtpw" annotatedElement="_R43-VScoEeSLVrU2ifxtpw">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-VycoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-WCcoEeSLVrU2ifxtpw" annotatedElement="_R43-VycoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-WScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-WicoEeSLVrU2ifxtpw" name="replace" isAbstract="true">
        <ownedComment xmi:id="_R43-WycoEeSLVrU2ifxtpw" annotatedElement="_R43-WicoEeSLVrU2ifxtpw">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-XCcoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-XScoEeSLVrU2ifxtpw" annotatedElement="_R43-XCcoEeSLVrU2ifxtpw">
            <body>Element to be replaced.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-XicoEeSLVrU2ifxtpw" name="newElement" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-XycoEeSLVrU2ifxtpw" annotatedElement="_R43-XicoEeSLVrU2ifxtpw">
            <body>Element to replace original element. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-YCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-YScoEeSLVrU2ifxtpw" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_R43-YicoEeSLVrU2ifxtpw" annotatedElement="_R43-YScoEeSLVrU2ifxtpw">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-YycoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-ZCcoEeSLVrU2ifxtpw" annotatedElement="_R43-YycoEeSLVrU2ifxtpw">
            <body>Element to be replaced. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-ZScoEeSLVrU2ifxtpw" name="newElement" type="_R438aScoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_R43-ZicoEeSLVrU2ifxtpw" annotatedElement="_R43-ZScoEeSLVrU2ifxtpw">
            <body>Element to replace the original element. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-ZycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-aCcoEeSLVrU2ifxtpw" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_R43-aScoEeSLVrU2ifxtpw" annotatedElement="_R43-aCcoEeSLVrU2ifxtpw">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-aicoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_R43-aycoEeSLVrU2ifxtpw" annotatedElement="_R43-aicoEeSLVrU2ifxtpw">
            <body>Elements to retain. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-bCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-bScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-bicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-bycoEeSLVrU2ifxtpw" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-cCcoEeSLVrU2ifxtpw" annotatedElement="_R43-bycoEeSLVrU2ifxtpw">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-cScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_R43-cicoEeSLVrU2ifxtpw" annotatedElement="_R43-cScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R43-cycoEeSLVrU2ifxtpw" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_R43-dCcoEeSLVrU2ifxtpw" annotatedElement="_R43-cycoEeSLVrU2ifxtpw">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_R43-dScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_R43-dicoEeSLVrU2ifxtpw" annotatedElement="_R43-dScoEeSLVrU2ifxtpw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-dycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-eCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R43-eScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R43-eicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R43-eycoEeSLVrU2ifxtpw" actual="_R438aScoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R43-fCcoEeSLVrU2ifxtpw" client="_R43-CycoEeSLVrU2ifxtpw" supplier="_R43-eScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R43-fScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R43-ficoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R43-fycoEeSLVrU2ifxtpw" actual="_R438aScoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R43-gCcoEeSLVrU2ifxtpw" client="_R4396ycoEeSLVrU2ifxtpw" supplier="_R43-fScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R43-gScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R43-gicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R43-gycoEeSLVrU2ifxtpw" actual="_R438aScoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R43-hCcoEeSLVrU2ifxtpw" client="_R439dycoEeSLVrU2ifxtpw" supplier="_R43-gScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R43-hScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__">
      <generalization xmi:id="_R43-hicoEeSLVrU2ifxtpw">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
      </generalization>
      <generalization xmi:id="_R43-hycoEeSLVrU2ifxtpw" general="_R43ZCicoEeSLVrU2ifxtpw"/>
      <ownedAttribute xmi:id="_R43-iCcoEeSLVrU2ifxtpw" name="Set$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-iScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-iicoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43-iycoEeSLVrU2ifxtpw" name="Set$method$1" specification="_R44jvicoEeSLVrU2ifxtpw" node="_R43-lScoEeSLVrU2ifxtpw _R43-licoEeSLVrU2ifxtpw _R43-lycoEeSLVrU2ifxtpw _R43-mCcoEeSLVrU2ifxtpw" group="_R43-mCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43-jCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-jScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-jicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-jycoEeSLVrU2ifxtpw" name="" type="_R43-hScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-kCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-kScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-kicoEeSLVrU2ifxtpw" target="_R43-licoEeSLVrU2ifxtpw" source="_R43-lScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-kycoEeSLVrU2ifxtpw" target="_R43-lycoEeSLVrU2ifxtpw" source="_R43-qicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-lCcoEeSLVrU2ifxtpw" target="_R43-ricoEeSLVrU2ifxtpw" source="_R43-licoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43-mCcoEeSLVrU2ifxtpw" name="Body(Set$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-mScoEeSLVrU2ifxtpw" target="_R43-qicoEeSLVrU2ifxtpw" source="_R43-pycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-micoEeSLVrU2ifxtpw" target="_R43-tScoEeSLVrU2ifxtpw" source="_R43-qicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43-mycoEeSLVrU2ifxtpw" target="_R43-pScoEeSLVrU2ifxtpw" source="_R43-tCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43-nCcoEeSLVrU2ifxtpw" target="_R43-tCcoEeSLVrU2ifxtpw" source="_R43-qycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-nScoEeSLVrU2ifxtpw" target="_R43-uScoEeSLVrU2ifxtpw" source="_R43-qicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-nicoEeSLVrU2ifxtpw" target="_R43-wCcoEeSLVrU2ifxtpw" source="_R43-vCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-nycoEeSLVrU2ifxtpw" target="_R43-zCcoEeSLVrU2ifxtpw" source="_R43-wycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-oCcoEeSLVrU2ifxtpw" target="_R43-0icoEeSLVrU2ifxtpw" source="_R43-xycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43-oScoEeSLVrU2ifxtpw" target="_R43-1icoEeSLVrU2ifxtpw" source="_R43-1ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-oicoEeSLVrU2ifxtpw" target="_R43-1icoEeSLVrU2ifxtpw" source="_R43-zycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R43-oycoEeSLVrU2ifxtpw" target="_R43-qycoEeSLVrU2ifxtpw" source="_R43-1icoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R43-pCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43-pScoEeSLVrU2ifxtpw" name="Body" incoming="_R43-mycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_R43-picoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_R43-pycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R43-mScoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-qCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-qScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R43-qicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R43-mScoEeSLVrU2ifxtpw" outgoing="_R43-kycoEeSLVrU2ifxtpw _R43-micoEeSLVrU2ifxtpw _R43-nScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43-qycoEeSLVrU2ifxtpw" name="Super" incoming="_R43-oycoEeSLVrU2ifxtpw" outgoing="_R43-nCcoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43-rCcoEeSLVrU2ifxtpw" name="ExpressionStatement@35a93ff1">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43-rScoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1)">
                <argument xmi:id="_R43-ricoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1).argument(seq)" incoming="_R43-lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-rycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-sCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R43-sScoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-sicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-sycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#SetImpl-SetImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_R43-tCcoEeSLVrU2ifxtpw" name="Call(Set$initialization$1)" incoming="_R43-nCcoEeSLVrU2ifxtpw" outgoing="_R43-mycoEeSLVrU2ifxtpw" operation="_R44jvScoEeSLVrU2ifxtpw">
            <target xmi:id="_R43-tScoEeSLVrU2ifxtpw" name="Call(Set$initialization$1).target" incoming="_R43-micoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-ticoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-tycoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R43-uCcoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1)" structuralFeature="_R43-iCcoEeSLVrU2ifxtpw">
            <object xmi:id="_R43-uScoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).object" incoming="_R43-nScoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-uicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-uycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_R43-vCcoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).result" outgoing="_R43-nicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-vScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-vicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43-vycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_R43-wCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R43-nicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-wScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-wicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R43-wycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R43-nycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-xCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-xScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R43-xicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_R43-xycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R43-oCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-yCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-yScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_R43-yicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R43-yycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_R43-zCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R43-nycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-zScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-zicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R43-zycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R43-oicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-0CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-0ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R43-0icoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R43-oCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-0ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-1CcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R43-1ScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R43-oScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R43-1icoEeSLVrU2ifxtpw" name="Decision(Test(Set$initializationFlag$1))" incoming="_R43-oScoEeSLVrU2ifxtpw _R43-oicoEeSLVrU2ifxtpw" outgoing="_R43-oycoEeSLVrU2ifxtpw" decisionInputFlow="_R43-oicoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43-lScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R43-kicoEeSLVrU2ifxtpw" parameter="_R43-jCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43-licoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R43-kicoEeSLVrU2ifxtpw" outgoing="_R43-lCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43-lycoEeSLVrU2ifxtpw" name="Return" incoming="_R43-kycoEeSLVrU2ifxtpw" parameter="_R43-jycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43-1ycoEeSLVrU2ifxtpw" name="destroy$method$2" specification="_R44jxScoEeSLVrU2ifxtpw" node="_R43-2CcoEeSLVrU2ifxtpw" group="_R43-2CcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R43-2CcoEeSLVrU2ifxtpw" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43-2ScoEeSLVrU2ifxtpw" name="add$method$1" specification="_R44jxicoEeSLVrU2ifxtpw" node="_R43-5CcoEeSLVrU2ifxtpw _R43-5ScoEeSLVrU2ifxtpw _R43-5icoEeSLVrU2ifxtpw _R43-5ycoEeSLVrU2ifxtpw _R43-6CcoEeSLVrU2ifxtpw" group="_R43-6CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43-2icoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-2ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-3CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43-3ScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-3icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-3ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-4CcoEeSLVrU2ifxtpw" target="_R43-5ScoEeSLVrU2ifxtpw" source="_R43-5CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43-4ScoEeSLVrU2ifxtpw" target="_R43-5ycoEeSLVrU2ifxtpw" source="_R43-6ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-4icoEeSLVrU2ifxtpw" target="_R43-7ycoEeSLVrU2ifxtpw" source="_R43-5ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-4ycoEeSLVrU2ifxtpw" target="_R43-5icoEeSLVrU2ifxtpw" source="_R43-6ycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43-6CcoEeSLVrU2ifxtpw" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43-6ScoEeSLVrU2ifxtpw" name="ReturnStatement@42845bde" outgoing="_R43-4ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-6icoEeSLVrU2ifxtpw" target="_R43-6ycoEeSLVrU2ifxtpw" source="_R43-8icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43-6ycoEeSLVrU2ifxtpw" name="ReturnStatement@42845bde.output" incoming="_R43-6icoEeSLVrU2ifxtpw" outgoing="_R43-4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-7CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-7ScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43-7icoEeSLVrU2ifxtpw" name="Call(addImpl$method$1)">
              <argument xmi:id="_R43-7ycoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).argument(element)" incoming="_R43-4icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-8CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-8ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R43-8icoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).result()" outgoing="_R43-6icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-8ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43-9CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43-5CcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R43-4CcoEeSLVrU2ifxtpw" parameter="_R43-2icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43-5ScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R43-4CcoEeSLVrU2ifxtpw" outgoing="_R43-4icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43-5icoEeSLVrU2ifxtpw" name="Return" incoming="_R43-4ycoEeSLVrU2ifxtpw" parameter="_R43-3ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43-5ycoEeSLVrU2ifxtpw" name="Final" incoming="_R43-4ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43-9ScoEeSLVrU2ifxtpw" name="addAll$method$1" specification="_R44jzScoEeSLVrU2ifxtpw" node="_R43_ACcoEeSLVrU2ifxtpw _R43_AScoEeSLVrU2ifxtpw _R43_AicoEeSLVrU2ifxtpw _R43_AycoEeSLVrU2ifxtpw _R43_BCcoEeSLVrU2ifxtpw" group="_R43_BCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43-9icoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43-9ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43--CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43--ScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43--icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43--ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-_CcoEeSLVrU2ifxtpw" target="_R43_AScoEeSLVrU2ifxtpw" source="_R43_ACcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43-_ScoEeSLVrU2ifxtpw" target="_R43_AycoEeSLVrU2ifxtpw" source="_R43_BScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-_icoEeSLVrU2ifxtpw" target="_R43_CycoEeSLVrU2ifxtpw" source="_R43_AScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43-_ycoEeSLVrU2ifxtpw" target="_R43_AicoEeSLVrU2ifxtpw" source="_R43_BycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_BCcoEeSLVrU2ifxtpw" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_BScoEeSLVrU2ifxtpw" name="ReturnStatement@7170077" outgoing="_R43-_ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_BicoEeSLVrU2ifxtpw" target="_R43_BycoEeSLVrU2ifxtpw" source="_R43_DicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_BycoEeSLVrU2ifxtpw" name="ReturnStatement@7170077.output" incoming="_R43_BicoEeSLVrU2ifxtpw" outgoing="_R43-_ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_CCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_CScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_CicoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_R43_CycoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).argument(seq)" incoming="_R43-_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_DCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_DScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R43_DicoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).result()" outgoing="_R43_BicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_DycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_ECcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_ACcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R43-_CcoEeSLVrU2ifxtpw" parameter="_R43-9icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43_AScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R43-_CcoEeSLVrU2ifxtpw" outgoing="_R43-_icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_AicoEeSLVrU2ifxtpw" name="Return" incoming="_R43-_ycoEeSLVrU2ifxtpw" parameter="_R43--ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_AycoEeSLVrU2ifxtpw" name="Final" incoming="_R43-_ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_EScoEeSLVrU2ifxtpw" name="clear$method$1" specification="_R44j1CcoEeSLVrU2ifxtpw" node="_R43_EicoEeSLVrU2ifxtpw" group="_R43_EicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R43_EicoEeSLVrU2ifxtpw" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_EycoEeSLVrU2ifxtpw" name="ExpressionStatement@44d737ca">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_FCcoEeSLVrU2ifxtpw" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_FScoEeSLVrU2ifxtpw" name="count$method$1" specification="_R44j1ScoEeSLVrU2ifxtpw" node="_R43_ICcoEeSLVrU2ifxtpw _R43_IScoEeSLVrU2ifxtpw _R43_IicoEeSLVrU2ifxtpw _R43_IycoEeSLVrU2ifxtpw _R43_JCcoEeSLVrU2ifxtpw" group="_R43_JCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_FicoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_FycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_GCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43_GScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_GicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_GycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_HCcoEeSLVrU2ifxtpw" target="_R43_IScoEeSLVrU2ifxtpw" source="_R43_ICcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_HScoEeSLVrU2ifxtpw" target="_R43_IycoEeSLVrU2ifxtpw" source="_R43_JScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_HicoEeSLVrU2ifxtpw" target="_R43_KycoEeSLVrU2ifxtpw" source="_R43_IScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_HycoEeSLVrU2ifxtpw" target="_R43_IicoEeSLVrU2ifxtpw" source="_R43_JycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_JCcoEeSLVrU2ifxtpw" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_JScoEeSLVrU2ifxtpw" name="ReturnStatement@3751834b" outgoing="_R43_HScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_JicoEeSLVrU2ifxtpw" target="_R43_JycoEeSLVrU2ifxtpw" source="_R43_LicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_JycoEeSLVrU2ifxtpw" name="ReturnStatement@3751834b.output" incoming="_R43_JicoEeSLVrU2ifxtpw" outgoing="_R43_HycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_KCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_KScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_KicoEeSLVrU2ifxtpw" name="Call(countImpl$method$1)">
              <argument xmi:id="_R43_KycoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).argument(element)" incoming="_R43_HicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_LCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_LScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R43_LicoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).result()" outgoing="_R43_JicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_LycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_MCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_ICcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R43_HCcoEeSLVrU2ifxtpw" parameter="_R43_FicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43_IScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R43_HCcoEeSLVrU2ifxtpw" outgoing="_R43_HicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_IicoEeSLVrU2ifxtpw" name="Return" incoming="_R43_HycoEeSLVrU2ifxtpw" parameter="_R43_GScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_IycoEeSLVrU2ifxtpw" name="Final" incoming="_R43_HScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_MScoEeSLVrU2ifxtpw" name="equals$method$1" specification="_R44j3CcoEeSLVrU2ifxtpw" node="_R43_PCcoEeSLVrU2ifxtpw _R43_PScoEeSLVrU2ifxtpw _R43_PicoEeSLVrU2ifxtpw _R43_PycoEeSLVrU2ifxtpw _R43_QCcoEeSLVrU2ifxtpw" group="_R43_QCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_MicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_MycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_NCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43_NScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_NicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_NycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_OCcoEeSLVrU2ifxtpw" target="_R43_PScoEeSLVrU2ifxtpw" source="_R43_PCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_OScoEeSLVrU2ifxtpw" target="_R43_PycoEeSLVrU2ifxtpw" source="_R43_QScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_OicoEeSLVrU2ifxtpw" target="_R43_RycoEeSLVrU2ifxtpw" source="_R43_PScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_OycoEeSLVrU2ifxtpw" target="_R43_PicoEeSLVrU2ifxtpw" source="_R43_QycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_QCcoEeSLVrU2ifxtpw" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_QScoEeSLVrU2ifxtpw" name="ReturnStatement@1d00c794" outgoing="_R43_OScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_QicoEeSLVrU2ifxtpw" target="_R43_QycoEeSLVrU2ifxtpw" source="_R43_SicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_QycoEeSLVrU2ifxtpw" name="ReturnStatement@1d00c794.output" incoming="_R43_QicoEeSLVrU2ifxtpw" outgoing="_R43_OycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_RCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_RScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_RicoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_R43_RycoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).argument(seq)" incoming="_R43_OicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_SCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_SScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R43_SicoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).result()" outgoing="_R43_QicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_SycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_TCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_PCcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R43_OCcoEeSLVrU2ifxtpw" parameter="_R43_MicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43_PScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R43_OCcoEeSLVrU2ifxtpw" outgoing="_R43_OicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_PicoEeSLVrU2ifxtpw" name="Return" incoming="_R43_OycoEeSLVrU2ifxtpw" parameter="_R43_NScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_PycoEeSLVrU2ifxtpw" name="Final" incoming="_R43_OScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_TScoEeSLVrU2ifxtpw" name="excludes$method$1" specification="_R44j4ycoEeSLVrU2ifxtpw" node="_R43_WCcoEeSLVrU2ifxtpw _R43_WScoEeSLVrU2ifxtpw _R43_WicoEeSLVrU2ifxtpw _R43_WycoEeSLVrU2ifxtpw _R43_XCcoEeSLVrU2ifxtpw" group="_R43_XCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_TicoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_TycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_UCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43_UScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_UicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_UycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_VCcoEeSLVrU2ifxtpw" target="_R43_WScoEeSLVrU2ifxtpw" source="_R43_WCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_VScoEeSLVrU2ifxtpw" target="_R43_WycoEeSLVrU2ifxtpw" source="_R43_XScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_VicoEeSLVrU2ifxtpw" target="_R43_YycoEeSLVrU2ifxtpw" source="_R43_WScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_VycoEeSLVrU2ifxtpw" target="_R43_WicoEeSLVrU2ifxtpw" source="_R43_XycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_XCcoEeSLVrU2ifxtpw" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_XScoEeSLVrU2ifxtpw" name="ReturnStatement@1332fa84" outgoing="_R43_VScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_XicoEeSLVrU2ifxtpw" target="_R43_XycoEeSLVrU2ifxtpw" source="_R43_ZicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_XycoEeSLVrU2ifxtpw" name="ReturnStatement@1332fa84.output" incoming="_R43_XicoEeSLVrU2ifxtpw" outgoing="_R43_VycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_YCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_YScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_YicoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_R43_YycoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).argument(element)" incoming="_R43_VicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_ZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_ZScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R43_ZicoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).result()" outgoing="_R43_XicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_ZycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_aCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_WCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R43_VCcoEeSLVrU2ifxtpw" parameter="_R43_TicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43_WScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R43_VCcoEeSLVrU2ifxtpw" outgoing="_R43_VicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_WicoEeSLVrU2ifxtpw" name="Return" incoming="_R43_VycoEeSLVrU2ifxtpw" parameter="_R43_UScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_WycoEeSLVrU2ifxtpw" name="Final" incoming="_R43_VScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_aScoEeSLVrU2ifxtpw" name="excludesAll$method$1" specification="_R44j6icoEeSLVrU2ifxtpw" node="_R43_dCcoEeSLVrU2ifxtpw _R43_dScoEeSLVrU2ifxtpw _R43_dicoEeSLVrU2ifxtpw _R43_dycoEeSLVrU2ifxtpw _R43_eCcoEeSLVrU2ifxtpw" group="_R43_eCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_aicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_aycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_bCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43_bScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_bicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_bycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_cCcoEeSLVrU2ifxtpw" target="_R43_dScoEeSLVrU2ifxtpw" source="_R43_dCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_cScoEeSLVrU2ifxtpw" target="_R43_dycoEeSLVrU2ifxtpw" source="_R43_eScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_cicoEeSLVrU2ifxtpw" target="_R43_fycoEeSLVrU2ifxtpw" source="_R43_dScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_cycoEeSLVrU2ifxtpw" target="_R43_dicoEeSLVrU2ifxtpw" source="_R43_eycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_eCcoEeSLVrU2ifxtpw" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_eScoEeSLVrU2ifxtpw" name="ReturnStatement@5213fce3" outgoing="_R43_cScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_eicoEeSLVrU2ifxtpw" target="_R43_eycoEeSLVrU2ifxtpw" source="_R43_gicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_eycoEeSLVrU2ifxtpw" name="ReturnStatement@5213fce3.output" incoming="_R43_eicoEeSLVrU2ifxtpw" outgoing="_R43_cycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_fCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_fScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_ficoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_R43_fycoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_R43_cicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_gCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_gScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R43_gicoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).result()" outgoing="_R43_eicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_gycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_hCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_dCcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R43_cCcoEeSLVrU2ifxtpw" parameter="_R43_aicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43_dScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R43_cCcoEeSLVrU2ifxtpw" outgoing="_R43_cicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_dicoEeSLVrU2ifxtpw" name="Return" incoming="_R43_cycoEeSLVrU2ifxtpw" parameter="_R43_bScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_dycoEeSLVrU2ifxtpw" name="Final" incoming="_R43_cScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_hScoEeSLVrU2ifxtpw" name="includes$method$1" specification="_R44j8ScoEeSLVrU2ifxtpw" node="_R43_kCcoEeSLVrU2ifxtpw _R43_kScoEeSLVrU2ifxtpw _R43_kicoEeSLVrU2ifxtpw _R43_kycoEeSLVrU2ifxtpw _R43_lCcoEeSLVrU2ifxtpw" group="_R43_lCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_hicoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_hycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_iCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43_iScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_iicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_iycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_jCcoEeSLVrU2ifxtpw" target="_R43_kScoEeSLVrU2ifxtpw" source="_R43_kCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_jScoEeSLVrU2ifxtpw" target="_R43_kycoEeSLVrU2ifxtpw" source="_R43_lScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_jicoEeSLVrU2ifxtpw" target="_R43_mycoEeSLVrU2ifxtpw" source="_R43_kScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_jycoEeSLVrU2ifxtpw" target="_R43_kicoEeSLVrU2ifxtpw" source="_R43_lycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_lCcoEeSLVrU2ifxtpw" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_lScoEeSLVrU2ifxtpw" name="ReturnStatement@512327c" outgoing="_R43_jScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_licoEeSLVrU2ifxtpw" target="_R43_lycoEeSLVrU2ifxtpw" source="_R43_nicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_lycoEeSLVrU2ifxtpw" name="ReturnStatement@512327c.output" incoming="_R43_licoEeSLVrU2ifxtpw" outgoing="_R43_jycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_mCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_mScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_micoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1)">
              <argument xmi:id="_R43_mycoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).argument(element)" incoming="_R43_jicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_nCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_nScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R43_nicoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).result()" outgoing="_R43_licoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_nycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_oCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_kCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R43_jCcoEeSLVrU2ifxtpw" parameter="_R43_hicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43_kScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R43_jCcoEeSLVrU2ifxtpw" outgoing="_R43_jicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_kicoEeSLVrU2ifxtpw" name="Return" incoming="_R43_jycoEeSLVrU2ifxtpw" parameter="_R43_iScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_kycoEeSLVrU2ifxtpw" name="Final" incoming="_R43_jScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_oScoEeSLVrU2ifxtpw" name="includesAll$method$1" specification="_R44j-CcoEeSLVrU2ifxtpw" node="_R43_rCcoEeSLVrU2ifxtpw _R43_rScoEeSLVrU2ifxtpw _R43_ricoEeSLVrU2ifxtpw _R43_rycoEeSLVrU2ifxtpw _R43_sCcoEeSLVrU2ifxtpw" group="_R43_sCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_oicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_oycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_pCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43_pScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_picoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_pycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_qCcoEeSLVrU2ifxtpw" target="_R43_rScoEeSLVrU2ifxtpw" source="_R43_rCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_qScoEeSLVrU2ifxtpw" target="_R43_rycoEeSLVrU2ifxtpw" source="_R43_sScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_qicoEeSLVrU2ifxtpw" target="_R43_tycoEeSLVrU2ifxtpw" source="_R43_rScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_qycoEeSLVrU2ifxtpw" target="_R43_ricoEeSLVrU2ifxtpw" source="_R43_sycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_sCcoEeSLVrU2ifxtpw" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_sScoEeSLVrU2ifxtpw" name="ReturnStatement@2720d4a3" outgoing="_R43_qScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_sicoEeSLVrU2ifxtpw" target="_R43_sycoEeSLVrU2ifxtpw" source="_R43_uicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_sycoEeSLVrU2ifxtpw" name="ReturnStatement@2720d4a3.output" incoming="_R43_sicoEeSLVrU2ifxtpw" outgoing="_R43_qycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_tCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_tScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_ticoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_R43_tycoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_R43_qicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_uCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_uScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R43_uicoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).result()" outgoing="_R43_sicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_uycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_vCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_rCcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R43_qCcoEeSLVrU2ifxtpw" parameter="_R43_oicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43_rScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R43_qCcoEeSLVrU2ifxtpw" outgoing="_R43_qicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_ricoEeSLVrU2ifxtpw" name="Return" incoming="_R43_qycoEeSLVrU2ifxtpw" parameter="_R43_pScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_rycoEeSLVrU2ifxtpw" name="Final" incoming="_R43_qScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_vScoEeSLVrU2ifxtpw" name="isEmpty$method$1" specification="_R44j_ycoEeSLVrU2ifxtpw" node="_R43_wycoEeSLVrU2ifxtpw _R43_xCcoEeSLVrU2ifxtpw _R43_xScoEeSLVrU2ifxtpw" group="_R43_xScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_vicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_vycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_wCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_wScoEeSLVrU2ifxtpw" target="_R43_xCcoEeSLVrU2ifxtpw" source="_R43_xicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_wicoEeSLVrU2ifxtpw" target="_R43_wycoEeSLVrU2ifxtpw" source="_R43_yCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_xScoEeSLVrU2ifxtpw" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_xicoEeSLVrU2ifxtpw" name="ReturnStatement@3fec9e59" outgoing="_R43_wScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_xycoEeSLVrU2ifxtpw" target="_R43_yCcoEeSLVrU2ifxtpw" source="_R43_zCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_yCcoEeSLVrU2ifxtpw" name="ReturnStatement@3fec9e59.output" incoming="_R43_xycoEeSLVrU2ifxtpw" outgoing="_R43_wicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_yScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_yicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_yycoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_R43_zCcoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1).result()" outgoing="_R43_xycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_zScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_zicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_wycoEeSLVrU2ifxtpw" name="Return" incoming="_R43_wicoEeSLVrU2ifxtpw" parameter="_R43_vicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_xCcoEeSLVrU2ifxtpw" name="Final" incoming="_R43_wScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_zycoEeSLVrU2ifxtpw" name="notEmpty$method$1" specification="_R44kAycoEeSLVrU2ifxtpw" node="_R43_1ScoEeSLVrU2ifxtpw _R43_1icoEeSLVrU2ifxtpw _R43_1ycoEeSLVrU2ifxtpw" group="_R43_1ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_0CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_0ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_0icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_0ycoEeSLVrU2ifxtpw" target="_R43_1icoEeSLVrU2ifxtpw" source="_R43_2CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_1CcoEeSLVrU2ifxtpw" target="_R43_1ScoEeSLVrU2ifxtpw" source="_R43_2icoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_1ycoEeSLVrU2ifxtpw" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_2CcoEeSLVrU2ifxtpw" name="ReturnStatement@e1baffa" outgoing="_R43_0ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_2ScoEeSLVrU2ifxtpw" target="_R43_2icoEeSLVrU2ifxtpw" source="_R43_3icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_2icoEeSLVrU2ifxtpw" name="ReturnStatement@e1baffa.output" incoming="_R43_2ScoEeSLVrU2ifxtpw" outgoing="_R43_1CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_2ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_3CcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_3ScoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_R43_3icoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1).result()" outgoing="_R43_2ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_3ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_4CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_1ScoEeSLVrU2ifxtpw" name="Return" incoming="_R43_1CcoEeSLVrU2ifxtpw" parameter="_R43_0CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_1icoEeSLVrU2ifxtpw" name="Final" incoming="_R43_0ycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43_4ScoEeSLVrU2ifxtpw" name="remove$method$1" specification="_R44kBycoEeSLVrU2ifxtpw" node="_R43_7CcoEeSLVrU2ifxtpw _R43_7ScoEeSLVrU2ifxtpw _R43_7icoEeSLVrU2ifxtpw _R43_7ycoEeSLVrU2ifxtpw _R43_8CcoEeSLVrU2ifxtpw" group="_R43_8CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43_4icoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_4ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_5CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R43_5ScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_5icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_5ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_6CcoEeSLVrU2ifxtpw" target="_R43_7ScoEeSLVrU2ifxtpw" source="_R43_7CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R43_6ScoEeSLVrU2ifxtpw" target="_R43_7ycoEeSLVrU2ifxtpw" source="_R43_8ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_6icoEeSLVrU2ifxtpw" target="_R43_9ycoEeSLVrU2ifxtpw" source="_R43_7ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_6ycoEeSLVrU2ifxtpw" target="_R43_7icoEeSLVrU2ifxtpw" source="_R43_8ycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R43_8CcoEeSLVrU2ifxtpw" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R43_8ScoEeSLVrU2ifxtpw" name="ReturnStatement@49f115cc" outgoing="_R43_6ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R43_8icoEeSLVrU2ifxtpw" target="_R43_8ycoEeSLVrU2ifxtpw" source="_R43_-icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R43_8ycoEeSLVrU2ifxtpw" name="ReturnStatement@49f115cc.output" incoming="_R43_8icoEeSLVrU2ifxtpw" outgoing="_R43_6ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_9CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_9ScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R43_9icoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1)">
              <argument xmi:id="_R43_9ycoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).argument(element)" incoming="_R43_6icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_-CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43_-ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R43_-icoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).result()" outgoing="_R43_8icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43_-ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R43__CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_7CcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R43_6CcoEeSLVrU2ifxtpw" parameter="_R43_4icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R43_7ScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R43_6CcoEeSLVrU2ifxtpw" outgoing="_R43_6icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R43_7icoEeSLVrU2ifxtpw" name="Return" incoming="_R43_6ycoEeSLVrU2ifxtpw" parameter="_R43_5ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R43_7ycoEeSLVrU2ifxtpw" name="Final" incoming="_R43_6ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R43__ScoEeSLVrU2ifxtpw" name="removeAll$method$1" specification="_R44kDicoEeSLVrU2ifxtpw" node="_R44ACCcoEeSLVrU2ifxtpw _R44ACScoEeSLVrU2ifxtpw _R44ACicoEeSLVrU2ifxtpw _R44ACycoEeSLVrU2ifxtpw _R44ADCcoEeSLVrU2ifxtpw" group="_R44ADCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R43__icoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R43__ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AACcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44AAScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AAicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AAycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ABCcoEeSLVrU2ifxtpw" target="_R44ACScoEeSLVrU2ifxtpw" source="_R44ACCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44ABScoEeSLVrU2ifxtpw" target="_R44ACycoEeSLVrU2ifxtpw" source="_R44ADScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ABicoEeSLVrU2ifxtpw" target="_R44AEycoEeSLVrU2ifxtpw" source="_R44ACScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ABycoEeSLVrU2ifxtpw" target="_R44ACicoEeSLVrU2ifxtpw" source="_R44ADycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44ADCcoEeSLVrU2ifxtpw" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44ADScoEeSLVrU2ifxtpw" name="ReturnStatement@7e6b961c" outgoing="_R44ABScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ADicoEeSLVrU2ifxtpw" target="_R44ADycoEeSLVrU2ifxtpw" source="_R44AFicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44ADycoEeSLVrU2ifxtpw" name="ReturnStatement@7e6b961c.output" incoming="_R44ADicoEeSLVrU2ifxtpw" outgoing="_R44ABycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AECcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AEScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44AEicoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_R44AEycoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_R44ABicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AFCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AFScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44AFicoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).result()" outgoing="_R44ADicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AFycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AGCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ACCcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44ABCcoEeSLVrU2ifxtpw" parameter="_R43__icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44ACScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44ABCcoEeSLVrU2ifxtpw" outgoing="_R44ABicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ACicoEeSLVrU2ifxtpw" name="Return" incoming="_R44ABycoEeSLVrU2ifxtpw" parameter="_R44AAScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44ACycoEeSLVrU2ifxtpw" name="Final" incoming="_R44ABScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44AGScoEeSLVrU2ifxtpw" name="removeOne$method$1" specification="_R44kFScoEeSLVrU2ifxtpw" node="_R44AJCcoEeSLVrU2ifxtpw _R44AJScoEeSLVrU2ifxtpw _R44AJicoEeSLVrU2ifxtpw _R44AJycoEeSLVrU2ifxtpw _R44AKCcoEeSLVrU2ifxtpw" group="_R44AKCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44AGicoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AGycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AHCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44AHScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AHicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AHycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44AICcoEeSLVrU2ifxtpw" target="_R44AJScoEeSLVrU2ifxtpw" source="_R44AJCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44AIScoEeSLVrU2ifxtpw" target="_R44AJycoEeSLVrU2ifxtpw" source="_R44AKScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44AIicoEeSLVrU2ifxtpw" target="_R44ALycoEeSLVrU2ifxtpw" source="_R44AJScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44AIycoEeSLVrU2ifxtpw" target="_R44AJicoEeSLVrU2ifxtpw" source="_R44AKycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44AKCcoEeSLVrU2ifxtpw" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44AKScoEeSLVrU2ifxtpw" name="ReturnStatement@55167e58" outgoing="_R44AIScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44AKicoEeSLVrU2ifxtpw" target="_R44AKycoEeSLVrU2ifxtpw" source="_R44AMicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44AKycoEeSLVrU2ifxtpw" name="ReturnStatement@55167e58.output" incoming="_R44AKicoEeSLVrU2ifxtpw" outgoing="_R44AIycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44ALCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44ALScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44ALicoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_R44ALycoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).argument(element)" incoming="_R44AIicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AMCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AMScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44AMicoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).result()" outgoing="_R44AKicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AMycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44ANCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44AJCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44AICcoEeSLVrU2ifxtpw" parameter="_R44AGicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44AJScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44AICcoEeSLVrU2ifxtpw" outgoing="_R44AIicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44AJicoEeSLVrU2ifxtpw" name="Return" incoming="_R44AIycoEeSLVrU2ifxtpw" parameter="_R44AHScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44AJycoEeSLVrU2ifxtpw" name="Final" incoming="_R44AIScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44ANScoEeSLVrU2ifxtpw" name="replace$method$1" specification="_R44kHCcoEeSLVrU2ifxtpw" node="_R44ARScoEeSLVrU2ifxtpw _R44ARicoEeSLVrU2ifxtpw _R44ARycoEeSLVrU2ifxtpw _R44ASCcoEeSLVrU2ifxtpw _R44ASScoEeSLVrU2ifxtpw _R44ASicoEeSLVrU2ifxtpw _R44ASycoEeSLVrU2ifxtpw" group="_R44ASycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44ANicoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44ANycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AOCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44AOScoEeSLVrU2ifxtpw" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AOicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AOycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44APCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44APScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44APicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44APycoEeSLVrU2ifxtpw" target="_R44ARicoEeSLVrU2ifxtpw" source="_R44ARScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44AQCcoEeSLVrU2ifxtpw" target="_R44ASCcoEeSLVrU2ifxtpw" source="_R44ARycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44AQScoEeSLVrU2ifxtpw" target="_R44ASicoEeSLVrU2ifxtpw" source="_R44ATCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44AQicoEeSLVrU2ifxtpw" target="_R44AUicoEeSLVrU2ifxtpw" source="_R44ARicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44AQycoEeSLVrU2ifxtpw" target="_R44AVScoEeSLVrU2ifxtpw" source="_R44ASCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ARCcoEeSLVrU2ifxtpw" target="_R44ASScoEeSLVrU2ifxtpw" source="_R44ATicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44ASycoEeSLVrU2ifxtpw" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44ATCcoEeSLVrU2ifxtpw" name="ReturnStatement@3bda6b61" outgoing="_R44AQScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ATScoEeSLVrU2ifxtpw" target="_R44ATicoEeSLVrU2ifxtpw" source="_R44AWCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44ATicoEeSLVrU2ifxtpw" name="ReturnStatement@3bda6b61.output" incoming="_R44ATScoEeSLVrU2ifxtpw" outgoing="_R44ARCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44ATycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AUCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44AUScoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_R44AUicoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(element)" incoming="_R44AQicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AUycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AVCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R44AVScoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_R44AQycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44AVicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44AVycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44AWCcoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).result()" outgoing="_R44ATScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44i8CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44i8ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ARScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44APycoEeSLVrU2ifxtpw" parameter="_R44ANicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44ARicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44APycoEeSLVrU2ifxtpw" outgoing="_R44AQicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ARycoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_R44AQCcoEeSLVrU2ifxtpw" parameter="_R44AOScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44ASCcoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_R44AQCcoEeSLVrU2ifxtpw" outgoing="_R44AQycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ASScoEeSLVrU2ifxtpw" name="Return" incoming="_R44ARCcoEeSLVrU2ifxtpw" parameter="_R44APCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44ASicoEeSLVrU2ifxtpw" name="Final" incoming="_R44AQScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44i8icoEeSLVrU2ifxtpw" name="replaceOne$method$1" specification="_R44kJicoEeSLVrU2ifxtpw" node="_R44jAicoEeSLVrU2ifxtpw _R44jAycoEeSLVrU2ifxtpw _R44jBCcoEeSLVrU2ifxtpw _R44jBScoEeSLVrU2ifxtpw _R44jBicoEeSLVrU2ifxtpw _R44jBycoEeSLVrU2ifxtpw _R44jCCcoEeSLVrU2ifxtpw" group="_R44jCCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44i8ycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44i9CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44i9ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44i9icoEeSLVrU2ifxtpw" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44i9ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44i-CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44i-ScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44i-icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44i-ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44i_CcoEeSLVrU2ifxtpw" target="_R44jAycoEeSLVrU2ifxtpw" source="_R44jAicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44i_ScoEeSLVrU2ifxtpw" target="_R44jBScoEeSLVrU2ifxtpw" source="_R44jBCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44i_icoEeSLVrU2ifxtpw" target="_R44jBycoEeSLVrU2ifxtpw" source="_R44jCScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44i_ycoEeSLVrU2ifxtpw" target="_R44jDycoEeSLVrU2ifxtpw" source="_R44jAycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jACcoEeSLVrU2ifxtpw" target="_R44jEicoEeSLVrU2ifxtpw" source="_R44jBScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jAScoEeSLVrU2ifxtpw" target="_R44jBicoEeSLVrU2ifxtpw" source="_R44jCycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44jCCcoEeSLVrU2ifxtpw" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44jCScoEeSLVrU2ifxtpw" name="ReturnStatement@228d3cb6" outgoing="_R44i_icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jCicoEeSLVrU2ifxtpw" target="_R44jCycoEeSLVrU2ifxtpw" source="_R44jFScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44jCycoEeSLVrU2ifxtpw" name="ReturnStatement@228d3cb6.output" incoming="_R44jCicoEeSLVrU2ifxtpw" outgoing="_R44jAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jDCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jDScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44jDicoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_R44jDycoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_R44i_ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jECcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jEScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R44jEicoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_R44jACcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jEycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jFCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44jFScoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).result()" outgoing="_R44jCicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jFicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jFycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44jAicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44i_CcoEeSLVrU2ifxtpw" parameter="_R44i8ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44jAycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44i_CcoEeSLVrU2ifxtpw" outgoing="_R44i_ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44jBCcoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_R44i_ScoEeSLVrU2ifxtpw" parameter="_R44i9icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44jBScoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_R44i_ScoEeSLVrU2ifxtpw" outgoing="_R44jACcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44jBicoEeSLVrU2ifxtpw" name="Return" incoming="_R44jAScoEeSLVrU2ifxtpw" parameter="_R44i-ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44jBycoEeSLVrU2ifxtpw" name="Final" incoming="_R44i_icoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44jGCcoEeSLVrU2ifxtpw" name="retainAll$method$1" specification="_R44kMCcoEeSLVrU2ifxtpw" node="_R44jIycoEeSLVrU2ifxtpw _R44jJCcoEeSLVrU2ifxtpw _R44jJScoEeSLVrU2ifxtpw _R44jJicoEeSLVrU2ifxtpw _R44jJycoEeSLVrU2ifxtpw" group="_R44jJycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44jGScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jGicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jGycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44jHCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jHScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jHicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jHycoEeSLVrU2ifxtpw" target="_R44jJCcoEeSLVrU2ifxtpw" source="_R44jIycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44jICcoEeSLVrU2ifxtpw" target="_R44jJicoEeSLVrU2ifxtpw" source="_R44jKCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jIScoEeSLVrU2ifxtpw" target="_R44jLicoEeSLVrU2ifxtpw" source="_R44jJCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jIicoEeSLVrU2ifxtpw" target="_R44jJScoEeSLVrU2ifxtpw" source="_R44jKicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44jJycoEeSLVrU2ifxtpw" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44jKCcoEeSLVrU2ifxtpw" name="ReturnStatement@c266fa0" outgoing="_R44jICcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jKScoEeSLVrU2ifxtpw" target="_R44jKicoEeSLVrU2ifxtpw" source="_R44jMScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44jKicoEeSLVrU2ifxtpw" name="ReturnStatement@c266fa0.output" incoming="_R44jKScoEeSLVrU2ifxtpw" outgoing="_R44jIicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jKycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jLCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44jLScoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_R44jLicoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_R44jIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jLycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jMCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44jMScoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).result()" outgoing="_R44jKScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jMicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jMycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44jIycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44jHycoEeSLVrU2ifxtpw" parameter="_R44jGScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44jJCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44jHycoEeSLVrU2ifxtpw" outgoing="_R44jIScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44jJScoEeSLVrU2ifxtpw" name="Return" incoming="_R44jIicoEeSLVrU2ifxtpw" parameter="_R44jHCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44jJicoEeSLVrU2ifxtpw" name="Final" incoming="_R44jICcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44jNCcoEeSLVrU2ifxtpw" name="size$method$1" specification="_R44kNycoEeSLVrU2ifxtpw" node="_R44jOicoEeSLVrU2ifxtpw _R44jOycoEeSLVrU2ifxtpw _R44jPCcoEeSLVrU2ifxtpw" group="_R44jPCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44jNScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jNicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jNycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44jOCcoEeSLVrU2ifxtpw" target="_R44jOycoEeSLVrU2ifxtpw" source="_R44jPScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jOScoEeSLVrU2ifxtpw" target="_R44jOicoEeSLVrU2ifxtpw" source="_R44jPycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44jPCcoEeSLVrU2ifxtpw" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44jPScoEeSLVrU2ifxtpw" name="ReturnStatement@727cfb78" outgoing="_R44jOCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jPicoEeSLVrU2ifxtpw" target="_R44jPycoEeSLVrU2ifxtpw" source="_R44jQycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44jPycoEeSLVrU2ifxtpw" name="ReturnStatement@727cfb78.output" incoming="_R44jPicoEeSLVrU2ifxtpw" outgoing="_R44jOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jQCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jQScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44jQicoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1)">
              <result xmi:id="_R44jQycoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1).result()" outgoing="_R44jPicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jRCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jRScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44jOicoEeSLVrU2ifxtpw" name="Return" incoming="_R44jOScoEeSLVrU2ifxtpw" parameter="_R44jNScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44jOycoEeSLVrU2ifxtpw" name="Final" incoming="_R44jOCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44jRicoEeSLVrU2ifxtpw" name="toSequence$method$1" specification="_R44kOycoEeSLVrU2ifxtpw" node="_R44jTCcoEeSLVrU2ifxtpw _R44jTScoEeSLVrU2ifxtpw _R44jTicoEeSLVrU2ifxtpw" group="_R44jTicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44jRycoEeSLVrU2ifxtpw" name="" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jSCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jSScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44jSicoEeSLVrU2ifxtpw" target="_R44jTScoEeSLVrU2ifxtpw" source="_R44jTycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jSycoEeSLVrU2ifxtpw" target="_R44jTCcoEeSLVrU2ifxtpw" source="_R44jUycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44jTicoEeSLVrU2ifxtpw" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44jTycoEeSLVrU2ifxtpw" name="ReturnStatement@6ad042d7" outgoing="_R44jSicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jUCcoEeSLVrU2ifxtpw" target="_R44jWicoEeSLVrU2ifxtpw" source="_R44jXicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jUScoEeSLVrU2ifxtpw" target="_R44jcycoEeSLVrU2ifxtpw" source="_R44jVycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jUicoEeSLVrU2ifxtpw" target="_R44jUycoEeSLVrU2ifxtpw" source="_R44jdCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44jUycoEeSLVrU2ifxtpw" name="ReturnStatement@6ad042d7.output" incoming="_R44jUicoEeSLVrU2ifxtpw" outgoing="_R44jSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jVCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jVScoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R44jVicoEeSLVrU2ifxtpw" name="Call(getContent)">
              <result xmi:id="_R44jVycoEeSLVrU2ifxtpw" name="Call(getContent).result()" outgoing="_R44jUScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jWCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jWScoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <operation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-getContent"/>
              <target xmi:id="_R44jWicoEeSLVrU2ifxtpw" name="Call(getContent).target" incoming="_R44jUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jWycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jXCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_R44jXScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_R44jXicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R44jUCcoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jXycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jYCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R44jYScoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5" mode="parallel" outputElement="_R44jdCcoEeSLVrU2ifxtpw" inputElement="_R44jcycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jYicoEeSLVrU2ifxtpw" target="_R44jaycoEeSLVrU2ifxtpw" source="_R44jcScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jYycoEeSLVrU2ifxtpw" target="_R44jcicoEeSLVrU2ifxtpw" source="_R44jcScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jZCcoEeSLVrU2ifxtpw" target="_R44jcicoEeSLVrU2ifxtpw" source="_R44jbicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jZScoEeSLVrU2ifxtpw" target="_R44jaScoEeSLVrU2ifxtpw" source="_R44jcicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44jZicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jZycoEeSLVrU2ifxtpw" target="_R44jcScoEeSLVrU2ifxtpw" source="_R44jcycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jaCcoEeSLVrU2ifxtpw" target="_R44jdCcoEeSLVrU2ifxtpw" source="_R44jaScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R44jaScoEeSLVrU2ifxtpw" name="Merge(CastExpression@593fa6c5.operand)" incoming="_R44jZScoEeSLVrU2ifxtpw" outgoing="_R44jaCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R44jaicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <object xmi:id="_R44jaycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R44jYicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jbCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jbScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R44jbicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R44jZCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jbycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jcCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R44jcScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R44jZycoEeSLVrU2ifxtpw" outgoing="_R44jYicoEeSLVrU2ifxtpw _R44jYycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R44jcicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R44jYycoEeSLVrU2ifxtpw _R44jZCcoEeSLVrU2ifxtpw" outgoing="_R44jZScoEeSLVrU2ifxtpw" decisionInputFlow="_R44jZCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44jcycoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5.inputElement" incoming="_R44jUScoEeSLVrU2ifxtpw" outgoing="_R44jZycoEeSLVrU2ifxtpw" regionAsInput="_R44jYScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44jdCcoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5.outputElement" incoming="_R44jaCcoEeSLVrU2ifxtpw" outgoing="_R44jUicoEeSLVrU2ifxtpw" regionAsOutput="_R44jYScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44jTCcoEeSLVrU2ifxtpw" name="Return" incoming="_R44jSycoEeSLVrU2ifxtpw" parameter="_R44jRycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44jTScoEeSLVrU2ifxtpw" name="Final" incoming="_R44jSicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44jdScoEeSLVrU2ifxtpw" name="Set$initialization$1" specification="_R44jvScoEeSLVrU2ifxtpw" node="_R44jdicoEeSLVrU2ifxtpw" group="_R44jdicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R44jdicoEeSLVrU2ifxtpw" name="Body(Set$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jdycoEeSLVrU2ifxtpw" target="_R44jhicoEeSLVrU2ifxtpw" source="_R44jgycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jeCcoEeSLVrU2ifxtpw" target="_R44jiicoEeSLVrU2ifxtpw" source="_R44jhicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jeScoEeSLVrU2ifxtpw" target="_R44jlScoEeSLVrU2ifxtpw" source="_R44jhicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jeicoEeSLVrU2ifxtpw" target="_R44jnycoEeSLVrU2ifxtpw" source="_R44jhicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jeycoEeSLVrU2ifxtpw" target="_R44jpicoEeSLVrU2ifxtpw" source="_R44joicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jfCcoEeSLVrU2ifxtpw" target="_R44jsicoEeSLVrU2ifxtpw" source="_R44jqScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jfScoEeSLVrU2ifxtpw" target="_R44juCcoEeSLVrU2ifxtpw" source="_R44jrScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R44jficoEeSLVrU2ifxtpw" target="_R44jvCcoEeSLVrU2ifxtpw" source="_R44juycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jfycoEeSLVrU2ifxtpw" target="_R44jvCcoEeSLVrU2ifxtpw" source="_R44jtScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R44jgCcoEeSLVrU2ifxtpw" target="_R44jhycoEeSLVrU2ifxtpw" source="_R44jvCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44jgScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_R44jgicoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_R44jgycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R44jdycoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jhCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jhScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R44jhicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R44jdycoEeSLVrU2ifxtpw" outgoing="_R44jeCcoEeSLVrU2ifxtpw _R44jeScoEeSLVrU2ifxtpw _R44jeicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44jhycoEeSLVrU2ifxtpw" name="Initialization" incoming="_R44jgCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_R44jiCcoEeSLVrU2ifxtpw" target="_R44jjScoEeSLVrU2ifxtpw" source="_R44jiScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R44jiScoEeSLVrU2ifxtpw" name="Call(SetImpl$initialization$1)" outgoing="_R44jiCcoEeSLVrU2ifxtpw">
              <operation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-SetImplinitialization1.1"/>
              <target xmi:id="_R44jiicoEeSLVrU2ifxtpw" name="Call(SetImpl$initialization$1).target" incoming="_R44jeCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jiycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jjCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44jjScoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_R44jiCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44jjicoEeSLVrU2ifxtpw" target="_R44jmycoEeSLVrU2ifxtpw" source="_R44jkCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R44jjycoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_R44jkCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_R44jjicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jkScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jkicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_R44jkycoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_R44jlCcoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1)" structuralFeature="_R43-iCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_R44jlScoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).object" incoming="_R44jeScoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jlicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jlycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R44jmCcoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).result" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jmScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jmicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_R44jmycoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).value" incoming="_R44jjicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jnCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jnScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R44jnicoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1)" structuralFeature="_R43-iCcoEeSLVrU2ifxtpw">
            <object xmi:id="_R44jnycoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).object" incoming="_R44jeicoEeSLVrU2ifxtpw" type="_R43-hScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44joCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44joScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_R44joicoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).result" outgoing="_R44jeycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44joycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jpCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44jpScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_R44jpicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R44jeycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jpycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jqCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R44jqScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R44jfCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jqicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jqycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R44jrCcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_R44jrScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R44jfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jricoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jrycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_R44jsCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R44jsScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_R44jsicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R44jfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jsycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jtCcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R44jtScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R44jfycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jticoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jtycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R44juCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R44jfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44juScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44juicoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R44juycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R44jficoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R44jvCcoEeSLVrU2ifxtpw" name="Decision(Test(Set$initializationFlag$1))" incoming="_R44jficoEeSLVrU2ifxtpw _R44jfycoEeSLVrU2ifxtpw" outgoing="_R44jgCcoEeSLVrU2ifxtpw" decisionInputFlow="_R44jfycoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_R44jvScoEeSLVrU2ifxtpw" name="Set$initialization$1" visibility="protected" method="_R44jdScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R44jvicoEeSLVrU2ifxtpw" name="Set" visibility="public" method="_R43-iycoEeSLVrU2ifxtpw" redefinedOperation="_R43ZDScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44jvycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jwCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jwScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44jwicoEeSLVrU2ifxtpw" name="" visibility="package" type="_R43-hScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jwycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jxCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44jxScoEeSLVrU2ifxtpw" name="destroy" visibility="public" method="_R43-1ycoEeSLVrU2ifxtpw">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-destroy"/>
        <redefinedOperation href="#_R43ZFCcoEeSLVrU2ifxtpw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R44jxicoEeSLVrU2ifxtpw" name="add" visibility="public" method="_R43-2ScoEeSLVrU2ifxtpw" redefinedOperation="_R43ZFicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44jxycoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jyCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jyScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44jyicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jyycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44jzCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44jzScoEeSLVrU2ifxtpw" name="addAll" visibility="public" method="_R43-9ScoEeSLVrU2ifxtpw" redefinedOperation="_R43ZGycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44jzicoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44jzycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j0CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44j0ScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j0icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j0ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44j1CcoEeSLVrU2ifxtpw" name="clear" visibility="public" method="_R43_EScoEeSLVrU2ifxtpw" redefinedOperation="_R438AicoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R44j1ScoEeSLVrU2ifxtpw" name="count" visibility="public" method="_R43_FScoEeSLVrU2ifxtpw" redefinedOperation="_R4375ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44j1icoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j1ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j2CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44j2ScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j2icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j2ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44j3CcoEeSLVrU2ifxtpw" name="equals" visibility="public" method="_R43_MScoEeSLVrU2ifxtpw" redefinedOperation="_R4376icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44j3ScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j3icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j3ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44j4CcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j4ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j4icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44j4ycoEeSLVrU2ifxtpw" name="excludes" visibility="public" method="_R43_TScoEeSLVrU2ifxtpw" redefinedOperation="_R438EScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44j5CcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j5ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j5icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44j5ycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j6CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j6ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44j6icoEeSLVrU2ifxtpw" name="excludesAll" visibility="public" method="_R43_aScoEeSLVrU2ifxtpw" redefinedOperation="_R438FycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44j6ycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j7CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j7ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44j7icoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j7ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j8CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44j8ScoEeSLVrU2ifxtpw" name="includes" visibility="public" method="_R43_hScoEeSLVrU2ifxtpw" redefinedOperation="_R438HicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44j8icoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j8ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j9CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44j9ScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j9icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j9ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44j-CcoEeSLVrU2ifxtpw" name="includesAll" visibility="public" method="_R43_oScoEeSLVrU2ifxtpw" redefinedOperation="_R438JCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44j-ScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j-icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j-ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44j_CcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44j_ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44j_icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44j_ycoEeSLVrU2ifxtpw" name="isEmpty" visibility="public" method="_R43_vScoEeSLVrU2ifxtpw" redefinedOperation="_R438KycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kACcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kAScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kAicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kAycoEeSLVrU2ifxtpw" name="notEmpty" visibility="public" method="_R43_zycoEeSLVrU2ifxtpw" redefinedOperation="_R438LycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kBCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kBScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kBicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kBycoEeSLVrU2ifxtpw" name="remove" visibility="public" method="_R43_4ScoEeSLVrU2ifxtpw" redefinedOperation="_R438MicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kCCcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kCScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kCicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kCycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kDCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kDScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kDicoEeSLVrU2ifxtpw" name="removeAll" visibility="public" method="_R43__ScoEeSLVrU2ifxtpw" redefinedOperation="_R438NicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kDycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kECcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kEScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kEicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kEycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kFCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kFScoEeSLVrU2ifxtpw" name="removeOne" visibility="public" method="_R44AGScoEeSLVrU2ifxtpw" redefinedOperation="_R438PScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kFicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kFycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kGCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kGScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kGicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kGycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kHCcoEeSLVrU2ifxtpw" name="replace" visibility="public" method="_R44ANScoEeSLVrU2ifxtpw" redefinedOperation="_R438QicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kHScoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kHicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kHycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kICcoEeSLVrU2ifxtpw" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kIScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kIicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kIycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kJCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kJScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kJicoEeSLVrU2ifxtpw" name="replaceOne" visibility="public" method="_R44i8icoEeSLVrU2ifxtpw" redefinedOperation="_R438SScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kJycoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kKCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kKScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kKicoEeSLVrU2ifxtpw" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kKycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kLCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kLScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kLicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kLycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kMCcoEeSLVrU2ifxtpw" name="retainAll" visibility="public" method="_R44jGCcoEeSLVrU2ifxtpw" redefinedOperation="_R438UCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kMScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kMicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kMycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kNCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kNScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kNicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kNycoEeSLVrU2ifxtpw" name="size" visibility="public" method="_R44jNCcoEeSLVrU2ifxtpw" redefinedOperation="_R438VycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kOCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kOScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kOicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R44kOycoEeSLVrU2ifxtpw" name="toSequence" visibility="public" method="_R44jRicoEeSLVrU2ifxtpw" redefinedOperation="_R438WycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kPCcoEeSLVrU2ifxtpw" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kPScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kPicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R44kPycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R44kQCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R44kQScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b3EdYXREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b3EdIXREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R44kQicoEeSLVrU2ifxtpw" client="_R43-hScoEeSLVrU2ifxtpw" supplier="_R44kPycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R44kQycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__">
      <generalization xmi:id="_R44kRCcoEeSLVrU2ifxtpw">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
      </generalization>
      <generalization xmi:id="_R44kRScoEeSLVrU2ifxtpw" general="_R438aScoEeSLVrU2ifxtpw"/>
      <ownedAttribute xmi:id="_R44kRicoEeSLVrU2ifxtpw" name="List$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kRycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kSCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44kSScoEeSLVrU2ifxtpw" name="List$method$1" specification="_R45KXycoEeSLVrU2ifxtpw" node="_R44kUycoEeSLVrU2ifxtpw _R44kVCcoEeSLVrU2ifxtpw _R44kVScoEeSLVrU2ifxtpw _R44kVicoEeSLVrU2ifxtpw" group="_R44kVicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kSicoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kSycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kTCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kTScoEeSLVrU2ifxtpw" name="" type="_R44kQycoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kTicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kTycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kUCcoEeSLVrU2ifxtpw" target="_R44kVCcoEeSLVrU2ifxtpw" source="_R44kUycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kUScoEeSLVrU2ifxtpw" target="_R44kVScoEeSLVrU2ifxtpw" source="_R44kaCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kUicoEeSLVrU2ifxtpw" target="_R44kbCcoEeSLVrU2ifxtpw" source="_R44kVCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44kVicoEeSLVrU2ifxtpw" name="Body(List$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kVycoEeSLVrU2ifxtpw" target="_R44kaCcoEeSLVrU2ifxtpw" source="_R44kZScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kWCcoEeSLVrU2ifxtpw" target="_R44kcycoEeSLVrU2ifxtpw" source="_R44kaCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R44kWScoEeSLVrU2ifxtpw" target="_R44kYycoEeSLVrU2ifxtpw" source="_R44kcicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R44kWicoEeSLVrU2ifxtpw" target="_R44kcicoEeSLVrU2ifxtpw" source="_R44kaScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kWycoEeSLVrU2ifxtpw" target="_R44kdycoEeSLVrU2ifxtpw" source="_R44kaCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kXCcoEeSLVrU2ifxtpw" target="_R44kficoEeSLVrU2ifxtpw" source="_R44keicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kXScoEeSLVrU2ifxtpw" target="_R44kiicoEeSLVrU2ifxtpw" source="_R44kgScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kXicoEeSLVrU2ifxtpw" target="_R44kkCcoEeSLVrU2ifxtpw" source="_R44khScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R44kXycoEeSLVrU2ifxtpw" target="_R44klCcoEeSLVrU2ifxtpw" source="_R44kkycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kYCcoEeSLVrU2ifxtpw" target="_R44klCcoEeSLVrU2ifxtpw" source="_R44kjScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R44kYScoEeSLVrU2ifxtpw" target="_R44kaScoEeSLVrU2ifxtpw" source="_R44klCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44kYicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44kYycoEeSLVrU2ifxtpw" name="Body" incoming="_R44kWScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_R44kZCcoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_R44kZScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R44kVycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kZicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kZycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R44kaCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R44kVycoEeSLVrU2ifxtpw" outgoing="_R44kUScoEeSLVrU2ifxtpw _R44kWCcoEeSLVrU2ifxtpw _R44kWycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44kaScoEeSLVrU2ifxtpw" name="Super" incoming="_R44kYScoEeSLVrU2ifxtpw" outgoing="_R44kWicoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44kaicoEeSLVrU2ifxtpw" name="ExpressionStatement@4120ad65">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44kaycoEeSLVrU2ifxtpw" name="Call(ListImpl$method$1)">
                <argument xmi:id="_R44kbCcoEeSLVrU2ifxtpw" name="Call(ListImpl$method$1).argument(seq)" incoming="_R44kUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kbScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kbicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R44kbycoEeSLVrU2ifxtpw" name="Call(ListImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kcCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kcScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#ListImpl-ListImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_R44kcicoEeSLVrU2ifxtpw" name="Call(List$initialization$1)" incoming="_R44kWicoEeSLVrU2ifxtpw" outgoing="_R44kWScoEeSLVrU2ifxtpw" operation="_R45KXicoEeSLVrU2ifxtpw">
            <target xmi:id="_R44kcycoEeSLVrU2ifxtpw" name="Call(List$initialization$1).target" incoming="_R44kWCcoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kdCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kdScoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R44kdicoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1)" structuralFeature="_R44kRicoEeSLVrU2ifxtpw">
            <object xmi:id="_R44kdycoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1).object" incoming="_R44kWycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44keCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44keScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_R44keicoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1).result" outgoing="_R44kXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44keycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kfCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44kfScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_R44kficoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R44kXCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kfycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kgCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R44kgScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R44kXScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kgicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kgycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R44khCcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_R44khScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R44kXicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44khicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44khycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_R44kiCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R44kiScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_R44kiicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R44kXScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kiycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kjCcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R44kjScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R44kYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kjicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kjycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R44kkCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R44kXicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kkScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kkicoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R44kkycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R44kXycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R44klCcoEeSLVrU2ifxtpw" name="Decision(Test(List$initializationFlag$1))" incoming="_R44kXycoEeSLVrU2ifxtpw _R44kYCcoEeSLVrU2ifxtpw" outgoing="_R44kYScoEeSLVrU2ifxtpw" decisionInputFlow="_R44kYCcoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44kUycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44kUCcoEeSLVrU2ifxtpw" parameter="_R44kSicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44kVCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44kUCcoEeSLVrU2ifxtpw" outgoing="_R44kUicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44kVScoEeSLVrU2ifxtpw" name="Return" incoming="_R44kUScoEeSLVrU2ifxtpw" parameter="_R44kTScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44klScoEeSLVrU2ifxtpw" name="destroy$method$2" specification="_R45KZicoEeSLVrU2ifxtpw" node="_R44klicoEeSLVrU2ifxtpw" group="_R44klicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R44klicoEeSLVrU2ifxtpw" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44klycoEeSLVrU2ifxtpw" name="add$method$1" specification="_R45KZycoEeSLVrU2ifxtpw" node="_R44koicoEeSLVrU2ifxtpw _R44koycoEeSLVrU2ifxtpw _R44kpCcoEeSLVrU2ifxtpw _R44kpScoEeSLVrU2ifxtpw _R44kpicoEeSLVrU2ifxtpw" group="_R44kpicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44kmCcoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kmScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kmicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kmycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44knCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44knScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44knicoEeSLVrU2ifxtpw" target="_R44koycoEeSLVrU2ifxtpw" source="_R44koicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44knycoEeSLVrU2ifxtpw" target="_R44kpScoEeSLVrU2ifxtpw" source="_R44kpycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44koCcoEeSLVrU2ifxtpw" target="_R44krScoEeSLVrU2ifxtpw" source="_R44koycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44koScoEeSLVrU2ifxtpw" target="_R44kpCcoEeSLVrU2ifxtpw" source="_R44kqScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44kpicoEeSLVrU2ifxtpw" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44kpycoEeSLVrU2ifxtpw" name="ReturnStatement@6c970086" outgoing="_R44knycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kqCcoEeSLVrU2ifxtpw" target="_R44kqScoEeSLVrU2ifxtpw" source="_R44ksCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44kqScoEeSLVrU2ifxtpw" name="ReturnStatement@6c970086.output" incoming="_R44kqCcoEeSLVrU2ifxtpw" outgoing="_R44koScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kqicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kqycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44krCcoEeSLVrU2ifxtpw" name="Call(addImpl$method$1)">
              <argument xmi:id="_R44krScoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).argument(element)" incoming="_R44koCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kricoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44krycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44ksCcoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).result()" outgoing="_R44kqCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44ksScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44ksicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44koicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44knicoEeSLVrU2ifxtpw" parameter="_R44kmCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44koycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44knicoEeSLVrU2ifxtpw" outgoing="_R44koCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44kpCcoEeSLVrU2ifxtpw" name="Return" incoming="_R44koScoEeSLVrU2ifxtpw" parameter="_R44kmycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44kpScoEeSLVrU2ifxtpw" name="Final" incoming="_R44knycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44ksycoEeSLVrU2ifxtpw" name="addAt$method$1" specification="_R45KbicoEeSLVrU2ifxtpw" node="_R44kwycoEeSLVrU2ifxtpw _R44kxCcoEeSLVrU2ifxtpw _R44kxScoEeSLVrU2ifxtpw _R44kxicoEeSLVrU2ifxtpw _R44kxycoEeSLVrU2ifxtpw _R44kyCcoEeSLVrU2ifxtpw _R44kyScoEeSLVrU2ifxtpw" group="_R44kyScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44ktCcoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44ktScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kticoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44ktycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kuCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kuScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44kuicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kuycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kvCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kvScoEeSLVrU2ifxtpw" target="_R44kxCcoEeSLVrU2ifxtpw" source="_R44kwycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kvicoEeSLVrU2ifxtpw" target="_R44kxicoEeSLVrU2ifxtpw" source="_R44kxScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44kvycoEeSLVrU2ifxtpw" target="_R44kyCcoEeSLVrU2ifxtpw" source="_R44kyicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kwCcoEeSLVrU2ifxtpw" target="_R44k0CcoEeSLVrU2ifxtpw" source="_R44kxCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kwScoEeSLVrU2ifxtpw" target="_R44k0ycoEeSLVrU2ifxtpw" source="_R44kxicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kwicoEeSLVrU2ifxtpw" target="_R44kxycoEeSLVrU2ifxtpw" source="_R44kzCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44kyScoEeSLVrU2ifxtpw" name="Body(addAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44kyicoEeSLVrU2ifxtpw" name="ReturnStatement@11e70f62" outgoing="_R44kvycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44kyycoEeSLVrU2ifxtpw" target="_R44kzCcoEeSLVrU2ifxtpw" source="_R44k1icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44kzCcoEeSLVrU2ifxtpw" name="ReturnStatement@11e70f62.output" incoming="_R44kyycoEeSLVrU2ifxtpw" outgoing="_R44kwicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44kzScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44kzicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44kzycoEeSLVrU2ifxtpw" name="Call(addAtImpl$method$1)">
              <argument xmi:id="_R44k0CcoEeSLVrU2ifxtpw" name="Call(addAtImpl$method$1).argument(index)" incoming="_R44kwCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k0ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k0icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R44k0ycoEeSLVrU2ifxtpw" name="Call(addAtImpl$method$1).argument(element)" incoming="_R44kwScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k1CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k1ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44k1icoEeSLVrU2ifxtpw" name="Call(addAtImpl$method$1).result()" outgoing="_R44kyycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k1ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k2CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-addAtImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44kwycoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R44kvScoEeSLVrU2ifxtpw" parameter="_R44ktCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44kxCcoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R44kvScoEeSLVrU2ifxtpw" outgoing="_R44kwCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44kxScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44kvicoEeSLVrU2ifxtpw" parameter="_R44ktycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44kxicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44kvicoEeSLVrU2ifxtpw" outgoing="_R44kwScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44kxycoEeSLVrU2ifxtpw" name="Return" incoming="_R44kwicoEeSLVrU2ifxtpw" parameter="_R44kuicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44kyCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44kvycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44k2ScoEeSLVrU2ifxtpw" name="addAll$method$1" specification="_R45KeCcoEeSLVrU2ifxtpw" node="_R44k5CcoEeSLVrU2ifxtpw _R44k5ScoEeSLVrU2ifxtpw _R44k5icoEeSLVrU2ifxtpw _R44k5ycoEeSLVrU2ifxtpw _R44k6CcoEeSLVrU2ifxtpw" group="_R44k6CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44k2icoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k2ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k3CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44k3ScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k3icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k3ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44k4CcoEeSLVrU2ifxtpw" target="_R44k5ScoEeSLVrU2ifxtpw" source="_R44k5CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44k4ScoEeSLVrU2ifxtpw" target="_R44k5ycoEeSLVrU2ifxtpw" source="_R44k6ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44k4icoEeSLVrU2ifxtpw" target="_R44k7ycoEeSLVrU2ifxtpw" source="_R44k5ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44k4ycoEeSLVrU2ifxtpw" target="_R44k5icoEeSLVrU2ifxtpw" source="_R44k6ycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44k6CcoEeSLVrU2ifxtpw" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44k6ScoEeSLVrU2ifxtpw" name="ReturnStatement@4b0900c8" outgoing="_R44k4ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44k6icoEeSLVrU2ifxtpw" target="_R44k6ycoEeSLVrU2ifxtpw" source="_R44k8icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44k6ycoEeSLVrU2ifxtpw" name="ReturnStatement@4b0900c8.output" incoming="_R44k6icoEeSLVrU2ifxtpw" outgoing="_R44k4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k7CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k7ScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44k7icoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_R44k7ycoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).argument(seq)" incoming="_R44k4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k8CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k8ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44k8icoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).result()" outgoing="_R44k6icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k8ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k9CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44k5CcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44k4CcoEeSLVrU2ifxtpw" parameter="_R44k2icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44k5ScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44k4CcoEeSLVrU2ifxtpw" outgoing="_R44k4icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44k5icoEeSLVrU2ifxtpw" name="Return" incoming="_R44k4ycoEeSLVrU2ifxtpw" parameter="_R44k3ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44k5ycoEeSLVrU2ifxtpw" name="Final" incoming="_R44k4ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44k9ScoEeSLVrU2ifxtpw" name="addAllAt$method$1" specification="_R45KfycoEeSLVrU2ifxtpw" node="_R44lBScoEeSLVrU2ifxtpw _R44lBicoEeSLVrU2ifxtpw _R44lBycoEeSLVrU2ifxtpw _R44lCCcoEeSLVrU2ifxtpw _R44lCScoEeSLVrU2ifxtpw _R44lCicoEeSLVrU2ifxtpw _R44lCycoEeSLVrU2ifxtpw" group="_R44lCycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44k9icoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k9ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k-CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44k-ScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k-icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k-ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44k_CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44k_ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44k_icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44k_ycoEeSLVrU2ifxtpw" target="_R44lBicoEeSLVrU2ifxtpw" source="_R44lBScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lACcoEeSLVrU2ifxtpw" target="_R44lCCcoEeSLVrU2ifxtpw" source="_R44lBycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44lAScoEeSLVrU2ifxtpw" target="_R44lCicoEeSLVrU2ifxtpw" source="_R44lDCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lAicoEeSLVrU2ifxtpw" target="_R44lEicoEeSLVrU2ifxtpw" source="_R44lBicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lAycoEeSLVrU2ifxtpw" target="_R44lFScoEeSLVrU2ifxtpw" source="_R44lCCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lBCcoEeSLVrU2ifxtpw" target="_R44lCScoEeSLVrU2ifxtpw" source="_R44lDicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44lCycoEeSLVrU2ifxtpw" name="Body(addAllAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44lDCcoEeSLVrU2ifxtpw" name="ReturnStatement@a3fb526" outgoing="_R44lAScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lDScoEeSLVrU2ifxtpw" target="_R44lDicoEeSLVrU2ifxtpw" source="_R44lGCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44lDicoEeSLVrU2ifxtpw" name="ReturnStatement@a3fb526.output" incoming="_R44lDScoEeSLVrU2ifxtpw" outgoing="_R44lBCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lDycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lECcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44lEScoEeSLVrU2ifxtpw" name="Call(addAllAtImpl$method$1)">
              <argument xmi:id="_R44lEicoEeSLVrU2ifxtpw" name="Call(addAllAtImpl$method$1).argument(index)" incoming="_R44lAicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lEycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lFCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R44lFScoEeSLVrU2ifxtpw" name="Call(addAllAtImpl$method$1).argument(seq)" incoming="_R44lAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lFicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lFycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44lGCcoEeSLVrU2ifxtpw" name="Call(addAllAtImpl$method$1).result()" outgoing="_R44lDScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lGScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lGicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-addAllAtImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44lBScoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R44k_ycoEeSLVrU2ifxtpw" parameter="_R44k9icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44lBicoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R44k_ycoEeSLVrU2ifxtpw" outgoing="_R44lAicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44lBycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44lACcoEeSLVrU2ifxtpw" parameter="_R44k-ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44lCCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44lACcoEeSLVrU2ifxtpw" outgoing="_R44lAycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44lCScoEeSLVrU2ifxtpw" name="Return" incoming="_R44lBCcoEeSLVrU2ifxtpw" parameter="_R44k_CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44lCicoEeSLVrU2ifxtpw" name="Final" incoming="_R44lAScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44lGycoEeSLVrU2ifxtpw" name="at$method$1" specification="_R45KiScoEeSLVrU2ifxtpw" node="_R44lJicoEeSLVrU2ifxtpw _R44lJycoEeSLVrU2ifxtpw _R44lKCcoEeSLVrU2ifxtpw _R44lKScoEeSLVrU2ifxtpw _R44lKicoEeSLVrU2ifxtpw" group="_R44lKicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44lHCcoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lHScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lHicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44lHycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lICcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lIScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lIicoEeSLVrU2ifxtpw" target="_R44lJycoEeSLVrU2ifxtpw" source="_R44lJicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44lIycoEeSLVrU2ifxtpw" target="_R44lKScoEeSLVrU2ifxtpw" source="_R44lKycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lJCcoEeSLVrU2ifxtpw" target="_R44lMicoEeSLVrU2ifxtpw" source="_R44lJycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lJScoEeSLVrU2ifxtpw" target="_R44lKCcoEeSLVrU2ifxtpw" source="_R44lLicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44lKicoEeSLVrU2ifxtpw" name="Body(at$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44lKycoEeSLVrU2ifxtpw" name="ReturnStatement@7d224d90" outgoing="_R44lIycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lLCcoEeSLVrU2ifxtpw" target="_R44lSicoEeSLVrU2ifxtpw" source="_R44lNScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lLScoEeSLVrU2ifxtpw" target="_R44lLicoEeSLVrU2ifxtpw" source="_R44lSycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44lLicoEeSLVrU2ifxtpw" name="ReturnStatement@7d224d90.output" incoming="_R44lLScoEeSLVrU2ifxtpw" outgoing="_R44lJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lLycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lMCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44lMScoEeSLVrU2ifxtpw" name="Call(atImpl$method$1)">
              <argument xmi:id="_R44lMicoEeSLVrU2ifxtpw" name="Call(atImpl$method$1).argument(index)" incoming="_R44lJCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lMycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lNCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44lNScoEeSLVrU2ifxtpw" name="Call(atImpl$method$1).result()" outgoing="_R44lLCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lNicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lNycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-atImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R44lOCcoEeSLVrU2ifxtpw" name="CastExpression@60e88620" mode="parallel" outputElement="_R44lSycoEeSLVrU2ifxtpw" inputElement="_R44lSicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lOScoEeSLVrU2ifxtpw" target="_R44lQicoEeSLVrU2ifxtpw" source="_R44lSCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lOicoEeSLVrU2ifxtpw" target="_R44lSScoEeSLVrU2ifxtpw" source="_R44lSCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lOycoEeSLVrU2ifxtpw" target="_R44lSScoEeSLVrU2ifxtpw" source="_R44lRScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lPCcoEeSLVrU2ifxtpw" target="_R44lQCcoEeSLVrU2ifxtpw" source="_R44lSScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44lPScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lPicoEeSLVrU2ifxtpw" target="_R44lSCcoEeSLVrU2ifxtpw" source="_R44lSicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lPycoEeSLVrU2ifxtpw" target="_R44lSycoEeSLVrU2ifxtpw" source="_R44lQCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R44lQCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@60e88620.operand)" incoming="_R44lPCcoEeSLVrU2ifxtpw" outgoing="_R44lPycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R44lQScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_R44lQicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R44lOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lQycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lRCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R44lRScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R44lOycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lRicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lRycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R44lSCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R44lPicoEeSLVrU2ifxtpw" outgoing="_R44lOScoEeSLVrU2ifxtpw _R44lOicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R44lSScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R44lOicoEeSLVrU2ifxtpw _R44lOycoEeSLVrU2ifxtpw" outgoing="_R44lPCcoEeSLVrU2ifxtpw" decisionInputFlow="_R44lOycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44lSicoEeSLVrU2ifxtpw" name="CastExpression@60e88620.inputElement" incoming="_R44lLCcoEeSLVrU2ifxtpw" outgoing="_R44lPicoEeSLVrU2ifxtpw" regionAsInput="_R44lOCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44lSycoEeSLVrU2ifxtpw" name="CastExpression@60e88620.outputElement" incoming="_R44lPycoEeSLVrU2ifxtpw" outgoing="_R44lLScoEeSLVrU2ifxtpw" regionAsOutput="_R44lOCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44lJicoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R44lIicoEeSLVrU2ifxtpw" parameter="_R44lHCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44lJycoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R44lIicoEeSLVrU2ifxtpw" outgoing="_R44lJCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44lKCcoEeSLVrU2ifxtpw" name="Return" incoming="_R44lJScoEeSLVrU2ifxtpw" parameter="_R44lHycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44lKScoEeSLVrU2ifxtpw" name="Final" incoming="_R44lIycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44lTCcoEeSLVrU2ifxtpw" name="clear$method$1" specification="_R45KkCcoEeSLVrU2ifxtpw" node="_R44lTScoEeSLVrU2ifxtpw" group="_R44lTScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R44lTScoEeSLVrU2ifxtpw" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44lTicoEeSLVrU2ifxtpw" name="ExpressionStatement@46346072">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44lTycoEeSLVrU2ifxtpw" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44lUCcoEeSLVrU2ifxtpw" name="count$method$1" specification="_R45KkScoEeSLVrU2ifxtpw" node="_R44lWycoEeSLVrU2ifxtpw _R44lXCcoEeSLVrU2ifxtpw _R44lXScoEeSLVrU2ifxtpw _R44lXicoEeSLVrU2ifxtpw _R44lXycoEeSLVrU2ifxtpw" group="_R44lXycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44lUScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lUicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lUycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44lVCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lVScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lVicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lVycoEeSLVrU2ifxtpw" target="_R44lXCcoEeSLVrU2ifxtpw" source="_R44lWycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44lWCcoEeSLVrU2ifxtpw" target="_R44lXicoEeSLVrU2ifxtpw" source="_R44lYCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lWScoEeSLVrU2ifxtpw" target="_R44lZicoEeSLVrU2ifxtpw" source="_R44lXCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lWicoEeSLVrU2ifxtpw" target="_R44lXScoEeSLVrU2ifxtpw" source="_R44lYicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44lXycoEeSLVrU2ifxtpw" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44lYCcoEeSLVrU2ifxtpw" name="ReturnStatement@1dea3324" outgoing="_R44lWCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lYScoEeSLVrU2ifxtpw" target="_R44lYicoEeSLVrU2ifxtpw" source="_R44laScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44lYicoEeSLVrU2ifxtpw" name="ReturnStatement@1dea3324.output" incoming="_R44lYScoEeSLVrU2ifxtpw" outgoing="_R44lWicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lYycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lZCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44lZScoEeSLVrU2ifxtpw" name="Call(countImpl$method$1)">
              <argument xmi:id="_R44lZicoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).argument(element)" incoming="_R44lWScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lZycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44laCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44laScoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).result()" outgoing="_R44lYScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44laicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44laycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44lWycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44lVycoEeSLVrU2ifxtpw" parameter="_R44lUScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44lXCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44lVycoEeSLVrU2ifxtpw" outgoing="_R44lWScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44lXScoEeSLVrU2ifxtpw" name="Return" incoming="_R44lWicoEeSLVrU2ifxtpw" parameter="_R44lVCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44lXicoEeSLVrU2ifxtpw" name="Final" incoming="_R44lWCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44lbCcoEeSLVrU2ifxtpw" name="equals$method$1" specification="_R45KmCcoEeSLVrU2ifxtpw" node="_R44ldycoEeSLVrU2ifxtpw _R44leCcoEeSLVrU2ifxtpw _R44leScoEeSLVrU2ifxtpw _R44leicoEeSLVrU2ifxtpw _R44leycoEeSLVrU2ifxtpw" group="_R44leycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44lbScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lbicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lbycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44lcCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lcScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lcicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lcycoEeSLVrU2ifxtpw" target="_R44leCcoEeSLVrU2ifxtpw" source="_R44ldycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44ldCcoEeSLVrU2ifxtpw" target="_R44leicoEeSLVrU2ifxtpw" source="_R44lfCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ldScoEeSLVrU2ifxtpw" target="_R44lgicoEeSLVrU2ifxtpw" source="_R44leCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ldicoEeSLVrU2ifxtpw" target="_R44leScoEeSLVrU2ifxtpw" source="_R44lficoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44leycoEeSLVrU2ifxtpw" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44lfCcoEeSLVrU2ifxtpw" name="ReturnStatement@4b347dad" outgoing="_R44ldCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lfScoEeSLVrU2ifxtpw" target="_R44lficoEeSLVrU2ifxtpw" source="_R44lhScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44lficoEeSLVrU2ifxtpw" name="ReturnStatement@4b347dad.output" incoming="_R44lfScoEeSLVrU2ifxtpw" outgoing="_R44ldicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lfycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lgCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44lgScoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_R44lgicoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).argument(seq)" incoming="_R44ldScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lgycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lhCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44lhScoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).result()" outgoing="_R44lfScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lhicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lhycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ldycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44lcycoEeSLVrU2ifxtpw" parameter="_R44lbScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44leCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44lcycoEeSLVrU2ifxtpw" outgoing="_R44ldScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44leScoEeSLVrU2ifxtpw" name="Return" incoming="_R44ldicoEeSLVrU2ifxtpw" parameter="_R44lcCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44leicoEeSLVrU2ifxtpw" name="Final" incoming="_R44ldCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44liCcoEeSLVrU2ifxtpw" name="first$method$1" specification="_R45KnycoEeSLVrU2ifxtpw" node="_R44ljicoEeSLVrU2ifxtpw _R44ljycoEeSLVrU2ifxtpw _R44lkCcoEeSLVrU2ifxtpw" group="_R44lkCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44liScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44liicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44liycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44ljCcoEeSLVrU2ifxtpw" target="_R44ljycoEeSLVrU2ifxtpw" source="_R44lkScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ljScoEeSLVrU2ifxtpw" target="_R44ljicoEeSLVrU2ifxtpw" source="_R44llCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44lkCcoEeSLVrU2ifxtpw" name="Body(first$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44lkScoEeSLVrU2ifxtpw" name="ReturnStatement@9457b0f" outgoing="_R44ljCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lkicoEeSLVrU2ifxtpw" target="_R44lrScoEeSLVrU2ifxtpw" source="_R44lmCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lkycoEeSLVrU2ifxtpw" target="_R44llCcoEeSLVrU2ifxtpw" source="_R44lricoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44llCcoEeSLVrU2ifxtpw" name="ReturnStatement@9457b0f.output" incoming="_R44lkycoEeSLVrU2ifxtpw" outgoing="_R44ljScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44llScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44llicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44llycoEeSLVrU2ifxtpw" name="Call(firstImpl$method$1)">
              <result xmi:id="_R44lmCcoEeSLVrU2ifxtpw" name="Call(firstImpl$method$1).result()" outgoing="_R44lkicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lmScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lmicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-firstImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R44lmycoEeSLVrU2ifxtpw" name="CastExpression@71749bbd" mode="parallel" outputElement="_R44lricoEeSLVrU2ifxtpw" inputElement="_R44lrScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lnCcoEeSLVrU2ifxtpw" target="_R44lpScoEeSLVrU2ifxtpw" source="_R44lqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lnScoEeSLVrU2ifxtpw" target="_R44lrCcoEeSLVrU2ifxtpw" source="_R44lqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lnicoEeSLVrU2ifxtpw" target="_R44lrCcoEeSLVrU2ifxtpw" source="_R44lqCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lnycoEeSLVrU2ifxtpw" target="_R44loycoEeSLVrU2ifxtpw" source="_R44lrCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44loCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44loScoEeSLVrU2ifxtpw" target="_R44lqycoEeSLVrU2ifxtpw" source="_R44lrScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44loicoEeSLVrU2ifxtpw" target="_R44lricoEeSLVrU2ifxtpw" source="_R44loycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R44loycoEeSLVrU2ifxtpw" name="Merge(CastExpression@71749bbd.operand)" incoming="_R44lnycoEeSLVrU2ifxtpw" outgoing="_R44loicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R44lpCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_R44lpScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R44lnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lpicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lpycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R44lqCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R44lnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lqScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lqicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R44lqycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R44loScoEeSLVrU2ifxtpw" outgoing="_R44lnCcoEeSLVrU2ifxtpw _R44lnScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R44lrCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R44lnScoEeSLVrU2ifxtpw _R44lnicoEeSLVrU2ifxtpw" outgoing="_R44lnycoEeSLVrU2ifxtpw" decisionInputFlow="_R44lnicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44lrScoEeSLVrU2ifxtpw" name="CastExpression@71749bbd.inputElement" incoming="_R44lkicoEeSLVrU2ifxtpw" outgoing="_R44loScoEeSLVrU2ifxtpw" regionAsInput="_R44lmycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44lricoEeSLVrU2ifxtpw" name="CastExpression@71749bbd.outputElement" incoming="_R44loicoEeSLVrU2ifxtpw" outgoing="_R44lkycoEeSLVrU2ifxtpw" regionAsOutput="_R44lmycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ljicoEeSLVrU2ifxtpw" name="Return" incoming="_R44ljScoEeSLVrU2ifxtpw" parameter="_R44liScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44ljycoEeSLVrU2ifxtpw" name="Final" incoming="_R44ljCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44lrycoEeSLVrU2ifxtpw" name="indexOf$method$1" specification="_R45KoycoEeSLVrU2ifxtpw" node="_R44luicoEeSLVrU2ifxtpw _R44luycoEeSLVrU2ifxtpw _R44lvCcoEeSLVrU2ifxtpw _R44lvScoEeSLVrU2ifxtpw _R44lvicoEeSLVrU2ifxtpw" group="_R44lvicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44lsCcoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lsScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lsicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44lsycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44ltCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44ltScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lticoEeSLVrU2ifxtpw" target="_R44luycoEeSLVrU2ifxtpw" source="_R44luicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44ltycoEeSLVrU2ifxtpw" target="_R44lvScoEeSLVrU2ifxtpw" source="_R44lvycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44luCcoEeSLVrU2ifxtpw" target="_R44lxScoEeSLVrU2ifxtpw" source="_R44luycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44luScoEeSLVrU2ifxtpw" target="_R44lvCcoEeSLVrU2ifxtpw" source="_R44lwScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44lvicoEeSLVrU2ifxtpw" name="Body(indexOf$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44lvycoEeSLVrU2ifxtpw" name="ReturnStatement@7000f98d" outgoing="_R44ltycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44lwCcoEeSLVrU2ifxtpw" target="_R44lwScoEeSLVrU2ifxtpw" source="_R44lyCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44lwScoEeSLVrU2ifxtpw" name="ReturnStatement@7000f98d.output" incoming="_R44lwCcoEeSLVrU2ifxtpw" outgoing="_R44luScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lwicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lwycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44lxCcoEeSLVrU2ifxtpw" name="Call(indexOfImpl$method$1)">
              <argument xmi:id="_R44lxScoEeSLVrU2ifxtpw" name="Call(indexOfImpl$method$1).argument(element)" incoming="_R44luCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lxicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lxycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44lyCcoEeSLVrU2ifxtpw" name="Call(indexOfImpl$method$1).result()" outgoing="_R44lwCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lyScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lyicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-indexOfImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44luicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44lticoEeSLVrU2ifxtpw" parameter="_R44lsCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44luycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44lticoEeSLVrU2ifxtpw" outgoing="_R44luCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44lvCcoEeSLVrU2ifxtpw" name="Return" incoming="_R44luScoEeSLVrU2ifxtpw" parameter="_R44lsycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44lvScoEeSLVrU2ifxtpw" name="Final" incoming="_R44ltycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44lyycoEeSLVrU2ifxtpw" name="last$method$1" specification="_R45KqicoEeSLVrU2ifxtpw" node="_R44l0ScoEeSLVrU2ifxtpw _R44l0icoEeSLVrU2ifxtpw _R44l0ycoEeSLVrU2ifxtpw" group="_R44l0ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44lzCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44lzScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44lzicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44lzycoEeSLVrU2ifxtpw" target="_R44l0icoEeSLVrU2ifxtpw" source="_R44l1CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l0CcoEeSLVrU2ifxtpw" target="_R44l0ScoEeSLVrU2ifxtpw" source="_R44l1ycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44l0ycoEeSLVrU2ifxtpw" name="Body(last$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44l1CcoEeSLVrU2ifxtpw" name="ReturnStatement@57161a37" outgoing="_R44lzycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l1ScoEeSLVrU2ifxtpw" target="_R44l8CcoEeSLVrU2ifxtpw" source="_R44l2ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l1icoEeSLVrU2ifxtpw" target="_R44l1ycoEeSLVrU2ifxtpw" source="_R44l8ScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44l1ycoEeSLVrU2ifxtpw" name="ReturnStatement@57161a37.output" incoming="_R44l1icoEeSLVrU2ifxtpw" outgoing="_R44l0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44l2CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44l2ScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44l2icoEeSLVrU2ifxtpw" name="Call(lastImpl$method$1)">
              <result xmi:id="_R44l2ycoEeSLVrU2ifxtpw" name="Call(lastImpl$method$1).result()" outgoing="_R44l1ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44l3CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44l3ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-lastImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R44l3icoEeSLVrU2ifxtpw" name="CastExpression@ff2d097" mode="parallel" outputElement="_R44l8ScoEeSLVrU2ifxtpw" inputElement="_R44l8CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l3ycoEeSLVrU2ifxtpw" target="_R44l6CcoEeSLVrU2ifxtpw" source="_R44l7icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l4CcoEeSLVrU2ifxtpw" target="_R44l7ycoEeSLVrU2ifxtpw" source="_R44l7icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l4ScoEeSLVrU2ifxtpw" target="_R44l7ycoEeSLVrU2ifxtpw" source="_R44l6ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l4icoEeSLVrU2ifxtpw" target="_R44l5icoEeSLVrU2ifxtpw" source="_R44l7ycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44l4ycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l5CcoEeSLVrU2ifxtpw" target="_R44l7icoEeSLVrU2ifxtpw" source="_R44l8CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l5ScoEeSLVrU2ifxtpw" target="_R44l8ScoEeSLVrU2ifxtpw" source="_R44l5icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R44l5icoEeSLVrU2ifxtpw" name="Merge(CastExpression@ff2d097.operand)" incoming="_R44l4icoEeSLVrU2ifxtpw" outgoing="_R44l5ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R44l5ycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_R44l6CcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R44l3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44l6ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44l6icoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R44l6ycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R44l4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44l7CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44l7ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R44l7icoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R44l5CcoEeSLVrU2ifxtpw" outgoing="_R44l3ycoEeSLVrU2ifxtpw _R44l4CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R44l7ycoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R44l4CcoEeSLVrU2ifxtpw _R44l4ScoEeSLVrU2ifxtpw" outgoing="_R44l4icoEeSLVrU2ifxtpw" decisionInputFlow="_R44l4ScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44l8CcoEeSLVrU2ifxtpw" name="CastExpression@ff2d097.inputElement" incoming="_R44l1ScoEeSLVrU2ifxtpw" outgoing="_R44l5CcoEeSLVrU2ifxtpw" regionAsInput="_R44l3icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44l8ScoEeSLVrU2ifxtpw" name="CastExpression@ff2d097.outputElement" incoming="_R44l5ScoEeSLVrU2ifxtpw" outgoing="_R44l1icoEeSLVrU2ifxtpw" regionAsOutput="_R44l3icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44l0ScoEeSLVrU2ifxtpw" name="Return" incoming="_R44l0CcoEeSLVrU2ifxtpw" parameter="_R44lzCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44l0icoEeSLVrU2ifxtpw" name="Final" incoming="_R44lzycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44l8icoEeSLVrU2ifxtpw" name="excludes$method$1" specification="_R45KricoEeSLVrU2ifxtpw" node="_R44l_ScoEeSLVrU2ifxtpw _R44l_icoEeSLVrU2ifxtpw _R44l_ycoEeSLVrU2ifxtpw _R44mACcoEeSLVrU2ifxtpw _R44mAScoEeSLVrU2ifxtpw" group="_R44mAScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44l8ycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44l9CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44l9ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44l9icoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44l9ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44l-CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l-ScoEeSLVrU2ifxtpw" target="_R44l_icoEeSLVrU2ifxtpw" source="_R44l_ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44l-icoEeSLVrU2ifxtpw" target="_R44mACcoEeSLVrU2ifxtpw" source="_R44mAicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l-ycoEeSLVrU2ifxtpw" target="_R44mCCcoEeSLVrU2ifxtpw" source="_R44l_icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44l_CcoEeSLVrU2ifxtpw" target="_R44l_ycoEeSLVrU2ifxtpw" source="_R44mBCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44mAScoEeSLVrU2ifxtpw" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44mAicoEeSLVrU2ifxtpw" name="ReturnStatement@54ff23f3" outgoing="_R44l-icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mAycoEeSLVrU2ifxtpw" target="_R44mBCcoEeSLVrU2ifxtpw" source="_R44mCycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44mBCcoEeSLVrU2ifxtpw" name="ReturnStatement@54ff23f3.output" incoming="_R44mAycoEeSLVrU2ifxtpw" outgoing="_R44l_CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mBScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mBicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44mBycoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_R44mCCcoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).argument(element)" incoming="_R44l-ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mCScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mCicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44mCycoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).result()" outgoing="_R44mAycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mDCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mDScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44l_ScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44l-ScoEeSLVrU2ifxtpw" parameter="_R44l8ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44l_icoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44l-ScoEeSLVrU2ifxtpw" outgoing="_R44l-ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44l_ycoEeSLVrU2ifxtpw" name="Return" incoming="_R44l_CcoEeSLVrU2ifxtpw" parameter="_R44l9icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44mACcoEeSLVrU2ifxtpw" name="Final" incoming="_R44l-icoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44mDicoEeSLVrU2ifxtpw" name="excludesAll$method$1" specification="_R45KtScoEeSLVrU2ifxtpw" node="_R44mGScoEeSLVrU2ifxtpw _R44mGicoEeSLVrU2ifxtpw _R44mGycoEeSLVrU2ifxtpw _R44mHCcoEeSLVrU2ifxtpw _R44mHScoEeSLVrU2ifxtpw" group="_R44mHScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44mDycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mECcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mEScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44mEicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mEycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mFCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mFScoEeSLVrU2ifxtpw" target="_R44mGicoEeSLVrU2ifxtpw" source="_R44mGScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44mFicoEeSLVrU2ifxtpw" target="_R44mHCcoEeSLVrU2ifxtpw" source="_R44mHicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mFycoEeSLVrU2ifxtpw" target="_R44mJCcoEeSLVrU2ifxtpw" source="_R44mGicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mGCcoEeSLVrU2ifxtpw" target="_R44mGycoEeSLVrU2ifxtpw" source="_R44mICcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44mHScoEeSLVrU2ifxtpw" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44mHicoEeSLVrU2ifxtpw" name="ReturnStatement@50ed97a6" outgoing="_R44mFicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mHycoEeSLVrU2ifxtpw" target="_R44mICcoEeSLVrU2ifxtpw" source="_R44mJycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44mICcoEeSLVrU2ifxtpw" name="ReturnStatement@50ed97a6.output" incoming="_R44mHycoEeSLVrU2ifxtpw" outgoing="_R44mGCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mIScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mIicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44mIycoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_R44mJCcoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_R44mFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mJScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mJicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44mJycoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).result()" outgoing="_R44mHycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mKCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mKScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mGScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44mFScoEeSLVrU2ifxtpw" parameter="_R44mDycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44mGicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44mFScoEeSLVrU2ifxtpw" outgoing="_R44mFycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mGycoEeSLVrU2ifxtpw" name="Return" incoming="_R44mGCcoEeSLVrU2ifxtpw" parameter="_R44mEicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44mHCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44mFicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44mKicoEeSLVrU2ifxtpw" name="includes$method$1" specification="_R45KvCcoEeSLVrU2ifxtpw" node="_R44mNScoEeSLVrU2ifxtpw _R44mNicoEeSLVrU2ifxtpw _R44mNycoEeSLVrU2ifxtpw _R44mOCcoEeSLVrU2ifxtpw _R44mOScoEeSLVrU2ifxtpw" group="_R44mOScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44mKycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mLCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mLScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44mLicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mLycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mMCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mMScoEeSLVrU2ifxtpw" target="_R44mNicoEeSLVrU2ifxtpw" source="_R44mNScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44mMicoEeSLVrU2ifxtpw" target="_R44mOCcoEeSLVrU2ifxtpw" source="_R44mOicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mMycoEeSLVrU2ifxtpw" target="_R44mQCcoEeSLVrU2ifxtpw" source="_R44mNicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mNCcoEeSLVrU2ifxtpw" target="_R44mNycoEeSLVrU2ifxtpw" source="_R44mPCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44mOScoEeSLVrU2ifxtpw" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44mOicoEeSLVrU2ifxtpw" name="ReturnStatement@7b4fb4eb" outgoing="_R44mMicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mOycoEeSLVrU2ifxtpw" target="_R44mPCcoEeSLVrU2ifxtpw" source="_R44mQycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44mPCcoEeSLVrU2ifxtpw" name="ReturnStatement@7b4fb4eb.output" incoming="_R44mOycoEeSLVrU2ifxtpw" outgoing="_R44mNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mPScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mPicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44mPycoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1)">
              <argument xmi:id="_R44mQCcoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).argument(element)" incoming="_R44mMycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mQScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mQicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44mQycoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).result()" outgoing="_R44mOycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mRCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mRScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mNScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44mMScoEeSLVrU2ifxtpw" parameter="_R44mKycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44mNicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44mMScoEeSLVrU2ifxtpw" outgoing="_R44mMycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mNycoEeSLVrU2ifxtpw" name="Return" incoming="_R44mNCcoEeSLVrU2ifxtpw" parameter="_R44mLicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44mOCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44mMicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44mRicoEeSLVrU2ifxtpw" name="includesAll$method$1" specification="_R45KwycoEeSLVrU2ifxtpw" node="_R44mUScoEeSLVrU2ifxtpw _R44mUicoEeSLVrU2ifxtpw _R44mUycoEeSLVrU2ifxtpw _R44mVCcoEeSLVrU2ifxtpw _R44mVScoEeSLVrU2ifxtpw" group="_R44mVScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44mRycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mSCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mSScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44mSicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mSycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mTCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mTScoEeSLVrU2ifxtpw" target="_R44mUicoEeSLVrU2ifxtpw" source="_R44mUScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44mTicoEeSLVrU2ifxtpw" target="_R44mVCcoEeSLVrU2ifxtpw" source="_R44mVicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mTycoEeSLVrU2ifxtpw" target="_R44mXCcoEeSLVrU2ifxtpw" source="_R44mUicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mUCcoEeSLVrU2ifxtpw" target="_R44mUycoEeSLVrU2ifxtpw" source="_R44mWCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44mVScoEeSLVrU2ifxtpw" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44mVicoEeSLVrU2ifxtpw" name="ReturnStatement@581b236" outgoing="_R44mTicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mVycoEeSLVrU2ifxtpw" target="_R44mWCcoEeSLVrU2ifxtpw" source="_R44mXycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44mWCcoEeSLVrU2ifxtpw" name="ReturnStatement@581b236.output" incoming="_R44mVycoEeSLVrU2ifxtpw" outgoing="_R44mUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mWScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mWicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44mWycoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_R44mXCcoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_R44mTycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mXScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mXicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44mXycoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).result()" outgoing="_R44mVycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mYCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mYScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mUScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44mTScoEeSLVrU2ifxtpw" parameter="_R44mRycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44mUicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44mTScoEeSLVrU2ifxtpw" outgoing="_R44mTycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mUycoEeSLVrU2ifxtpw" name="Return" incoming="_R44mUCcoEeSLVrU2ifxtpw" parameter="_R44mSicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44mVCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44mTicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44mYicoEeSLVrU2ifxtpw" name="isEmpty$method$1" specification="_R45KyicoEeSLVrU2ifxtpw" node="_R44maCcoEeSLVrU2ifxtpw _R44maScoEeSLVrU2ifxtpw _R44maicoEeSLVrU2ifxtpw" group="_R44maicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44mYycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mZCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mZScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44mZicoEeSLVrU2ifxtpw" target="_R44maScoEeSLVrU2ifxtpw" source="_R44maycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mZycoEeSLVrU2ifxtpw" target="_R44maCcoEeSLVrU2ifxtpw" source="_R44mbScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44maicoEeSLVrU2ifxtpw" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44maycoEeSLVrU2ifxtpw" name="ReturnStatement@21df71f3" outgoing="_R44mZicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mbCcoEeSLVrU2ifxtpw" target="_R44mbScoEeSLVrU2ifxtpw" source="_R44mcScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44mbScoEeSLVrU2ifxtpw" name="ReturnStatement@21df71f3.output" incoming="_R44mbCcoEeSLVrU2ifxtpw" outgoing="_R44mZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mbicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mbycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44mcCcoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_R44mcScoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1).result()" outgoing="_R44mbCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mcicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mcycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44maCcoEeSLVrU2ifxtpw" name="Return" incoming="_R44mZycoEeSLVrU2ifxtpw" parameter="_R44mYycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44maScoEeSLVrU2ifxtpw" name="Final" incoming="_R44mZicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44mdCcoEeSLVrU2ifxtpw" name="notEmpty$method$1" specification="_R45KzicoEeSLVrU2ifxtpw" node="_R44meicoEeSLVrU2ifxtpw _R44meycoEeSLVrU2ifxtpw _R44mfCcoEeSLVrU2ifxtpw" group="_R44mfCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44mdScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mdicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mdycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44meCcoEeSLVrU2ifxtpw" target="_R44meycoEeSLVrU2ifxtpw" source="_R44mfScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44meScoEeSLVrU2ifxtpw" target="_R44meicoEeSLVrU2ifxtpw" source="_R44mfycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44mfCcoEeSLVrU2ifxtpw" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44mfScoEeSLVrU2ifxtpw" name="ReturnStatement@50fc1387" outgoing="_R44meCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mficoEeSLVrU2ifxtpw" target="_R44mfycoEeSLVrU2ifxtpw" source="_R44mgycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44mfycoEeSLVrU2ifxtpw" name="ReturnStatement@50fc1387.output" incoming="_R44mficoEeSLVrU2ifxtpw" outgoing="_R44meScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mgCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mgScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44mgicoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_R44mgycoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1).result()" outgoing="_R44mficoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mhCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mhScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44meicoEeSLVrU2ifxtpw" name="Return" incoming="_R44meScoEeSLVrU2ifxtpw" parameter="_R44mdScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44meycoEeSLVrU2ifxtpw" name="Final" incoming="_R44meCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44mhicoEeSLVrU2ifxtpw" name="remove$method$1" specification="_R45K0icoEeSLVrU2ifxtpw" node="_R44mkScoEeSLVrU2ifxtpw _R44mkicoEeSLVrU2ifxtpw _R44mkycoEeSLVrU2ifxtpw _R44mlCcoEeSLVrU2ifxtpw _R44mlScoEeSLVrU2ifxtpw" group="_R44mlScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44mhycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44miCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44miScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44miicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44miycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mjCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mjScoEeSLVrU2ifxtpw" target="_R44mkicoEeSLVrU2ifxtpw" source="_R44mkScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44mjicoEeSLVrU2ifxtpw" target="_R44mlCcoEeSLVrU2ifxtpw" source="_R44mlicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mjycoEeSLVrU2ifxtpw" target="_R44mnCcoEeSLVrU2ifxtpw" source="_R44mkicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mkCcoEeSLVrU2ifxtpw" target="_R44mkycoEeSLVrU2ifxtpw" source="_R44mmCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44mlScoEeSLVrU2ifxtpw" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44mlicoEeSLVrU2ifxtpw" name="ReturnStatement@7efe7a98" outgoing="_R44mjicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mlycoEeSLVrU2ifxtpw" target="_R44mmCcoEeSLVrU2ifxtpw" source="_R44mnycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44mmCcoEeSLVrU2ifxtpw" name="ReturnStatement@7efe7a98.output" incoming="_R44mlycoEeSLVrU2ifxtpw" outgoing="_R44mkCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mmScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mmicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44mmycoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1)">
              <argument xmi:id="_R44mnCcoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).argument(element)" incoming="_R44mjycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mnScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mnicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44mnycoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).result()" outgoing="_R44mlycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44moCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44moScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mkScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44mjScoEeSLVrU2ifxtpw" parameter="_R44mhycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44mkicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44mjScoEeSLVrU2ifxtpw" outgoing="_R44mjycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mkycoEeSLVrU2ifxtpw" name="Return" incoming="_R44mkCcoEeSLVrU2ifxtpw" parameter="_R44miicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44mlCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44mjicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44moicoEeSLVrU2ifxtpw" name="removeAll$method$1" specification="_R45K2ScoEeSLVrU2ifxtpw" node="_R44mrScoEeSLVrU2ifxtpw _R44mricoEeSLVrU2ifxtpw _R44mrycoEeSLVrU2ifxtpw _R44msCcoEeSLVrU2ifxtpw _R44msScoEeSLVrU2ifxtpw" group="_R44msScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44moycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mpCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mpScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44mpicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mpycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mqCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mqScoEeSLVrU2ifxtpw" target="_R44mricoEeSLVrU2ifxtpw" source="_R44mrScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44mqicoEeSLVrU2ifxtpw" target="_R44msCcoEeSLVrU2ifxtpw" source="_R44msicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mqycoEeSLVrU2ifxtpw" target="_R44muCcoEeSLVrU2ifxtpw" source="_R44mricoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mrCcoEeSLVrU2ifxtpw" target="_R44mrycoEeSLVrU2ifxtpw" source="_R44mtCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44msScoEeSLVrU2ifxtpw" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44msicoEeSLVrU2ifxtpw" name="ReturnStatement@3aa101a7" outgoing="_R44mqicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44msycoEeSLVrU2ifxtpw" target="_R44mtCcoEeSLVrU2ifxtpw" source="_R44muycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44mtCcoEeSLVrU2ifxtpw" name="ReturnStatement@3aa101a7.output" incoming="_R44msycoEeSLVrU2ifxtpw" outgoing="_R44mrCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mtScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mticoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44mtycoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_R44muCcoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_R44mqycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44muScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44muicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44muycoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).result()" outgoing="_R44msycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mvCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mvScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mrScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44mqScoEeSLVrU2ifxtpw" parameter="_R44moycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44mricoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44mqScoEeSLVrU2ifxtpw" outgoing="_R44mqycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44mrycoEeSLVrU2ifxtpw" name="Return" incoming="_R44mrCcoEeSLVrU2ifxtpw" parameter="_R44mpicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44msCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44mqicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44mvicoEeSLVrU2ifxtpw" name="removeAt$method$1" specification="_R45K4CcoEeSLVrU2ifxtpw" node="_R44myScoEeSLVrU2ifxtpw _R44myicoEeSLVrU2ifxtpw _R44myycoEeSLVrU2ifxtpw _R44mzCcoEeSLVrU2ifxtpw _R44mzScoEeSLVrU2ifxtpw" group="_R44mzScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44mvycoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mwCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mwScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44mwicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44mwycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44mxCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mxScoEeSLVrU2ifxtpw" target="_R44myicoEeSLVrU2ifxtpw" source="_R44myScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44mxicoEeSLVrU2ifxtpw" target="_R44mzCcoEeSLVrU2ifxtpw" source="_R44mzicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mxycoEeSLVrU2ifxtpw" target="_R44m1ScoEeSLVrU2ifxtpw" source="_R44myicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44myCcoEeSLVrU2ifxtpw" target="_R44myycoEeSLVrU2ifxtpw" source="_R44m0ScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44mzScoEeSLVrU2ifxtpw" name="Body(removeAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44mzicoEeSLVrU2ifxtpw" name="ReturnStatement@66f40ddf" outgoing="_R44mxicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44mzycoEeSLVrU2ifxtpw" target="_R44m7ScoEeSLVrU2ifxtpw" source="_R44m2CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m0CcoEeSLVrU2ifxtpw" target="_R44m0ScoEeSLVrU2ifxtpw" source="_R44m7icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44m0ScoEeSLVrU2ifxtpw" name="ReturnStatement@66f40ddf.output" incoming="_R44m0CcoEeSLVrU2ifxtpw" outgoing="_R44myCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44m0icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44m0ycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44m1CcoEeSLVrU2ifxtpw" name="Call(removeAtImpl$method$1)">
              <argument xmi:id="_R44m1ScoEeSLVrU2ifxtpw" name="Call(removeAtImpl$method$1).argument(index)" incoming="_R44mxycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44m1icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44m1ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44m2CcoEeSLVrU2ifxtpw" name="Call(removeAtImpl$method$1).result()" outgoing="_R44mzycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44m2ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44m2icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-removeAtImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R44m2ycoEeSLVrU2ifxtpw" name="CastExpression@1b082505" mode="parallel" outputElement="_R44m7icoEeSLVrU2ifxtpw" inputElement="_R44m7ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m3CcoEeSLVrU2ifxtpw" target="_R44m5ScoEeSLVrU2ifxtpw" source="_R44m6ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m3ScoEeSLVrU2ifxtpw" target="_R44m7CcoEeSLVrU2ifxtpw" source="_R44m6ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m3icoEeSLVrU2ifxtpw" target="_R44m7CcoEeSLVrU2ifxtpw" source="_R44m6CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m3ycoEeSLVrU2ifxtpw" target="_R44m4ycoEeSLVrU2ifxtpw" source="_R44m7CcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44m4CcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m4ScoEeSLVrU2ifxtpw" target="_R44m6ycoEeSLVrU2ifxtpw" source="_R44m7ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m4icoEeSLVrU2ifxtpw" target="_R44m7icoEeSLVrU2ifxtpw" source="_R44m4ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R44m4ycoEeSLVrU2ifxtpw" name="Merge(CastExpression@1b082505.operand)" incoming="_R44m3ycoEeSLVrU2ifxtpw" outgoing="_R44m4icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R44m5CcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_R44m5ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R44m3CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44m5icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44m5ycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R44m6CcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R44m3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44m6ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44m6icoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R44m6ycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R44m4ScoEeSLVrU2ifxtpw" outgoing="_R44m3CcoEeSLVrU2ifxtpw _R44m3ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R44m7CcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R44m3ScoEeSLVrU2ifxtpw _R44m3icoEeSLVrU2ifxtpw" outgoing="_R44m3ycoEeSLVrU2ifxtpw" decisionInputFlow="_R44m3icoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44m7ScoEeSLVrU2ifxtpw" name="CastExpression@1b082505.inputElement" incoming="_R44mzycoEeSLVrU2ifxtpw" outgoing="_R44m4ScoEeSLVrU2ifxtpw" regionAsInput="_R44m2ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44m7icoEeSLVrU2ifxtpw" name="CastExpression@1b082505.outputElement" incoming="_R44m4icoEeSLVrU2ifxtpw" outgoing="_R44m0CcoEeSLVrU2ifxtpw" regionAsOutput="_R44m2ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44myScoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R44mxScoEeSLVrU2ifxtpw" parameter="_R44mvycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44myicoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R44mxScoEeSLVrU2ifxtpw" outgoing="_R44mxycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44myycoEeSLVrU2ifxtpw" name="Return" incoming="_R44myCcoEeSLVrU2ifxtpw" parameter="_R44mwicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44mzCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44mxicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44m7ycoEeSLVrU2ifxtpw" name="removeOne$method$1" specification="_R45K5ycoEeSLVrU2ifxtpw" node="_R44m-icoEeSLVrU2ifxtpw _R44m-ycoEeSLVrU2ifxtpw _R44m_CcoEeSLVrU2ifxtpw _R44m_ScoEeSLVrU2ifxtpw _R44m_icoEeSLVrU2ifxtpw" group="_R44m_icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44m8CcoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44m8ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44m8icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44m8ycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44m9CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44m9ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m9icoEeSLVrU2ifxtpw" target="_R44m-ycoEeSLVrU2ifxtpw" source="_R44m-icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44m9ycoEeSLVrU2ifxtpw" target="_R44m_ScoEeSLVrU2ifxtpw" source="_R44m_ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m-CcoEeSLVrU2ifxtpw" target="_R44nBScoEeSLVrU2ifxtpw" source="_R44m-ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44m-ScoEeSLVrU2ifxtpw" target="_R44m_CcoEeSLVrU2ifxtpw" source="_R44nAScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44m_icoEeSLVrU2ifxtpw" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44m_ycoEeSLVrU2ifxtpw" name="ReturnStatement@6e88a13e" outgoing="_R44m9ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nACcoEeSLVrU2ifxtpw" target="_R44nAScoEeSLVrU2ifxtpw" source="_R44nCCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44nAScoEeSLVrU2ifxtpw" name="ReturnStatement@6e88a13e.output" incoming="_R44nACcoEeSLVrU2ifxtpw" outgoing="_R44m-ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nAicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nAycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44nBCcoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_R44nBScoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).argument(element)" incoming="_R44m-CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nBicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nBycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44nCCcoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).result()" outgoing="_R44nACcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nCScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nCicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44m-icoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44m9icoEeSLVrU2ifxtpw" parameter="_R44m8CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44m-ycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44m9icoEeSLVrU2ifxtpw" outgoing="_R44m-CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44m_CcoEeSLVrU2ifxtpw" name="Return" incoming="_R44m-ScoEeSLVrU2ifxtpw" parameter="_R44m8ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44m_ScoEeSLVrU2ifxtpw" name="Final" incoming="_R44m9ycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44nCycoEeSLVrU2ifxtpw" name="replace$method$1" specification="_R45K7icoEeSLVrU2ifxtpw" node="_R44nGycoEeSLVrU2ifxtpw _R44nHCcoEeSLVrU2ifxtpw _R44nHScoEeSLVrU2ifxtpw _R44nHicoEeSLVrU2ifxtpw _R44nHycoEeSLVrU2ifxtpw _R44nICcoEeSLVrU2ifxtpw _R44nIScoEeSLVrU2ifxtpw" group="_R44nIScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44nDCcoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nDScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nDicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44nDycoEeSLVrU2ifxtpw" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nECcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nEScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44nEicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nEycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nFCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nFScoEeSLVrU2ifxtpw" target="_R44nHCcoEeSLVrU2ifxtpw" source="_R44nGycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nFicoEeSLVrU2ifxtpw" target="_R44nHicoEeSLVrU2ifxtpw" source="_R44nHScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44nFycoEeSLVrU2ifxtpw" target="_R44nICcoEeSLVrU2ifxtpw" source="_R44nIicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nGCcoEeSLVrU2ifxtpw" target="_R44nKCcoEeSLVrU2ifxtpw" source="_R44nHCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nGScoEeSLVrU2ifxtpw" target="_R44nKycoEeSLVrU2ifxtpw" source="_R44nHicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nGicoEeSLVrU2ifxtpw" target="_R44nHycoEeSLVrU2ifxtpw" source="_R44nJCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44nIScoEeSLVrU2ifxtpw" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44nIicoEeSLVrU2ifxtpw" name="ReturnStatement@41e5484b" outgoing="_R44nFycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nIycoEeSLVrU2ifxtpw" target="_R44nJCcoEeSLVrU2ifxtpw" source="_R44nLicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44nJCcoEeSLVrU2ifxtpw" name="ReturnStatement@41e5484b.output" incoming="_R44nIycoEeSLVrU2ifxtpw" outgoing="_R44nGicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nJScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nJicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44nJycoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_R44nKCcoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(element)" incoming="_R44nGCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nKScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nKicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R44nKycoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_R44nGScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nLCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nLScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44nLicoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).result()" outgoing="_R44nIycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nLycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nMCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nGycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44nFScoEeSLVrU2ifxtpw" parameter="_R44nDCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44nHCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44nFScoEeSLVrU2ifxtpw" outgoing="_R44nGCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nHScoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_R44nFicoEeSLVrU2ifxtpw" parameter="_R44nDycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44nHicoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_R44nFicoEeSLVrU2ifxtpw" outgoing="_R44nGScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nHycoEeSLVrU2ifxtpw" name="Return" incoming="_R44nGicoEeSLVrU2ifxtpw" parameter="_R44nEicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44nICcoEeSLVrU2ifxtpw" name="Final" incoming="_R44nFycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44nMScoEeSLVrU2ifxtpw" name="replaceAt$method$1" specification="_R45K-CcoEeSLVrU2ifxtpw" node="_R44nQScoEeSLVrU2ifxtpw _R44nQicoEeSLVrU2ifxtpw _R44nQycoEeSLVrU2ifxtpw _R44nRCcoEeSLVrU2ifxtpw _R44nRScoEeSLVrU2ifxtpw _R44nRicoEeSLVrU2ifxtpw _R44nRycoEeSLVrU2ifxtpw" group="_R44nRycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44nMicoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nMycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nNCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44nNScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nNicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nNycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44nOCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nOScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nOicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nOycoEeSLVrU2ifxtpw" target="_R44nQicoEeSLVrU2ifxtpw" source="_R44nQScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nPCcoEeSLVrU2ifxtpw" target="_R44nRCcoEeSLVrU2ifxtpw" source="_R44nQycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44nPScoEeSLVrU2ifxtpw" target="_R44nRicoEeSLVrU2ifxtpw" source="_R44nSCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nPicoEeSLVrU2ifxtpw" target="_R44nTycoEeSLVrU2ifxtpw" source="_R44nQicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nPycoEeSLVrU2ifxtpw" target="_R44nUicoEeSLVrU2ifxtpw" source="_R44nRCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nQCcoEeSLVrU2ifxtpw" target="_R44nRScoEeSLVrU2ifxtpw" source="_R44nSycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44nRycoEeSLVrU2ifxtpw" name="Body(replaceAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44nSCcoEeSLVrU2ifxtpw" name="ReturnStatement@1197c2dd" outgoing="_R44nPScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nSScoEeSLVrU2ifxtpw" target="_R44naicoEeSLVrU2ifxtpw" source="_R44nVScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nSicoEeSLVrU2ifxtpw" target="_R44nSycoEeSLVrU2ifxtpw" source="_R44naycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44nSycoEeSLVrU2ifxtpw" name="ReturnStatement@1197c2dd.output" incoming="_R44nSicoEeSLVrU2ifxtpw" outgoing="_R44nQCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nTCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nTScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44nTicoEeSLVrU2ifxtpw" name="Call(replaceAtImpl$method$1)">
              <argument xmi:id="_R44nTycoEeSLVrU2ifxtpw" name="Call(replaceAtImpl$method$1).argument(index)" incoming="_R44nPicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nUCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nUScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R44nUicoEeSLVrU2ifxtpw" name="Call(replaceAtImpl$method$1).argument(element)" incoming="_R44nPycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nUycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nVCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44nVScoEeSLVrU2ifxtpw" name="Call(replaceAtImpl$method$1).result()" outgoing="_R44nSScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nVicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nVycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-replaceAtImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R44nWCcoEeSLVrU2ifxtpw" name="CastExpression@4f3ed32a" mode="parallel" outputElement="_R44naycoEeSLVrU2ifxtpw" inputElement="_R44naicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nWScoEeSLVrU2ifxtpw" target="_R44nYicoEeSLVrU2ifxtpw" source="_R44naCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nWicoEeSLVrU2ifxtpw" target="_R44naScoEeSLVrU2ifxtpw" source="_R44naCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nWycoEeSLVrU2ifxtpw" target="_R44naScoEeSLVrU2ifxtpw" source="_R44nZScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nXCcoEeSLVrU2ifxtpw" target="_R44nYCcoEeSLVrU2ifxtpw" source="_R44naScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44nXScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nXicoEeSLVrU2ifxtpw" target="_R44naCcoEeSLVrU2ifxtpw" source="_R44naicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nXycoEeSLVrU2ifxtpw" target="_R44naycoEeSLVrU2ifxtpw" source="_R44nYCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R44nYCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@4f3ed32a.operand)" incoming="_R44nXCcoEeSLVrU2ifxtpw" outgoing="_R44nXycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R44nYScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_R44nYicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R44nWScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nYycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nZCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R44nZScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R44nWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nZicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nZycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R44naCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R44nXicoEeSLVrU2ifxtpw" outgoing="_R44nWScoEeSLVrU2ifxtpw _R44nWicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R44naScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R44nWicoEeSLVrU2ifxtpw _R44nWycoEeSLVrU2ifxtpw" outgoing="_R44nXCcoEeSLVrU2ifxtpw" decisionInputFlow="_R44nWycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44naicoEeSLVrU2ifxtpw" name="CastExpression@4f3ed32a.inputElement" incoming="_R44nSScoEeSLVrU2ifxtpw" outgoing="_R44nXicoEeSLVrU2ifxtpw" regionAsInput="_R44nWCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R44naycoEeSLVrU2ifxtpw" name="CastExpression@4f3ed32a.outputElement" incoming="_R44nXycoEeSLVrU2ifxtpw" outgoing="_R44nSicoEeSLVrU2ifxtpw" regionAsOutput="_R44nWCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nQScoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R44nOycoEeSLVrU2ifxtpw" parameter="_R44nMicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44nQicoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R44nOycoEeSLVrU2ifxtpw" outgoing="_R44nPicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nQycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44nPCcoEeSLVrU2ifxtpw" parameter="_R44nNScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44nRCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44nPCcoEeSLVrU2ifxtpw" outgoing="_R44nPycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nRScoEeSLVrU2ifxtpw" name="Return" incoming="_R44nQCcoEeSLVrU2ifxtpw" parameter="_R44nOCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44nRicoEeSLVrU2ifxtpw" name="Final" incoming="_R44nPScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44nbCcoEeSLVrU2ifxtpw" name="replaceOne$method$1" specification="_R45LAicoEeSLVrU2ifxtpw" node="_R44nfCcoEeSLVrU2ifxtpw _R44nfScoEeSLVrU2ifxtpw _R44nficoEeSLVrU2ifxtpw _R44nfycoEeSLVrU2ifxtpw _R44ngCcoEeSLVrU2ifxtpw _R44ngScoEeSLVrU2ifxtpw _R44ngicoEeSLVrU2ifxtpw" group="_R44ngicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44nbScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nbicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nbycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44ncCcoEeSLVrU2ifxtpw" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44ncScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44ncicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44ncycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44ndCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44ndScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ndicoEeSLVrU2ifxtpw" target="_R44nfScoEeSLVrU2ifxtpw" source="_R44nfCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44ndycoEeSLVrU2ifxtpw" target="_R44nfycoEeSLVrU2ifxtpw" source="_R44nficoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44neCcoEeSLVrU2ifxtpw" target="_R44ngScoEeSLVrU2ifxtpw" source="_R44ngycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44neScoEeSLVrU2ifxtpw" target="_R44niScoEeSLVrU2ifxtpw" source="_R44nfScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44neicoEeSLVrU2ifxtpw" target="_R44njCcoEeSLVrU2ifxtpw" source="_R44nfycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44neycoEeSLVrU2ifxtpw" target="_R44ngCcoEeSLVrU2ifxtpw" source="_R44nhScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44ngicoEeSLVrU2ifxtpw" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44ngycoEeSLVrU2ifxtpw" name="ReturnStatement@792a89f4" outgoing="_R44neCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nhCcoEeSLVrU2ifxtpw" target="_R44nhScoEeSLVrU2ifxtpw" source="_R44njycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44nhScoEeSLVrU2ifxtpw" name="ReturnStatement@792a89f4.output" incoming="_R44nhCcoEeSLVrU2ifxtpw" outgoing="_R44neycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nhicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nhycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44niCcoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_R44niScoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_R44neScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44niicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44niycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R44njCcoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_R44neicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44njScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44njicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R44njycoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).result()" outgoing="_R44nhCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nkCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nkScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nfCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R44ndicoEeSLVrU2ifxtpw" parameter="_R44nbScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44nfScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R44ndicoEeSLVrU2ifxtpw" outgoing="_R44neScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nficoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_R44ndycoEeSLVrU2ifxtpw" parameter="_R44ncCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44nfycoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_R44ndycoEeSLVrU2ifxtpw" outgoing="_R44neicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ngCcoEeSLVrU2ifxtpw" name="Return" incoming="_R44neycoEeSLVrU2ifxtpw" parameter="_R44ncycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44ngScoEeSLVrU2ifxtpw" name="Final" incoming="_R44neCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44nkicoEeSLVrU2ifxtpw" name="retainAll$method$1" specification="_R45LDCcoEeSLVrU2ifxtpw" node="_R44nnScoEeSLVrU2ifxtpw _R44nnicoEeSLVrU2ifxtpw _R44nnycoEeSLVrU2ifxtpw _R44noCcoEeSLVrU2ifxtpw _R44noScoEeSLVrU2ifxtpw" group="_R44noScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44nkycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nlCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nlScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44nlicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nlycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nmCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nmScoEeSLVrU2ifxtpw" target="_R44nnicoEeSLVrU2ifxtpw" source="_R44nnScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44nmicoEeSLVrU2ifxtpw" target="_R44noCcoEeSLVrU2ifxtpw" source="_R44noicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nmycoEeSLVrU2ifxtpw" target="_R44nqCcoEeSLVrU2ifxtpw" source="_R44nnicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nnCcoEeSLVrU2ifxtpw" target="_R44nnycoEeSLVrU2ifxtpw" source="_R44npCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44noScoEeSLVrU2ifxtpw" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44noicoEeSLVrU2ifxtpw" name="ReturnStatement@7555d4d6" outgoing="_R44nmicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44noycoEeSLVrU2ifxtpw" target="_R44npCcoEeSLVrU2ifxtpw" source="_R44nqycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44npCcoEeSLVrU2ifxtpw" name="ReturnStatement@7555d4d6.output" incoming="_R44noycoEeSLVrU2ifxtpw" outgoing="_R44nnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44npScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44npicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44npycoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_R44nqCcoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_R44nmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nqScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nqicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44nqycoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).result()" outgoing="_R44noycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nrCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nrScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nnScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R44nmScoEeSLVrU2ifxtpw" parameter="_R44nkycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44nnicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R44nmScoEeSLVrU2ifxtpw" outgoing="_R44nmycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44nnycoEeSLVrU2ifxtpw" name="Return" incoming="_R44nnCcoEeSLVrU2ifxtpw" parameter="_R44nlicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44noCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44nmicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44nricoEeSLVrU2ifxtpw" name="size$method$1" specification="_R45LEycoEeSLVrU2ifxtpw" node="_R44ntCcoEeSLVrU2ifxtpw _R44ntScoEeSLVrU2ifxtpw _R44nticoEeSLVrU2ifxtpw" group="_R44nticoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44nrycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nsCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nsScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44nsicoEeSLVrU2ifxtpw" target="_R44ntScoEeSLVrU2ifxtpw" source="_R44ntycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nsycoEeSLVrU2ifxtpw" target="_R44ntCcoEeSLVrU2ifxtpw" source="_R44nuScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44nticoEeSLVrU2ifxtpw" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44ntycoEeSLVrU2ifxtpw" name="ReturnStatement@194cb4d6" outgoing="_R44nsicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nuCcoEeSLVrU2ifxtpw" target="_R44nuScoEeSLVrU2ifxtpw" source="_R44nvScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44nuScoEeSLVrU2ifxtpw" name="ReturnStatement@194cb4d6.output" incoming="_R44nuCcoEeSLVrU2ifxtpw" outgoing="_R44nsycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nuicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nuycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44nvCcoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1)">
              <result xmi:id="_R44nvScoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1).result()" outgoing="_R44nuCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nvicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nvycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44ntCcoEeSLVrU2ifxtpw" name="Return" incoming="_R44nsycoEeSLVrU2ifxtpw" parameter="_R44nrycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44ntScoEeSLVrU2ifxtpw" name="Final" incoming="_R44nsicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44nwCcoEeSLVrU2ifxtpw" name="subList$method$1" specification="_R45LFycoEeSLVrU2ifxtpw" node="_R44n0CcoEeSLVrU2ifxtpw _R44n0ScoEeSLVrU2ifxtpw _R44n0icoEeSLVrU2ifxtpw _R44n0ycoEeSLVrU2ifxtpw _R44n1CcoEeSLVrU2ifxtpw _R44n1ScoEeSLVrU2ifxtpw _R44n1icoEeSLVrU2ifxtpw" group="_R44n1icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44nwScoEeSLVrU2ifxtpw" name="lower">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nwicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nwycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44nxCcoEeSLVrU2ifxtpw" name="upper">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nxScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nxicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R44nxycoEeSLVrU2ifxtpw" name="" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44nyCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44nyScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nyicoEeSLVrU2ifxtpw" target="_R44n0ScoEeSLVrU2ifxtpw" source="_R44n0CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nyycoEeSLVrU2ifxtpw" target="_R44n0ycoEeSLVrU2ifxtpw" source="_R44n0icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44nzCcoEeSLVrU2ifxtpw" target="_R44n1ScoEeSLVrU2ifxtpw" source="_R44n1ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nzScoEeSLVrU2ifxtpw" target="_R44n8CcoEeSLVrU2ifxtpw" source="_R44n0ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nzicoEeSLVrU2ifxtpw" target="_R44n8ycoEeSLVrU2ifxtpw" source="_R44n0ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44nzycoEeSLVrU2ifxtpw" target="_R44n1CcoEeSLVrU2ifxtpw" source="_R44n3CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44n1icoEeSLVrU2ifxtpw" name="Body(subList$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44n1ycoEeSLVrU2ifxtpw" name="ReturnStatement@1792a0c1" outgoing="_R44nzCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n2CcoEeSLVrU2ifxtpw" target="_R44n5icoEeSLVrU2ifxtpw" source="_R44n6icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n2ScoEeSLVrU2ifxtpw" target="_R44n4CcoEeSLVrU2ifxtpw" source="_R44oDCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R44n2icoEeSLVrU2ifxtpw" target="_R44n3ycoEeSLVrU2ifxtpw" source="_R44n7ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n2ycoEeSLVrU2ifxtpw" target="_R44n3CcoEeSLVrU2ifxtpw" source="_R44n4ycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44n3CcoEeSLVrU2ifxtpw" name="ReturnStatement@1792a0c1.output" incoming="_R44n2ycoEeSLVrU2ifxtpw" outgoing="_R44nzycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44n3ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44n3icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R44n3ycoEeSLVrU2ifxtpw" name="Call(List)" incoming="_R44n2icoEeSLVrU2ifxtpw" operation="_R45KXycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R44n4CcoEeSLVrU2ifxtpw" name="Call(List).argument(seq)" incoming="_R44n2ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44n4ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44n4icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R44n4ycoEeSLVrU2ifxtpw" name="Call(List).result()" outgoing="_R44n2ycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44n5CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44n5ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_R44n5icoEeSLVrU2ifxtpw" name="Call(List).target" incoming="_R44n2CcoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44n5ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44n6CcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:CreateObjectAction" xmi:id="_R44n6ScoEeSLVrU2ifxtpw" name="Create($$Impl$List__Impl$List$T__)" classifier="_R44kQycoEeSLVrU2ifxtpw">
              <result xmi:id="_R44n6icoEeSLVrU2ifxtpw" name="Create($$List__Impl$List$T__).result" outgoing="_R44n2CcoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44n6ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44n7CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44n7ScoEeSLVrU2ifxtpw" name="Tuple@51575d48" outgoing="_R44n2icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n7icoEeSLVrU2ifxtpw" target="_R44oCycoEeSLVrU2ifxtpw" source="_R44n9icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R44n7ycoEeSLVrU2ifxtpw" name="Call(subListImpl$method$1)">
                <argument xmi:id="_R44n8CcoEeSLVrU2ifxtpw" name="Call(subListImpl$method$1).argument(lower)" incoming="_R44nzScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44n8ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44n8icoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_R44n8ycoEeSLVrU2ifxtpw" name="Call(subListImpl$method$1).argument(upper)" incoming="_R44nzicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44n9CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44n9ScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_R44n9icoEeSLVrU2ifxtpw" name="Call(subListImpl$method$1).result()" outgoing="_R44n7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44n9ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44n-CcoEeSLVrU2ifxtpw" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#ListImpl-subListImplmethod1"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R44n-ScoEeSLVrU2ifxtpw" name="CastExpression@18fde079" mode="parallel" outputElement="_R44oDCcoEeSLVrU2ifxtpw" inputElement="_R44oCycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n-icoEeSLVrU2ifxtpw" target="_R44oAycoEeSLVrU2ifxtpw" source="_R44oCScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n-ycoEeSLVrU2ifxtpw" target="_R44oCicoEeSLVrU2ifxtpw" source="_R44oCScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n_CcoEeSLVrU2ifxtpw" target="_R44oCicoEeSLVrU2ifxtpw" source="_R44oBicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n_ScoEeSLVrU2ifxtpw" target="_R44oAScoEeSLVrU2ifxtpw" source="_R44oCicoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_R44n_icoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R44n_ycoEeSLVrU2ifxtpw" target="_R44oCScoEeSLVrU2ifxtpw" source="_R44oCycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R44oACcoEeSLVrU2ifxtpw" target="_R44oDCcoEeSLVrU2ifxtpw" source="_R44oAScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_R44oAScoEeSLVrU2ifxtpw" name="Merge(CastExpression@18fde079.operand)" incoming="_R44n_ScoEeSLVrU2ifxtpw" outgoing="_R44oACcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R44oAicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_R44oAycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R44n-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44oBCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44oBScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_R44oBicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R44n_CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44oBycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44oCCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_R44oCScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R44n_ycoEeSLVrU2ifxtpw" outgoing="_R44n-icoEeSLVrU2ifxtpw _R44n-ycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_R44oCicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R44n-ycoEeSLVrU2ifxtpw _R44n_CcoEeSLVrU2ifxtpw" outgoing="_R44n_ScoEeSLVrU2ifxtpw" decisionInputFlow="_R44n_CcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R44oCycoEeSLVrU2ifxtpw" name="CastExpression@18fde079.inputElement" incoming="_R44n7icoEeSLVrU2ifxtpw" outgoing="_R44n_ycoEeSLVrU2ifxtpw" regionAsInput="_R44n-ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R44oDCcoEeSLVrU2ifxtpw" name="CastExpression@18fde079.outputElement" incoming="_R44oACcoEeSLVrU2ifxtpw" outgoing="_R44n2ScoEeSLVrU2ifxtpw" regionAsOutput="_R44n-ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44n0CcoEeSLVrU2ifxtpw" name="Input(lower)" outgoing="_R44nyicoEeSLVrU2ifxtpw" parameter="_R44nwScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44n0ScoEeSLVrU2ifxtpw" name="Fork(lower)" incoming="_R44nyicoEeSLVrU2ifxtpw" outgoing="_R44nzScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44n0icoEeSLVrU2ifxtpw" name="Input(upper)" outgoing="_R44nyycoEeSLVrU2ifxtpw" parameter="_R44nxCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R44n0ycoEeSLVrU2ifxtpw" name="Fork(upper)" incoming="_R44nyycoEeSLVrU2ifxtpw" outgoing="_R44nzicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44n1CcoEeSLVrU2ifxtpw" name="Return" incoming="_R44nzycoEeSLVrU2ifxtpw" parameter="_R44nxycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44n1ScoEeSLVrU2ifxtpw" name="Final" incoming="_R44nzCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R44oDScoEeSLVrU2ifxtpw" name="toSequence$method$1" specification="_R45LIScoEeSLVrU2ifxtpw" node="_R44oEycoEeSLVrU2ifxtpw _R44oFCcoEeSLVrU2ifxtpw _R44oFScoEeSLVrU2ifxtpw" group="_R44oFScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R44oDicoEeSLVrU2ifxtpw" name="" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44oDycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44oECcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R44oEScoEeSLVrU2ifxtpw" target="_R44oFCcoEeSLVrU2ifxtpw" source="_R44oFicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R44oEicoEeSLVrU2ifxtpw" target="_R44oEycoEeSLVrU2ifxtpw" source="_R44oGicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R44oFScoEeSLVrU2ifxtpw" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R44oFicoEeSLVrU2ifxtpw" name="ReturnStatement@56b2d6bd" outgoing="_R44oEScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44oFycoEeSLVrU2ifxtpw" target="_R44oIScoEeSLVrU2ifxtpw" source="_R44oJScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44oGCcoEeSLVrU2ifxtpw" target="_R45KFCcoEeSLVrU2ifxtpw" source="_R44oHicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R44oGScoEeSLVrU2ifxtpw" target="_R44oGicoEeSLVrU2ifxtpw" source="_R45KFScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R44oGicoEeSLVrU2ifxtpw" name="ReturnStatement@56b2d6bd.output" incoming="_R44oGScoEeSLVrU2ifxtpw" outgoing="_R44oEicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44oGycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44oHCcoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R44oHScoEeSLVrU2ifxtpw" name="Call(getContent)">
              <result xmi:id="_R44oHicoEeSLVrU2ifxtpw" name="Call(getContent).result()" outgoing="_R44oGCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44oHycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44oICcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <operation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-getContent"/>
              <target xmi:id="_R44oIScoEeSLVrU2ifxtpw" name="Call(getContent).target" incoming="_R44oFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R44oIicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R44oIycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_R44oJCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_R44oJScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R44oFycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KACcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KAScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R45KAicoEeSLVrU2ifxtpw" name="CastExpression@1e49f598" mode="parallel" outputElement="_R45KFScoEeSLVrU2ifxtpw" inputElement="_R45KFCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KAycoEeSLVrU2ifxtpw" target="_R45KDCcoEeSLVrU2ifxtpw" source="_R45KEicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KBCcoEeSLVrU2ifxtpw" target="_R45KEycoEeSLVrU2ifxtpw" source="_R45KEicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KBScoEeSLVrU2ifxtpw" target="_R45KEycoEeSLVrU2ifxtpw" source="_R45KDycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KBicoEeSLVrU2ifxtpw" target="_R45KCicoEeSLVrU2ifxtpw" source="_R45KEycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45KBycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KCCcoEeSLVrU2ifxtpw" target="_R45KEicoEeSLVrU2ifxtpw" source="_R45KFCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KCScoEeSLVrU2ifxtpw" target="_R45KFScoEeSLVrU2ifxtpw" source="_R45KCicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R45KCicoEeSLVrU2ifxtpw" name="Merge(CastExpression@1e49f598.operand)" incoming="_R45KBicoEeSLVrU2ifxtpw" outgoing="_R45KCScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R45KCycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_R45KDCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R45KAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KDScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KDicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45KDycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R45KBScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KECcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KEScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R45KEicoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R45KCCcoEeSLVrU2ifxtpw" outgoing="_R45KAycoEeSLVrU2ifxtpw _R45KBCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R45KEycoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R45KBCcoEeSLVrU2ifxtpw _R45KBScoEeSLVrU2ifxtpw" outgoing="_R45KBicoEeSLVrU2ifxtpw" decisionInputFlow="_R45KBScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45KFCcoEeSLVrU2ifxtpw" name="CastExpression@1e49f598.inputElement" incoming="_R44oGCcoEeSLVrU2ifxtpw" outgoing="_R45KCCcoEeSLVrU2ifxtpw" regionAsInput="_R45KAicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45KFScoEeSLVrU2ifxtpw" name="CastExpression@1e49f598.outputElement" incoming="_R45KCScoEeSLVrU2ifxtpw" outgoing="_R44oGScoEeSLVrU2ifxtpw" regionAsOutput="_R45KAicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R44oEycoEeSLVrU2ifxtpw" name="Return" incoming="_R44oEicoEeSLVrU2ifxtpw" parameter="_R44oDicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R44oFCcoEeSLVrU2ifxtpw" name="Final" incoming="_R44oEScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45KFicoEeSLVrU2ifxtpw" name="List$initialization$1" specification="_R45KXicoEeSLVrU2ifxtpw" node="_R45KFycoEeSLVrU2ifxtpw" group="_R45KFycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R45KFycoEeSLVrU2ifxtpw" name="Body(List$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KGCcoEeSLVrU2ifxtpw" target="_R45KJycoEeSLVrU2ifxtpw" source="_R45KJCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KGScoEeSLVrU2ifxtpw" target="_R45KKycoEeSLVrU2ifxtpw" source="_R45KJycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KGicoEeSLVrU2ifxtpw" target="_R45KNicoEeSLVrU2ifxtpw" source="_R45KJycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KGycoEeSLVrU2ifxtpw" target="_R45KQCcoEeSLVrU2ifxtpw" source="_R45KJycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KHCcoEeSLVrU2ifxtpw" target="_R45KRycoEeSLVrU2ifxtpw" source="_R45KQycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KHScoEeSLVrU2ifxtpw" target="_R45KUycoEeSLVrU2ifxtpw" source="_R45KSicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KHicoEeSLVrU2ifxtpw" target="_R45KWScoEeSLVrU2ifxtpw" source="_R45KTicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45KHycoEeSLVrU2ifxtpw" target="_R45KXScoEeSLVrU2ifxtpw" source="_R45KXCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KICcoEeSLVrU2ifxtpw" target="_R45KXScoEeSLVrU2ifxtpw" source="_R45KVicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45KIScoEeSLVrU2ifxtpw" target="_R45KKCcoEeSLVrU2ifxtpw" source="_R45KXScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45KIicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_R45KIycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_R45KJCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R45KGCcoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KJScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KJicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R45KJycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R45KGCcoEeSLVrU2ifxtpw" outgoing="_R45KGScoEeSLVrU2ifxtpw _R45KGicoEeSLVrU2ifxtpw _R45KGycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45KKCcoEeSLVrU2ifxtpw" name="Initialization" incoming="_R45KIScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_R45KKScoEeSLVrU2ifxtpw" target="_R45KLicoEeSLVrU2ifxtpw" source="_R45KKicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R45KKicoEeSLVrU2ifxtpw" name="Call(ListImpl$initialization$1)" outgoing="_R45KKScoEeSLVrU2ifxtpw">
              <operation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-ListImplinitialization1.1"/>
              <target xmi:id="_R45KKycoEeSLVrU2ifxtpw" name="Call(ListImpl$initialization$1).target" incoming="_R45KGScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KLCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KLScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45KLicoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_R45KKScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45KLycoEeSLVrU2ifxtpw" target="_R45KPCcoEeSLVrU2ifxtpw" source="_R45KMScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45KMCcoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_R45KMScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_R45KLycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KMicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KMycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_R45KNCcoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_R45KNScoEeSLVrU2ifxtpw" name="Write(List$initializationFlag$1)" structuralFeature="_R44kRicoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_R45KNicoEeSLVrU2ifxtpw" name="Write(List$initializationFlag$1).object" incoming="_R45KGicoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KNycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KOCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45KOScoEeSLVrU2ifxtpw" name="Write(List$initializationFlag$1).result" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KOicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KOycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_R45KPCcoEeSLVrU2ifxtpw" name="Write(List$initializationFlag$1).value" incoming="_R45KLycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KPScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KPicoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R45KPycoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1)" structuralFeature="_R44kRicoEeSLVrU2ifxtpw">
            <object xmi:id="_R45KQCcoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1).object" incoming="_R45KGycoEeSLVrU2ifxtpw" type="_R44kQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KQScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KQicoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_R45KQycoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1).result" outgoing="_R45KHCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KRCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KRScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45KRicoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_R45KRycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R45KHCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KSCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KSScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R45KSicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R45KHScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KSycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KTCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45KTScoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_R45KTicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R45KHicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KTycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KUCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_R45KUScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R45KUicoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_R45KUycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R45KHScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KVCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KVScoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R45KVicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R45KICcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KVycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KWCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R45KWScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R45KHicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KWicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KWycoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R45KXCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R45KHycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R45KXScoEeSLVrU2ifxtpw" name="Decision(Test(List$initializationFlag$1))" incoming="_R45KHycoEeSLVrU2ifxtpw _R45KICcoEeSLVrU2ifxtpw" outgoing="_R45KIScoEeSLVrU2ifxtpw" decisionInputFlow="_R45KICcoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_R45KXicoEeSLVrU2ifxtpw" name="List$initialization$1" visibility="protected" method="_R45KFicoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R45KXycoEeSLVrU2ifxtpw" name="List" visibility="public" method="_R44kSScoEeSLVrU2ifxtpw" redefinedOperation="_R438bCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KYCcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KYScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KYicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KYycoEeSLVrU2ifxtpw" name="" visibility="package" type="_R44kQycoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KZCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KZScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KZicoEeSLVrU2ifxtpw" name="destroy" visibility="public" method="_R44klScoEeSLVrU2ifxtpw">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-destroy"/>
        <redefinedOperation href="#_R4385ycoEeSLVrU2ifxtpw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KZycoEeSLVrU2ifxtpw" name="add" visibility="public" method="_R44klycoEeSLVrU2ifxtpw" redefinedOperation="_R438cicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KaCcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KaScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KaicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KaycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KbCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KbScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KbicoEeSLVrU2ifxtpw" name="addAt" visibility="public" method="_R44ksycoEeSLVrU2ifxtpw" redefinedOperation="_R438hCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KbycoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KcCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KcScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KcicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KcycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KdCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KdScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KdicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KdycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KeCcoEeSLVrU2ifxtpw" name="addAll" visibility="public" method="_R44k2ScoEeSLVrU2ifxtpw" redefinedOperation="_R438dycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KeScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KeicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KeycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KfCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KfScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KficoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KfycoEeSLVrU2ifxtpw" name="addAllAt" visibility="public" method="_R44k9ScoEeSLVrU2ifxtpw" redefinedOperation="_R438fScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KgCcoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KgScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KgicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KgycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KhCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KhScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KhicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KhycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KiCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KiScoEeSLVrU2ifxtpw" name="at" visibility="public" method="_R44lGycoEeSLVrU2ifxtpw" redefinedOperation="_R438iScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KiicoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KiycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KjCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KjScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KjicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KjycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KkCcoEeSLVrU2ifxtpw" name="clear" visibility="public" method="_R44lTCcoEeSLVrU2ifxtpw" redefinedOperation="_R439DCcoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R45KkScoEeSLVrU2ifxtpw" name="count" visibility="public" method="_R44lUCcoEeSLVrU2ifxtpw" redefinedOperation="_R439DicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KkicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KkycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KlCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KlScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KlicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KlycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KmCcoEeSLVrU2ifxtpw" name="equals" visibility="public" method="_R44lbCcoEeSLVrU2ifxtpw" redefinedOperation="_R438jycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KmScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KmicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KmycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KnCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KnScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KnicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KnycoEeSLVrU2ifxtpw" name="first" visibility="public" method="_R44liCcoEeSLVrU2ifxtpw" redefinedOperation="_R438lScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KoCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KoScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KoicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KoycoEeSLVrU2ifxtpw" name="indexOf" visibility="public" method="_R44lrycoEeSLVrU2ifxtpw" redefinedOperation="_R438mScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KpCcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KpScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KpicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KpycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KqCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KqScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KqicoEeSLVrU2ifxtpw" name="last" visibility="public" method="_R44lyycoEeSLVrU2ifxtpw" redefinedOperation="_R438nycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KqycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KrCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KrScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KricoEeSLVrU2ifxtpw" name="excludes" visibility="public" method="_R44l8icoEeSLVrU2ifxtpw" redefinedOperation="_R439GycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KrycoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KsCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KsScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KsicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KsycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KtCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KtScoEeSLVrU2ifxtpw" name="excludesAll" visibility="public" method="_R44mDicoEeSLVrU2ifxtpw" redefinedOperation="_R439IScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KticoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KtycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KuCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KuScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KuicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KuycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KvCcoEeSLVrU2ifxtpw" name="includes" visibility="public" method="_R44mKicoEeSLVrU2ifxtpw" redefinedOperation="_R439KCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KvScoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KvicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KvycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KwCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KwScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KwicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KwycoEeSLVrU2ifxtpw" name="includesAll" visibility="public" method="_R44mRicoEeSLVrU2ifxtpw" redefinedOperation="_R439LicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KxCcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KxScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KxicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45KxycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KyCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KyScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KyicoEeSLVrU2ifxtpw" name="isEmpty" visibility="public" method="_R44mYicoEeSLVrU2ifxtpw" redefinedOperation="_R439NScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KyycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45KzCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45KzScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45KzicoEeSLVrU2ifxtpw" name="notEmpty" visibility="public" method="_R44mdCcoEeSLVrU2ifxtpw" redefinedOperation="_R439OScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45KzycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K0CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K0ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45K0icoEeSLVrU2ifxtpw" name="remove" visibility="public" method="_R44mhicoEeSLVrU2ifxtpw" redefinedOperation="_R438oycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45K0ycoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K1CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K1ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45K1icoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K1ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K2CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45K2ScoEeSLVrU2ifxtpw" name="removeAll" visibility="public" method="_R44moicoEeSLVrU2ifxtpw" redefinedOperation="_R438qCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45K2icoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K2ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K3CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45K3ScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K3icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K3ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45K4CcoEeSLVrU2ifxtpw" name="removeAt" visibility="public" method="_R44mvicoEeSLVrU2ifxtpw" redefinedOperation="_R438sycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45K4ScoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K4icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K4ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45K5CcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K5ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K5icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45K5ycoEeSLVrU2ifxtpw" name="removeOne" visibility="public" method="_R44m7ycoEeSLVrU2ifxtpw" redefinedOperation="_R438ricoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45K6CcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K6ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K6icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45K6ycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K7CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K7ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45K7icoEeSLVrU2ifxtpw" name="replace" visibility="public" method="_R44nCycoEeSLVrU2ifxtpw" redefinedOperation="_R438uScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45K7ycoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K8CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K8ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45K8icoEeSLVrU2ifxtpw" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K8ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K9CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45K9ScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K9icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K9ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45K-CcoEeSLVrU2ifxtpw" name="replaceAt" visibility="public" method="_R44nMScoEeSLVrU2ifxtpw" redefinedOperation="_R438xycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45K-ScoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K-icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K-ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45K_CcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45K_ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45K_icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45K_ycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LACcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LAScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45LAicoEeSLVrU2ifxtpw" name="replaceOne" visibility="public" method="_R44nbCcoEeSLVrU2ifxtpw" redefinedOperation="_R438wCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LAycoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LBCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LBScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LBicoEeSLVrU2ifxtpw" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LBycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LCCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LCScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LCicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LCycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45LDCcoEeSLVrU2ifxtpw" name="retainAll" visibility="public" method="_R44nkicoEeSLVrU2ifxtpw" redefinedOperation="_R438zycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LDScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LDicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LDycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LECcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LEScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LEicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45LEycoEeSLVrU2ifxtpw" name="size" visibility="public" method="_R44nricoEeSLVrU2ifxtpw" redefinedOperation="_R439YScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LFCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LFScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LFicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45LFycoEeSLVrU2ifxtpw" name="subList" visibility="public" method="_R44nwCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LGCcoEeSLVrU2ifxtpw" name="lower" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LGScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LGicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LGycoEeSLVrU2ifxtpw" name="upper" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LHCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LHScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LHicoEeSLVrU2ifxtpw" name="" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LHycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LICcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45LIScoEeSLVrU2ifxtpw" name="toSequence" visibility="public" method="_R44oDScoEeSLVrU2ifxtpw" redefinedOperation="_R439ZScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LIicoEeSLVrU2ifxtpw" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LIycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LJCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R45LJScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R45LJicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R45LJycoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b8k34XREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b8k3oXREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R45LKCcoEeSLVrU2ifxtpw" client="_R44kQycoEeSLVrU2ifxtpw" supplier="_R45LJScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_R45LKScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Impl$List__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____">
      <generalization xmi:id="_R45LKicoEeSLVrU2ifxtpw">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
      </generalization>
      <generalization xmi:id="_R45LKycoEeSLVrU2ifxtpw" general="_R439dycoEeSLVrU2ifxtpw"/>
      <ownedAttribute xmi:id="_R45LLCcoEeSLVrU2ifxtpw" name="List$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LLScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LLicoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45LLycoEeSLVrU2ifxtpw" name="List$method$1" specification="_R45xvScoEeSLVrU2ifxtpw" node="_R45LOScoEeSLVrU2ifxtpw _R45LOicoEeSLVrU2ifxtpw _R45LOycoEeSLVrU2ifxtpw _R45LPCcoEeSLVrU2ifxtpw" group="_R45LPCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LMCcoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LMScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LMicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LMycoEeSLVrU2ifxtpw" name="" type="_R45LKScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LNCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LNScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LNicoEeSLVrU2ifxtpw" target="_R45LOicoEeSLVrU2ifxtpw" source="_R45LOScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LNycoEeSLVrU2ifxtpw" target="_R45LOycoEeSLVrU2ifxtpw" source="_R45LTicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LOCcoEeSLVrU2ifxtpw" target="_R45LUicoEeSLVrU2ifxtpw" source="_R45LOicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45LPCcoEeSLVrU2ifxtpw" name="Body(List$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LPScoEeSLVrU2ifxtpw" target="_R45LTicoEeSLVrU2ifxtpw" source="_R45LSycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LPicoEeSLVrU2ifxtpw" target="_R45LWScoEeSLVrU2ifxtpw" source="_R45LTicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45LPycoEeSLVrU2ifxtpw" target="_R45LSScoEeSLVrU2ifxtpw" source="_R45LWCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45LQCcoEeSLVrU2ifxtpw" target="_R45LWCcoEeSLVrU2ifxtpw" source="_R45LTycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LQScoEeSLVrU2ifxtpw" target="_R45LXScoEeSLVrU2ifxtpw" source="_R45LTicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LQicoEeSLVrU2ifxtpw" target="_R45LZCcoEeSLVrU2ifxtpw" source="_R45LYCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LQycoEeSLVrU2ifxtpw" target="_R45LcCcoEeSLVrU2ifxtpw" source="_R45LZycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LRCcoEeSLVrU2ifxtpw" target="_R45LdicoEeSLVrU2ifxtpw" source="_R45LaycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45LRScoEeSLVrU2ifxtpw" target="_R45LeicoEeSLVrU2ifxtpw" source="_R45LeScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LRicoEeSLVrU2ifxtpw" target="_R45LeicoEeSLVrU2ifxtpw" source="_R45LcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45LRycoEeSLVrU2ifxtpw" target="_R45LTycoEeSLVrU2ifxtpw" source="_R45LeicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45LSCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45LSScoEeSLVrU2ifxtpw" name="Body" incoming="_R45LPycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_R45LSicoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_R45LSycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R45LPScoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LTCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LTScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R45LTicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R45LPScoEeSLVrU2ifxtpw" outgoing="_R45LNycoEeSLVrU2ifxtpw _R45LPicoEeSLVrU2ifxtpw _R45LQScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45LTycoEeSLVrU2ifxtpw" name="Super" incoming="_R45LRycoEeSLVrU2ifxtpw" outgoing="_R45LQCcoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45LUCcoEeSLVrU2ifxtpw" name="ExpressionStatement@4120ad65">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45LUScoEeSLVrU2ifxtpw" name="Call(ListImpl$method$1)">
                <argument xmi:id="_R45LUicoEeSLVrU2ifxtpw" name="Call(ListImpl$method$1).argument(seq)" incoming="_R45LOCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LUycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LVCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R45LVScoEeSLVrU2ifxtpw" name="Call(ListImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LVicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LVycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#ListImpl-ListImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_R45LWCcoEeSLVrU2ifxtpw" name="Call(List$initialization$1)" incoming="_R45LQCcoEeSLVrU2ifxtpw" outgoing="_R45LPycoEeSLVrU2ifxtpw" operation="_R45xvCcoEeSLVrU2ifxtpw">
            <target xmi:id="_R45LWScoEeSLVrU2ifxtpw" name="Call(List$initialization$1).target" incoming="_R45LPicoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LWicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LWycoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R45LXCcoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1)" structuralFeature="_R45LLCcoEeSLVrU2ifxtpw">
            <object xmi:id="_R45LXScoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1).object" incoming="_R45LQScoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LXicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LXycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_R45LYCcoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1).result" outgoing="_R45LQicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LYScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LYicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45LYycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_R45LZCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R45LQicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LZScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LZicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R45LZycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R45LQycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LaCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LaScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45LaicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_R45LaycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R45LRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LbCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LbScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_R45LbicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R45LbycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_R45LcCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R45LQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LcScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LcicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R45LcycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R45LRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LdCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LdScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R45LdicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R45LRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LdycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LeCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R45LeScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R45LRScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R45LeicoEeSLVrU2ifxtpw" name="Decision(Test(List$initializationFlag$1))" incoming="_R45LRScoEeSLVrU2ifxtpw _R45LRicoEeSLVrU2ifxtpw" outgoing="_R45LRycoEeSLVrU2ifxtpw" decisionInputFlow="_R45LRicoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LOScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R45LNicoEeSLVrU2ifxtpw" parameter="_R45LMCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45LOicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R45LNicoEeSLVrU2ifxtpw" outgoing="_R45LOCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LOycoEeSLVrU2ifxtpw" name="Return" incoming="_R45LNycoEeSLVrU2ifxtpw" parameter="_R45LMycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45LeycoEeSLVrU2ifxtpw" name="destroy$method$2" specification="_R45xxCcoEeSLVrU2ifxtpw" node="_R45LfCcoEeSLVrU2ifxtpw" group="_R45LfCcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R45LfCcoEeSLVrU2ifxtpw" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45LfScoEeSLVrU2ifxtpw" name="add$method$1" specification="_R45xxScoEeSLVrU2ifxtpw" node="_R45LiCcoEeSLVrU2ifxtpw _R45LiScoEeSLVrU2ifxtpw _R45LiicoEeSLVrU2ifxtpw _R45LiycoEeSLVrU2ifxtpw _R45LjCcoEeSLVrU2ifxtpw" group="_R45LjCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LficoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LfycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LgCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LgScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LgicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LgycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LhCcoEeSLVrU2ifxtpw" target="_R45LiScoEeSLVrU2ifxtpw" source="_R45LiCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45LhScoEeSLVrU2ifxtpw" target="_R45LiycoEeSLVrU2ifxtpw" source="_R45LjScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LhicoEeSLVrU2ifxtpw" target="_R45LkycoEeSLVrU2ifxtpw" source="_R45LiScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LhycoEeSLVrU2ifxtpw" target="_R45LiicoEeSLVrU2ifxtpw" source="_R45LjycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45LjCcoEeSLVrU2ifxtpw" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45LjScoEeSLVrU2ifxtpw" name="ReturnStatement@6c970086" outgoing="_R45LhScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LjicoEeSLVrU2ifxtpw" target="_R45LjycoEeSLVrU2ifxtpw" source="_R45LlicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45LjycoEeSLVrU2ifxtpw" name="ReturnStatement@6c970086.output" incoming="_R45LjicoEeSLVrU2ifxtpw" outgoing="_R45LhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LkCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LkScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45LkicoEeSLVrU2ifxtpw" name="Call(addImpl$method$1)">
              <argument xmi:id="_R45LkycoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).argument(element)" incoming="_R45LhicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LlCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LlScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45LlicoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).result()" outgoing="_R45LjicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LlycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LmCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LiCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45LhCcoEeSLVrU2ifxtpw" parameter="_R45LficoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45LiScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45LhCcoEeSLVrU2ifxtpw" outgoing="_R45LhicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LiicoEeSLVrU2ifxtpw" name="Return" incoming="_R45LhycoEeSLVrU2ifxtpw" parameter="_R45LgScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45LiycoEeSLVrU2ifxtpw" name="Final" incoming="_R45LhScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45LmScoEeSLVrU2ifxtpw" name="addAt$method$1" specification="_R45xzCcoEeSLVrU2ifxtpw" node="_R45LqScoEeSLVrU2ifxtpw _R45LqicoEeSLVrU2ifxtpw _R45LqycoEeSLVrU2ifxtpw _R45LrCcoEeSLVrU2ifxtpw _R45LrScoEeSLVrU2ifxtpw _R45LricoEeSLVrU2ifxtpw _R45LrycoEeSLVrU2ifxtpw" group="_R45LrycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LmicoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LmycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LnCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LnScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LnicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LnycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LoCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LoScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LoicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LoycoEeSLVrU2ifxtpw" target="_R45LqicoEeSLVrU2ifxtpw" source="_R45LqScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LpCcoEeSLVrU2ifxtpw" target="_R45LrCcoEeSLVrU2ifxtpw" source="_R45LqycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45LpScoEeSLVrU2ifxtpw" target="_R45LricoEeSLVrU2ifxtpw" source="_R45LsCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LpicoEeSLVrU2ifxtpw" target="_R45LticoEeSLVrU2ifxtpw" source="_R45LqicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LpycoEeSLVrU2ifxtpw" target="_R45LuScoEeSLVrU2ifxtpw" source="_R45LrCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LqCcoEeSLVrU2ifxtpw" target="_R45LrScoEeSLVrU2ifxtpw" source="_R45LsicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45LrycoEeSLVrU2ifxtpw" name="Body(addAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45LsCcoEeSLVrU2ifxtpw" name="ReturnStatement@11e70f62" outgoing="_R45LpScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LsScoEeSLVrU2ifxtpw" target="_R45LsicoEeSLVrU2ifxtpw" source="_R45LvCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45LsicoEeSLVrU2ifxtpw" name="ReturnStatement@11e70f62.output" incoming="_R45LsScoEeSLVrU2ifxtpw" outgoing="_R45LqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LsycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LtCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45LtScoEeSLVrU2ifxtpw" name="Call(addAtImpl$method$1)">
              <argument xmi:id="_R45LticoEeSLVrU2ifxtpw" name="Call(addAtImpl$method$1).argument(index)" incoming="_R45LpicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LtycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LuCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45LuScoEeSLVrU2ifxtpw" name="Call(addAtImpl$method$1).argument(element)" incoming="_R45LpycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LuicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LuycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45LvCcoEeSLVrU2ifxtpw" name="Call(addAtImpl$method$1).result()" outgoing="_R45LsScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LvScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LvicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-addAtImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LqScoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R45LoycoEeSLVrU2ifxtpw" parameter="_R45LmicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45LqicoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R45LoycoEeSLVrU2ifxtpw" outgoing="_R45LpicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LqycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45LpCcoEeSLVrU2ifxtpw" parameter="_R45LnScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45LrCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45LpCcoEeSLVrU2ifxtpw" outgoing="_R45LpycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LrScoEeSLVrU2ifxtpw" name="Return" incoming="_R45LqCcoEeSLVrU2ifxtpw" parameter="_R45LoCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45LricoEeSLVrU2ifxtpw" name="Final" incoming="_R45LpScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45LvycoEeSLVrU2ifxtpw" name="addAll$method$1" specification="_R45x1icoEeSLVrU2ifxtpw" node="_R45LyicoEeSLVrU2ifxtpw _R45LyycoEeSLVrU2ifxtpw _R45LzCcoEeSLVrU2ifxtpw _R45LzScoEeSLVrU2ifxtpw _R45LzicoEeSLVrU2ifxtpw" group="_R45LzicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45LwCcoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LwScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LwicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45LwycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45LxCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45LxScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LxicoEeSLVrU2ifxtpw" target="_R45LyycoEeSLVrU2ifxtpw" source="_R45LyicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45LxycoEeSLVrU2ifxtpw" target="_R45LzScoEeSLVrU2ifxtpw" source="_R45LzycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LyCcoEeSLVrU2ifxtpw" target="_R45L1ScoEeSLVrU2ifxtpw" source="_R45LyycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45LyScoEeSLVrU2ifxtpw" target="_R45LzCcoEeSLVrU2ifxtpw" source="_R45L0ScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45LzicoEeSLVrU2ifxtpw" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45LzycoEeSLVrU2ifxtpw" name="ReturnStatement@4b0900c8" outgoing="_R45LxycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45L0CcoEeSLVrU2ifxtpw" target="_R45L0ScoEeSLVrU2ifxtpw" source="_R45L2CcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45L0ScoEeSLVrU2ifxtpw" name="ReturnStatement@4b0900c8.output" incoming="_R45L0CcoEeSLVrU2ifxtpw" outgoing="_R45LyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L0icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L0ycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45L1CcoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_R45L1ScoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).argument(seq)" incoming="_R45LyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L1icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L1ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45L2CcoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).result()" outgoing="_R45L0CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L2ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L2icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LyicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R45LxicoEeSLVrU2ifxtpw" parameter="_R45LwCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45LyycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R45LxicoEeSLVrU2ifxtpw" outgoing="_R45LyCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45LzCcoEeSLVrU2ifxtpw" name="Return" incoming="_R45LyScoEeSLVrU2ifxtpw" parameter="_R45LwycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45LzScoEeSLVrU2ifxtpw" name="Final" incoming="_R45LxycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45L2ycoEeSLVrU2ifxtpw" name="addAllAt$method$1" specification="_R45x3ScoEeSLVrU2ifxtpw" node="_R45L6ycoEeSLVrU2ifxtpw _R45L7CcoEeSLVrU2ifxtpw _R45L7ScoEeSLVrU2ifxtpw _R45L7icoEeSLVrU2ifxtpw _R45L7ycoEeSLVrU2ifxtpw _R45L8CcoEeSLVrU2ifxtpw _R45L8ScoEeSLVrU2ifxtpw" group="_R45L8ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45L3CcoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L3ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L3icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45L3ycoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L4CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L4ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45L4icoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L4ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L5CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45L5ScoEeSLVrU2ifxtpw" target="_R45L7CcoEeSLVrU2ifxtpw" source="_R45L6ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45L5icoEeSLVrU2ifxtpw" target="_R45L7icoEeSLVrU2ifxtpw" source="_R45L7ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45L5ycoEeSLVrU2ifxtpw" target="_R45L8CcoEeSLVrU2ifxtpw" source="_R45L8icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45L6CcoEeSLVrU2ifxtpw" target="_R45L-CcoEeSLVrU2ifxtpw" source="_R45L7CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45L6ScoEeSLVrU2ifxtpw" target="_R45L-ycoEeSLVrU2ifxtpw" source="_R45L7icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45L6icoEeSLVrU2ifxtpw" target="_R45L7ycoEeSLVrU2ifxtpw" source="_R45L9CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45L8ScoEeSLVrU2ifxtpw" name="Body(addAllAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45L8icoEeSLVrU2ifxtpw" name="ReturnStatement@a3fb526" outgoing="_R45L5ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45L8ycoEeSLVrU2ifxtpw" target="_R45L9CcoEeSLVrU2ifxtpw" source="_R45L_icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45L9CcoEeSLVrU2ifxtpw" name="ReturnStatement@a3fb526.output" incoming="_R45L8ycoEeSLVrU2ifxtpw" outgoing="_R45L6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L9ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L9icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45L9ycoEeSLVrU2ifxtpw" name="Call(addAllAtImpl$method$1)">
              <argument xmi:id="_R45L-CcoEeSLVrU2ifxtpw" name="Call(addAllAtImpl$method$1).argument(index)" incoming="_R45L6CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L-ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L-icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45L-ycoEeSLVrU2ifxtpw" name="Call(addAllAtImpl$method$1).argument(seq)" incoming="_R45L6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L_CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45L_ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45L_icoEeSLVrU2ifxtpw" name="Call(addAllAtImpl$method$1).result()" outgoing="_R45L8ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45L_ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MACcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-addAllAtImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45L6ycoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R45L5ScoEeSLVrU2ifxtpw" parameter="_R45L3CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45L7CcoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R45L5ScoEeSLVrU2ifxtpw" outgoing="_R45L6CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45L7ScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R45L5icoEeSLVrU2ifxtpw" parameter="_R45L3ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45L7icoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R45L5icoEeSLVrU2ifxtpw" outgoing="_R45L6ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45L7ycoEeSLVrU2ifxtpw" name="Return" incoming="_R45L6icoEeSLVrU2ifxtpw" parameter="_R45L4icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45L8CcoEeSLVrU2ifxtpw" name="Final" incoming="_R45L5ycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45MAScoEeSLVrU2ifxtpw" name="at$method$1" specification="_R45x5ycoEeSLVrU2ifxtpw" node="_R45MDCcoEeSLVrU2ifxtpw _R45MDScoEeSLVrU2ifxtpw _R45MDicoEeSLVrU2ifxtpw _R45MDycoEeSLVrU2ifxtpw _R45MECcoEeSLVrU2ifxtpw" group="_R45MECcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45MAicoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MAycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MBCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45MBScoEeSLVrU2ifxtpw" name="" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MBicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MBycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MCCcoEeSLVrU2ifxtpw" target="_R45MDScoEeSLVrU2ifxtpw" source="_R45MDCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45MCScoEeSLVrU2ifxtpw" target="_R45MDycoEeSLVrU2ifxtpw" source="_R45MEScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MCicoEeSLVrU2ifxtpw" target="_R45MGCcoEeSLVrU2ifxtpw" source="_R45MDScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MCycoEeSLVrU2ifxtpw" target="_R45MDicoEeSLVrU2ifxtpw" source="_R45MFCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45MECcoEeSLVrU2ifxtpw" name="Body(at$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45MEScoEeSLVrU2ifxtpw" name="ReturnStatement@7d224d90" outgoing="_R45MCScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MEicoEeSLVrU2ifxtpw" target="_R45MMCcoEeSLVrU2ifxtpw" source="_R45MGycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MEycoEeSLVrU2ifxtpw" target="_R45MFCcoEeSLVrU2ifxtpw" source="_R45MMScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45MFCcoEeSLVrU2ifxtpw" name="ReturnStatement@7d224d90.output" incoming="_R45MEycoEeSLVrU2ifxtpw" outgoing="_R45MCycoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MFScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MFicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45MFycoEeSLVrU2ifxtpw" name="Call(atImpl$method$1)">
              <argument xmi:id="_R45MGCcoEeSLVrU2ifxtpw" name="Call(atImpl$method$1).argument(index)" incoming="_R45MCicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MGScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MGicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45MGycoEeSLVrU2ifxtpw" name="Call(atImpl$method$1).result()" outgoing="_R45MEicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MHCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MHScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-atImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R45MHicoEeSLVrU2ifxtpw" name="CastExpression@60e88620" mode="parallel" outputElement="_R45MMScoEeSLVrU2ifxtpw" inputElement="_R45MMCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MHycoEeSLVrU2ifxtpw" target="_R45MKCcoEeSLVrU2ifxtpw" source="_R45MLicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MICcoEeSLVrU2ifxtpw" target="_R45MLycoEeSLVrU2ifxtpw" source="_R45MLicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MIScoEeSLVrU2ifxtpw" target="_R45MLycoEeSLVrU2ifxtpw" source="_R45MKycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MIicoEeSLVrU2ifxtpw" target="_R45MJicoEeSLVrU2ifxtpw" source="_R45MLycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45MIycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MJCcoEeSLVrU2ifxtpw" target="_R45MLicoEeSLVrU2ifxtpw" source="_R45MMCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MJScoEeSLVrU2ifxtpw" target="_R45MMScoEeSLVrU2ifxtpw" source="_R45MJicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R45MJicoEeSLVrU2ifxtpw" name="Merge(CastExpression@60e88620.operand)" incoming="_R45MIicoEeSLVrU2ifxtpw" outgoing="_R45MJScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R45MJycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_R438aScoEeSLVrU2ifxtpw">
                <object xmi:id="_R45MKCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R45MHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MKScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MKicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45MKycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R45MIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MLCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MLScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R45MLicoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R45MJCcoEeSLVrU2ifxtpw" outgoing="_R45MHycoEeSLVrU2ifxtpw _R45MICcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R45MLycoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R45MICcoEeSLVrU2ifxtpw _R45MIScoEeSLVrU2ifxtpw" outgoing="_R45MIicoEeSLVrU2ifxtpw" decisionInputFlow="_R45MIScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45MMCcoEeSLVrU2ifxtpw" name="CastExpression@60e88620.inputElement" incoming="_R45MEicoEeSLVrU2ifxtpw" outgoing="_R45MJCcoEeSLVrU2ifxtpw" regionAsInput="_R45MHicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45MMScoEeSLVrU2ifxtpw" name="CastExpression@60e88620.outputElement" incoming="_R45MJScoEeSLVrU2ifxtpw" outgoing="_R45MEycoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" regionAsOutput="_R45MHicoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MDCcoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R45MCCcoEeSLVrU2ifxtpw" parameter="_R45MAicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45MDScoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R45MCCcoEeSLVrU2ifxtpw" outgoing="_R45MCicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MDicoEeSLVrU2ifxtpw" name="Return" incoming="_R45MCycoEeSLVrU2ifxtpw" parameter="_R45MBScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45MDycoEeSLVrU2ifxtpw" name="Final" incoming="_R45MCScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45MMicoEeSLVrU2ifxtpw" name="clear$method$1" specification="_R45x7icoEeSLVrU2ifxtpw" node="_R45MMycoEeSLVrU2ifxtpw" group="_R45MMycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R45MMycoEeSLVrU2ifxtpw" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45MNCcoEeSLVrU2ifxtpw" name="ExpressionStatement@46346072">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45MNScoEeSLVrU2ifxtpw" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45MNicoEeSLVrU2ifxtpw" name="count$method$1" specification="_R45x7ycoEeSLVrU2ifxtpw" node="_R45MQScoEeSLVrU2ifxtpw _R45MQicoEeSLVrU2ifxtpw _R45MQycoEeSLVrU2ifxtpw _R45MRCcoEeSLVrU2ifxtpw _R45MRScoEeSLVrU2ifxtpw" group="_R45MRScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45MNycoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MOCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MOScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45MOicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MOycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MPCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MPScoEeSLVrU2ifxtpw" target="_R45MQicoEeSLVrU2ifxtpw" source="_R45MQScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45MPicoEeSLVrU2ifxtpw" target="_R45MRCcoEeSLVrU2ifxtpw" source="_R45MRicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MPycoEeSLVrU2ifxtpw" target="_R45MTCcoEeSLVrU2ifxtpw" source="_R45MQicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MQCcoEeSLVrU2ifxtpw" target="_R45MQycoEeSLVrU2ifxtpw" source="_R45MSCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45MRScoEeSLVrU2ifxtpw" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45MRicoEeSLVrU2ifxtpw" name="ReturnStatement@1dea3324" outgoing="_R45MPicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MRycoEeSLVrU2ifxtpw" target="_R45MSCcoEeSLVrU2ifxtpw" source="_R45MTycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45MSCcoEeSLVrU2ifxtpw" name="ReturnStatement@1dea3324.output" incoming="_R45MRycoEeSLVrU2ifxtpw" outgoing="_R45MQCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MSScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MSicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45MSycoEeSLVrU2ifxtpw" name="Call(countImpl$method$1)">
              <argument xmi:id="_R45MTCcoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).argument(element)" incoming="_R45MPycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MTScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MTicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45MTycoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).result()" outgoing="_R45MRycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MUCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MUScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MQScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45MPScoEeSLVrU2ifxtpw" parameter="_R45MNycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45MQicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45MPScoEeSLVrU2ifxtpw" outgoing="_R45MPycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MQycoEeSLVrU2ifxtpw" name="Return" incoming="_R45MQCcoEeSLVrU2ifxtpw" parameter="_R45MOicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45MRCcoEeSLVrU2ifxtpw" name="Final" incoming="_R45MPicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45MUicoEeSLVrU2ifxtpw" name="equals$method$1" specification="_R45x9icoEeSLVrU2ifxtpw" node="_R45MXScoEeSLVrU2ifxtpw _R45MXicoEeSLVrU2ifxtpw _R45MXycoEeSLVrU2ifxtpw _R45MYCcoEeSLVrU2ifxtpw _R45MYScoEeSLVrU2ifxtpw" group="_R45MYScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45MUycoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MVCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MVScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45MVicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MVycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MWCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MWScoEeSLVrU2ifxtpw" target="_R45MXicoEeSLVrU2ifxtpw" source="_R45MXScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45MWicoEeSLVrU2ifxtpw" target="_R45MYCcoEeSLVrU2ifxtpw" source="_R45MYicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MWycoEeSLVrU2ifxtpw" target="_R45MaCcoEeSLVrU2ifxtpw" source="_R45MXicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MXCcoEeSLVrU2ifxtpw" target="_R45MXycoEeSLVrU2ifxtpw" source="_R45MZCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45MYScoEeSLVrU2ifxtpw" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45MYicoEeSLVrU2ifxtpw" name="ReturnStatement@4b347dad" outgoing="_R45MWicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MYycoEeSLVrU2ifxtpw" target="_R45MZCcoEeSLVrU2ifxtpw" source="_R45MaycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45MZCcoEeSLVrU2ifxtpw" name="ReturnStatement@4b347dad.output" incoming="_R45MYycoEeSLVrU2ifxtpw" outgoing="_R45MXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MZScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MZicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45MZycoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_R45MaCcoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).argument(seq)" incoming="_R45MWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MaScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MaicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45MaycoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).result()" outgoing="_R45MYycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MbCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MbScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MXScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R45MWScoEeSLVrU2ifxtpw" parameter="_R45MUycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45MXicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R45MWScoEeSLVrU2ifxtpw" outgoing="_R45MWycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MXycoEeSLVrU2ifxtpw" name="Return" incoming="_R45MXCcoEeSLVrU2ifxtpw" parameter="_R45MVicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45MYCcoEeSLVrU2ifxtpw" name="Final" incoming="_R45MWicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45MbicoEeSLVrU2ifxtpw" name="first$method$1" specification="_R45x_ScoEeSLVrU2ifxtpw" node="_R45MdCcoEeSLVrU2ifxtpw _R45MdScoEeSLVrU2ifxtpw _R45MdicoEeSLVrU2ifxtpw" group="_R45MdicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45MbycoEeSLVrU2ifxtpw" name="" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45McCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45McScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45McicoEeSLVrU2ifxtpw" target="_R45MdScoEeSLVrU2ifxtpw" source="_R45MdycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45McycoEeSLVrU2ifxtpw" target="_R45MdCcoEeSLVrU2ifxtpw" source="_R45MeicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45MdicoEeSLVrU2ifxtpw" name="Body(first$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45MdycoEeSLVrU2ifxtpw" name="ReturnStatement@9457b0f" outgoing="_R45McicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MeCcoEeSLVrU2ifxtpw" target="_R45MkycoEeSLVrU2ifxtpw" source="_R45MficoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MeScoEeSLVrU2ifxtpw" target="_R45MeicoEeSLVrU2ifxtpw" source="_R45MlCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45MeicoEeSLVrU2ifxtpw" name="ReturnStatement@9457b0f.output" incoming="_R45MeScoEeSLVrU2ifxtpw" outgoing="_R45McycoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MeycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MfCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45MfScoEeSLVrU2ifxtpw" name="Call(firstImpl$method$1)">
              <result xmi:id="_R45MficoEeSLVrU2ifxtpw" name="Call(firstImpl$method$1).result()" outgoing="_R45MeCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MfycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MgCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-firstImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R45MgScoEeSLVrU2ifxtpw" name="CastExpression@71749bbd" mode="parallel" outputElement="_R45MlCcoEeSLVrU2ifxtpw" inputElement="_R45MkycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MgicoEeSLVrU2ifxtpw" target="_R45MiycoEeSLVrU2ifxtpw" source="_R45MkScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MgycoEeSLVrU2ifxtpw" target="_R45MkicoEeSLVrU2ifxtpw" source="_R45MkScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MhCcoEeSLVrU2ifxtpw" target="_R45MkicoEeSLVrU2ifxtpw" source="_R45MjicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MhScoEeSLVrU2ifxtpw" target="_R45MiScoEeSLVrU2ifxtpw" source="_R45MkicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45MhicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MhycoEeSLVrU2ifxtpw" target="_R45MkScoEeSLVrU2ifxtpw" source="_R45MkycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MiCcoEeSLVrU2ifxtpw" target="_R45MlCcoEeSLVrU2ifxtpw" source="_R45MiScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R45MiScoEeSLVrU2ifxtpw" name="Merge(CastExpression@71749bbd.operand)" incoming="_R45MhScoEeSLVrU2ifxtpw" outgoing="_R45MiCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R45MiicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_R438aScoEeSLVrU2ifxtpw">
                <object xmi:id="_R45MiycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R45MgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MjCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MjScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45MjicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R45MhCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MjycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MkCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R45MkScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R45MhycoEeSLVrU2ifxtpw" outgoing="_R45MgicoEeSLVrU2ifxtpw _R45MgycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R45MkicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R45MgycoEeSLVrU2ifxtpw _R45MhCcoEeSLVrU2ifxtpw" outgoing="_R45MhScoEeSLVrU2ifxtpw" decisionInputFlow="_R45MhCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45MkycoEeSLVrU2ifxtpw" name="CastExpression@71749bbd.inputElement" incoming="_R45MeCcoEeSLVrU2ifxtpw" outgoing="_R45MhycoEeSLVrU2ifxtpw" regionAsInput="_R45MgScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45MlCcoEeSLVrU2ifxtpw" name="CastExpression@71749bbd.outputElement" incoming="_R45MiCcoEeSLVrU2ifxtpw" outgoing="_R45MeScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" regionAsOutput="_R45MgScoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MdCcoEeSLVrU2ifxtpw" name="Return" incoming="_R45McycoEeSLVrU2ifxtpw" parameter="_R45MbycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45MdScoEeSLVrU2ifxtpw" name="Final" incoming="_R45McicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45MlScoEeSLVrU2ifxtpw" name="indexOf$method$1" specification="_R45yAScoEeSLVrU2ifxtpw" node="_R45MoCcoEeSLVrU2ifxtpw _R45MoScoEeSLVrU2ifxtpw _R45MoicoEeSLVrU2ifxtpw _R45MoycoEeSLVrU2ifxtpw _R45MpCcoEeSLVrU2ifxtpw" group="_R45MpCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45MlicoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MlycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MmCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45MmScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MmicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MmycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MnCcoEeSLVrU2ifxtpw" target="_R45MoScoEeSLVrU2ifxtpw" source="_R45MoCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45MnScoEeSLVrU2ifxtpw" target="_R45MoycoEeSLVrU2ifxtpw" source="_R45MpScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MnicoEeSLVrU2ifxtpw" target="_R45MqycoEeSLVrU2ifxtpw" source="_R45MoScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MnycoEeSLVrU2ifxtpw" target="_R45MoicoEeSLVrU2ifxtpw" source="_R45MpycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45MpCcoEeSLVrU2ifxtpw" name="Body(indexOf$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45MpScoEeSLVrU2ifxtpw" name="ReturnStatement@7000f98d" outgoing="_R45MnScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MpicoEeSLVrU2ifxtpw" target="_R45MpycoEeSLVrU2ifxtpw" source="_R45MricoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45MpycoEeSLVrU2ifxtpw" name="ReturnStatement@7000f98d.output" incoming="_R45MpicoEeSLVrU2ifxtpw" outgoing="_R45MnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MqCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MqScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45MqicoEeSLVrU2ifxtpw" name="Call(indexOfImpl$method$1)">
              <argument xmi:id="_R45MqycoEeSLVrU2ifxtpw" name="Call(indexOfImpl$method$1).argument(element)" incoming="_R45MnicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MrCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MrScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45MricoEeSLVrU2ifxtpw" name="Call(indexOfImpl$method$1).result()" outgoing="_R45MpicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MrycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MsCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-indexOfImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MoCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45MnCcoEeSLVrU2ifxtpw" parameter="_R45MlicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45MoScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45MnCcoEeSLVrU2ifxtpw" outgoing="_R45MnicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MoicoEeSLVrU2ifxtpw" name="Return" incoming="_R45MnycoEeSLVrU2ifxtpw" parameter="_R45MmScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45MoycoEeSLVrU2ifxtpw" name="Final" incoming="_R45MnScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45MsScoEeSLVrU2ifxtpw" name="last$method$1" specification="_R45yCCcoEeSLVrU2ifxtpw" node="_R45MtycoEeSLVrU2ifxtpw _R45MuCcoEeSLVrU2ifxtpw _R45MuScoEeSLVrU2ifxtpw" group="_R45MuScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45MsicoEeSLVrU2ifxtpw" name="" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MsycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MtCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45MtScoEeSLVrU2ifxtpw" target="_R45MuCcoEeSLVrU2ifxtpw" source="_R45MuicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MticoEeSLVrU2ifxtpw" target="_R45MtycoEeSLVrU2ifxtpw" source="_R45MvScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45MuScoEeSLVrU2ifxtpw" name="Body(last$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45MuicoEeSLVrU2ifxtpw" name="ReturnStatement@57161a37" outgoing="_R45MtScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MuycoEeSLVrU2ifxtpw" target="_R45M1icoEeSLVrU2ifxtpw" source="_R45MwScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MvCcoEeSLVrU2ifxtpw" target="_R45MvScoEeSLVrU2ifxtpw" source="_R45M1ycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45MvScoEeSLVrU2ifxtpw" name="ReturnStatement@57161a37.output" incoming="_R45MvCcoEeSLVrU2ifxtpw" outgoing="_R45MticoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MvicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MvycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45MwCcoEeSLVrU2ifxtpw" name="Call(lastImpl$method$1)">
              <result xmi:id="_R45MwScoEeSLVrU2ifxtpw" name="Call(lastImpl$method$1).result()" outgoing="_R45MuycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MwicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45MwycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-lastImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R45MxCcoEeSLVrU2ifxtpw" name="CastExpression@ff2d097" mode="parallel" outputElement="_R45M1ycoEeSLVrU2ifxtpw" inputElement="_R45M1icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MxScoEeSLVrU2ifxtpw" target="_R45MzicoEeSLVrU2ifxtpw" source="_R45M1CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MxicoEeSLVrU2ifxtpw" target="_R45M1ScoEeSLVrU2ifxtpw" source="_R45M1CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MxycoEeSLVrU2ifxtpw" target="_R45M1ScoEeSLVrU2ifxtpw" source="_R45M0ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MyCcoEeSLVrU2ifxtpw" target="_R45MzCcoEeSLVrU2ifxtpw" source="_R45M1ScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45MyScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MyicoEeSLVrU2ifxtpw" target="_R45M1CcoEeSLVrU2ifxtpw" source="_R45M1icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45MyycoEeSLVrU2ifxtpw" target="_R45M1ycoEeSLVrU2ifxtpw" source="_R45MzCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R45MzCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@ff2d097.operand)" incoming="_R45MyCcoEeSLVrU2ifxtpw" outgoing="_R45MyycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R45MzScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_R438aScoEeSLVrU2ifxtpw">
                <object xmi:id="_R45MzicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R45MxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45MzycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M0CcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45M0ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R45MxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45M0icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M0ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R45M1CcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R45MyicoEeSLVrU2ifxtpw" outgoing="_R45MxScoEeSLVrU2ifxtpw _R45MxicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R45M1ScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R45MxicoEeSLVrU2ifxtpw _R45MxycoEeSLVrU2ifxtpw" outgoing="_R45MyCcoEeSLVrU2ifxtpw" decisionInputFlow="_R45MxycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45M1icoEeSLVrU2ifxtpw" name="CastExpression@ff2d097.inputElement" incoming="_R45MuycoEeSLVrU2ifxtpw" outgoing="_R45MyicoEeSLVrU2ifxtpw" regionAsInput="_R45MxCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45M1ycoEeSLVrU2ifxtpw" name="CastExpression@ff2d097.outputElement" incoming="_R45MyycoEeSLVrU2ifxtpw" outgoing="_R45MvCcoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" regionAsOutput="_R45MxCcoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45MtycoEeSLVrU2ifxtpw" name="Return" incoming="_R45MticoEeSLVrU2ifxtpw" parameter="_R45MsicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45MuCcoEeSLVrU2ifxtpw" name="Final" incoming="_R45MtScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45M2CcoEeSLVrU2ifxtpw" name="excludes$method$1" specification="_R45yDCcoEeSLVrU2ifxtpw" node="_R45M4ycoEeSLVrU2ifxtpw _R45M5CcoEeSLVrU2ifxtpw _R45M5ScoEeSLVrU2ifxtpw _R45M5icoEeSLVrU2ifxtpw _R45M5ycoEeSLVrU2ifxtpw" group="_R45M5ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45M2ScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45M2icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M2ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45M3CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45M3ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M3icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45M3ycoEeSLVrU2ifxtpw" target="_R45M5CcoEeSLVrU2ifxtpw" source="_R45M4ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45M4CcoEeSLVrU2ifxtpw" target="_R45M5icoEeSLVrU2ifxtpw" source="_R45M6CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45M4ScoEeSLVrU2ifxtpw" target="_R45M7icoEeSLVrU2ifxtpw" source="_R45M5CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45M4icoEeSLVrU2ifxtpw" target="_R45M5ScoEeSLVrU2ifxtpw" source="_R45M6icoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45M5ycoEeSLVrU2ifxtpw" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45M6CcoEeSLVrU2ifxtpw" name="ReturnStatement@54ff23f3" outgoing="_R45M4CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45M6ScoEeSLVrU2ifxtpw" target="_R45M6icoEeSLVrU2ifxtpw" source="_R45M8ScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45M6icoEeSLVrU2ifxtpw" name="ReturnStatement@54ff23f3.output" incoming="_R45M6ScoEeSLVrU2ifxtpw" outgoing="_R45M4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45M6ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M7CcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45M7ScoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_R45M7icoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).argument(element)" incoming="_R45M4ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45M7ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M8CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45M8ScoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).result()" outgoing="_R45M6ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45M8icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M8ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45M4ycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45M3ycoEeSLVrU2ifxtpw" parameter="_R45M2ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45M5CcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45M3ycoEeSLVrU2ifxtpw" outgoing="_R45M4ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45M5ScoEeSLVrU2ifxtpw" name="Return" incoming="_R45M4icoEeSLVrU2ifxtpw" parameter="_R45M3CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45M5icoEeSLVrU2ifxtpw" name="Final" incoming="_R45M4CcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45M9CcoEeSLVrU2ifxtpw" name="excludesAll$method$1" specification="_R45yEycoEeSLVrU2ifxtpw" node="_R45M_ycoEeSLVrU2ifxtpw _R45NACcoEeSLVrU2ifxtpw _R45NAScoEeSLVrU2ifxtpw _R45NAicoEeSLVrU2ifxtpw _R45NAycoEeSLVrU2ifxtpw" group="_R45NAycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45M9ScoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45M9icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M9ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45M-CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45M-ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45M-icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45M-ycoEeSLVrU2ifxtpw" target="_R45NACcoEeSLVrU2ifxtpw" source="_R45M_ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45M_CcoEeSLVrU2ifxtpw" target="_R45NAicoEeSLVrU2ifxtpw" source="_R45NBCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45M_ScoEeSLVrU2ifxtpw" target="_R45NCicoEeSLVrU2ifxtpw" source="_R45NACcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45M_icoEeSLVrU2ifxtpw" target="_R45NAScoEeSLVrU2ifxtpw" source="_R45NBicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45NAycoEeSLVrU2ifxtpw" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45NBCcoEeSLVrU2ifxtpw" name="ReturnStatement@50ed97a6" outgoing="_R45M_CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NBScoEeSLVrU2ifxtpw" target="_R45NBicoEeSLVrU2ifxtpw" source="_R45NDScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45NBicoEeSLVrU2ifxtpw" name="ReturnStatement@50ed97a6.output" incoming="_R45NBScoEeSLVrU2ifxtpw" outgoing="_R45M_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NBycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NCCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45NCScoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_R45NCicoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_R45M_ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NCycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NDCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45NDScoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).result()" outgoing="_R45NBScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NDicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NDycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45M_ycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R45M-ycoEeSLVrU2ifxtpw" parameter="_R45M9ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45NACcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R45M-ycoEeSLVrU2ifxtpw" outgoing="_R45M_ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NAScoEeSLVrU2ifxtpw" name="Return" incoming="_R45M_icoEeSLVrU2ifxtpw" parameter="_R45M-CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45NAicoEeSLVrU2ifxtpw" name="Final" incoming="_R45M_CcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45NECcoEeSLVrU2ifxtpw" name="includes$method$1" specification="_R45yGicoEeSLVrU2ifxtpw" node="_R45NGycoEeSLVrU2ifxtpw _R45NHCcoEeSLVrU2ifxtpw _R45NHScoEeSLVrU2ifxtpw _R45NHicoEeSLVrU2ifxtpw _R45NHycoEeSLVrU2ifxtpw" group="_R45NHycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45NEScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NEicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NEycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45NFCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NFScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NFicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NFycoEeSLVrU2ifxtpw" target="_R45NHCcoEeSLVrU2ifxtpw" source="_R45NGycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45NGCcoEeSLVrU2ifxtpw" target="_R45NHicoEeSLVrU2ifxtpw" source="_R45NICcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NGScoEeSLVrU2ifxtpw" target="_R45NJicoEeSLVrU2ifxtpw" source="_R45NHCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NGicoEeSLVrU2ifxtpw" target="_R45NHScoEeSLVrU2ifxtpw" source="_R45NIicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45NHycoEeSLVrU2ifxtpw" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45NICcoEeSLVrU2ifxtpw" name="ReturnStatement@7b4fb4eb" outgoing="_R45NGCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NIScoEeSLVrU2ifxtpw" target="_R45NIicoEeSLVrU2ifxtpw" source="_R45NKScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45NIicoEeSLVrU2ifxtpw" name="ReturnStatement@7b4fb4eb.output" incoming="_R45NIScoEeSLVrU2ifxtpw" outgoing="_R45NGicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NIycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NJCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45NJScoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1)">
              <argument xmi:id="_R45NJicoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).argument(element)" incoming="_R45NGScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NJycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NKCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45NKScoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).result()" outgoing="_R45NIScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NKicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NKycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NGycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45NFycoEeSLVrU2ifxtpw" parameter="_R45NEScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45NHCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45NFycoEeSLVrU2ifxtpw" outgoing="_R45NGScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NHScoEeSLVrU2ifxtpw" name="Return" incoming="_R45NGicoEeSLVrU2ifxtpw" parameter="_R45NFCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45NHicoEeSLVrU2ifxtpw" name="Final" incoming="_R45NGCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45NLCcoEeSLVrU2ifxtpw" name="includesAll$method$1" specification="_R45yIScoEeSLVrU2ifxtpw" node="_R45NNycoEeSLVrU2ifxtpw _R45NOCcoEeSLVrU2ifxtpw _R45NOScoEeSLVrU2ifxtpw _R45NOicoEeSLVrU2ifxtpw _R45NOycoEeSLVrU2ifxtpw" group="_R45NOycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45NLScoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NLicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NLycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45NMCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NMScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NMicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NMycoEeSLVrU2ifxtpw" target="_R45NOCcoEeSLVrU2ifxtpw" source="_R45NNycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45NNCcoEeSLVrU2ifxtpw" target="_R45NOicoEeSLVrU2ifxtpw" source="_R45NPCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NNScoEeSLVrU2ifxtpw" target="_R45NQicoEeSLVrU2ifxtpw" source="_R45NOCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NNicoEeSLVrU2ifxtpw" target="_R45NOScoEeSLVrU2ifxtpw" source="_R45NPicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45NOycoEeSLVrU2ifxtpw" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45NPCcoEeSLVrU2ifxtpw" name="ReturnStatement@581b236" outgoing="_R45NNCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NPScoEeSLVrU2ifxtpw" target="_R45NPicoEeSLVrU2ifxtpw" source="_R45NRScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45NPicoEeSLVrU2ifxtpw" name="ReturnStatement@581b236.output" incoming="_R45NPScoEeSLVrU2ifxtpw" outgoing="_R45NNicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NPycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NQCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45NQScoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_R45NQicoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_R45NNScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NQycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NRCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45NRScoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).result()" outgoing="_R45NPScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NRicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NRycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NNycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R45NMycoEeSLVrU2ifxtpw" parameter="_R45NLScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45NOCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R45NMycoEeSLVrU2ifxtpw" outgoing="_R45NNScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NOScoEeSLVrU2ifxtpw" name="Return" incoming="_R45NNicoEeSLVrU2ifxtpw" parameter="_R45NMCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45NOicoEeSLVrU2ifxtpw" name="Final" incoming="_R45NNCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45NSCcoEeSLVrU2ifxtpw" name="isEmpty$method$1" specification="_R45yKCcoEeSLVrU2ifxtpw" node="_R45NTicoEeSLVrU2ifxtpw _R45NTycoEeSLVrU2ifxtpw _R45NUCcoEeSLVrU2ifxtpw" group="_R45NUCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45NSScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NSicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NSycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45NTCcoEeSLVrU2ifxtpw" target="_R45NTycoEeSLVrU2ifxtpw" source="_R45NUScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NTScoEeSLVrU2ifxtpw" target="_R45NTicoEeSLVrU2ifxtpw" source="_R45NUycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45NUCcoEeSLVrU2ifxtpw" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45NUScoEeSLVrU2ifxtpw" name="ReturnStatement@21df71f3" outgoing="_R45NTCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NUicoEeSLVrU2ifxtpw" target="_R45NUycoEeSLVrU2ifxtpw" source="_R45NVycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45NUycoEeSLVrU2ifxtpw" name="ReturnStatement@21df71f3.output" incoming="_R45NUicoEeSLVrU2ifxtpw" outgoing="_R45NTScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NVCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NVScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45NVicoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_R45NVycoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1).result()" outgoing="_R45NUicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NWCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NWScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NTicoEeSLVrU2ifxtpw" name="Return" incoming="_R45NTScoEeSLVrU2ifxtpw" parameter="_R45NSScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45NTycoEeSLVrU2ifxtpw" name="Final" incoming="_R45NTCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45NWicoEeSLVrU2ifxtpw" name="notEmpty$method$1" specification="_R45yLCcoEeSLVrU2ifxtpw" node="_R45NYCcoEeSLVrU2ifxtpw _R45NYScoEeSLVrU2ifxtpw _R45NYicoEeSLVrU2ifxtpw" group="_R45NYicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45NWycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NXCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NXScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45NXicoEeSLVrU2ifxtpw" target="_R45NYScoEeSLVrU2ifxtpw" source="_R45NYycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NXycoEeSLVrU2ifxtpw" target="_R45NYCcoEeSLVrU2ifxtpw" source="_R45NZScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45NYicoEeSLVrU2ifxtpw" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45NYycoEeSLVrU2ifxtpw" name="ReturnStatement@50fc1387" outgoing="_R45NXicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NZCcoEeSLVrU2ifxtpw" target="_R45NZScoEeSLVrU2ifxtpw" source="_R45NaScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45NZScoEeSLVrU2ifxtpw" name="ReturnStatement@50fc1387.output" incoming="_R45NZCcoEeSLVrU2ifxtpw" outgoing="_R45NXycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NZicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NZycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45NaCcoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_R45NaScoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1).result()" outgoing="_R45NZCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NaicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NaycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NYCcoEeSLVrU2ifxtpw" name="Return" incoming="_R45NXycoEeSLVrU2ifxtpw" parameter="_R45NWycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45NYScoEeSLVrU2ifxtpw" name="Final" incoming="_R45NXicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45NbCcoEeSLVrU2ifxtpw" name="remove$method$1" specification="_R45yMCcoEeSLVrU2ifxtpw" node="_R45NdycoEeSLVrU2ifxtpw _R45NeCcoEeSLVrU2ifxtpw _R45NeScoEeSLVrU2ifxtpw _R45NeicoEeSLVrU2ifxtpw _R45NeycoEeSLVrU2ifxtpw" group="_R45NeycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45NbScoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NbicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NbycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45NcCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NcScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NcicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NcycoEeSLVrU2ifxtpw" target="_R45NeCcoEeSLVrU2ifxtpw" source="_R45NdycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45NdCcoEeSLVrU2ifxtpw" target="_R45NeicoEeSLVrU2ifxtpw" source="_R45NfCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NdScoEeSLVrU2ifxtpw" target="_R45NgicoEeSLVrU2ifxtpw" source="_R45NeCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NdicoEeSLVrU2ifxtpw" target="_R45NeScoEeSLVrU2ifxtpw" source="_R45NficoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45NeycoEeSLVrU2ifxtpw" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45NfCcoEeSLVrU2ifxtpw" name="ReturnStatement@7efe7a98" outgoing="_R45NdCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NfScoEeSLVrU2ifxtpw" target="_R45NficoEeSLVrU2ifxtpw" source="_R45NhScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45NficoEeSLVrU2ifxtpw" name="ReturnStatement@7efe7a98.output" incoming="_R45NfScoEeSLVrU2ifxtpw" outgoing="_R45NdicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NfycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NgCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45NgScoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1)">
              <argument xmi:id="_R45NgicoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).argument(element)" incoming="_R45NdScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NgycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NhCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45NhScoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).result()" outgoing="_R45NfScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NhicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NhycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NdycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45NcycoEeSLVrU2ifxtpw" parameter="_R45NbScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45NeCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45NcycoEeSLVrU2ifxtpw" outgoing="_R45NdScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NeScoEeSLVrU2ifxtpw" name="Return" incoming="_R45NdicoEeSLVrU2ifxtpw" parameter="_R45NcCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45NeicoEeSLVrU2ifxtpw" name="Final" incoming="_R45NdCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45NiCcoEeSLVrU2ifxtpw" name="removeAll$method$1" specification="_R45yNycoEeSLVrU2ifxtpw" node="_R45NkycoEeSLVrU2ifxtpw _R45NlCcoEeSLVrU2ifxtpw _R45NlScoEeSLVrU2ifxtpw _R45NlicoEeSLVrU2ifxtpw _R45NlycoEeSLVrU2ifxtpw" group="_R45NlycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45NiScoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NiicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NiycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45NjCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NjScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NjicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NjycoEeSLVrU2ifxtpw" target="_R45NlCcoEeSLVrU2ifxtpw" source="_R45NkycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45NkCcoEeSLVrU2ifxtpw" target="_R45NlicoEeSLVrU2ifxtpw" source="_R45NmCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NkScoEeSLVrU2ifxtpw" target="_R45NnicoEeSLVrU2ifxtpw" source="_R45NlCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NkicoEeSLVrU2ifxtpw" target="_R45NlScoEeSLVrU2ifxtpw" source="_R45NmicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45NlycoEeSLVrU2ifxtpw" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45NmCcoEeSLVrU2ifxtpw" name="ReturnStatement@3aa101a7" outgoing="_R45NkCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NmScoEeSLVrU2ifxtpw" target="_R45NmicoEeSLVrU2ifxtpw" source="_R45NoScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45NmicoEeSLVrU2ifxtpw" name="ReturnStatement@3aa101a7.output" incoming="_R45NmScoEeSLVrU2ifxtpw" outgoing="_R45NkicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NmycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NnCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45NnScoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_R45NnicoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_R45NkScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NnycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NoCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45NoScoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).result()" outgoing="_R45NmScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NoicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NoycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NkycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R45NjycoEeSLVrU2ifxtpw" parameter="_R45NiScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45NlCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R45NjycoEeSLVrU2ifxtpw" outgoing="_R45NkScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NlScoEeSLVrU2ifxtpw" name="Return" incoming="_R45NkicoEeSLVrU2ifxtpw" parameter="_R45NjCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45NlicoEeSLVrU2ifxtpw" name="Final" incoming="_R45NkCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45NpCcoEeSLVrU2ifxtpw" name="removeAt$method$1" specification="_R45yPicoEeSLVrU2ifxtpw" node="_R45NrycoEeSLVrU2ifxtpw _R45NsCcoEeSLVrU2ifxtpw _R45NsScoEeSLVrU2ifxtpw _R45NsicoEeSLVrU2ifxtpw _R45NsycoEeSLVrU2ifxtpw" group="_R45NsycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45NpScoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NpicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NpycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45NqCcoEeSLVrU2ifxtpw" name="" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NqScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NqicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NqycoEeSLVrU2ifxtpw" target="_R45NsCcoEeSLVrU2ifxtpw" source="_R45NrycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45NrCcoEeSLVrU2ifxtpw" target="_R45NsicoEeSLVrU2ifxtpw" source="_R45NtCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NrScoEeSLVrU2ifxtpw" target="_R45NuycoEeSLVrU2ifxtpw" source="_R45NsCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NricoEeSLVrU2ifxtpw" target="_R45NsScoEeSLVrU2ifxtpw" source="_R45NtycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45NsycoEeSLVrU2ifxtpw" name="Body(removeAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45NtCcoEeSLVrU2ifxtpw" name="ReturnStatement@66f40ddf" outgoing="_R45NrCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NtScoEeSLVrU2ifxtpw" target="_R45N0ycoEeSLVrU2ifxtpw" source="_R45NvicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NticoEeSLVrU2ifxtpw" target="_R45NtycoEeSLVrU2ifxtpw" source="_R45N1CcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45NtycoEeSLVrU2ifxtpw" name="ReturnStatement@66f40ddf.output" incoming="_R45NticoEeSLVrU2ifxtpw" outgoing="_R45NricoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NuCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NuScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45NuicoEeSLVrU2ifxtpw" name="Call(removeAtImpl$method$1)">
              <argument xmi:id="_R45NuycoEeSLVrU2ifxtpw" name="Call(removeAtImpl$method$1).argument(index)" incoming="_R45NrScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NvCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NvScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45NvicoEeSLVrU2ifxtpw" name="Call(removeAtImpl$method$1).result()" outgoing="_R45NtScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NvycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NwCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-removeAtImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R45NwScoEeSLVrU2ifxtpw" name="CastExpression@1b082505" mode="parallel" outputElement="_R45N1CcoEeSLVrU2ifxtpw" inputElement="_R45N0ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NwicoEeSLVrU2ifxtpw" target="_R45NyycoEeSLVrU2ifxtpw" source="_R45N0ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NwycoEeSLVrU2ifxtpw" target="_R45N0icoEeSLVrU2ifxtpw" source="_R45N0ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NxCcoEeSLVrU2ifxtpw" target="_R45N0icoEeSLVrU2ifxtpw" source="_R45NzicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NxScoEeSLVrU2ifxtpw" target="_R45NyScoEeSLVrU2ifxtpw" source="_R45N0icoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45NxicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NxycoEeSLVrU2ifxtpw" target="_R45N0ScoEeSLVrU2ifxtpw" source="_R45N0ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45NyCcoEeSLVrU2ifxtpw" target="_R45N1CcoEeSLVrU2ifxtpw" source="_R45NyScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R45NyScoEeSLVrU2ifxtpw" name="Merge(CastExpression@1b082505.operand)" incoming="_R45NxScoEeSLVrU2ifxtpw" outgoing="_R45NyCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R45NyicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_R438aScoEeSLVrU2ifxtpw">
                <object xmi:id="_R45NyycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R45NwicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NzCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45NzScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45NzicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R45NxCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45NzycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N0CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R45N0ScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R45NxycoEeSLVrU2ifxtpw" outgoing="_R45NwicoEeSLVrU2ifxtpw _R45NwycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R45N0icoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R45NwycoEeSLVrU2ifxtpw _R45NxCcoEeSLVrU2ifxtpw" outgoing="_R45NxScoEeSLVrU2ifxtpw" decisionInputFlow="_R45NxCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45N0ycoEeSLVrU2ifxtpw" name="CastExpression@1b082505.inputElement" incoming="_R45NtScoEeSLVrU2ifxtpw" outgoing="_R45NxycoEeSLVrU2ifxtpw" regionAsInput="_R45NwScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45N1CcoEeSLVrU2ifxtpw" name="CastExpression@1b082505.outputElement" incoming="_R45NyCcoEeSLVrU2ifxtpw" outgoing="_R45NticoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" regionAsOutput="_R45NwScoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NrycoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R45NqycoEeSLVrU2ifxtpw" parameter="_R45NpScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45NsCcoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R45NqycoEeSLVrU2ifxtpw" outgoing="_R45NrScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45NsScoEeSLVrU2ifxtpw" name="Return" incoming="_R45NricoEeSLVrU2ifxtpw" parameter="_R45NqCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45NsicoEeSLVrU2ifxtpw" name="Final" incoming="_R45NrCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45N1ScoEeSLVrU2ifxtpw" name="removeOne$method$1" specification="_R45yRScoEeSLVrU2ifxtpw" node="_R45N4CcoEeSLVrU2ifxtpw _R45N4ScoEeSLVrU2ifxtpw _R45N4icoEeSLVrU2ifxtpw _R45N4ycoEeSLVrU2ifxtpw _R45N5CcoEeSLVrU2ifxtpw" group="_R45N5CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45N1icoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45N1ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N2CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45N2ScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45N2icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N2ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45N3CcoEeSLVrU2ifxtpw" target="_R45N4ScoEeSLVrU2ifxtpw" source="_R45N4CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45N3ScoEeSLVrU2ifxtpw" target="_R45N4ycoEeSLVrU2ifxtpw" source="_R45N5ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45N3icoEeSLVrU2ifxtpw" target="_R45N6ycoEeSLVrU2ifxtpw" source="_R45N4ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45N3ycoEeSLVrU2ifxtpw" target="_R45N4icoEeSLVrU2ifxtpw" source="_R45N5ycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45N5CcoEeSLVrU2ifxtpw" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45N5ScoEeSLVrU2ifxtpw" name="ReturnStatement@6e88a13e" outgoing="_R45N3ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45N5icoEeSLVrU2ifxtpw" target="_R45N5ycoEeSLVrU2ifxtpw" source="_R45N7icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45N5ycoEeSLVrU2ifxtpw" name="ReturnStatement@6e88a13e.output" incoming="_R45N5icoEeSLVrU2ifxtpw" outgoing="_R45N3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45N6CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N6ScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45N6icoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_R45N6ycoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).argument(element)" incoming="_R45N3icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45N7CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N7ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45N7icoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).result()" outgoing="_R45N5icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45N7ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N8CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45N4CcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45N3CcoEeSLVrU2ifxtpw" parameter="_R45N1icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45N4ScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45N3CcoEeSLVrU2ifxtpw" outgoing="_R45N3icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45N4icoEeSLVrU2ifxtpw" name="Return" incoming="_R45N3ycoEeSLVrU2ifxtpw" parameter="_R45N2ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45N4ycoEeSLVrU2ifxtpw" name="Final" incoming="_R45N3ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45N8ScoEeSLVrU2ifxtpw" name="replace$method$1" specification="_R45yTCcoEeSLVrU2ifxtpw" node="_R45OAScoEeSLVrU2ifxtpw _R45OAicoEeSLVrU2ifxtpw _R45OAycoEeSLVrU2ifxtpw _R45OBCcoEeSLVrU2ifxtpw _R45OBScoEeSLVrU2ifxtpw _R45OBicoEeSLVrU2ifxtpw _R45OBycoEeSLVrU2ifxtpw" group="_R45OBycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45N8icoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45N8ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N9CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45N9ScoEeSLVrU2ifxtpw" name="newElement" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45N9icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N9ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45N-CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45N-ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45N-icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45N-ycoEeSLVrU2ifxtpw" target="_R45OAicoEeSLVrU2ifxtpw" source="_R45OAScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45N_CcoEeSLVrU2ifxtpw" target="_R45OBCcoEeSLVrU2ifxtpw" source="_R45OAycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45N_ScoEeSLVrU2ifxtpw" target="_R45OBicoEeSLVrU2ifxtpw" source="_R45OCCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45N_icoEeSLVrU2ifxtpw" target="_R45ODicoEeSLVrU2ifxtpw" source="_R45OAicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45N_ycoEeSLVrU2ifxtpw" target="_R45OEScoEeSLVrU2ifxtpw" source="_R45OBCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OACcoEeSLVrU2ifxtpw" target="_R45OBScoEeSLVrU2ifxtpw" source="_R45OCicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45OBycoEeSLVrU2ifxtpw" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45OCCcoEeSLVrU2ifxtpw" name="ReturnStatement@41e5484b" outgoing="_R45N_ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OCScoEeSLVrU2ifxtpw" target="_R45OCicoEeSLVrU2ifxtpw" source="_R45OFCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45OCicoEeSLVrU2ifxtpw" name="ReturnStatement@41e5484b.output" incoming="_R45OCScoEeSLVrU2ifxtpw" outgoing="_R45OACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OCycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ODCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45ODScoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_R45ODicoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(element)" incoming="_R45N_icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ODycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OECcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45OEScoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_R45N_ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OEicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OEycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45OFCcoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).result()" outgoing="_R45OCScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OFScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OFicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OAScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45N-ycoEeSLVrU2ifxtpw" parameter="_R45N8icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OAicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45N-ycoEeSLVrU2ifxtpw" outgoing="_R45N_icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OAycoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_R45N_CcoEeSLVrU2ifxtpw" parameter="_R45N9ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OBCcoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_R45N_CcoEeSLVrU2ifxtpw" outgoing="_R45N_ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OBScoEeSLVrU2ifxtpw" name="Return" incoming="_R45OACcoEeSLVrU2ifxtpw" parameter="_R45N-CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45OBicoEeSLVrU2ifxtpw" name="Final" incoming="_R45N_ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45OFycoEeSLVrU2ifxtpw" name="replaceAt$method$1" specification="_R45yVicoEeSLVrU2ifxtpw" node="_R45OJycoEeSLVrU2ifxtpw _R45OKCcoEeSLVrU2ifxtpw _R45OKScoEeSLVrU2ifxtpw _R45OKicoEeSLVrU2ifxtpw _R45OKycoEeSLVrU2ifxtpw _R45OLCcoEeSLVrU2ifxtpw _R45OLScoEeSLVrU2ifxtpw" group="_R45OLScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45OGCcoEeSLVrU2ifxtpw" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OGScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OGicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45OGycoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OHCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OHScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45OHicoEeSLVrU2ifxtpw" name="" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OHycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OICcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OIScoEeSLVrU2ifxtpw" target="_R45OKCcoEeSLVrU2ifxtpw" source="_R45OJycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OIicoEeSLVrU2ifxtpw" target="_R45OKicoEeSLVrU2ifxtpw" source="_R45OKScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45OIycoEeSLVrU2ifxtpw" target="_R45OLCcoEeSLVrU2ifxtpw" source="_R45OLicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OJCcoEeSLVrU2ifxtpw" target="_R45ONScoEeSLVrU2ifxtpw" source="_R45OKCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OJScoEeSLVrU2ifxtpw" target="_R45OOCcoEeSLVrU2ifxtpw" source="_R45OKicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OJicoEeSLVrU2ifxtpw" target="_R45OKycoEeSLVrU2ifxtpw" source="_R45OMScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45OLScoEeSLVrU2ifxtpw" name="Body(replaceAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45OLicoEeSLVrU2ifxtpw" name="ReturnStatement@1197c2dd" outgoing="_R45OIycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OLycoEeSLVrU2ifxtpw" target="_R45OUCcoEeSLVrU2ifxtpw" source="_R45OOycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OMCcoEeSLVrU2ifxtpw" target="_R45OMScoEeSLVrU2ifxtpw" source="_R45OUScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45OMScoEeSLVrU2ifxtpw" name="ReturnStatement@1197c2dd.output" incoming="_R45OMCcoEeSLVrU2ifxtpw" outgoing="_R45OJicoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OMicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OMycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45ONCcoEeSLVrU2ifxtpw" name="Call(replaceAtImpl$method$1)">
              <argument xmi:id="_R45ONScoEeSLVrU2ifxtpw" name="Call(replaceAtImpl$method$1).argument(index)" incoming="_R45OJCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ONicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ONycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45OOCcoEeSLVrU2ifxtpw" name="Call(replaceAtImpl$method$1).argument(element)" incoming="_R45OJScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OOScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OOicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45OOycoEeSLVrU2ifxtpw" name="Call(replaceAtImpl$method$1).result()" outgoing="_R45OLycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OPCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OPScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-replaceAtImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R45OPicoEeSLVrU2ifxtpw" name="CastExpression@4f3ed32a" mode="parallel" outputElement="_R45OUScoEeSLVrU2ifxtpw" inputElement="_R45OUCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OPycoEeSLVrU2ifxtpw" target="_R45OSCcoEeSLVrU2ifxtpw" source="_R45OTicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OQCcoEeSLVrU2ifxtpw" target="_R45OTycoEeSLVrU2ifxtpw" source="_R45OTicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OQScoEeSLVrU2ifxtpw" target="_R45OTycoEeSLVrU2ifxtpw" source="_R45OSycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OQicoEeSLVrU2ifxtpw" target="_R45ORicoEeSLVrU2ifxtpw" source="_R45OTycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45OQycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ORCcoEeSLVrU2ifxtpw" target="_R45OTicoEeSLVrU2ifxtpw" source="_R45OUCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ORScoEeSLVrU2ifxtpw" target="_R45OUScoEeSLVrU2ifxtpw" source="_R45ORicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R45ORicoEeSLVrU2ifxtpw" name="Merge(CastExpression@4f3ed32a.operand)" incoming="_R45OQicoEeSLVrU2ifxtpw" outgoing="_R45ORScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R45ORycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_R438aScoEeSLVrU2ifxtpw">
                <object xmi:id="_R45OSCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R45OPycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OSScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OSicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45OSycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R45OQScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OTCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OTScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R45OTicoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R45ORCcoEeSLVrU2ifxtpw" outgoing="_R45OPycoEeSLVrU2ifxtpw _R45OQCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R45OTycoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R45OQCcoEeSLVrU2ifxtpw _R45OQScoEeSLVrU2ifxtpw" outgoing="_R45OQicoEeSLVrU2ifxtpw" decisionInputFlow="_R45OQScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45OUCcoEeSLVrU2ifxtpw" name="CastExpression@4f3ed32a.inputElement" incoming="_R45OLycoEeSLVrU2ifxtpw" outgoing="_R45ORCcoEeSLVrU2ifxtpw" regionAsInput="_R45OPicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45OUScoEeSLVrU2ifxtpw" name="CastExpression@4f3ed32a.outputElement" incoming="_R45ORScoEeSLVrU2ifxtpw" outgoing="_R45OMCcoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" regionAsOutput="_R45OPicoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OJycoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_R45OIScoEeSLVrU2ifxtpw" parameter="_R45OGCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OKCcoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_R45OIScoEeSLVrU2ifxtpw" outgoing="_R45OJCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OKScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45OIicoEeSLVrU2ifxtpw" parameter="_R45OGycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OKicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45OIicoEeSLVrU2ifxtpw" outgoing="_R45OJScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OKycoEeSLVrU2ifxtpw" name="Return" incoming="_R45OJicoEeSLVrU2ifxtpw" parameter="_R45OHicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45OLCcoEeSLVrU2ifxtpw" name="Final" incoming="_R45OIycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45OUicoEeSLVrU2ifxtpw" name="replaceOne$method$1" specification="_R45yYCcoEeSLVrU2ifxtpw" node="_R45OYicoEeSLVrU2ifxtpw _R45OYycoEeSLVrU2ifxtpw _R45OZCcoEeSLVrU2ifxtpw _R45OZScoEeSLVrU2ifxtpw _R45OZicoEeSLVrU2ifxtpw _R45OZycoEeSLVrU2ifxtpw _R45OaCcoEeSLVrU2ifxtpw" group="_R45OaCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45OUycoEeSLVrU2ifxtpw" name="element" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OVCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OVScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45OVicoEeSLVrU2ifxtpw" name="newElement" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OVycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OWCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45OWScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OWicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OWycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OXCcoEeSLVrU2ifxtpw" target="_R45OYycoEeSLVrU2ifxtpw" source="_R45OYicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OXScoEeSLVrU2ifxtpw" target="_R45OZScoEeSLVrU2ifxtpw" source="_R45OZCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45OXicoEeSLVrU2ifxtpw" target="_R45OZycoEeSLVrU2ifxtpw" source="_R45OaScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OXycoEeSLVrU2ifxtpw" target="_R45ObycoEeSLVrU2ifxtpw" source="_R45OYycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OYCcoEeSLVrU2ifxtpw" target="_R45OcicoEeSLVrU2ifxtpw" source="_R45OZScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OYScoEeSLVrU2ifxtpw" target="_R45OZicoEeSLVrU2ifxtpw" source="_R45OaycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45OaCcoEeSLVrU2ifxtpw" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45OaScoEeSLVrU2ifxtpw" name="ReturnStatement@792a89f4" outgoing="_R45OXicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OaicoEeSLVrU2ifxtpw" target="_R45OaycoEeSLVrU2ifxtpw" source="_R45OdScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45OaycoEeSLVrU2ifxtpw" name="ReturnStatement@792a89f4.output" incoming="_R45OaicoEeSLVrU2ifxtpw" outgoing="_R45OYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ObCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ObScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45ObicoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_R45ObycoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_R45OXycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OcCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OcScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45OcicoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_R45OYCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OcycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OdCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45OdScoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).result()" outgoing="_R45OaicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OdicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OdycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OYicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_R45OXCcoEeSLVrU2ifxtpw" parameter="_R45OUycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OYycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_R45OXCcoEeSLVrU2ifxtpw" outgoing="_R45OXycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OZCcoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_R45OXScoEeSLVrU2ifxtpw" parameter="_R45OVicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OZScoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_R45OXScoEeSLVrU2ifxtpw" outgoing="_R45OYCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OZicoEeSLVrU2ifxtpw" name="Return" incoming="_R45OYScoEeSLVrU2ifxtpw" parameter="_R45OWScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45OZycoEeSLVrU2ifxtpw" name="Final" incoming="_R45OXicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45OeCcoEeSLVrU2ifxtpw" name="retainAll$method$1" specification="_R45yaicoEeSLVrU2ifxtpw" node="_R45OgycoEeSLVrU2ifxtpw _R45OhCcoEeSLVrU2ifxtpw _R45OhScoEeSLVrU2ifxtpw _R45OhicoEeSLVrU2ifxtpw _R45OhycoEeSLVrU2ifxtpw" group="_R45OhycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45OeScoEeSLVrU2ifxtpw" name="seq" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OeicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OeycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45OfCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OfScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OficoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OfycoEeSLVrU2ifxtpw" target="_R45OhCcoEeSLVrU2ifxtpw" source="_R45OgycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45OgCcoEeSLVrU2ifxtpw" target="_R45OhicoEeSLVrU2ifxtpw" source="_R45OiCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OgScoEeSLVrU2ifxtpw" target="_R45OjicoEeSLVrU2ifxtpw" source="_R45OhCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OgicoEeSLVrU2ifxtpw" target="_R45OhScoEeSLVrU2ifxtpw" source="_R45OiicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45OhycoEeSLVrU2ifxtpw" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45OiCcoEeSLVrU2ifxtpw" name="ReturnStatement@7555d4d6" outgoing="_R45OgCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OiScoEeSLVrU2ifxtpw" target="_R45OiicoEeSLVrU2ifxtpw" source="_R45OkScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45OiicoEeSLVrU2ifxtpw" name="ReturnStatement@7555d4d6.output" incoming="_R45OiScoEeSLVrU2ifxtpw" outgoing="_R45OgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OiycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OjCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45OjScoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_R45OjicoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_R45OgScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OjycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OkCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45OkScoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).result()" outgoing="_R45OiScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OkicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OkycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OgycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R45OfycoEeSLVrU2ifxtpw" parameter="_R45OeScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OhCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R45OfycoEeSLVrU2ifxtpw" outgoing="_R45OgScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OhScoEeSLVrU2ifxtpw" name="Return" incoming="_R45OgicoEeSLVrU2ifxtpw" parameter="_R45OfCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45OhicoEeSLVrU2ifxtpw" name="Final" incoming="_R45OgCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45OlCcoEeSLVrU2ifxtpw" name="size$method$1" specification="_R45ycScoEeSLVrU2ifxtpw" node="_R45OmicoEeSLVrU2ifxtpw _R45OmycoEeSLVrU2ifxtpw _R45OnCcoEeSLVrU2ifxtpw" group="_R45OnCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45OlScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OlicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OlycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45OmCcoEeSLVrU2ifxtpw" target="_R45OmycoEeSLVrU2ifxtpw" source="_R45OnScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OmScoEeSLVrU2ifxtpw" target="_R45OmicoEeSLVrU2ifxtpw" source="_R45OnycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45OnCcoEeSLVrU2ifxtpw" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45OnScoEeSLVrU2ifxtpw" name="ReturnStatement@194cb4d6" outgoing="_R45OmCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OnicoEeSLVrU2ifxtpw" target="_R45OnycoEeSLVrU2ifxtpw" source="_R45OoycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45OnycoEeSLVrU2ifxtpw" name="ReturnStatement@194cb4d6.output" incoming="_R45OnicoEeSLVrU2ifxtpw" outgoing="_R45OmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OoCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OoScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45OoicoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1)">
              <result xmi:id="_R45OoycoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1).result()" outgoing="_R45OnicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OpCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OpScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OmicoEeSLVrU2ifxtpw" name="Return" incoming="_R45OmScoEeSLVrU2ifxtpw" parameter="_R45OlScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45OmycoEeSLVrU2ifxtpw" name="Final" incoming="_R45OmCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45OpicoEeSLVrU2ifxtpw" name="subList$method$1" specification="_R45ydScoEeSLVrU2ifxtpw" node="_R45OticoEeSLVrU2ifxtpw _R45OtycoEeSLVrU2ifxtpw _R45OuCcoEeSLVrU2ifxtpw _R45OuScoEeSLVrU2ifxtpw _R45OuicoEeSLVrU2ifxtpw _R45OuycoEeSLVrU2ifxtpw _R45OvCcoEeSLVrU2ifxtpw" group="_R45OvCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45OpycoEeSLVrU2ifxtpw" name="lower">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OqCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OqScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45OqicoEeSLVrU2ifxtpw" name="upper">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OqycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OrCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45OrScoEeSLVrU2ifxtpw" name="" type="_R439dycoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45OricoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45OrycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OsCcoEeSLVrU2ifxtpw" target="_R45OtycoEeSLVrU2ifxtpw" source="_R45OticoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OsScoEeSLVrU2ifxtpw" target="_R45OuScoEeSLVrU2ifxtpw" source="_R45OuCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45OsicoEeSLVrU2ifxtpw" target="_R45OuycoEeSLVrU2ifxtpw" source="_R45OvScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OsycoEeSLVrU2ifxtpw" target="_R45xKCcoEeSLVrU2ifxtpw" source="_R45OtycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OtCcoEeSLVrU2ifxtpw" target="_R45xKycoEeSLVrU2ifxtpw" source="_R45OuScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45OtScoEeSLVrU2ifxtpw" target="_R45OuicoEeSLVrU2ifxtpw" source="_R45xFCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45OvCcoEeSLVrU2ifxtpw" name="Body(subList$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45OvScoEeSLVrU2ifxtpw" name="ReturnStatement@1792a0c1" outgoing="_R45OsicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xECcoEeSLVrU2ifxtpw" target="_R45xHicoEeSLVrU2ifxtpw" source="_R45xIicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xEScoEeSLVrU2ifxtpw" target="_R45xGCcoEeSLVrU2ifxtpw" source="_R45xRCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R45xEicoEeSLVrU2ifxtpw" target="_R45xFycoEeSLVrU2ifxtpw" source="_R45xJScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xEycoEeSLVrU2ifxtpw" target="_R45xFCcoEeSLVrU2ifxtpw" source="_R45xGycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45xFCcoEeSLVrU2ifxtpw" name="ReturnStatement@1792a0c1.output" incoming="_R45xEycoEeSLVrU2ifxtpw" outgoing="_R45OtScoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xFScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xFicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R45xFycoEeSLVrU2ifxtpw" name="Call(List)" incoming="_R45xEicoEeSLVrU2ifxtpw" operation="_R45xvScoEeSLVrU2ifxtpw">
              <argument xmi:id="_R45xGCcoEeSLVrU2ifxtpw" name="Call(List).argument(seq)" incoming="_R45xEScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xGScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xGicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45xGycoEeSLVrU2ifxtpw" name="Call(List).result()" outgoing="_R45xEycoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xHCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xHScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_R45xHicoEeSLVrU2ifxtpw" name="Call(List).target" incoming="_R45xECcoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xHycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xICcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:CreateObjectAction" xmi:id="_R45xIScoEeSLVrU2ifxtpw" name="Create($$Impl$List__Impl$List$T__)" classifier="_R45LKScoEeSLVrU2ifxtpw">
              <result xmi:id="_R45xIicoEeSLVrU2ifxtpw" name="Create($$List__Impl$List$T__).result" outgoing="_R45xECcoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xIycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xJCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45xJScoEeSLVrU2ifxtpw" name="Tuple@51575d48" outgoing="_R45xEicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xJicoEeSLVrU2ifxtpw" target="_R45xQycoEeSLVrU2ifxtpw" source="_R45xLicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45xJycoEeSLVrU2ifxtpw" name="Call(subListImpl$method$1)">
                <argument xmi:id="_R45xKCcoEeSLVrU2ifxtpw" name="Call(subListImpl$method$1).argument(lower)" incoming="_R45OsycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xKScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xKicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_R45xKycoEeSLVrU2ifxtpw" name="Call(subListImpl$method$1).argument(upper)" incoming="_R45OtCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xLCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xLScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_R45xLicoEeSLVrU2ifxtpw" name="Call(subListImpl$method$1).result()" outgoing="_R45xJicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xLycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xMCcoEeSLVrU2ifxtpw" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#ListImpl-subListImplmethod1"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_R45xMScoEeSLVrU2ifxtpw" name="CastExpression@18fde079" mode="parallel" outputElement="_R45xRCcoEeSLVrU2ifxtpw" inputElement="_R45xQycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xMicoEeSLVrU2ifxtpw" target="_R45xOycoEeSLVrU2ifxtpw" source="_R45xQScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xMycoEeSLVrU2ifxtpw" target="_R45xQicoEeSLVrU2ifxtpw" source="_R45xQScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xNCcoEeSLVrU2ifxtpw" target="_R45xQicoEeSLVrU2ifxtpw" source="_R45xPicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xNScoEeSLVrU2ifxtpw" target="_R45xOScoEeSLVrU2ifxtpw" source="_R45xQicoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45xNicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xNycoEeSLVrU2ifxtpw" target="_R45xQScoEeSLVrU2ifxtpw" source="_R45xQycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xOCcoEeSLVrU2ifxtpw" target="_R45xRCcoEeSLVrU2ifxtpw" source="_R45xOScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_R45xOScoEeSLVrU2ifxtpw" name="Merge(CastExpression@18fde079.operand)" incoming="_R45xNScoEeSLVrU2ifxtpw" outgoing="_R45xOCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R45xOicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_R438aScoEeSLVrU2ifxtpw">
                  <object xmi:id="_R45xOycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R45xMicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xPCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xPScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_R45xPicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R45xNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xPycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xQCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_R45xQScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R45xNycoEeSLVrU2ifxtpw" outgoing="_R45xMicoEeSLVrU2ifxtpw _R45xMycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_R45xQicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R45xMycoEeSLVrU2ifxtpw _R45xNCcoEeSLVrU2ifxtpw" outgoing="_R45xNScoEeSLVrU2ifxtpw" decisionInputFlow="_R45xNCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R45xQycoEeSLVrU2ifxtpw" name="CastExpression@18fde079.inputElement" incoming="_R45xJicoEeSLVrU2ifxtpw" outgoing="_R45xNycoEeSLVrU2ifxtpw" regionAsInput="_R45xMScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_R45xRCcoEeSLVrU2ifxtpw" name="CastExpression@18fde079.outputElement" incoming="_R45xOCcoEeSLVrU2ifxtpw" outgoing="_R45xEScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" regionAsOutput="_R45xMScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OticoEeSLVrU2ifxtpw" name="Input(lower)" outgoing="_R45OsCcoEeSLVrU2ifxtpw" parameter="_R45OpycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OtycoEeSLVrU2ifxtpw" name="Fork(lower)" incoming="_R45OsCcoEeSLVrU2ifxtpw" outgoing="_R45OsycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OuCcoEeSLVrU2ifxtpw" name="Input(upper)" outgoing="_R45OsScoEeSLVrU2ifxtpw" parameter="_R45OqicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_R45OuScoEeSLVrU2ifxtpw" name="Fork(upper)" incoming="_R45OsScoEeSLVrU2ifxtpw" outgoing="_R45OtCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45OuicoEeSLVrU2ifxtpw" name="Return" incoming="_R45OtScoEeSLVrU2ifxtpw" parameter="_R45OrScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45OuycoEeSLVrU2ifxtpw" name="Final" incoming="_R45OsicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45xRScoEeSLVrU2ifxtpw" name="toSequence$method$1" specification="_R45yfycoEeSLVrU2ifxtpw" node="_R45xSycoEeSLVrU2ifxtpw _R45xTCcoEeSLVrU2ifxtpw _R45xTScoEeSLVrU2ifxtpw" group="_R45xTScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45xRicoEeSLVrU2ifxtpw" name="" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xRycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xSCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45xSScoEeSLVrU2ifxtpw" target="_R45xTCcoEeSLVrU2ifxtpw" source="_R45xTicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xSicoEeSLVrU2ifxtpw" target="_R45xSycoEeSLVrU2ifxtpw" source="_R45xUicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_R45xTScoEeSLVrU2ifxtpw" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45xTicoEeSLVrU2ifxtpw" name="ReturnStatement@56b2d6bd" outgoing="_R45xSScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xTycoEeSLVrU2ifxtpw" target="_R45xWScoEeSLVrU2ifxtpw" source="_R45xXScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xUCcoEeSLVrU2ifxtpw" target="_R45xcicoEeSLVrU2ifxtpw" source="_R45xVicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xUScoEeSLVrU2ifxtpw" target="_R45xUicoEeSLVrU2ifxtpw" source="_R45xcycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_R45xUicoEeSLVrU2ifxtpw" name="ReturnStatement@56b2d6bd.output" incoming="_R45xUScoEeSLVrU2ifxtpw" outgoing="_R45xSicoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xUycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xVCcoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R45xVScoEeSLVrU2ifxtpw" name="Call(getContent)">
              <result xmi:id="_R45xVicoEeSLVrU2ifxtpw" name="Call(getContent).result()" outgoing="_R45xUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xVycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xWCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <operation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-getContent"/>
              <target xmi:id="_R45xWScoEeSLVrU2ifxtpw" name="Call(getContent).target" incoming="_R45xTycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xWicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xWycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_R45xXCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_R45xXScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R45xTycoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xXicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xXycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_R45xYCcoEeSLVrU2ifxtpw" name="CastExpression@1e49f598" mode="parallel" outputElement="_R45xcycoEeSLVrU2ifxtpw" inputElement="_R45xcicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xYScoEeSLVrU2ifxtpw" target="_R45xaicoEeSLVrU2ifxtpw" source="_R45xcCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xYicoEeSLVrU2ifxtpw" target="_R45xcScoEeSLVrU2ifxtpw" source="_R45xcCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xYycoEeSLVrU2ifxtpw" target="_R45xcScoEeSLVrU2ifxtpw" source="_R45xbScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xZCcoEeSLVrU2ifxtpw" target="_R45xaCcoEeSLVrU2ifxtpw" source="_R45xcScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45xZScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xZicoEeSLVrU2ifxtpw" target="_R45xcCcoEeSLVrU2ifxtpw" source="_R45xcicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xZycoEeSLVrU2ifxtpw" target="_R45xcycoEeSLVrU2ifxtpw" source="_R45xaCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R45xaCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@1e49f598.operand)" incoming="_R45xZCcoEeSLVrU2ifxtpw" outgoing="_R45xZycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R45xaScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_R438aScoEeSLVrU2ifxtpw">
                <object xmi:id="_R45xaicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_R45xYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xaycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xbCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45xbScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_R45xYycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xbicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xbycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_R45xcCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_R45xZicoEeSLVrU2ifxtpw" outgoing="_R45xYScoEeSLVrU2ifxtpw _R45xYicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R45xcScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_R45xYicoEeSLVrU2ifxtpw _R45xYycoEeSLVrU2ifxtpw" outgoing="_R45xZCcoEeSLVrU2ifxtpw" decisionInputFlow="_R45xYycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45xcicoEeSLVrU2ifxtpw" name="CastExpression@1e49f598.inputElement" incoming="_R45xUCcoEeSLVrU2ifxtpw" outgoing="_R45xZicoEeSLVrU2ifxtpw" regionAsInput="_R45xYCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_R45xcycoEeSLVrU2ifxtpw" name="CastExpression@1e49f598.outputElement" incoming="_R45xZycoEeSLVrU2ifxtpw" outgoing="_R45xUScoEeSLVrU2ifxtpw" type="_R438aScoEeSLVrU2ifxtpw" regionAsOutput="_R45xYCcoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45xSycoEeSLVrU2ifxtpw" name="Return" incoming="_R45xSicoEeSLVrU2ifxtpw" parameter="_R45xRicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_R45xTCcoEeSLVrU2ifxtpw" name="Final" incoming="_R45xSScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_R45xdCcoEeSLVrU2ifxtpw" name="List$initialization$1" specification="_R45xvCcoEeSLVrU2ifxtpw" node="_R45xdScoEeSLVrU2ifxtpw" group="_R45xdScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_R45xdScoEeSLVrU2ifxtpw" name="Body(List$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xdicoEeSLVrU2ifxtpw" target="_R45xhScoEeSLVrU2ifxtpw" source="_R45xgicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xdycoEeSLVrU2ifxtpw" target="_R45xiScoEeSLVrU2ifxtpw" source="_R45xhScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xeCcoEeSLVrU2ifxtpw" target="_R45xlCcoEeSLVrU2ifxtpw" source="_R45xhScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xeScoEeSLVrU2ifxtpw" target="_R45xnicoEeSLVrU2ifxtpw" source="_R45xhScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xeicoEeSLVrU2ifxtpw" target="_R45xpScoEeSLVrU2ifxtpw" source="_R45xoScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xeycoEeSLVrU2ifxtpw" target="_R45xsScoEeSLVrU2ifxtpw" source="_R45xqCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xfCcoEeSLVrU2ifxtpw" target="_R45xtycoEeSLVrU2ifxtpw" source="_R45xrCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45xfScoEeSLVrU2ifxtpw" target="_R45xuycoEeSLVrU2ifxtpw" source="_R45xuicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xficoEeSLVrU2ifxtpw" target="_R45xuycoEeSLVrU2ifxtpw" source="_R45xtCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45xfycoEeSLVrU2ifxtpw" target="_R45xhicoEeSLVrU2ifxtpw" source="_R45xuycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R45xgCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_R45xgScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_R45xgicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_R45xdicoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xgycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xhCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R45xhScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_R45xdicoEeSLVrU2ifxtpw" outgoing="_R45xdycoEeSLVrU2ifxtpw _R45xeCcoEeSLVrU2ifxtpw _R45xeScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45xhicoEeSLVrU2ifxtpw" name="Initialization" incoming="_R45xfycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_R45xhycoEeSLVrU2ifxtpw" target="_R45xjCcoEeSLVrU2ifxtpw" source="_R45xiCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R45xiCcoEeSLVrU2ifxtpw" name="Call(ListImpl$initialization$1)" outgoing="_R45xhycoEeSLVrU2ifxtpw">
              <operation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-ListImplinitialization1.1"/>
              <target xmi:id="_R45xiScoEeSLVrU2ifxtpw" name="Call(ListImpl$initialization$1).target" incoming="_R45xdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xiicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xiycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45xjCcoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_R45xhycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45xjScoEeSLVrU2ifxtpw" target="_R45xmicoEeSLVrU2ifxtpw" source="_R45xjycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45xjicoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_R45xjycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_R45xjScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xkCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xkScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_R45xkicoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_R45xkycoEeSLVrU2ifxtpw" name="Write(List$initializationFlag$1)" structuralFeature="_R45LLCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_R45xlCcoEeSLVrU2ifxtpw" name="Write(List$initializationFlag$1).object" incoming="_R45xeCcoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xlScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xlicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_R45xlycoEeSLVrU2ifxtpw" name="Write(List$initializationFlag$1).result" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xmCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xmScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_R45xmicoEeSLVrU2ifxtpw" name="Write(List$initializationFlag$1).value" incoming="_R45xjScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xmycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xnCcoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_R45xnScoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1)" structuralFeature="_R45LLCcoEeSLVrU2ifxtpw">
            <object xmi:id="_R45xnicoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1).object" incoming="_R45xeScoEeSLVrU2ifxtpw" type="_R45LKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xnycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xoCcoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_R45xoScoEeSLVrU2ifxtpw" name="Read(List$initializationFlag$1).result" outgoing="_R45xeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xoicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xoycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45xpCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_R45xpScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_R45xeicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xpicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xpycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R45xqCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_R45xeycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xqScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xqicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45xqycoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_R45xrCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_R45xfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xrScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xricoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_R45xrycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R45xsCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_R45xsScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_R45xeycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xsicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xsycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R45xtCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_R45xficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xtScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xticoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R45xtycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_R45xfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xuCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xuScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R45xuicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_R45xfScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R45xuycoEeSLVrU2ifxtpw" name="Decision(Test(List$initializationFlag$1))" incoming="_R45xfScoEeSLVrU2ifxtpw _R45xficoEeSLVrU2ifxtpw" outgoing="_R45xfycoEeSLVrU2ifxtpw" decisionInputFlow="_R45xficoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_R45xvCcoEeSLVrU2ifxtpw" name="List$initialization$1" visibility="protected" method="_R45xdCcoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R45xvScoEeSLVrU2ifxtpw" name="List" visibility="public" method="_R45LLycoEeSLVrU2ifxtpw" redefinedOperation="_R439eicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45xvicoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xvycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xwCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45xwScoEeSLVrU2ifxtpw" name="" visibility="package" type="_R45LKScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xwicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xwycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45xxCcoEeSLVrU2ifxtpw" name="destroy" visibility="public" method="_R45LeycoEeSLVrU2ifxtpw">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-destroy"/>
        <redefinedOperation href="#_R4399ScoEeSLVrU2ifxtpw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R45xxScoEeSLVrU2ifxtpw" name="add" visibility="public" method="_R45LfScoEeSLVrU2ifxtpw" redefinedOperation="_R439gCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45xxicoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xxycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xyCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45xyScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xyicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xyycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45xzCcoEeSLVrU2ifxtpw" name="addAt" visibility="public" method="_R45LmScoEeSLVrU2ifxtpw" redefinedOperation="_R439kicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45xzScoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45xzicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45xzycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45x0CcoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x0ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x0icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45x0ycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x1CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x1ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45x1icoEeSLVrU2ifxtpw" name="addAll" visibility="public" method="_R45LvycoEeSLVrU2ifxtpw" redefinedOperation="_R439hScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45x1ycoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x2CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x2ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45x2icoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x2ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x3CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45x3ScoEeSLVrU2ifxtpw" name="addAllAt" visibility="public" method="_R45L2ycoEeSLVrU2ifxtpw" redefinedOperation="_R439iycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45x3icoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x3ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x4CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45x4ScoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x4icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x4ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45x5CcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x5ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x5icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45x5ycoEeSLVrU2ifxtpw" name="at" visibility="public" method="_R45MAScoEeSLVrU2ifxtpw" redefinedOperation="_R439lycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45x6CcoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x6ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x6icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45x6ycoEeSLVrU2ifxtpw" name="" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x7CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x7ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45x7icoEeSLVrU2ifxtpw" name="clear" visibility="public" method="_R45MMicoEeSLVrU2ifxtpw" redefinedOperation="_R43-GicoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_R45x7ycoEeSLVrU2ifxtpw" name="count" visibility="public" method="_R45MNicoEeSLVrU2ifxtpw" redefinedOperation="_R43-HCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45x8CcoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x8ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x8icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45x8ycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x9CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x9ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45x9icoEeSLVrU2ifxtpw" name="equals" visibility="public" method="_R45MUicoEeSLVrU2ifxtpw" redefinedOperation="_R439nScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45x9ycoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x-CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x-ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45x-icoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x-ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45x_CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45x_ScoEeSLVrU2ifxtpw" name="first" visibility="public" method="_R45MbicoEeSLVrU2ifxtpw" redefinedOperation="_R439oycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45x_icoEeSLVrU2ifxtpw" name="" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45x_ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yACcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yAScoEeSLVrU2ifxtpw" name="indexOf" visibility="public" method="_R45MlScoEeSLVrU2ifxtpw" redefinedOperation="_R439pycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yAicoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yAycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yBCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yBScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yBicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yBycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yCCcoEeSLVrU2ifxtpw" name="last" visibility="public" method="_R45MsScoEeSLVrU2ifxtpw" redefinedOperation="_R439rScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yCScoEeSLVrU2ifxtpw" name="" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yCicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yCycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yDCcoEeSLVrU2ifxtpw" name="excludes" visibility="public" method="_R45M2CcoEeSLVrU2ifxtpw" redefinedOperation="_R43-KScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yDScoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yDicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yDycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yECcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yEScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yEicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yEycoEeSLVrU2ifxtpw" name="excludesAll" visibility="public" method="_R45M9CcoEeSLVrU2ifxtpw" redefinedOperation="_R43-LycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yFCcoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yFScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yFicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yFycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yGCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yGScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yGicoEeSLVrU2ifxtpw" name="includes" visibility="public" method="_R45NECcoEeSLVrU2ifxtpw" redefinedOperation="_R43-NicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yGycoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yHCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yHScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yHicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yHycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yICcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yIScoEeSLVrU2ifxtpw" name="includesAll" visibility="public" method="_R45NLCcoEeSLVrU2ifxtpw" redefinedOperation="_R43-PCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yIicoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yIycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yJCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yJScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yJicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yJycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yKCcoEeSLVrU2ifxtpw" name="isEmpty" visibility="public" method="_R45NSCcoEeSLVrU2ifxtpw" redefinedOperation="_R43-QycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yKScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yKicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yKycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yLCcoEeSLVrU2ifxtpw" name="notEmpty" visibility="public" method="_R45NWicoEeSLVrU2ifxtpw" redefinedOperation="_R43-RycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yLScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yLicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yLycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yMCcoEeSLVrU2ifxtpw" name="remove" visibility="public" method="_R45NbCcoEeSLVrU2ifxtpw" redefinedOperation="_R439sScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yMScoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yMicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yMycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yNCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yNScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yNicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yNycoEeSLVrU2ifxtpw" name="removeAll" visibility="public" method="_R45NiCcoEeSLVrU2ifxtpw" redefinedOperation="_R439ticoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yOCcoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yOScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yOicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yOycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yPCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yPScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yPicoEeSLVrU2ifxtpw" name="removeAt" visibility="public" method="_R45NpCcoEeSLVrU2ifxtpw" redefinedOperation="_R439wScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yPycoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yQCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yQScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yQicoEeSLVrU2ifxtpw" name="" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yQycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yRCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yRScoEeSLVrU2ifxtpw" name="removeOne" visibility="public" method="_R45N1ScoEeSLVrU2ifxtpw" redefinedOperation="_R439vCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yRicoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yRycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ySCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45ySScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ySicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ySycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yTCcoEeSLVrU2ifxtpw" name="replace" visibility="public" method="_R45N8ScoEeSLVrU2ifxtpw" redefinedOperation="_R439xycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yTScoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yTicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yTycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yUCcoEeSLVrU2ifxtpw" name="newElement" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yUScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yUicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yUycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yVCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yVScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yVicoEeSLVrU2ifxtpw" name="replaceAt" visibility="public" method="_R45OFycoEeSLVrU2ifxtpw" redefinedOperation="_R4391ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yVycoEeSLVrU2ifxtpw" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yWCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yWScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yWicoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yWycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yXCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yXScoEeSLVrU2ifxtpw" name="" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yXicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yXycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yYCcoEeSLVrU2ifxtpw" name="replaceOne" visibility="public" method="_R45OUicoEeSLVrU2ifxtpw" redefinedOperation="_R439zicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yYScoEeSLVrU2ifxtpw" name="element" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yYicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yYycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yZCcoEeSLVrU2ifxtpw" name="newElement" visibility="package" type="_R438aScoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yZScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yZicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yZycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yaCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yaScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yaicoEeSLVrU2ifxtpw" name="retainAll" visibility="public" method="_R45OeCcoEeSLVrU2ifxtpw" redefinedOperation="_R4393ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45yaycoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ybCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ybScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45ybicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ybycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ycCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45ycScoEeSLVrU2ifxtpw" name="size" visibility="public" method="_R45OlCcoEeSLVrU2ifxtpw" redefinedOperation="_R43-bycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45ycicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ycycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ydCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45ydScoEeSLVrU2ifxtpw" name="subList" visibility="public" method="_R45OpicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45ydicoEeSLVrU2ifxtpw" name="lower" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ydycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yeCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yeScoEeSLVrU2ifxtpw" name="upper" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yeicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yeycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_R45yfCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_R439dycoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yfScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yficoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_R45yfycoEeSLVrU2ifxtpw" name="toSequence" visibility="public" method="_R45xRScoEeSLVrU2ifxtpw" redefinedOperation="_R43-cycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_R45ygCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_R438aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ygScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ygicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R45ygycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R45yhCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R45yhScoEeSLVrU2ifxtpw" actual="_R438aScoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b8k34XREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b8k3oXREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R45yhicoEeSLVrU2ifxtpw" client="_R45LKScoEeSLVrU2ifxtpw" supplier="_R45ygycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_R45yhycoEeSLVrU2ifxtpw" name="AssertList" node="_R45yoScoEeSLVrU2ifxtpw _R45yoicoEeSLVrU2ifxtpw _R45yoycoEeSLVrU2ifxtpw _R45ypCcoEeSLVrU2ifxtpw _R45ypScoEeSLVrU2ifxtpw _R45ypicoEeSLVrU2ifxtpw _R45ypycoEeSLVrU2ifxtpw" group="_R45ypycoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_R45yiCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_R45yiScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_R45yiicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_R45yiycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_R45yjCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_R45yjScoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yjicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yjycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_R45ykCcoEeSLVrU2ifxtpw" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ykScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ykicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_R45ykycoEeSLVrU2ifxtpw" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ylCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ylScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ylicoEeSLVrU2ifxtpw" target="_R45yoicoEeSLVrU2ifxtpw" source="_R45yoScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ylycoEeSLVrU2ifxtpw" target="_R45ypCcoEeSLVrU2ifxtpw" source="_R45yoycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ymCcoEeSLVrU2ifxtpw" target="_R45ypicoEeSLVrU2ifxtpw" source="_R45ypScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ymScoEeSLVrU2ifxtpw" target="_R45ywCcoEeSLVrU2ifxtpw" source="_R45yoicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ymicoEeSLVrU2ifxtpw" target="_R45yyicoEeSLVrU2ifxtpw" source="_R45ypCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ymycoEeSLVrU2ifxtpw" target="_R45y0ScoEeSLVrU2ifxtpw" source="_R45ypicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ynCcoEeSLVrU2ifxtpw" target="_R45zwScoEeSLVrU2ifxtpw" source="_R45ypicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ynScoEeSLVrU2ifxtpw" target="_R45zxCcoEeSLVrU2ifxtpw" source="_R45ypCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ynicoEeSLVrU2ifxtpw" target="_R45zxycoEeSLVrU2ifxtpw" source="_R45yoicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45ynycoEeSLVrU2ifxtpw" target="_R45z_icoEeSLVrU2ifxtpw" source="_R45ypCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R45yoCcoEeSLVrU2ifxtpw" target="_R450BScoEeSLVrU2ifxtpw" source="_R45ypicoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_R45ypycoEeSLVrU2ifxtpw" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_R45yqCcoEeSLVrU2ifxtpw" target="_R45y1ycoEeSLVrU2ifxtpw" source="_R45yqScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45yqScoEeSLVrU2ifxtpw" name="ExpressionStatement@321705c3" outgoing="_R45yqCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45yqicoEeSLVrU2ifxtpw" target="_R45yrycoEeSLVrU2ifxtpw" source="_R45yxicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45yqycoEeSLVrU2ifxtpw" target="_R45ysicoEeSLVrU2ifxtpw" source="_R45yzScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45yrCcoEeSLVrU2ifxtpw" target="_R45ytScoEeSLVrU2ifxtpw" source="_R45y1CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45yrScoEeSLVrU2ifxtpw" target="_R45yricoEeSLVrU2ifxtpw" source="_R45yuCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45yricoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_R45yrScoEeSLVrU2ifxtpw" behavior="_R450rScoEeSLVrU2ifxtpw">
            <argument xmi:id="_R45yrycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_R45yqicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ysCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ysScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_R45ysicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_R45yqycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ysycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ytCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_R45ytScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_R45yrCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yticoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ytycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45yuCcoEeSLVrU2ifxtpw" name="Tuple@11aeb2c7" outgoing="_R45yrScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45yuScoEeSLVrU2ifxtpw" target="_R45ywycoEeSLVrU2ifxtpw" source="_R45yuycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45yuicoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_R45yuycoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;).result" outgoing="_R45yuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yvCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yvScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_R45yvicoEeSLVrU2ifxtpw" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45yvycoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_R45ywCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R45ymScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ywScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ywicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45ywycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R45yuScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yxCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yxScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45yxicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R45yqicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yxycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yyCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45yyScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_R46YsycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R45yyicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_R45ymicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yyycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yzCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45yzScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_R45yqycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45yzicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45yzycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45y0CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_R46YsycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R45y0ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_R45ymycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45y0icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45y0ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_R45y1CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_R45yrCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45y1ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45y1icoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45y1ycoEeSLVrU2ifxtpw" name="ForStatement@2559f47d" incoming="_R45yqCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y2CcoEeSLVrU2ifxtpw" target="_R450CycoEeSLVrU2ifxtpw" source="_R45z7icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y2ScoEeSLVrU2ifxtpw" target="_R45zzScoEeSLVrU2ifxtpw" source="_R450JicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y2icoEeSLVrU2ifxtpw" target="_R45z0CcoEeSLVrU2ifxtpw" source="_R450IicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y2ycoEeSLVrU2ifxtpw" target="_R45zyicoEeSLVrU2ifxtpw" source="_R450CycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R45y3CcoEeSLVrU2ifxtpw" target="_R45y3ScoEeSLVrU2ifxtpw" source="_R45z5ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:LoopNode" xmi:id="_R45y3ScoEeSLVrU2ifxtpw" name="Loop(ForStatement@2559f47d)" incoming="_R45y3CcoEeSLVrU2ifxtpw" bodyOutput="_R45zDCcoEeSLVrU2ifxtpw _R45zDycoEeSLVrU2ifxtpw _R45zEicoEeSLVrU2ifxtpw _R45zkCcoEeSLVrU2ifxtpw _R45znycoEeSLVrU2ifxtpw _R45zrCcoEeSLVrU2ifxtpw" bodyPart="_R45zBicoEeSLVrU2ifxtpw _R45zCCcoEeSLVrU2ifxtpw _R45ziScoEeSLVrU2ifxtpw _R45zkycoEeSLVrU2ifxtpw _R45zmCcoEeSLVrU2ifxtpw _R45zoicoEeSLVrU2ifxtpw _R45zpycoEeSLVrU2ifxtpw" decider="_R45zAycoEeSLVrU2ifxtpw" isTestedFirst="true" test="_R45y_CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y3icoEeSLVrU2ifxtpw" target="_R45y9icoEeSLVrU2ifxtpw" source="_R45zrycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y3ycoEeSLVrU2ifxtpw" target="_R45y9ycoEeSLVrU2ifxtpw" source="_R45zsicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y4CcoEeSLVrU2ifxtpw" target="_R45y-CcoEeSLVrU2ifxtpw" source="_R45ztScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y4ScoEeSLVrU2ifxtpw" target="_R45y-ScoEeSLVrU2ifxtpw" source="_R45zuCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y4icoEeSLVrU2ifxtpw" target="_R45y-icoEeSLVrU2ifxtpw" source="_R45zuycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y4ycoEeSLVrU2ifxtpw" target="_R45y-ycoEeSLVrU2ifxtpw" source="_R45zvicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y5CcoEeSLVrU2ifxtpw" target="_R45y_ScoEeSLVrU2ifxtpw" source="_R45y-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y5ScoEeSLVrU2ifxtpw" target="_R45zACcoEeSLVrU2ifxtpw" source="_R45y-ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y5icoEeSLVrU2ifxtpw" target="_R45zBycoEeSLVrU2ifxtpw" source="_R45zuCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R45y5ycoEeSLVrU2ifxtpw" target="_R45zCCcoEeSLVrU2ifxtpw" source="_R45zBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y6CcoEeSLVrU2ifxtpw" target="_R45zPCcoEeSLVrU2ifxtpw" source="_R45zBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y6ScoEeSLVrU2ifxtpw" target="_R45zZScoEeSLVrU2ifxtpw" source="_R45zBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y6icoEeSLVrU2ifxtpw" target="_R45zcCcoEeSLVrU2ifxtpw" source="_R45zBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y6ycoEeSLVrU2ifxtpw" target="_R45ziicoEeSLVrU2ifxtpw" source="_R45y-ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y7CcoEeSLVrU2ifxtpw" target="_R45zjScoEeSLVrU2ifxtpw" source="_R45zlCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y7ScoEeSLVrU2ifxtpw" target="_R45zmScoEeSLVrU2ifxtpw" source="_R45y-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y7icoEeSLVrU2ifxtpw" target="_R45znCcoEeSLVrU2ifxtpw" source="_R45zoycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y7ycoEeSLVrU2ifxtpw" target="_R45zqScoEeSLVrU2ifxtpw" source="_R45y-ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y8CcoEeSLVrU2ifxtpw" target="_R45zMicoEeSLVrU2ifxtpw" source="_R45y-CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y8ScoEeSLVrU2ifxtpw" target="_R45zXCcoEeSLVrU2ifxtpw" source="_R45y9ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y8icoEeSLVrU2ifxtpw" target="_R45zZycoEeSLVrU2ifxtpw" source="_R45y9icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y8ycoEeSLVrU2ifxtpw" target="_R45zcycoEeSLVrU2ifxtpw" source="_R45y9icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y9CcoEeSLVrU2ifxtpw" target="_R45zeycoEeSLVrU2ifxtpw" source="_R45y9ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45y9ScoEeSLVrU2ifxtpw" target="_R45zgycoEeSLVrU2ifxtpw" source="_R45y-CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R45y9icoEeSLVrU2ifxtpw" name="Fork(ForStatement@2559f47d.loopVariable(expected))" incoming="_R45y3icoEeSLVrU2ifxtpw" outgoing="_R45y8icoEeSLVrU2ifxtpw _R45y8ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R45y9ycoEeSLVrU2ifxtpw" name="Fork(ForStatement@2559f47d.loopVariable(list))" incoming="_R45y3ycoEeSLVrU2ifxtpw" outgoing="_R45y8ScoEeSLVrU2ifxtpw _R45y9CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R45y-CcoEeSLVrU2ifxtpw" name="Fork(ForStatement@2559f47d.loopVariable(label))" incoming="_R45y4CcoEeSLVrU2ifxtpw" outgoing="_R45y8CcoEeSLVrU2ifxtpw _R45y9ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R45y-ScoEeSLVrU2ifxtpw" name="Fork(ForStatement@2559f47d.loopVariable(i))" incoming="_R45y4ScoEeSLVrU2ifxtpw" outgoing="_R45y6ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R45y-icoEeSLVrU2ifxtpw" name="Fork(ForStatement@2559f47d.loopVariable(counter))" incoming="_R45y4icoEeSLVrU2ifxtpw" outgoing="_R45y5CcoEeSLVrU2ifxtpw _R45y7ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_R45y-ycoEeSLVrU2ifxtpw" name="Fork(ForStatement@2559f47d.loopVariable(upper))" incoming="_R45y4ycoEeSLVrU2ifxtpw" outgoing="_R45y5ScoEeSLVrU2ifxtpw _R45y7ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45y_CcoEeSLVrU2ifxtpw" name="Call(&lt;=)">
              <argument xmi:id="_R45y_ScoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_R45y5CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45y_icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45y_ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45zACcoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_R45y5ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zAScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zAicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45zAycoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zBCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zBScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45zBicoEeSLVrU2ifxtpw" name="Values(ForStatement@2559f47d)" outgoing="_R45y5ycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ForkNode" xmi:id="_R45zBycoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_R45y5icoEeSLVrU2ifxtpw" outgoing="_R45y6CcoEeSLVrU2ifxtpw _R45y6ScoEeSLVrU2ifxtpw _R45y6icoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45zCCcoEeSLVrU2ifxtpw" name="Body(ForStatement@2559f47d)" incoming="_R45y5ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zCScoEeSLVrU2ifxtpw" target="_R45zDCcoEeSLVrU2ifxtpw" source="_R45zdicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zCicoEeSLVrU2ifxtpw" target="_R45zDycoEeSLVrU2ifxtpw" source="_R45zficoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zCycoEeSLVrU2ifxtpw" target="_R45zEicoEeSLVrU2ifxtpw" source="_R45zhicoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_R45zDCcoEeSLVrU2ifxtpw" name="expected" incoming="_R45zCScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zDScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zDicoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_R45zDycoEeSLVrU2ifxtpw" name="list" incoming="_R45zCicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zECcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zEScoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_R45zEicoEeSLVrU2ifxtpw" name="label" incoming="_R45zCycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zEycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zFCcoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45zFScoEeSLVrU2ifxtpw" name="ExpressionStatement@4bda542c">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zFicoEeSLVrU2ifxtpw" target="_R45zGycoEeSLVrU2ifxtpw" source="_R45zWCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zFycoEeSLVrU2ifxtpw" target="_R45zHicoEeSLVrU2ifxtpw" source="_R45zYicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zGCcoEeSLVrU2ifxtpw" target="_R45zIScoEeSLVrU2ifxtpw" source="_R45zbScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R45zGScoEeSLVrU2ifxtpw" target="_R45zGicoEeSLVrU2ifxtpw" source="_R45zJCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45zGicoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_R45zGScoEeSLVrU2ifxtpw" behavior="_R450rScoEeSLVrU2ifxtpw">
                  <argument xmi:id="_R45zGycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_R45zFicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zHCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zHScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_R45zHicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_R45zFycoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zHycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zICcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_R45zIScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_R45zGCcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zIicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zIycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45zJCcoEeSLVrU2ifxtpw" name="Tuple@30819d62" outgoing="_R45zGScoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zJScoEeSLVrU2ifxtpw" target="_R45zNScoEeSLVrU2ifxtpw" source="_R45zLScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zJicoEeSLVrU2ifxtpw" target="_R45zQycoEeSLVrU2ifxtpw" source="_R45zOCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zJycoEeSLVrU2ifxtpw" target="_R45zRicoEeSLVrU2ifxtpw" source="_R45zPycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zKCcoEeSLVrU2ifxtpw" target="_R45zUicoEeSLVrU2ifxtpw" source="_R45zSScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zKScoEeSLVrU2ifxtpw" target="_R45zVScoEeSLVrU2ifxtpw" source="_R45zTScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zKicoEeSLVrU2ifxtpw" target="_R45zXycoEeSLVrU2ifxtpw" source="_R45zZScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zKycoEeSLVrU2ifxtpw" target="_R45zaicoEeSLVrU2ifxtpw" source="_R45zcCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45zLCcoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;)">
                    <result xmi:id="_R45zLScoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;).result" outgoing="_R45zJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zLicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zLycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R45zMCcoEeSLVrU2ifxtpw" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45zMScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_R45zMicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R45y8CcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zMycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zNCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_R45zNScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R45zJScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zNicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zNycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R45zOCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R45zJicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zOScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zOicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45zOycoEeSLVrU2ifxtpw" name="Call(ToString)">
                    <argument xmi:id="_R45zPCcoEeSLVrU2ifxtpw" name="Call(ToString).argument(x)" incoming="_R45y6CcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zPScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zPicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R45zPycoEeSLVrU2ifxtpw" name="Call(ToString).result(result)" outgoing="_R45zJycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zQCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zQScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45zQicoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_R45zQycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R45zJicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zRCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zRScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_R45zRicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R45zJycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zRycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zSCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R45zSScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R45zKCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zSicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zSycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45zTCcoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;)">
                    <result xmi:id="_R45zTScoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;).result" outgoing="_R45zKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zTicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zTycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R45zUCcoEeSLVrU2ifxtpw" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45zUScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_R45zUicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R45zKCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zUycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zVCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_R45zVScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R45zKScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zVicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zVycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R45zWCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R45zFicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zWScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zWicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45zWycoEeSLVrU2ifxtpw" name="Call(At)">
                    <argument xmi:id="_R45zXCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_R45y8ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zXScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zXicoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_R45zXycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_R45zKicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zYCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zYScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R45zYicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_R45zFycoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zYycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zZCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_R45zZScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_R45y6ScoEeSLVrU2ifxtpw" outgoing="_R45zKicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45zZicoEeSLVrU2ifxtpw" name="Call(At)">
                    <argument xmi:id="_R45zZycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_R45y8icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zaCcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zaScoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_R45zaicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_R45zKycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zaycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zbCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R45zbScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_R45zGCcoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zbicoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zbycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_R45zcCcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_R45y6icoEeSLVrU2ifxtpw" outgoing="_R45zKycoEeSLVrU2ifxtpw"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45zcScoEeSLVrU2ifxtpw" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zcicoEeSLVrU2ifxtpw" target="_R45zdicoEeSLVrU2ifxtpw" source="_R45zcycoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_R45zcycoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).input" incoming="_R45y8ycoEeSLVrU2ifxtpw" outgoing="_R45zcicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zdCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zdScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_R45zdicoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).output" incoming="_R45zcicoEeSLVrU2ifxtpw" outgoing="_R45zCScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zdycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zeCcoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45zeScoEeSLVrU2ifxtpw" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zeicoEeSLVrU2ifxtpw" target="_R45zficoEeSLVrU2ifxtpw" source="_R45zeycoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_R45zeycoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).input" incoming="_R45y9CcoEeSLVrU2ifxtpw" outgoing="_R45zeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zfCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zfScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_R45zficoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).output" incoming="_R45zeicoEeSLVrU2ifxtpw" outgoing="_R45zCicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zfycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zgCcoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45zgScoEeSLVrU2ifxtpw" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zgicoEeSLVrU2ifxtpw" target="_R45zhicoEeSLVrU2ifxtpw" source="_R45zgycoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_R45zgycoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).input" incoming="_R45y9ScoEeSLVrU2ifxtpw" outgoing="_R45zgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zhCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zhScoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_R45zhicoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).output" incoming="_R45zgicoEeSLVrU2ifxtpw" outgoing="_R45zCycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zhycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ziCcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45ziScoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_R45ziicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_R45y6ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45ziycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zjCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45zjScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_R45y7CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zjicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zjycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45zkCcoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zkScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zkicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45zkycoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_R45zlCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R45y7CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zlScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zlicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_R45zlycoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45zmCcoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_R45zmScoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_R45y7ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zmicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zmycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45znCcoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_R45y7icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45znScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45znicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45znycoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zoCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zoScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45zoicoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_R45zoycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R45y7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zpCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zpScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_R45zpicoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45zpycoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R45zqCcoEeSLVrU2ifxtpw" target="_R45zrCcoEeSLVrU2ifxtpw" source="_R45zqScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_R45zqScoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).input" incoming="_R45y7ycoEeSLVrU2ifxtpw" outgoing="_R45zqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zqycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_R45zrCcoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).output" incoming="_R45zqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zrScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zricoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <loopVariable xmi:id="_R45zrycoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariable(expected)" outgoing="_R45y3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zsCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zsScoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_R45zsicoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariable(list)" outgoing="_R45y3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zsycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ztCcoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_R45ztScoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariable(label)" outgoing="_R45y4CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zticoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45ztycoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_R45zuCcoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariable(i)" outgoing="_R45y4ScoEeSLVrU2ifxtpw _R45y5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zuScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zuicoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_R45zuycoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariable(counter)" outgoing="_R45y4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zvCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zvScoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_R45zvicoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariable(upper)" outgoing="_R45y4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zvycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zwCcoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_R45zwScoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariableInput(expected)" incoming="_R45ynCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zwicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zwycoEeSLVrU2ifxtpw" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_R45zxCcoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariableInput(list)" incoming="_R45ynScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zxScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zxicoEeSLVrU2ifxtpw" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_R45zxycoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariableInput(label)" incoming="_R45ynicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zyCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zyScoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_R45zyicoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariableInput(i)" incoming="_R45y2ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zyycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zzCcoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_R45zzScoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariableInput(counter)" incoming="_R45y2ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45zzicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45zzycoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_R45z0CcoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.loopVariableInput(upper)" incoming="_R45y2icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z0ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z0icoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <result xmi:id="_R45z0ycoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z1CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z1ScoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_R45z1icoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z1ycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z2CcoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_R45z2ScoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z2icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z2ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <result xmi:id="_R45z3CcoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z3ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z3icoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_R45z3ycoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z4CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z4ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <result xmi:id="_R45z4icoEeSLVrU2ifxtpw" name="ForStatement@2559f47d.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z4ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z5CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45z5ScoEeSLVrU2ifxtpw" name="LoopVariables(ForStatement@2559f47d)" outgoing="_R45y3CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45z5icoEeSLVrU2ifxtpw" target="_R45z8ycoEeSLVrU2ifxtpw" source="_R450AScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45z5ycoEeSLVrU2ifxtpw" target="_R45z9icoEeSLVrU2ifxtpw" source="_R450CCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R45z6CcoEeSLVrU2ifxtpw" target="_R45z8icoEeSLVrU2ifxtpw" source="_R45z_CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45z6ScoEeSLVrU2ifxtpw" target="_R450DScoEeSLVrU2ifxtpw" source="_R45z-ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45z6icoEeSLVrU2ifxtpw" target="_R450ECcoEeSLVrU2ifxtpw" source="_R450CycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45z6ycoEeSLVrU2ifxtpw" target="_R450HCcoEeSLVrU2ifxtpw" source="_R450EycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R45z7CcoEeSLVrU2ifxtpw" target="_R450HycoEeSLVrU2ifxtpw" source="_R450FycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R45z7ScoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_R45z7icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R45y2CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z7ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z8CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_R45z8ScoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45z8icoEeSLVrU2ifxtpw" name="Call(Min)" incoming="_R45z6CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_R45z8ycoEeSLVrU2ifxtpw" name="Call(Min).argument(x)" incoming="_R45z5icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z9CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z9ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R45z9icoEeSLVrU2ifxtpw" name="Call(Min).argument(y)" incoming="_R45z5ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z9ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z-CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R45z-ScoEeSLVrU2ifxtpw" name="Call(Min).result(result)" outgoing="_R45z6ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z-icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R45z-ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R45z_CcoEeSLVrU2ifxtpw" name="Tuple@43bcc1cb" outgoing="_R45z6CcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R45z_ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_R46YsycoEeSLVrU2ifxtpw">
                <argument xmi:id="_R45z_icoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_R45ynycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R45z_ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450ACcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R450AScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_R45z5icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450AicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450AycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450BCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_R46YsycoEeSLVrU2ifxtpw">
                <argument xmi:id="_R450BScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_R45yoCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450BicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450BycoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R450CCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_R45z5ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450CScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450CicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_R450CycoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_R45y2CcoEeSLVrU2ifxtpw" outgoing="_R45y2ycoEeSLVrU2ifxtpw _R45z6icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450DCcoEeSLVrU2ifxtpw" name="Call(-)">
              <argument xmi:id="_R450DScoEeSLVrU2ifxtpw" name="Call(-).argument(x)" incoming="_R45z6ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450DicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450DycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R450ECcoEeSLVrU2ifxtpw" name="Call(-).argument(y)" incoming="_R45z6icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450EScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450EicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R450EycoEeSLVrU2ifxtpw" name="Call(-).result(result)" outgoing="_R45z6ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450FCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450FScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R450FicoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_R450FycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R45z7CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450GCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450GScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_R450GicoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450GycoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_R450HCcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_R45z6ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450HScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450HicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_R450HycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_R45z7CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450ICcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450IScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R450IicoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_R45y2icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450IycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450JCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R450JScoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_R450JicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R45y2ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450JycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450KCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_R450KScoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45yoScoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_R45ylicoEeSLVrU2ifxtpw" parameter="_R45yjScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R45yoicoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_R45ylicoEeSLVrU2ifxtpw" outgoing="_R45ymScoEeSLVrU2ifxtpw _R45ynicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45yoycoEeSLVrU2ifxtpw" name="Input(list)" outgoing="_R45ylycoEeSLVrU2ifxtpw" parameter="_R45ykCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R45ypCcoEeSLVrU2ifxtpw" name="Fork(list)" incoming="_R45ylycoEeSLVrU2ifxtpw" outgoing="_R45ymicoEeSLVrU2ifxtpw _R45ynycoEeSLVrU2ifxtpw _R45ynScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R45ypScoEeSLVrU2ifxtpw" name="Input(expected)" outgoing="_R45ymCcoEeSLVrU2ifxtpw" parameter="_R45ykycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R45ypicoEeSLVrU2ifxtpw" name="Fork(expected)" incoming="_R45ymCcoEeSLVrU2ifxtpw" outgoing="_R45ymycoEeSLVrU2ifxtpw _R45yoCcoEeSLVrU2ifxtpw _R45ynCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_R450KicoEeSLVrU2ifxtpw" name="AssertTrue" node="_R450OicoEeSLVrU2ifxtpw _R450OycoEeSLVrU2ifxtpw _R450PCcoEeSLVrU2ifxtpw _R450PScoEeSLVrU2ifxtpw _R450PicoEeSLVrU2ifxtpw" group="_R450PicoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_R450KycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_R450LCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_R450LScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_R450LicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_R450LycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_R450MCcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450MScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450MicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_R450MycoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450NCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450NScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450NicoEeSLVrU2ifxtpw" target="_R450OycoEeSLVrU2ifxtpw" source="_R450OicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450NycoEeSLVrU2ifxtpw" target="_R450PScoEeSLVrU2ifxtpw" source="_R450PCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450OCcoEeSLVrU2ifxtpw" target="_R450WScoEeSLVrU2ifxtpw" source="_R450PScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450OScoEeSLVrU2ifxtpw" target="_R450gCcoEeSLVrU2ifxtpw" source="_R450OycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_R450PicoEeSLVrU2ifxtpw" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_R450PycoEeSLVrU2ifxtpw" name="IfStatement@27429350">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450QCcoEeSLVrU2ifxtpw" target="_R450UCcoEeSLVrU2ifxtpw" source="_R450WScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450QScoEeSLVrU2ifxtpw" target="_R450WycoEeSLVrU2ifxtpw" source="_R450WScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450QicoEeSLVrU2ifxtpw" target="_R450YScoEeSLVrU2ifxtpw" source="_R450XicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450QycoEeSLVrU2ifxtpw" target="_R450YicoEeSLVrU2ifxtpw" source="_R450UycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450RCcoEeSLVrU2ifxtpw" target="_R450YycoEeSLVrU2ifxtpw" source="_R450YScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450RScoEeSLVrU2ifxtpw" target="_R450YycoEeSLVrU2ifxtpw" source="_R450YScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450RicoEeSLVrU2ifxtpw" target="_R450YicoEeSLVrU2ifxtpw" source="_R450YycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R450RycoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450SCcoEeSLVrU2ifxtpw" target="_R450VicoEeSLVrU2ifxtpw" source="_R450SycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450SScoEeSLVrU2ifxtpw" target="_R450ZScoEeSLVrU2ifxtpw" source="_R450YicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R450SicoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_R450SycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_R450SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450TCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450TScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_R450TicoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R450TycoEeSLVrU2ifxtpw" name="Test(==)">
            <first xmi:id="_R450UCcoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_R450QCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450UScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450UicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R450UycoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_R450QycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450VCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450VScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R450VicoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_R450SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450VycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450WCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R450WScoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_R450OCcoEeSLVrU2ifxtpw" outgoing="_R450QCcoEeSLVrU2ifxtpw _R450QScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450WicoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_R450WycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_R450QScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450XCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450XScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R450XicoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_R450QicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450XycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450YCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R450YScoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_R450QicoEeSLVrU2ifxtpw" outgoing="_R450RCcoEeSLVrU2ifxtpw _R450RScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_R450YicoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_R450QycoEeSLVrU2ifxtpw _R450RicoEeSLVrU2ifxtpw" outgoing="_R450SScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R450YycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_R450RCcoEeSLVrU2ifxtpw _R450RScoEeSLVrU2ifxtpw" outgoing="_R450RicoEeSLVrU2ifxtpw" decisionInputFlow="_R450RScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450ZCcoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_R450ZScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_R450SScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450ZicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450ZycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_R450aCcoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450aScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450aicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R450aycoEeSLVrU2ifxtpw" name="ExpressionStatement@309b77e9">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R450bCcoEeSLVrU2ifxtpw" target="_R450bycoEeSLVrU2ifxtpw" source="_R450gycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R450bScoEeSLVrU2ifxtpw" target="_R450bicoEeSLVrU2ifxtpw" source="_R450dScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450bicoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_R450bScoEeSLVrU2ifxtpw">
              <argument xmi:id="_R450bycoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_R450bCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450cCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450cScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R450cicoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450cycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450dCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R450dScoEeSLVrU2ifxtpw" name="Tuple@16b28944" outgoing="_R450bScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R450dicoEeSLVrU2ifxtpw" target="_R450fScoEeSLVrU2ifxtpw" source="_R450eCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R450dycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_R450eCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_R450dicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450eScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450eicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R450eycoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450fCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_R450fScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R450dicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450ficoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450fycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_R450gCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R450OScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450gScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450gicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_R450gycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R450bCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450hCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450hScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R450hicoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_R450hycoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450iCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450iScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_R450iicoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_R450iycoEeSLVrU2ifxtpw" body="_R450aycoEeSLVrU2ifxtpw" decider="_R450aCcoEeSLVrU2ifxtpw" successorClause="_R450jCcoEeSLVrU2ifxtpw" test="_R450SicoEeSLVrU2ifxtpw _R450TycoEeSLVrU2ifxtpw _R450WicoEeSLVrU2ifxtpw _R450ZCcoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_R450jCcoEeSLVrU2ifxtpw" decider="_R450hycoEeSLVrU2ifxtpw" predecessorClause="_R450iycoEeSLVrU2ifxtpw" test="_R450hicoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R450OicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_R450NicoEeSLVrU2ifxtpw" parameter="_R450MCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R450OycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_R450NicoEeSLVrU2ifxtpw" outgoing="_R450OScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R450PCcoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_R450NycoEeSLVrU2ifxtpw" parameter="_R450MycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R450PScoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_R450NycoEeSLVrU2ifxtpw" outgoing="_R450OCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_R450jScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$isEmpty__PrimitiveTypes$Integer__" node="_R450mCcoEeSLVrU2ifxtpw _R450mScoEeSLVrU2ifxtpw _R450micoEeSLVrU2ifxtpw _R450mycoEeSLVrU2ifxtpw _R450nCcoEeSLVrU2ifxtpw" group="_R450nCcoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_R450jicoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450jycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450kCcoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_R450kScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450kicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450kycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450lCcoEeSLVrU2ifxtpw" target="_R450mScoEeSLVrU2ifxtpw" source="_R450mCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_R450lScoEeSLVrU2ifxtpw" target="_R450mycoEeSLVrU2ifxtpw" source="_R450nScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450licoEeSLVrU2ifxtpw" target="_R450oycoEeSLVrU2ifxtpw" source="_R450mScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450lycoEeSLVrU2ifxtpw" target="_R450micoEeSLVrU2ifxtpw" source="_R450nycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_R450nCcoEeSLVrU2ifxtpw" name="Body(isEmpty)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R450nScoEeSLVrU2ifxtpw" name="ReturnStatement@7bd45656" outgoing="_R450lScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450nicoEeSLVrU2ifxtpw" target="_R450nycoEeSLVrU2ifxtpw" source="_R450picoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_R450nycoEeSLVrU2ifxtpw" name="ReturnStatement@7bd45656.output" incoming="_R450nicoEeSLVrU2ifxtpw" outgoing="_R450lycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450oCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450oScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450oicoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
            <argument xmi:id="_R450oycoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_R450licoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450pCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450pScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R450picoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_R450nicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450pycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450qCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R450mCcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R450lCcoEeSLVrU2ifxtpw" parameter="_R450jicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R450mScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R450lCcoEeSLVrU2ifxtpw" outgoing="_R450licoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R450micoEeSLVrU2ifxtpw" name="Return" incoming="_R450lycoEeSLVrU2ifxtpw" parameter="_R450kScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_R450mycoEeSLVrU2ifxtpw" name="Final" incoming="_R450lScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_R450qScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R450qicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R450qycoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_Jmrpz4VoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmrpzoVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R450rCcoEeSLVrU2ifxtpw" client="_R450jScoEeSLVrU2ifxtpw" supplier="_R450qScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_R450rScoEeSLVrU2ifxtpw" name="AssertEqual" node="_R450xicoEeSLVrU2ifxtpw _R450xycoEeSLVrU2ifxtpw _R450yCcoEeSLVrU2ifxtpw _R450yScoEeSLVrU2ifxtpw _R450yicoEeSLVrU2ifxtpw _R450yycoEeSLVrU2ifxtpw _R450zCcoEeSLVrU2ifxtpw" group="_R450zCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_R450ricoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_R450rycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_R450sCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_R450sScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_R450sicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_R450sycoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450tCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450tScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_R450ticoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450tycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450uCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_R450uScoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450uicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450uycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450vCcoEeSLVrU2ifxtpw" target="_R450xycoEeSLVrU2ifxtpw" source="_R450xicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450vScoEeSLVrU2ifxtpw" target="_R450yScoEeSLVrU2ifxtpw" source="_R450yCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450vicoEeSLVrU2ifxtpw" target="_R450yycoEeSLVrU2ifxtpw" source="_R450yicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450vycoEeSLVrU2ifxtpw" target="_R4508ScoEeSLVrU2ifxtpw" source="_R450yScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450wCcoEeSLVrU2ifxtpw" target="_R450-ScoEeSLVrU2ifxtpw" source="_R450yycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450wScoEeSLVrU2ifxtpw" target="_R451MCcoEeSLVrU2ifxtpw" source="_R450xycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450wicoEeSLVrU2ifxtpw" target="_R46YMScoEeSLVrU2ifxtpw" source="_R450yycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450wycoEeSLVrU2ifxtpw" target="_R46YTycoEeSLVrU2ifxtpw" source="_R450yycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450xCcoEeSLVrU2ifxtpw" target="_R46YdScoEeSLVrU2ifxtpw" source="_R450yycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R450xScoEeSLVrU2ifxtpw" target="_R46YlScoEeSLVrU2ifxtpw" source="_R450yycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_R450zCcoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_R450zScoEeSLVrU2ifxtpw" name="IfStatement@45ef61c7">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450zicoEeSLVrU2ifxtpw" target="_R4506CcoEeSLVrU2ifxtpw" source="_R4508ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R450zycoEeSLVrU2ifxtpw" target="_R4508ycoEeSLVrU2ifxtpw" source="_R4508ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4500CcoEeSLVrU2ifxtpw" target="_R4507icoEeSLVrU2ifxtpw" source="_R450-ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4500ScoEeSLVrU2ifxtpw" target="_R450-ycoEeSLVrU2ifxtpw" source="_R450-ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4500icoEeSLVrU2ifxtpw" target="_R451AicoEeSLVrU2ifxtpw" source="_R4509icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4500ycoEeSLVrU2ifxtpw" target="_R451AycoEeSLVrU2ifxtpw" source="_R450_icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4501CcoEeSLVrU2ifxtpw" target="_R451BScoEeSLVrU2ifxtpw" source="_R451AicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4501ScoEeSLVrU2ifxtpw" target="_R451DCcoEeSLVrU2ifxtpw" source="_R451AycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4501icoEeSLVrU2ifxtpw" target="_R451EicoEeSLVrU2ifxtpw" source="_R451AycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R4501ycoEeSLVrU2ifxtpw" target="_R4505ycoEeSLVrU2ifxtpw" source="_R451EicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R4502CcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R4502ScoEeSLVrU2ifxtpw" target="_R451BCcoEeSLVrU2ifxtpw" source="_R451EicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R4502icoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R4502ycoEeSLVrU2ifxtpw" target="_R451EycoEeSLVrU2ifxtpw" source="_R451AScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4503CcoEeSLVrU2ifxtpw" target="_R451EycoEeSLVrU2ifxtpw" source="_R451AicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R4503ScoEeSLVrU2ifxtpw" target="_R451EicoEeSLVrU2ifxtpw" source="_R451EycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R4503icoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R4503ycoEeSLVrU2ifxtpw" target="_R451CycoEeSLVrU2ifxtpw" source="_R451EycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_R4504CcoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4504ScoEeSLVrU2ifxtpw" target="_R451FCcoEeSLVrU2ifxtpw" source="_R4506ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4504icoEeSLVrU2ifxtpw" target="_R451FCcoEeSLVrU2ifxtpw" source="_R451CCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4504ycoEeSLVrU2ifxtpw" target="_R451FCcoEeSLVrU2ifxtpw" source="_R451DycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R4505CcoEeSLVrU2ifxtpw" target="_R451FicoEeSLVrU2ifxtpw" source="_R451FCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R4505ScoEeSLVrU2ifxtpw" target="_R46YICcoEeSLVrU2ifxtpw" source="_R451HCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R4505icoEeSLVrU2ifxtpw" target="_R46YnCcoEeSLVrU2ifxtpw" source="_R46YICcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_R4505ycoEeSLVrU2ifxtpw" name="Test(==)" incoming="_R4501ycoEeSLVrU2ifxtpw">
            <first xmi:id="_R4506CcoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_R450zicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4506ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4506icoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_R4506ycoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_R4504ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4507CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4507ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_R4507icoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_R4500CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4507ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4508CcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R4508ScoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_R450vycoEeSLVrU2ifxtpw" outgoing="_R450zicoEeSLVrU2ifxtpw _R450zycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R4508icoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_R4508ycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_R450zycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4509CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4509ScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R4509icoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_R4500icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4509ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450-CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_R450-ScoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_R450wCcoEeSLVrU2ifxtpw" outgoing="_R4500CcoEeSLVrU2ifxtpw _R4500ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R450-icoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_R450-ycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_R4500ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450_CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R450_ScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R450_icoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_R4500ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R450_ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451ACcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_R451AScoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_R4502ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_R451AicoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_R4500icoEeSLVrU2ifxtpw" outgoing="_R4501CcoEeSLVrU2ifxtpw _R4503CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_R451AycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_R4500ycoEeSLVrU2ifxtpw" outgoing="_R4501ScoEeSLVrU2ifxtpw _R4501icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R451BCcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_R4502ScoEeSLVrU2ifxtpw">
            <argument xmi:id="_R451BScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_R4501CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451BicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451BycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_R451CCcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_R4504icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451CScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451CicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R451CycoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_R4503ycoEeSLVrU2ifxtpw">
            <argument xmi:id="_R451DCcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_R4501ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451DScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451DicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_R451DycoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_R4504ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451ECcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451EScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_R451EicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_R4501icoEeSLVrU2ifxtpw _R4503ScoEeSLVrU2ifxtpw" outgoing="_R4501ycoEeSLVrU2ifxtpw _R4502ScoEeSLVrU2ifxtpw" decisionInputFlow="_R4501icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_R451EycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_R4502ycoEeSLVrU2ifxtpw _R4503CcoEeSLVrU2ifxtpw" outgoing="_R4503ScoEeSLVrU2ifxtpw _R4503ycoEeSLVrU2ifxtpw" decisionInputFlow="_R4503CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_R451FCcoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_R4504ScoEeSLVrU2ifxtpw _R4504icoEeSLVrU2ifxtpw _R4504ycoEeSLVrU2ifxtpw" outgoing="_R4505CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R451FScoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_R451FicoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_R4505CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451FycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451GCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_R451GScoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451GicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451GycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R451HCcoEeSLVrU2ifxtpw" name="ExpressionStatement@22e2821f" outgoing="_R4505ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R451HScoEeSLVrU2ifxtpw" target="_R451ICcoEeSLVrU2ifxtpw" source="_R451QicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R451HicoEeSLVrU2ifxtpw" target="_R451HycoEeSLVrU2ifxtpw" source="_R451IycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R451HycoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_R451HicoEeSLVrU2ifxtpw" behavior="_R46Y0ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R451ICcoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_R451HScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451IScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451IicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R451IycoEeSLVrU2ifxtpw" name="Tuple@54b48ee1" outgoing="_R451HicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R451JCcoEeSLVrU2ifxtpw" target="_R451LScoEeSLVrU2ifxtpw" source="_R451KCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R451JScoEeSLVrU2ifxtpw" target="_R451PCcoEeSLVrU2ifxtpw" source="_R451MycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R451JicoEeSLVrU2ifxtpw" target="_R451PycoEeSLVrU2ifxtpw" source="_R451NycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R451JycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_R451KCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_R451JCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451KScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451KicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R451KycoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R451LCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_R451LScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R451JCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451LicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451LycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_R451MCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R450wScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451MScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451MicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_R451MycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R451JScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451NCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451NScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R451NicoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_R451NycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_R451JicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451OCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451OScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R451OicoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R451OycoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_R451PCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R451JScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451PScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451PicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_R451PycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R451JicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451QCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451QScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_R451QicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R451HScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R451QycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R451RCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YICcoEeSLVrU2ifxtpw" name="ExpressionStatement@546b7d38" incoming="_R4505ScoEeSLVrU2ifxtpw" outgoing="_R4505icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YIScoEeSLVrU2ifxtpw" target="_R46YJCcoEeSLVrU2ifxtpw" source="_R46YmycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R46YIicoEeSLVrU2ifxtpw" target="_R46YIycoEeSLVrU2ifxtpw" source="_R46YJycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R46YIycoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_R46YIicoEeSLVrU2ifxtpw" behavior="_R46Y0ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_R46YJCcoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_R46YIScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YJScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YJicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YJycoEeSLVrU2ifxtpw" name="Tuple@756f2b37" outgoing="_R46YIicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_R46YKCcoEeSLVrU2ifxtpw" target="_R46YmicoEeSLVrU2ifxtpw" source="_R46YmScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YKScoEeSLVrU2ifxtpw" target="_R46YmicoEeSLVrU2ifxtpw" source="_R46YNCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R46YKicoEeSLVrU2ifxtpw" target="_R46YNycoEeSLVrU2ifxtpw" source="_R46YmicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R46YKycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_R46YLCcoEeSLVrU2ifxtpw" target="_R46YQScoEeSLVrU2ifxtpw" source="_R46YmicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_R46YLScoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YLicoEeSLVrU2ifxtpw" target="_R46YmycoEeSLVrU2ifxtpw" source="_R46YOScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YLycoEeSLVrU2ifxtpw" target="_R46YmycoEeSLVrU2ifxtpw" source="_R46YSycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_R46YMCcoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_R46YMScoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_R450wicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YMicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YMycoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_R46YNCcoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_R46YKScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YNScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YNicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YNycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1d292a4c.operand2" incoming="_R46YKicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YOCcoEeSLVrU2ifxtpw" target="_R46YOScoEeSLVrU2ifxtpw" source="_R46YPScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R46YOScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1d292a4c.operand2.result" incoming="_R46YOCcoEeSLVrU2ifxtpw" outgoing="_R46YLicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YOicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YOycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R46YPCcoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_R46YPScoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_R46YOCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YPicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YPycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_R46YQCcoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YQScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1d292a4c.operand3" incoming="_R46YLCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_R46YQicoEeSLVrU2ifxtpw" target="_R46YlycoEeSLVrU2ifxtpw" source="_R46YlicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YQycoEeSLVrU2ifxtpw" target="_R46YlycoEeSLVrU2ifxtpw" source="_R46YUicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R46YRCcoEeSLVrU2ifxtpw" target="_R46YVScoEeSLVrU2ifxtpw" source="_R46YlycoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_R46YRScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_R46YRicoEeSLVrU2ifxtpw" target="_R46YkCcoEeSLVrU2ifxtpw" source="_R46YlycoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_R46YRycoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YSCcoEeSLVrU2ifxtpw" target="_R46YmCcoEeSLVrU2ifxtpw" source="_R46YWycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YSScoEeSLVrU2ifxtpw" target="_R46YmCcoEeSLVrU2ifxtpw" source="_R46YkicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YSicoEeSLVrU2ifxtpw" target="_R46YSycoEeSLVrU2ifxtpw" source="_R46YmCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_R46YSycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1d292a4c.operand3.result" incoming="_R46YSicoEeSLVrU2ifxtpw" outgoing="_R46YLycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YTCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YTScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R46YTicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_R46YTycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_R450wycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YUCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YUScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_R46YUicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_R46YQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YUycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YVCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YVScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@14ae9dcf.operand2" incoming="_R46YRCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YVicoEeSLVrU2ifxtpw" target="_R46YeCcoEeSLVrU2ifxtpw" source="_R46YXycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YVycoEeSLVrU2ifxtpw" target="_R46YeycoEeSLVrU2ifxtpw" source="_R46YdicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YWCcoEeSLVrU2ifxtpw" target="_R46YhycoEeSLVrU2ifxtpw" source="_R46YficoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YWScoEeSLVrU2ifxtpw" target="_R46YiicoEeSLVrU2ifxtpw" source="_R46YgicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YWicoEeSLVrU2ifxtpw" target="_R46YWycoEeSLVrU2ifxtpw" source="_R46YjScoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_R46YWycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@14ae9dcf.operand2.result" incoming="_R46YWicoEeSLVrU2ifxtpw" outgoing="_R46YSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YXCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YXScoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R46YXicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_R46YXycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_R46YVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YYCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YYScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R46YYicoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_R46YYycoEeSLVrU2ifxtpw" name="CastExpression@2c1919fc" mode="parallel" outputElement="_R46YdicoEeSLVrU2ifxtpw" inputElement="_R46YdScoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YZCcoEeSLVrU2ifxtpw" target="_R46YbScoEeSLVrU2ifxtpw" source="_R46YcycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YZScoEeSLVrU2ifxtpw" target="_R46YdCcoEeSLVrU2ifxtpw" source="_R46YcycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YZicoEeSLVrU2ifxtpw" target="_R46YdCcoEeSLVrU2ifxtpw" source="_R46YcCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YZycoEeSLVrU2ifxtpw" target="_R46YaycoEeSLVrU2ifxtpw" source="_R46YdCcoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_R46YaCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YaScoEeSLVrU2ifxtpw" target="_R46YcycoEeSLVrU2ifxtpw" source="_R46YdScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YaicoEeSLVrU2ifxtpw" target="_R46YdicoEeSLVrU2ifxtpw" source="_R46YaycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_R46YaycoEeSLVrU2ifxtpw" name="Merge(CastExpression@2c1919fc.operand)" incoming="_R46YZycoEeSLVrU2ifxtpw" outgoing="_R46YaicoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_R46YbCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_R46YbScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_R46YZCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YbicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YbycoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_R46YcCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_R46YZicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YcScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YcicoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_R46YcycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_R46YaScoEeSLVrU2ifxtpw" outgoing="_R46YZCcoEeSLVrU2ifxtpw _R46YZScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_R46YdCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_R46YZScoEeSLVrU2ifxtpw _R46YZicoEeSLVrU2ifxtpw" outgoing="_R46YZycoEeSLVrU2ifxtpw" decisionInputFlow="_R46YZicoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_R46YdScoEeSLVrU2ifxtpw" name="CastExpression@2c1919fc.inputElement" incoming="_R450xCcoEeSLVrU2ifxtpw" outgoing="_R46YaScoEeSLVrU2ifxtpw" regionAsInput="_R46YYycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_R46YdicoEeSLVrU2ifxtpw" name="CastExpression@2c1919fc.outputElement" incoming="_R46YaicoEeSLVrU2ifxtpw" outgoing="_R46YVycoEeSLVrU2ifxtpw" regionAsOutput="_R46YYycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R46YdycoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_R46YeCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R46YVicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YeScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YeicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_R46YeycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R46YVycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YfCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YfScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R46YficoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R46YWCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YfycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YgCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R46YgScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_R46YgicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_R46YWScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YgycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YhCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_R46YhScoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_R46YhicoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_R46YhycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_R46YWCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YiCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YiScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_R46YiicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_R46YWScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YiycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YjCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_R46YjScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_R46YWicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YjicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YjycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YkCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@14ae9dcf.operand3" incoming="_R46YRicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YkScoEeSLVrU2ifxtpw" target="_R46YkicoEeSLVrU2ifxtpw" source="_R46YlScoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_R46YkicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@14ae9dcf.operand3.result" incoming="_R46YkScoEeSLVrU2ifxtpw" outgoing="_R46YSScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YkycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YlCcoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_R46YlScoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_R450xScoEeSLVrU2ifxtpw" outgoing="_R46YkScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_R46YlicoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@14ae9dcf)" outgoing="_R46YQicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_R46YlycoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@14ae9dcf)" incoming="_R46YQicoEeSLVrU2ifxtpw _R46YQycoEeSLVrU2ifxtpw" outgoing="_R46YRCcoEeSLVrU2ifxtpw _R46YRicoEeSLVrU2ifxtpw" decisionInputFlow="_R46YQycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_R46YmCcoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@14ae9dcf.result)" incoming="_R46YSCcoEeSLVrU2ifxtpw _R46YSScoEeSLVrU2ifxtpw" outgoing="_R46YSicoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_R46YmScoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@1d292a4c)" outgoing="_R46YKCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_R46YmicoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@1d292a4c)" incoming="_R46YKCcoEeSLVrU2ifxtpw _R46YKScoEeSLVrU2ifxtpw" outgoing="_R46YKicoEeSLVrU2ifxtpw _R46YLCcoEeSLVrU2ifxtpw" decisionInputFlow="_R46YKScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_R46YmycoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@1d292a4c.result)" incoming="_R46YLicoEeSLVrU2ifxtpw _R46YLycoEeSLVrU2ifxtpw" outgoing="_R46YIScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YnCcoEeSLVrU2ifxtpw" name="ExpressionStatement@615f8c6f" incoming="_R4505icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YnScoEeSLVrU2ifxtpw" target="_R46YoCcoEeSLVrU2ifxtpw" source="_R46YqCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R46YnicoEeSLVrU2ifxtpw" target="_R46YnycoEeSLVrU2ifxtpw" source="_R46YpicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R46YnycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_R46YnicoEeSLVrU2ifxtpw">
              <argument xmi:id="_R46YoCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_R46YnScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YoScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YoicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R46YoycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YpCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YpScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YpicoEeSLVrU2ifxtpw" name="Tuple@1ff0e2c" outgoing="_R46YnicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R46YpycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_R46YqCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_R46YnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YqScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YqicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_R46YqycoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R46YrCcoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_R46YrScoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YricoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YrycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_R46YsCcoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_R46YsScoEeSLVrU2ifxtpw" body="_R451HCcoEeSLVrU2ifxtpw _R46YICcoEeSLVrU2ifxtpw _R46YnCcoEeSLVrU2ifxtpw" decider="_R451GScoEeSLVrU2ifxtpw" successorClause="_R46YsicoEeSLVrU2ifxtpw" test="_R4505ycoEeSLVrU2ifxtpw _R4508icoEeSLVrU2ifxtpw _R450-icoEeSLVrU2ifxtpw _R451BCcoEeSLVrU2ifxtpw _R451CycoEeSLVrU2ifxtpw _R451FScoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_R46YsicoEeSLVrU2ifxtpw" decider="_R46YrScoEeSLVrU2ifxtpw" predecessorClause="_R46YsScoEeSLVrU2ifxtpw" test="_R46YrCcoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R450xicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_R450vCcoEeSLVrU2ifxtpw" parameter="_R450sycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R450xycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_R450vCcoEeSLVrU2ifxtpw" outgoing="_R450wScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R450yCcoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_R450vScoEeSLVrU2ifxtpw" parameter="_R450ticoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R450yScoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_R450vScoEeSLVrU2ifxtpw" outgoing="_R450vycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R450yicoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_R450vicoEeSLVrU2ifxtpw" parameter="_R450uScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R450yycoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_R450vicoEeSLVrU2ifxtpw" outgoing="_R450wCcoEeSLVrU2ifxtpw _R450wicoEeSLVrU2ifxtpw _R450wycoEeSLVrU2ifxtpw _R450xCcoEeSLVrU2ifxtpw _R450xScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_R46YsycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$size__any__" node="_R46YvicoEeSLVrU2ifxtpw _R46YvycoEeSLVrU2ifxtpw _R46YwCcoEeSLVrU2ifxtpw _R46YwScoEeSLVrU2ifxtpw _R46YwicoEeSLVrU2ifxtpw" group="_R46YwicoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_R46YtCcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YtScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YticoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_R46YtycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YuCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YuScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YuicoEeSLVrU2ifxtpw" target="_R46YvycoEeSLVrU2ifxtpw" source="_R46YvicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_R46YuycoEeSLVrU2ifxtpw" target="_R46YwScoEeSLVrU2ifxtpw" source="_R46YwycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YvCcoEeSLVrU2ifxtpw" target="_R46YyScoEeSLVrU2ifxtpw" source="_R46YvycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YvScoEeSLVrU2ifxtpw" target="_R46YwCcoEeSLVrU2ifxtpw" source="_R46YxScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_R46YwicoEeSLVrU2ifxtpw" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46YwycoEeSLVrU2ifxtpw" name="ReturnStatement@22536490" outgoing="_R46YuycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R46YxCcoEeSLVrU2ifxtpw" target="_R46YxScoEeSLVrU2ifxtpw" source="_R46YzCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_R46YxScoEeSLVrU2ifxtpw" name="ReturnStatement@22536490.output" incoming="_R46YxCcoEeSLVrU2ifxtpw" outgoing="_R46YvScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YxicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YxycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_R46YyCcoEeSLVrU2ifxtpw" name="Call(Size)">
            <argument xmi:id="_R46YyScoEeSLVrU2ifxtpw" name="Call(Size).argument(seq)" incoming="_R46YvCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YyicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YyycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_R46YzCcoEeSLVrU2ifxtpw" name="Call(Size).result()" outgoing="_R46YxCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46YzScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46YzicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R46YvicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_R46YuicoEeSLVrU2ifxtpw" parameter="_R46YtCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R46YvycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_R46YuicoEeSLVrU2ifxtpw" outgoing="_R46YvCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R46YwCcoEeSLVrU2ifxtpw" name="Return" incoming="_R46YvScoEeSLVrU2ifxtpw" parameter="_R46YtycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_R46YwScoEeSLVrU2ifxtpw" name="Final" incoming="_R46YuycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_R46YzycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_R46Y0CcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_R46Y0ScoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_R46Y0icoEeSLVrU2ifxtpw" client="_R46YsycoEeSLVrU2ifxtpw" supplier="_R46YzycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_R46Y0ycoEeSLVrU2ifxtpw" name="Write" node="_R46Y3icoEeSLVrU2ifxtpw _R46Y3ycoEeSLVrU2ifxtpw _R46Y4CcoEeSLVrU2ifxtpw" group="_R46Y4CcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_R46Y1CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_R46Y1ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_R46Y1icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_R46Y1ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_R46Y2CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_R46Y2ScoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46Y2icoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46Y2ycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R46Y3CcoEeSLVrU2ifxtpw" target="_R46Y3ycoEeSLVrU2ifxtpw" source="_R46Y3icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_R46Y3ScoEeSLVrU2ifxtpw" target="_R46Y5ycoEeSLVrU2ifxtpw" source="_R46Y3ycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_R46Y4CcoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46Y4ScoEeSLVrU2ifxtpw" name="ExpressionStatement@5c4e3f76">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_R46Y4icoEeSLVrU2ifxtpw" target="_R46Y9CcoEeSLVrU2ifxtpw" source="_R46ZAScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_R46Y4ycoEeSLVrU2ifxtpw" target="_R46Y5CcoEeSLVrU2ifxtpw" source="_R46Y9ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_R46Y5CcoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_R46Y4ycoEeSLVrU2ifxtpw" mode="parallel" inputElement="_R46Y9CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R46Y5ScoEeSLVrU2ifxtpw" target="_R46Y6ycoEeSLVrU2ifxtpw" source="_R46Y5ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R46Y5icoEeSLVrU2ifxtpw" target="_R46Y8ScoEeSLVrU2ifxtpw" source="_R46Y9CcoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_R46Y5ycoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_R46Y3ScoEeSLVrU2ifxtpw" outgoing="_R46Y5ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46Y6CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46Y6ScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_R46Y6icoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_R46Y6ycoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_R46Y5ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46Y7CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46Y7ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R46Y7icoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46Y7ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46Y8CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_R46Y8ScoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_R46Y5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46Y8icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46Y8ycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_R46Y9CcoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_R46Y4icoEeSLVrU2ifxtpw" outgoing="_R46Y5icoEeSLVrU2ifxtpw" regionAsInput="_R46Y5CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46Y9ScoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_R46Y4ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R46Y9icoEeSLVrU2ifxtpw" target="_R46Y-ycoEeSLVrU2ifxtpw" source="_R46ZBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R46Y9ycoEeSLVrU2ifxtpw" target="_R46ZDicoEeSLVrU2ifxtpw" source="_R46ZCicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_R46Y-CcoEeSLVrU2ifxtpw" target="_R46Y-icoEeSLVrU2ifxtpw" source="_R46ZBCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_R46Y-ScoEeSLVrU2ifxtpw" target="_R46Y_icoEeSLVrU2ifxtpw" source="_R46ZDicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_R46Y-icoEeSLVrU2ifxtpw" name="Call(At)" incoming="_R46Y-CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_R46Y-ycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_R46Y9icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46Y_CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46Y_ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_R46Y_icoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_R46Y-ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46Y_ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46ZACcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_R46ZAScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_R46Y4icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46ZAicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46ZAycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_R46ZBCcoEeSLVrU2ifxtpw" name="Tuple@72fa2387" outgoing="_R46Y-CcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_R46ZBScoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_R46ZBicoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_R46Y9icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46ZBycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46ZCCcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_R46ZCScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_R46ZCicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_R46Y9ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R46ZCycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R46ZDCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_R46ZDScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_R46ZDicoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_R46Y9ycoEeSLVrU2ifxtpw" outgoing="_R46Y-ScoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_R46Y3icoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_R46Y3CcoEeSLVrU2ifxtpw" parameter="_R46Y2ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_R46Y3ycoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_R46Y3CcoEeSLVrU2ifxtpw" outgoing="_R46Y3ScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <profileApplication xmi:id="_R46ZDycoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_R46ZECcoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_R46ZEScoEeSLVrU2ifxtpw" base_BehavioralFeature="_R43YUScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46ZEicoEeSLVrU2ifxtpw" base_BehavioralFeature="_R43ZAicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_R46ZEycoEeSLVrU2ifxtpw" base_BehavioralFeature="_R45xxCcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46ZFCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_R45KXycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_R46ZFScoEeSLVrU2ifxtpw" base_BehavioralFeature="_R4399ScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46ZFicoEeSLVrU2ifxtpw" base_BehavioralFeature="_R439eicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46ZFycoEeSLVrU2ifxtpw" base_BehavioralFeature="_R4384CcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46_MCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_R43YTScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_R46_MScoEeSLVrU2ifxtpw" base_BehavioralFeature="_R4385ycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_R46_MicoEeSLVrU2ifxtpw" base_BehavioralFeature="_R43ZCScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46_MycoEeSLVrU2ifxtpw" base_BehavioralFeature="_R44jvicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46_NCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_R43ZDScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_R46_NScoEeSLVrU2ifxtpw" base_BehavioralFeature="_R44jxScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46_NicoEeSLVrU2ifxtpw" base_BehavioralFeature="_R45xvScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46_NycoEeSLVrU2ifxtpw" base_BehavioralFeature="_R438bCcoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_R46_OCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_R43ZFCcoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_R46_OScoEeSLVrU2ifxtpw" base_BehavioralFeature="_R45KZicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_R46_OicoEeSLVrU2ifxtpw" base_BehavioralFeature="_R4397icoEeSLVrU2ifxtpw"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SQd8gCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SQd8gScoEeSLVrU2ifxtpw" name="Statements_Classify" classifierBehavior="_SQd8iicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_SQd8gicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SQd8gycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SQd8hCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SQd8hScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SQd8hicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SQd8hycoEeSLVrU2ifxtpw" name="Statements_Classify$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8iCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8iScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd8iicoEeSLVrU2ifxtpw" name="Statements_Classify$classifierBehavior$1" visibility="private" isActive="true" node="_SQd8iycoEeSLVrU2ifxtpw" group="_SQd8iycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SQd8iycoEeSLVrU2ifxtpw" name="Body(Statements_Classify$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd8jCcoEeSLVrU2ifxtpw" name="ExpressionStatement@1502be4a">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8jScoEeSLVrU2ifxtpw" target="_SQd8jycoEeSLVrU2ifxtpw" source="_SQd8lycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:SendSignalAction" xmi:id="_SQd8jicoEeSLVrU2ifxtpw" name="SendSignal(Start)" signal="_SQfMyScoEeSLVrU2ifxtpw">
              <target xmi:id="_SQd8jycoEeSLVrU2ifxtpw" name="SendSignal(Start).target" incoming="_SQd8jScoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8kCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8kScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd8kicoEeSLVrU2ifxtpw" name="InstanceCreationExpression@12c7835b">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8kycoEeSLVrU2ifxtpw" target="_SQd8nicoEeSLVrU2ifxtpw" source="_SQd8oicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8lCcoEeSLVrU2ifxtpw" target="_SQd8pScoEeSLVrU2ifxtpw" source="_SQd8mycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8lScoEeSLVrU2ifxtpw" target="_SQd8pycoEeSLVrU2ifxtpw" source="_SQd8pScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8licoEeSLVrU2ifxtpw" target="_SQd8lycoEeSLVrU2ifxtpw" source="_SQd8pScoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_SQd8lycoEeSLVrU2ifxtpw" name="Output(Call(TestRunner).result())" incoming="_SQd8licoEeSLVrU2ifxtpw" outgoing="_SQd8jScoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8mCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8mScoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQd8micoEeSLVrU2ifxtpw" name="Call(TestRunner)" operation="_SQfMxCcoEeSLVrU2ifxtpw">
                <result xmi:id="_SQd8mycoEeSLVrU2ifxtpw" name="Call(TestRunner).result()" outgoing="_SQd8lCcoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8nCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8nScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SQd8nicoEeSLVrU2ifxtpw" name="Call(TestRunner).target" incoming="_SQd8kycoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8nycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8oCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SQd8oScoEeSLVrU2ifxtpw" name="Create(TestRunner)" classifier="_SQenxycoEeSLVrU2ifxtpw">
                <result xmi:id="_SQd8oicoEeSLVrU2ifxtpw" name="Create(TestRunner).result" outgoing="_SQd8kycoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8oycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8pCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SQd8pScoEeSLVrU2ifxtpw" name="Fork(Call(TestRunner).result())" incoming="_SQd8lCcoEeSLVrU2ifxtpw" outgoing="_SQd8lScoEeSLVrU2ifxtpw _SQd8licoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_SQd8picoEeSLVrU2ifxtpw" name="Start(TestRunner)">
                <object xmi:id="_SQd8pycoEeSLVrU2ifxtpw" name="Start(TestRunner).object" incoming="_SQd8lScoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8qCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8qScoEeSLVrU2ifxtpw" value="1"/>
                </object>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd8qicoEeSLVrU2ifxtpw" name="Statements_Classify$method$1" specification="_SQd9KicoEeSLVrU2ifxtpw" node="_SQd8rycoEeSLVrU2ifxtpw _SQd8sCcoEeSLVrU2ifxtpw" group="_SQd8sCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SQd8qycoEeSLVrU2ifxtpw" name="" type="_SQd8gScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8rCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8rScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8ricoEeSLVrU2ifxtpw" target="_SQd8rycoEeSLVrU2ifxtpw" source="_SQd8wScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SQd8sCcoEeSLVrU2ifxtpw" name="Body(Statements_Classify$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8sScoEeSLVrU2ifxtpw" target="_SQd8wScoEeSLVrU2ifxtpw" source="_SQd8vicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8sicoEeSLVrU2ifxtpw" target="_SQd8wycoEeSLVrU2ifxtpw" source="_SQd8wScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQd8sycoEeSLVrU2ifxtpw" target="_SQd8vCcoEeSLVrU2ifxtpw" source="_SQd8wicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8tCcoEeSLVrU2ifxtpw" target="_SQd8xycoEeSLVrU2ifxtpw" source="_SQd8wScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8tScoEeSLVrU2ifxtpw" target="_SQd8zicoEeSLVrU2ifxtpw" source="_SQd8yicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8ticoEeSLVrU2ifxtpw" target="_SQd82icoEeSLVrU2ifxtpw" source="_SQd80ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8tycoEeSLVrU2ifxtpw" target="_SQd84CcoEeSLVrU2ifxtpw" source="_SQd81ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQd8uCcoEeSLVrU2ifxtpw" target="_SQd85CcoEeSLVrU2ifxtpw" source="_SQd84ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8uScoEeSLVrU2ifxtpw" target="_SQd85CcoEeSLVrU2ifxtpw" source="_SQd83ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQd8uicoEeSLVrU2ifxtpw" target="_SQd8wicoEeSLVrU2ifxtpw" source="_SQd85CcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd8uycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd8vCcoEeSLVrU2ifxtpw" name="Body" incoming="_SQd8sycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd8vScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SQd8vicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd8sScoEeSLVrU2ifxtpw" type="_SQd8gScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8vycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8wCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SQd8wScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd8sScoEeSLVrU2ifxtpw" outgoing="_SQd8ricoEeSLVrU2ifxtpw _SQd8sicoEeSLVrU2ifxtpw _SQd8tCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SQd8wicoEeSLVrU2ifxtpw" name="Call(Statements_Classify$initialization$1)" incoming="_SQd8uicoEeSLVrU2ifxtpw" outgoing="_SQd8sycoEeSLVrU2ifxtpw" operation="_SQd9KScoEeSLVrU2ifxtpw">
            <target xmi:id="_SQd8wycoEeSLVrU2ifxtpw" name="Call(Statements_Classify$initialization$1).target" incoming="_SQd8sicoEeSLVrU2ifxtpw" type="_SQd8gScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8xCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8xScoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd8xicoEeSLVrU2ifxtpw" name="Read(Statements_Classify$initializationFlag$1)" structuralFeature="_SQd8hycoEeSLVrU2ifxtpw">
            <object xmi:id="_SQd8xycoEeSLVrU2ifxtpw" name="Read(Statements_Classify$initializationFlag$1).object" incoming="_SQd8tCcoEeSLVrU2ifxtpw" type="_SQd8gScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8yCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8yScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SQd8yicoEeSLVrU2ifxtpw" name="Read(Statements_Classify$initializationFlag$1).result" outgoing="_SQd8tScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8yycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8zCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd8zScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SQd8zicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd8tScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8zycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd80CcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SQd80ScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd8ticoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd80icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd80ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd81CcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SQd81ScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd8tycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd81icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd81ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SQd82CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd82ScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SQd82icoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd8ticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd82ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd83CcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SQd83ScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd8uScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd83icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd83ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SQd84CcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd8tycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd84ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd84icoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SQd84ycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd8uCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SQd85CcoEeSLVrU2ifxtpw" name="Decision(Test(Statements_Classify$initializationFlag$1))" incoming="_SQd8uCcoEeSLVrU2ifxtpw _SQd8uScoEeSLVrU2ifxtpw" outgoing="_SQd8uicoEeSLVrU2ifxtpw" decisionInputFlow="_SQd8uScoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQd8rycoEeSLVrU2ifxtpw" name="Return" incoming="_SQd8ricoEeSLVrU2ifxtpw" parameter="_SQd8qycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd85ScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQd9LicoEeSLVrU2ifxtpw" node="_SQd85icoEeSLVrU2ifxtpw" group="_SQd85icoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SQd85icoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd85ycoEeSLVrU2ifxtpw" name="Statements_Classify$initialization$1" specification="_SQd9KScoEeSLVrU2ifxtpw" node="_SQd86CcoEeSLVrU2ifxtpw" group="_SQd86CcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SQd86CcoEeSLVrU2ifxtpw" name="Body(Statements_Classify$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd86ScoEeSLVrU2ifxtpw" target="_SQd89ycoEeSLVrU2ifxtpw" source="_SQd89CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd86icoEeSLVrU2ifxtpw" target="_SQd9AScoEeSLVrU2ifxtpw" source="_SQd89ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd86ycoEeSLVrU2ifxtpw" target="_SQd9CycoEeSLVrU2ifxtpw" source="_SQd89ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd87CcoEeSLVrU2ifxtpw" target="_SQd9EicoEeSLVrU2ifxtpw" source="_SQd9DicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd87ScoEeSLVrU2ifxtpw" target="_SQd9HicoEeSLVrU2ifxtpw" source="_SQd9FScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd87icoEeSLVrU2ifxtpw" target="_SQd9JCcoEeSLVrU2ifxtpw" source="_SQd9GScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQd87ycoEeSLVrU2ifxtpw" target="_SQd9KCcoEeSLVrU2ifxtpw" source="_SQd9JycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd88CcoEeSLVrU2ifxtpw" target="_SQd9KCcoEeSLVrU2ifxtpw" source="_SQd9IScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQd88ScoEeSLVrU2ifxtpw" target="_SQd8-CcoEeSLVrU2ifxtpw" source="_SQd9KCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd88icoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd88ycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SQd89CcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd86ScoEeSLVrU2ifxtpw" type="_SQd8gScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd89ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd89icoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SQd89ycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd86ScoEeSLVrU2ifxtpw" outgoing="_SQd86icoEeSLVrU2ifxtpw _SQd86ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd8-CcoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQd88ScoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd8-ScoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd8-icoEeSLVrU2ifxtpw" target="_SQd9BycoEeSLVrU2ifxtpw" source="_SQd8_CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd8-ycoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SQd8_CcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQd8-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd8_ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd8_icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SQd8_ycoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQd9ACcoEeSLVrU2ifxtpw" name="Write(Statements_Classify$initializationFlag$1)" structuralFeature="_SQd8hycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SQd9AScoEeSLVrU2ifxtpw" name="Write(Statements_Classify$initializationFlag$1).object" incoming="_SQd86icoEeSLVrU2ifxtpw" type="_SQd8gScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9AicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9AycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SQd9BCcoEeSLVrU2ifxtpw" name="Write(Statements_Classify$initializationFlag$1).result" type="_SQd8gScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9BScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9BicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_SQd9BycoEeSLVrU2ifxtpw" name="Write(Statements_Classify$initializationFlag$1).value" incoming="_SQd8-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9CCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9CScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd9CicoEeSLVrU2ifxtpw" name="Read(Statements_Classify$initializationFlag$1)" structuralFeature="_SQd8hycoEeSLVrU2ifxtpw">
            <object xmi:id="_SQd9CycoEeSLVrU2ifxtpw" name="Read(Statements_Classify$initializationFlag$1).object" incoming="_SQd86ycoEeSLVrU2ifxtpw" type="_SQd8gScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9DCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9DScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SQd9DicoEeSLVrU2ifxtpw" name="Read(Statements_Classify$initializationFlag$1).result" outgoing="_SQd87CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9DycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9ECcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd9EScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SQd9EicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd87CcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9EycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9FCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SQd9FScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd87ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9FicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9FycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd9GCcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SQd9GScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd87icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9GicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9GycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SQd9HCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd9HScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SQd9HicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd87ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9HycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9ICcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SQd9IScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd88CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9IicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9IycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SQd9JCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd87icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9JScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9JicoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SQd9JycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd87ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SQd9KCcoEeSLVrU2ifxtpw" name="Decision(Test(Statements_Classify$initializationFlag$1))" incoming="_SQd87ycoEeSLVrU2ifxtpw _SQd88CcoEeSLVrU2ifxtpw" outgoing="_SQd88ScoEeSLVrU2ifxtpw" decisionInputFlow="_SQd88CcoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SQd9KScoEeSLVrU2ifxtpw" name="Statements_Classify$initialization$1" visibility="protected" method="_SQd85ycoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SQd9KicoEeSLVrU2ifxtpw" name="Statements_Classify" visibility="package" method="_SQd8qicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SQd9KycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQd8gScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9LCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9LScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SQd9LicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQd85ScoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQd9LycoEeSLVrU2ifxtpw" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_SQd9MCcoEeSLVrU2ifxtpw" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9MScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9MicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd9MycoEeSLVrU2ifxtpw" name="Monitor$method$1" specification="_SQd9sycoEeSLVrU2ifxtpw" node="_SQd9OCcoEeSLVrU2ifxtpw _SQd9OScoEeSLVrU2ifxtpw" group="_SQd9OScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd9NCcoEeSLVrU2ifxtpw" name="" type="_SQd9LycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9NScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9NicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9NycoEeSLVrU2ifxtpw" target="_SQd9OCcoEeSLVrU2ifxtpw" source="_SQd9SicoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQd9OScoEeSLVrU2ifxtpw" name="Body(Monitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9OicoEeSLVrU2ifxtpw" target="_SQd9SicoEeSLVrU2ifxtpw" source="_SQd9RycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9OycoEeSLVrU2ifxtpw" target="_SQd9TCcoEeSLVrU2ifxtpw" source="_SQd9SicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd9PCcoEeSLVrU2ifxtpw" target="_SQd9RScoEeSLVrU2ifxtpw" source="_SQd9SycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9PScoEeSLVrU2ifxtpw" target="_SQd9UCcoEeSLVrU2ifxtpw" source="_SQd9SicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9PicoEeSLVrU2ifxtpw" target="_SQd9VycoEeSLVrU2ifxtpw" source="_SQd9UycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9PycoEeSLVrU2ifxtpw" target="_SQd9YycoEeSLVrU2ifxtpw" source="_SQd9WicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9QCcoEeSLVrU2ifxtpw" target="_SQd9aScoEeSLVrU2ifxtpw" source="_SQd9XicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd9QScoEeSLVrU2ifxtpw" target="_SQd9bScoEeSLVrU2ifxtpw" source="_SQd9bCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9QicoEeSLVrU2ifxtpw" target="_SQd9bScoEeSLVrU2ifxtpw" source="_SQd9ZicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd9QycoEeSLVrU2ifxtpw" target="_SQd9SycoEeSLVrU2ifxtpw" source="_SQd9bScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd9RCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd9RScoEeSLVrU2ifxtpw" name="Body" incoming="_SQd9PCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd9RicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd9RycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd9OicoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9SCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9SScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd9SicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd9OicoEeSLVrU2ifxtpw" outgoing="_SQd9NycoEeSLVrU2ifxtpw _SQd9OycoEeSLVrU2ifxtpw _SQd9PScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQd9SycoEeSLVrU2ifxtpw" name="Call(Monitor$initialization$1)" incoming="_SQd9QycoEeSLVrU2ifxtpw" outgoing="_SQd9PCcoEeSLVrU2ifxtpw" operation="_SQd9sicoEeSLVrU2ifxtpw">
              <target xmi:id="_SQd9TCcoEeSLVrU2ifxtpw" name="Call(Monitor$initialization$1).target" incoming="_SQd9OycoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9TScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9TicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd9TycoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1)" structuralFeature="_SQd9MCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd9UCcoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1).object" incoming="_SQd9PScoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9UScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9UicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd9UycoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1).result" outgoing="_SQd9PicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9VCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9VScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd9VicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd9VycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd9PicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9WCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9WScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd9WicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd9PycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9WycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9XCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd9XScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd9XicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd9QCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9XycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9YCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd9YScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd9YicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd9YycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd9PycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9ZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9ZScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd9ZicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd9QicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9ZycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9aCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd9aScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd9QCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9aicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9aycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd9bCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd9QScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd9bScoEeSLVrU2ifxtpw" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_SQd9QScoEeSLVrU2ifxtpw _SQd9QicoEeSLVrU2ifxtpw" outgoing="_SQd9QycoEeSLVrU2ifxtpw" decisionInputFlow="_SQd9QicoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQd9OCcoEeSLVrU2ifxtpw" name="Return" incoming="_SQd9NycoEeSLVrU2ifxtpw" parameter="_SQd9NCcoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd9bicoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQd9tycoEeSLVrU2ifxtpw" node="_SQd9bycoEeSLVrU2ifxtpw" group="_SQd9bycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd9bycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd9cCcoEeSLVrU2ifxtpw" name="Monitor$initialization$1" specification="_SQd9sicoEeSLVrU2ifxtpw" node="_SQd9cScoEeSLVrU2ifxtpw" group="_SQd9cScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd9cScoEeSLVrU2ifxtpw" name="Body(Monitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9cicoEeSLVrU2ifxtpw" target="_SQd9gCcoEeSLVrU2ifxtpw" source="_SQd9fScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9cycoEeSLVrU2ifxtpw" target="_SQd9iicoEeSLVrU2ifxtpw" source="_SQd9gCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9dCcoEeSLVrU2ifxtpw" target="_SQd9lCcoEeSLVrU2ifxtpw" source="_SQd9gCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9dScoEeSLVrU2ifxtpw" target="_SQd9mycoEeSLVrU2ifxtpw" source="_SQd9lycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9dicoEeSLVrU2ifxtpw" target="_SQd9pycoEeSLVrU2ifxtpw" source="_SQd9nicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9dycoEeSLVrU2ifxtpw" target="_SQd9rScoEeSLVrU2ifxtpw" source="_SQd9oicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd9eCcoEeSLVrU2ifxtpw" target="_SQd9sScoEeSLVrU2ifxtpw" source="_SQd9sCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9eScoEeSLVrU2ifxtpw" target="_SQd9sScoEeSLVrU2ifxtpw" source="_SQd9qicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd9eicoEeSLVrU2ifxtpw" target="_SQd9gScoEeSLVrU2ifxtpw" source="_SQd9sScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd9eycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd9fCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd9fScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd9cicoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9ficoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9fycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd9gCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd9cicoEeSLVrU2ifxtpw" outgoing="_SQd9cycoEeSLVrU2ifxtpw _SQd9dCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd9gScoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQd9eicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd9gicoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9gycoEeSLVrU2ifxtpw" target="_SQd9kCcoEeSLVrU2ifxtpw" source="_SQd9hScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd9hCcoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQd9hScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQd9gycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9hicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9hycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQd9iCcoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQd9iScoEeSLVrU2ifxtpw" name="Write(Monitor$initializationFlag$1)" structuralFeature="_SQd9MCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQd9iicoEeSLVrU2ifxtpw" name="Write(Monitor$initializationFlag$1).object" incoming="_SQd9cycoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9iycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9jCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQd9jScoEeSLVrU2ifxtpw" name="Write(Monitor$initializationFlag$1).result" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9jicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9jycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQd9kCcoEeSLVrU2ifxtpw" name="Write(Monitor$initializationFlag$1).value" incoming="_SQd9gycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9kScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9kicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd9kycoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1)" structuralFeature="_SQd9MCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd9lCcoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1).object" incoming="_SQd9dCcoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9lScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9licoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd9lycoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1).result" outgoing="_SQd9dScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9mCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9mScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd9micoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd9mycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd9dScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9nCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9nScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd9nicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd9dicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9nycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9oCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd9oScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd9oicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd9dycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9oycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9pCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd9pScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd9picoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd9pycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd9dicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9qCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9qScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd9qicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd9eScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9qycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9rCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd9rScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd9dycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9ricoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9rycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd9sCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd9eCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd9sScoEeSLVrU2ifxtpw" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_SQd9eCcoEeSLVrU2ifxtpw _SQd9eScoEeSLVrU2ifxtpw" outgoing="_SQd9eicoEeSLVrU2ifxtpw" decisionInputFlow="_SQd9eScoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQd9sicoEeSLVrU2ifxtpw" name="Monitor$initialization$1" visibility="protected" method="_SQd9cCcoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQd9sycoEeSLVrU2ifxtpw" name="Monitor" visibility="package" method="_SQd9MycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd9tCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQd9LycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9tScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9ticoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQd9tycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQd9bicoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQd9uCcoEeSLVrU2ifxtpw" name="InActiveMonitor" visibility="package">
        <generalization xmi:id="_SQd9uScoEeSLVrU2ifxtpw" general="_SQd9LycoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQd9uicoEeSLVrU2ifxtpw" name="InActiveMonitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9uycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9vCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd9vScoEeSLVrU2ifxtpw" name="InActiveMonitor$method$1" specification="_SQd-QycoEeSLVrU2ifxtpw" node="_SQd9wicoEeSLVrU2ifxtpw _SQd9wycoEeSLVrU2ifxtpw" group="_SQd9wycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd9vicoEeSLVrU2ifxtpw" name="" type="_SQd9uCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd9vycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd9wCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9wScoEeSLVrU2ifxtpw" target="_SQd9wicoEeSLVrU2ifxtpw" source="_SQd91CcoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQd9wycoEeSLVrU2ifxtpw" name="Body(InActiveMonitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9xCcoEeSLVrU2ifxtpw" target="_SQd91CcoEeSLVrU2ifxtpw" source="_SQd90ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9xScoEeSLVrU2ifxtpw" target="_SQd91icoEeSLVrU2ifxtpw" source="_SQd91CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd9xicoEeSLVrU2ifxtpw" target="_SQd9zycoEeSLVrU2ifxtpw" source="_SQd91ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9xycoEeSLVrU2ifxtpw" target="_SQd92icoEeSLVrU2ifxtpw" source="_SQd91CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9yCcoEeSLVrU2ifxtpw" target="_SQd94ScoEeSLVrU2ifxtpw" source="_SQd93ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9yScoEeSLVrU2ifxtpw" target="_SQd97ScoEeSLVrU2ifxtpw" source="_SQd95CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9yicoEeSLVrU2ifxtpw" target="_SQd98ycoEeSLVrU2ifxtpw" source="_SQd96CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd9yycoEeSLVrU2ifxtpw" target="_SQd99ycoEeSLVrU2ifxtpw" source="_SQd99icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9zCcoEeSLVrU2ifxtpw" target="_SQd99ycoEeSLVrU2ifxtpw" source="_SQd98CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd9zScoEeSLVrU2ifxtpw" target="_SQd91ScoEeSLVrU2ifxtpw" source="_SQd99ycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd9zicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd9zycoEeSLVrU2ifxtpw" name="Body" incoming="_SQd9xicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd90CcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd90ScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd9xCcoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd90icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd90ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd91CcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd9xCcoEeSLVrU2ifxtpw" outgoing="_SQd9wScoEeSLVrU2ifxtpw _SQd9xScoEeSLVrU2ifxtpw _SQd9xycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQd91ScoEeSLVrU2ifxtpw" name="Call(InActiveMonitor$initialization$1)" incoming="_SQd9zScoEeSLVrU2ifxtpw" outgoing="_SQd9xicoEeSLVrU2ifxtpw" operation="_SQd-QicoEeSLVrU2ifxtpw">
              <target xmi:id="_SQd91icoEeSLVrU2ifxtpw" name="Call(InActiveMonitor$initialization$1).target" incoming="_SQd9xScoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd91ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd92CcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd92ScoEeSLVrU2ifxtpw" name="Read(InActiveMonitor$initializationFlag$1)" structuralFeature="_SQd9uicoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd92icoEeSLVrU2ifxtpw" name="Read(InActiveMonitor$initializationFlag$1).object" incoming="_SQd9xycoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd92ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd93CcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd93ScoEeSLVrU2ifxtpw" name="Read(InActiveMonitor$initializationFlag$1).result" outgoing="_SQd9yCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd93icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd93ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd94CcoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd94ScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd9yCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd94icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd94ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd95CcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd9yScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd95ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd95icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd95ycoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd96CcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd9yicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd96ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd96icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd96ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd97CcoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd97ScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd9yScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd97icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd97ycoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd98CcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd9zCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd98ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd98icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd98ycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd9yicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd99CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd99ScoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd99icoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd9yycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd99ycoEeSLVrU2ifxtpw" name="Decision(Test(InActiveMonitor$initializationFlag$1))" incoming="_SQd9yycoEeSLVrU2ifxtpw _SQd9zCcoEeSLVrU2ifxtpw" outgoing="_SQd9zScoEeSLVrU2ifxtpw" decisionInputFlow="_SQd9zCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQd9wicoEeSLVrU2ifxtpw" name="Return" incoming="_SQd9wScoEeSLVrU2ifxtpw" parameter="_SQd9vicoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd9-CcoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQd-RycoEeSLVrU2ifxtpw" node="_SQd9-ScoEeSLVrU2ifxtpw" group="_SQd9-ScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd9-ScoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd9-icoEeSLVrU2ifxtpw" name="InActiveMonitor$initialization$1" specification="_SQd-QicoEeSLVrU2ifxtpw" node="_SQd9-ycoEeSLVrU2ifxtpw" group="_SQd9-ycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd9-ycoEeSLVrU2ifxtpw" name="Body(InActiveMonitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9_CcoEeSLVrU2ifxtpw" target="_SQd-CycoEeSLVrU2ifxtpw" source="_SQd-CCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9_ScoEeSLVrU2ifxtpw" target="_SQd-DycoEeSLVrU2ifxtpw" source="_SQd-CycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9_icoEeSLVrU2ifxtpw" target="_SQd-GicoEeSLVrU2ifxtpw" source="_SQd-CycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd9_ycoEeSLVrU2ifxtpw" target="_SQd-JCcoEeSLVrU2ifxtpw" source="_SQd-CycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-ACcoEeSLVrU2ifxtpw" target="_SQd-KycoEeSLVrU2ifxtpw" source="_SQd-JycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-AScoEeSLVrU2ifxtpw" target="_SQd-NycoEeSLVrU2ifxtpw" source="_SQd-LicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-AicoEeSLVrU2ifxtpw" target="_SQd-PScoEeSLVrU2ifxtpw" source="_SQd-MicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-AycoEeSLVrU2ifxtpw" target="_SQd-QScoEeSLVrU2ifxtpw" source="_SQd-QCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-BCcoEeSLVrU2ifxtpw" target="_SQd-QScoEeSLVrU2ifxtpw" source="_SQd-OicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-BScoEeSLVrU2ifxtpw" target="_SQd-DCcoEeSLVrU2ifxtpw" source="_SQd-QScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd-BicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd-BycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd-CCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd9_CcoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-CScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-CicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd-CycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd9_CcoEeSLVrU2ifxtpw" outgoing="_SQd9_ScoEeSLVrU2ifxtpw _SQd9_icoEeSLVrU2ifxtpw _SQd9_ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-DCcoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQd-BScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-DScoEeSLVrU2ifxtpw" target="_SQd-EicoEeSLVrU2ifxtpw" source="_SQd-DicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQd-DicoEeSLVrU2ifxtpw" name="Call(Monitor$initialization$1)" outgoing="_SQd-DScoEeSLVrU2ifxtpw" operation="_SQd9sicoEeSLVrU2ifxtpw">
                <target xmi:id="_SQd-DycoEeSLVrU2ifxtpw" name="Call(Monitor$initialization$1).target" incoming="_SQd9_ScoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-ECcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-EScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-EicoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQd-DScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-EycoEeSLVrU2ifxtpw" target="_SQd-ICcoEeSLVrU2ifxtpw" source="_SQd-FScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd-FCcoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQd-FScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQd-EycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-FicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-FycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQd-GCcoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQd-GScoEeSLVrU2ifxtpw" name="Write(InActiveMonitor$initializationFlag$1)" structuralFeature="_SQd9uicoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQd-GicoEeSLVrU2ifxtpw" name="Write(InActiveMonitor$initializationFlag$1).object" incoming="_SQd9_icoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-GycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-HCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQd-HScoEeSLVrU2ifxtpw" name="Write(InActiveMonitor$initializationFlag$1).result" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-HicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-HycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQd-ICcoEeSLVrU2ifxtpw" name="Write(InActiveMonitor$initializationFlag$1).value" incoming="_SQd-EycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-IScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-IicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd-IycoEeSLVrU2ifxtpw" name="Read(InActiveMonitor$initializationFlag$1)" structuralFeature="_SQd9uicoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd-JCcoEeSLVrU2ifxtpw" name="Read(InActiveMonitor$initializationFlag$1).object" incoming="_SQd9_ycoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-JScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-JicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd-JycoEeSLVrU2ifxtpw" name="Read(InActiveMonitor$initializationFlag$1).result" outgoing="_SQd-ACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-KCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-KScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd-KicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd-KycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd-ACcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-LCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-LScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd-LicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd-AScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-LycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-MCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd-MScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd-MicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd-AicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-MycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-NCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd-NScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd-NicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd-NycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd-AScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-OCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-OScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd-OicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd-BCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-OycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-PCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd-PScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd-AicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-PicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-PycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd-QCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd-AycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd-QScoEeSLVrU2ifxtpw" name="Decision(Test(InActiveMonitor$initializationFlag$1))" incoming="_SQd-AycoEeSLVrU2ifxtpw _SQd-BCcoEeSLVrU2ifxtpw" outgoing="_SQd-BScoEeSLVrU2ifxtpw" decisionInputFlow="_SQd-BCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQd-QicoEeSLVrU2ifxtpw" name="InActiveMonitor$initialization$1" visibility="protected" method="_SQd9-icoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQd-QycoEeSLVrU2ifxtpw" name="InActiveMonitor" visibility="package" method="_SQd9vScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd-RCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQd9uCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-RScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-RicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQd-RycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQd9-CcoEeSLVrU2ifxtpw" redefinedOperation="_SQd9tycoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQd-SCcoEeSLVrU2ifxtpw" name="ActiveMonitor" visibility="package" classifierBehavior="_SQd-UCcoEeSLVrU2ifxtpw" isActive="true">
        <generalization xmi:id="_SQd-SScoEeSLVrU2ifxtpw" general="_SQd9LycoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQd-SicoEeSLVrU2ifxtpw" name="ActiveMonitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-SycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-TCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SQd-TScoEeSLVrU2ifxtpw" name="n" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-TicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-TycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd-UCcoEeSLVrU2ifxtpw" name="ActiveMonitor$classifierBehavior$1" visibility="private" isActive="true" node="_SQd-UScoEeSLVrU2ifxtpw" group="_SQd-UScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd-UScoEeSLVrU2ifxtpw" name="Body(ActiveMonitor$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-UicoEeSLVrU2ifxtpw" target="_SQd-eycoEeSLVrU2ifxtpw" source="_SQd-UycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-UycoEeSLVrU2ifxtpw" name="ExpressionStatement@41bcc781" outgoing="_SQd-UicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-VCcoEeSLVrU2ifxtpw" target="_SQd-XycoEeSLVrU2ifxtpw" source="_SQd-WycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-VScoEeSLVrU2ifxtpw" target="_SQd-aCcoEeSLVrU2ifxtpw" source="_SQd-ZScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-VicoEeSLVrU2ifxtpw" target="_SQd-bCcoEeSLVrU2ifxtpw" source="_SQd-YicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-VycoEeSLVrU2ifxtpw" target="_SQd-ZScoEeSLVrU2ifxtpw" source="_SQd-dycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-WCcoEeSLVrU2ifxtpw" target="_SQd-WScoEeSLVrU2ifxtpw" source="_SQd-dScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-WScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@6b315901)" incoming="_SQd-WCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd-WicoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_SQd-WycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd-VCcoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-XCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-XScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SQd-XicoEeSLVrU2ifxtpw" name="Clear(n)" structuralFeature="_SQd-TScoEeSLVrU2ifxtpw">
                <object xmi:id="_SQd-XycoEeSLVrU2ifxtpw" name="Clear(n).object" incoming="_SQd-VCcoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-YCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-YScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SQd-YicoEeSLVrU2ifxtpw" name="Clear(n).result" outgoing="_SQd-VicoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-YycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-ZCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SQd-ZScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@6b315901)" incoming="_SQd-VycoEeSLVrU2ifxtpw" outgoing="_SQd-VScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-ZicoEeSLVrU2ifxtpw" name="WriteAll(ActiveMonitor::n)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-ZycoEeSLVrU2ifxtpw" target="_SQd-cicoEeSLVrU2ifxtpw" source="_SQd-aCcoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SQd-aCcoEeSLVrU2ifxtpw" name="WriteAll(ActiveMonitor::n).input(ActiveMonitor::n)" incoming="_SQd-VScoEeSLVrU2ifxtpw" outgoing="_SQd-ZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-aScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-aicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQd-aycoEeSLVrU2ifxtpw" name="Write(n)" structuralFeature="_SQd-TScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQd-bCcoEeSLVrU2ifxtpw" name="Write(n).object" incoming="_SQd-VicoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-bScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-bicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQd-bycoEeSLVrU2ifxtpw" name="Write(n).result" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-cCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-cScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQd-cicoEeSLVrU2ifxtpw" name="Write(n).value" incoming="_SQd-ZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-cycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-dCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-dScoEeSLVrU2ifxtpw" name="RightHandSide@5d9e36b7" outgoing="_SQd-WCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd-dicoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SQd-dycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SQd-VycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-eCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-eScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SQd-eicoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-eycoEeSLVrU2ifxtpw" name="ExpressionStatement@650e3c66" incoming="_SQd-UicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-fCcoEeSLVrU2ifxtpw" target="_SQd-hCcoEeSLVrU2ifxtpw" source="_SQd-hycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-fScoEeSLVrU2ifxtpw" target="_SQd-ficoEeSLVrU2ifxtpw" source="_SQd-hScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SQd-ficoEeSLVrU2ifxtpw" name="Collect(SendSignal(Continue))" incoming="_SQd-fScoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SQd-hCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-fycoEeSLVrU2ifxtpw" target="_SQd-gScoEeSLVrU2ifxtpw" source="_SQd-hCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:SendSignalAction" xmi:id="_SQd-gCcoEeSLVrU2ifxtpw" name="SendSignal(Continue)" signal="_SQfMyicoEeSLVrU2ifxtpw">
                  <target xmi:id="_SQd-gScoEeSLVrU2ifxtpw" name="SendSignal(Continue).target" incoming="_SQd-fycoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-gicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-gycoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SQd-hCcoEeSLVrU2ifxtpw" name="Collect(SendSignal(Continue)).inputElement" incoming="_SQd-fCcoEeSLVrU2ifxtpw" outgoing="_SQd-fycoEeSLVrU2ifxtpw" regionAsInput="_SQd-ficoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-hScoEeSLVrU2ifxtpw" name="Feature(ReadExtent(TestRunner).result)" outgoing="_SQd-fScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_SQd-hicoEeSLVrU2ifxtpw" name="ReadExtent(TestRunner)" classifier="_SQenxycoEeSLVrU2ifxtpw">
                  <result xmi:id="_SQd-hycoEeSLVrU2ifxtpw" name="ReadExtent(TestRunner).result" outgoing="_SQd-fCcoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-iCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-iScoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                </node>
              </node>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd-iicoEeSLVrU2ifxtpw" name="ActiveMonitor$method$1" specification="_SQd_IycoEeSLVrU2ifxtpw" node="_SQd-jycoEeSLVrU2ifxtpw _SQd-kCcoEeSLVrU2ifxtpw" group="_SQd-kCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd-iycoEeSLVrU2ifxtpw" name="" type="_SQd-SCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-jCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-jScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-jicoEeSLVrU2ifxtpw" target="_SQd-jycoEeSLVrU2ifxtpw" source="_SQd-oScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQd-kCcoEeSLVrU2ifxtpw" name="Body(ActiveMonitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-kScoEeSLVrU2ifxtpw" target="_SQd-oScoEeSLVrU2ifxtpw" source="_SQd-nicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-kicoEeSLVrU2ifxtpw" target="_SQd-oycoEeSLVrU2ifxtpw" source="_SQd-oScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-kycoEeSLVrU2ifxtpw" target="_SQd-nCcoEeSLVrU2ifxtpw" source="_SQd-oicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-lCcoEeSLVrU2ifxtpw" target="_SQd-pycoEeSLVrU2ifxtpw" source="_SQd-oScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-lScoEeSLVrU2ifxtpw" target="_SQd-ricoEeSLVrU2ifxtpw" source="_SQd-qicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-licoEeSLVrU2ifxtpw" target="_SQd-uicoEeSLVrU2ifxtpw" source="_SQd-sScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-lycoEeSLVrU2ifxtpw" target="_SQd-wCcoEeSLVrU2ifxtpw" source="_SQd-tScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-mCcoEeSLVrU2ifxtpw" target="_SQd-xCcoEeSLVrU2ifxtpw" source="_SQd-wycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-mScoEeSLVrU2ifxtpw" target="_SQd-xCcoEeSLVrU2ifxtpw" source="_SQd-vScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-micoEeSLVrU2ifxtpw" target="_SQd-oicoEeSLVrU2ifxtpw" source="_SQd-xCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd-mycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-nCcoEeSLVrU2ifxtpw" name="Body" incoming="_SQd-kycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd-nScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd-nicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd-kScoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-nycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-oCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd-oScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd-kScoEeSLVrU2ifxtpw" outgoing="_SQd-jicoEeSLVrU2ifxtpw _SQd-kicoEeSLVrU2ifxtpw _SQd-lCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQd-oicoEeSLVrU2ifxtpw" name="Call(ActiveMonitor$initialization$1)" incoming="_SQd-micoEeSLVrU2ifxtpw" outgoing="_SQd-kycoEeSLVrU2ifxtpw" operation="_SQd_IicoEeSLVrU2ifxtpw">
              <target xmi:id="_SQd-oycoEeSLVrU2ifxtpw" name="Call(ActiveMonitor$initialization$1).target" incoming="_SQd-kicoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-pCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-pScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd-picoEeSLVrU2ifxtpw" name="Read(ActiveMonitor$initializationFlag$1)" structuralFeature="_SQd-SicoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd-pycoEeSLVrU2ifxtpw" name="Read(ActiveMonitor$initializationFlag$1).object" incoming="_SQd-lCcoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-qCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-qScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd-qicoEeSLVrU2ifxtpw" name="Read(ActiveMonitor$initializationFlag$1).result" outgoing="_SQd-lScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-qycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-rCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd-rScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd-ricoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd-lScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-rycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-sCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd-sScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd-licoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-sicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-sycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd-tCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd-tScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd-lycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-ticoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-tycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd-uCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd-uScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd-uicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd-licoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-uycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-vCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd-vScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd-mScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-vicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-vycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd-wCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd-lycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-wScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-wicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd-wycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd-mCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd-xCcoEeSLVrU2ifxtpw" name="Decision(Test(ActiveMonitor$initializationFlag$1))" incoming="_SQd-mCcoEeSLVrU2ifxtpw _SQd-mScoEeSLVrU2ifxtpw" outgoing="_SQd-micoEeSLVrU2ifxtpw" decisionInputFlow="_SQd-mScoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQd-jycoEeSLVrU2ifxtpw" name="Return" incoming="_SQd-jicoEeSLVrU2ifxtpw" parameter="_SQd-iycoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd-xScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQd_JycoEeSLVrU2ifxtpw" node="_SQd-xicoEeSLVrU2ifxtpw" group="_SQd-xicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd-xicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd-xycoEeSLVrU2ifxtpw" name="ActiveMonitor$initialization$1" specification="_SQd_IicoEeSLVrU2ifxtpw" node="_SQd-yCcoEeSLVrU2ifxtpw" group="_SQd-yCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd-yCcoEeSLVrU2ifxtpw" name="Body(ActiveMonitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-yScoEeSLVrU2ifxtpw" target="_SQd-2ScoEeSLVrU2ifxtpw" source="_SQd-1icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-yicoEeSLVrU2ifxtpw" target="_SQd-3icoEeSLVrU2ifxtpw" source="_SQd-2ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-yycoEeSLVrU2ifxtpw" target="_SQd-6ScoEeSLVrU2ifxtpw" source="_SQd-2ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-zCcoEeSLVrU2ifxtpw" target="_SQd--icoEeSLVrU2ifxtpw" source="_SQd-2ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-zScoEeSLVrU2ifxtpw" target="_SQd_BCcoEeSLVrU2ifxtpw" source="_SQd-2ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-zicoEeSLVrU2ifxtpw" target="_SQd_CycoEeSLVrU2ifxtpw" source="_SQd_BycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-zycoEeSLVrU2ifxtpw" target="_SQd_FycoEeSLVrU2ifxtpw" source="_SQd_DicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-0CcoEeSLVrU2ifxtpw" target="_SQd_HScoEeSLVrU2ifxtpw" source="_SQd_EicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-0ScoEeSLVrU2ifxtpw" target="_SQd_IScoEeSLVrU2ifxtpw" source="_SQd_ICcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-0icoEeSLVrU2ifxtpw" target="_SQd_IScoEeSLVrU2ifxtpw" source="_SQd_GicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-0ycoEeSLVrU2ifxtpw" target="_SQd-2icoEeSLVrU2ifxtpw" source="_SQd_IScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd-1CcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd-1ScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd-1icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd-yScoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-1ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-2CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd-2ScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd-yScoEeSLVrU2ifxtpw" outgoing="_SQd-yicoEeSLVrU2ifxtpw _SQd-yycoEeSLVrU2ifxtpw _SQd-zCcoEeSLVrU2ifxtpw _SQd-zScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-2icoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQd-0ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-2ycoEeSLVrU2ifxtpw" target="_SQd-4ScoEeSLVrU2ifxtpw" source="_SQd-3ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQd-3CcoEeSLVrU2ifxtpw" target="_SQd-8icoEeSLVrU2ifxtpw" source="_SQd-4ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQd-3ScoEeSLVrU2ifxtpw" name="Call(Monitor$initialization$1)" outgoing="_SQd-2ycoEeSLVrU2ifxtpw" operation="_SQd9sicoEeSLVrU2ifxtpw">
                <target xmi:id="_SQd-3icoEeSLVrU2ifxtpw" name="Call(Monitor$initialization$1).target" incoming="_SQd-yicoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-3ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-4CcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-4ScoEeSLVrU2ifxtpw" name="Initialize(n)" incoming="_SQd-2ycoEeSLVrU2ifxtpw" outgoing="_SQd-3CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-4icoEeSLVrU2ifxtpw" target="_SQd-7ycoEeSLVrU2ifxtpw" source="_SQd-5CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd-4ycoEeSLVrU2ifxtpw" name="Value(0)">
                  <result xmi:id="_SQd-5CcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd-4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-5ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-5icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SQd-5ycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQd-6CcoEeSLVrU2ifxtpw" name="Write(n)" structuralFeature="_SQd-TScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQd-6ScoEeSLVrU2ifxtpw" name="Write(n).object" incoming="_SQd-yycoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-6icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-6ycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQd-7CcoEeSLVrU2ifxtpw" name="Write(n).result" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-7ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-7icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQd-7ycoEeSLVrU2ifxtpw" name="Write(n).value" incoming="_SQd-4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-8CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-8ScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd-8icoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQd-3CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd-8ycoEeSLVrU2ifxtpw" target="_SQd_ACcoEeSLVrU2ifxtpw" source="_SQd-9ScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd-9CcoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQd-9ScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQd-8ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-9icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-9ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQd--CcoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQd--ScoEeSLVrU2ifxtpw" name="Write(ActiveMonitor$initializationFlag$1)" structuralFeature="_SQd-SicoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQd--icoEeSLVrU2ifxtpw" name="Write(ActiveMonitor$initializationFlag$1).object" incoming="_SQd-zCcoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd--ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-_CcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQd-_ScoEeSLVrU2ifxtpw" name="Write(ActiveMonitor$initializationFlag$1).result" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd-_icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd-_ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQd_ACcoEeSLVrU2ifxtpw" name="Write(ActiveMonitor$initializationFlag$1).value" incoming="_SQd-8ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_AScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_AicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd_AycoEeSLVrU2ifxtpw" name="Read(ActiveMonitor$initializationFlag$1)" structuralFeature="_SQd-SicoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd_BCcoEeSLVrU2ifxtpw" name="Read(ActiveMonitor$initializationFlag$1).object" incoming="_SQd-zScoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_BScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_BicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd_BycoEeSLVrU2ifxtpw" name="Read(ActiveMonitor$initializationFlag$1).result" outgoing="_SQd-zicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_CCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_CScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd_CicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd_CycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd-zicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_DCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_DScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd_DicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd-zycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_DycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_ECcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd_EScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd_EicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd-0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_EycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_FCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd_FScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd_FicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd_FycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd-zycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_GCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_GScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd_GicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd-0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_GycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_HCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd_HScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd-0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_HicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_HycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd_ICcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd-0ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd_IScoEeSLVrU2ifxtpw" name="Decision(Test(ActiveMonitor$initializationFlag$1))" incoming="_SQd-0ScoEeSLVrU2ifxtpw _SQd-0icoEeSLVrU2ifxtpw" outgoing="_SQd-0ycoEeSLVrU2ifxtpw" decisionInputFlow="_SQd-0icoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQd_IicoEeSLVrU2ifxtpw" name="ActiveMonitor$initialization$1" visibility="protected" method="_SQd-xycoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQd_IycoEeSLVrU2ifxtpw" name="ActiveMonitor" visibility="package" method="_SQd-iicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd_JCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQd-SCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_JScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_JicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQd_JycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQd-xScoEeSLVrU2ifxtpw" redefinedOperation="_SQd9tycoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQd_KCcoEeSLVrU2ifxtpw" name="Employee" visibility="package">
        <ownedAttribute xmi:id="_SQd_KScoEeSLVrU2ifxtpw" name="Employee$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_KicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_KycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd_LCcoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQd_rCcoEeSLVrU2ifxtpw" node="_SQd_LScoEeSLVrU2ifxtpw" group="_SQd_LScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd_LScoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd_LicoEeSLVrU2ifxtpw" name="Employee$method$1" specification="_SQd_rScoEeSLVrU2ifxtpw" node="_SQd_MycoEeSLVrU2ifxtpw _SQd_NCcoEeSLVrU2ifxtpw" group="_SQd_NCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd_LycoEeSLVrU2ifxtpw" name="" type="_SQd_KCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_MCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_MScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_MicoEeSLVrU2ifxtpw" target="_SQd_MycoEeSLVrU2ifxtpw" source="_SQd_RScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQd_NCcoEeSLVrU2ifxtpw" name="Body(Employee$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_NScoEeSLVrU2ifxtpw" target="_SQd_RScoEeSLVrU2ifxtpw" source="_SQd_QicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_NicoEeSLVrU2ifxtpw" target="_SQd_RycoEeSLVrU2ifxtpw" source="_SQd_RScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd_NycoEeSLVrU2ifxtpw" target="_SQd_QCcoEeSLVrU2ifxtpw" source="_SQd_RicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_OCcoEeSLVrU2ifxtpw" target="_SQd_SycoEeSLVrU2ifxtpw" source="_SQd_RScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_OScoEeSLVrU2ifxtpw" target="_SQd_UicoEeSLVrU2ifxtpw" source="_SQd_TicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_OicoEeSLVrU2ifxtpw" target="_SQd_XicoEeSLVrU2ifxtpw" source="_SQd_VScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_OycoEeSLVrU2ifxtpw" target="_SQd_ZCcoEeSLVrU2ifxtpw" source="_SQd_WScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd_PCcoEeSLVrU2ifxtpw" target="_SQd_aCcoEeSLVrU2ifxtpw" source="_SQd_ZycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_PScoEeSLVrU2ifxtpw" target="_SQd_aCcoEeSLVrU2ifxtpw" source="_SQd_YScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd_PicoEeSLVrU2ifxtpw" target="_SQd_RicoEeSLVrU2ifxtpw" source="_SQd_aCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd_PycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd_QCcoEeSLVrU2ifxtpw" name="Body" incoming="_SQd_NycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd_QScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd_QicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd_NScoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_QycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_RCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd_RScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd_NScoEeSLVrU2ifxtpw" outgoing="_SQd_MicoEeSLVrU2ifxtpw _SQd_NicoEeSLVrU2ifxtpw _SQd_OCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQd_RicoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1)" incoming="_SQd_PicoEeSLVrU2ifxtpw" outgoing="_SQd_NycoEeSLVrU2ifxtpw" operation="_SQd_qycoEeSLVrU2ifxtpw">
              <target xmi:id="_SQd_RycoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1).target" incoming="_SQd_NicoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_SCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_SScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd_SicoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1)" structuralFeature="_SQd_KScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd_SycoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1).object" incoming="_SQd_OCcoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_TCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_TScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd_TicoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1).result" outgoing="_SQd_OScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_TycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_UCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd_UScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd_UicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd_OScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_UycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_VCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd_VScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd_OicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_VicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_VycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd_WCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd_WScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd_OycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_WicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_WycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd_XCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd_XScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd_XicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd_OicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_XycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_YCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd_YScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd_PScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_YicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_YycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd_ZCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd_OycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_ZScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_ZicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd_ZycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd_PCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd_aCcoEeSLVrU2ifxtpw" name="Decision(Test(Employee$initializationFlag$1))" incoming="_SQd_PCcoEeSLVrU2ifxtpw _SQd_PScoEeSLVrU2ifxtpw" outgoing="_SQd_PicoEeSLVrU2ifxtpw" decisionInputFlow="_SQd_PScoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQd_MycoEeSLVrU2ifxtpw" name="Return" incoming="_SQd_MicoEeSLVrU2ifxtpw" parameter="_SQd_LycoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd_aScoEeSLVrU2ifxtpw" name="Employee$initialization$1" specification="_SQd_qycoEeSLVrU2ifxtpw" node="_SQd_aicoEeSLVrU2ifxtpw" group="_SQd_aicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd_aicoEeSLVrU2ifxtpw" name="Body(Employee$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_aycoEeSLVrU2ifxtpw" target="_SQd_eScoEeSLVrU2ifxtpw" source="_SQd_dicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_bCcoEeSLVrU2ifxtpw" target="_SQd_gycoEeSLVrU2ifxtpw" source="_SQd_eScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_bScoEeSLVrU2ifxtpw" target="_SQd_jScoEeSLVrU2ifxtpw" source="_SQd_eScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_bicoEeSLVrU2ifxtpw" target="_SQd_lCcoEeSLVrU2ifxtpw" source="_SQd_kCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_bycoEeSLVrU2ifxtpw" target="_SQd_oCcoEeSLVrU2ifxtpw" source="_SQd_lycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_cCcoEeSLVrU2ifxtpw" target="_SQd_picoEeSLVrU2ifxtpw" source="_SQd_mycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd_cScoEeSLVrU2ifxtpw" target="_SQd_qicoEeSLVrU2ifxtpw" source="_SQd_qScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_cicoEeSLVrU2ifxtpw" target="_SQd_qicoEeSLVrU2ifxtpw" source="_SQd_oycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd_cycoEeSLVrU2ifxtpw" target="_SQd_eicoEeSLVrU2ifxtpw" source="_SQd_qicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd_dCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd_dScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd_dicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd_aycoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_dycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_eCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd_eScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd_aycoEeSLVrU2ifxtpw" outgoing="_SQd_bCcoEeSLVrU2ifxtpw _SQd_bScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd_eicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQd_cycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd_eycoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_fCcoEeSLVrU2ifxtpw" target="_SQd_iScoEeSLVrU2ifxtpw" source="_SQd_ficoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd_fScoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQd_ficoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQd_fCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_fycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_gCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQd_gScoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQd_gicoEeSLVrU2ifxtpw" name="Write(Employee$initializationFlag$1)" structuralFeature="_SQd_KScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQd_gycoEeSLVrU2ifxtpw" name="Write(Employee$initializationFlag$1).object" incoming="_SQd_bCcoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_hCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_hScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQd_hicoEeSLVrU2ifxtpw" name="Write(Employee$initializationFlag$1).result" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_hycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_iCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQd_iScoEeSLVrU2ifxtpw" name="Write(Employee$initializationFlag$1).value" incoming="_SQd_fCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_iicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_iycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd_jCcoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1)" structuralFeature="_SQd_KScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd_jScoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1).object" incoming="_SQd_bScoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_jicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_jycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd_kCcoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1).result" outgoing="_SQd_bicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_kScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_kicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd_kycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd_lCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd_bicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_lScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_licoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd_lycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd_bycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_mCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_mScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd_micoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd_mycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd_cCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_nCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_nScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd_nicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd_nycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd_oCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd_bycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_oScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_oicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd_oycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd_cicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_pCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_pScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd_picoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd_cCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_pycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_qCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd_qScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd_cScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd_qicoEeSLVrU2ifxtpw" name="Decision(Test(Employee$initializationFlag$1))" incoming="_SQd_cScoEeSLVrU2ifxtpw _SQd_cicoEeSLVrU2ifxtpw" outgoing="_SQd_cycoEeSLVrU2ifxtpw" decisionInputFlow="_SQd_cicoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQd_qycoEeSLVrU2ifxtpw" name="Employee$initialization$1" visibility="protected" method="_SQd_aScoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQd_rCcoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQd_LCcoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQd_rScoEeSLVrU2ifxtpw" name="Employee" visibility="package" method="_SQd_LicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd_ricoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQd_KCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_rycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_sCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQd_sScoEeSLVrU2ifxtpw" name="Administrator" visibility="package">
        <generalization xmi:id="_SQd_sicoEeSLVrU2ifxtpw" general="_SQd_KCcoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQd_sycoEeSLVrU2ifxtpw" name="Administrator$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_tCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_tScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd_ticoEeSLVrU2ifxtpw" name="Administrator$method$1" specification="_SQej2ScoEeSLVrU2ifxtpw" node="_SQd_uycoEeSLVrU2ifxtpw _SQd_vCcoEeSLVrU2ifxtpw" group="_SQd_vCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQd_tycoEeSLVrU2ifxtpw" name="" type="_SQd_sScoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_uCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_uScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_uicoEeSLVrU2ifxtpw" target="_SQd_uycoEeSLVrU2ifxtpw" source="_SQd_zScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQd_vCcoEeSLVrU2ifxtpw" name="Body(Administrator$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_vScoEeSLVrU2ifxtpw" target="_SQd_zScoEeSLVrU2ifxtpw" source="_SQd_yicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_vicoEeSLVrU2ifxtpw" target="_SQd_zycoEeSLVrU2ifxtpw" source="_SQd_zScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd_vycoEeSLVrU2ifxtpw" target="_SQd_yCcoEeSLVrU2ifxtpw" source="_SQd_zicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_wCcoEeSLVrU2ifxtpw" target="_SQd_0ycoEeSLVrU2ifxtpw" source="_SQd_zScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_wScoEeSLVrU2ifxtpw" target="_SQd_2icoEeSLVrU2ifxtpw" source="_SQd_1icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_wicoEeSLVrU2ifxtpw" target="_SQd_5icoEeSLVrU2ifxtpw" source="_SQd_3ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_wycoEeSLVrU2ifxtpw" target="_SQd_7CcoEeSLVrU2ifxtpw" source="_SQd_4ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd_xCcoEeSLVrU2ifxtpw" target="_SQd_8CcoEeSLVrU2ifxtpw" source="_SQd_7ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQd_xScoEeSLVrU2ifxtpw" target="_SQd_8CcoEeSLVrU2ifxtpw" source="_SQd_6ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQd_xicoEeSLVrU2ifxtpw" target="_SQd_zicoEeSLVrU2ifxtpw" source="_SQd_8CcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQd_xycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQd_yCcoEeSLVrU2ifxtpw" name="Body" incoming="_SQd_vycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQd_yScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQd_yicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQd_vScoEeSLVrU2ifxtpw" type="_SQd_sScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_yycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_zCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQd_zScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQd_vScoEeSLVrU2ifxtpw" outgoing="_SQd_uicoEeSLVrU2ifxtpw _SQd_vicoEeSLVrU2ifxtpw _SQd_wCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQd_zicoEeSLVrU2ifxtpw" name="Call(Administrator$initialization$1)" incoming="_SQd_xicoEeSLVrU2ifxtpw" outgoing="_SQd_vycoEeSLVrU2ifxtpw" operation="_SQej2CcoEeSLVrU2ifxtpw">
              <target xmi:id="_SQd_zycoEeSLVrU2ifxtpw" name="Call(Administrator$initialization$1).target" incoming="_SQd_vicoEeSLVrU2ifxtpw" type="_SQd_sScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_0CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_0ScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQd_0icoEeSLVrU2ifxtpw" name="Read(Administrator$initializationFlag$1)" structuralFeature="_SQd_sycoEeSLVrU2ifxtpw">
              <object xmi:id="_SQd_0ycoEeSLVrU2ifxtpw" name="Read(Administrator$initializationFlag$1).object" incoming="_SQd_wCcoEeSLVrU2ifxtpw" type="_SQd_sScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_1CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_1ScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQd_1icoEeSLVrU2ifxtpw" name="Read(Administrator$initializationFlag$1).result" outgoing="_SQd_wScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_1ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_2CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQd_2ScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQd_2icoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQd_wScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_2ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_3CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQd_3ScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQd_wicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_3icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_3ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQd_4CcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQd_4ScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQd_wycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_4icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_4ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQd_5CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQd_5ScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQd_5icoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQd_wicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_5ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_6CcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQd_6ScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQd_xScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_6icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_6ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQd_7CcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQd_wycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQd_7ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQd_7icoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQd_7ycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQd_xCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQd_8CcoEeSLVrU2ifxtpw" name="Decision(Test(Administrator$initializationFlag$1))" incoming="_SQd_xCcoEeSLVrU2ifxtpw _SQd_xScoEeSLVrU2ifxtpw" outgoing="_SQd_xicoEeSLVrU2ifxtpw" decisionInputFlow="_SQd_xScoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQd_uycoEeSLVrU2ifxtpw" name="Return" incoming="_SQd_uicoEeSLVrU2ifxtpw" parameter="_SQd_tycoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQd_8ScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQej3ScoEeSLVrU2ifxtpw" node="_SQd_8icoEeSLVrU2ifxtpw" group="_SQd_8icoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQd_8icoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQejkCcoEeSLVrU2ifxtpw" name="Administrator$initialization$1" specification="_SQej2CcoEeSLVrU2ifxtpw" node="_SQejkScoEeSLVrU2ifxtpw" group="_SQejkScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQejkScoEeSLVrU2ifxtpw" name="Body(Administrator$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejkicoEeSLVrU2ifxtpw" target="_SQejoScoEeSLVrU2ifxtpw" source="_SQejnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejkycoEeSLVrU2ifxtpw" target="_SQejpScoEeSLVrU2ifxtpw" source="_SQejoScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejlCcoEeSLVrU2ifxtpw" target="_SQejsCcoEeSLVrU2ifxtpw" source="_SQejoScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejlScoEeSLVrU2ifxtpw" target="_SQejuicoEeSLVrU2ifxtpw" source="_SQejoScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejlicoEeSLVrU2ifxtpw" target="_SQejwScoEeSLVrU2ifxtpw" source="_SQejvScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejlycoEeSLVrU2ifxtpw" target="_SQejzScoEeSLVrU2ifxtpw" source="_SQejxCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejmCcoEeSLVrU2ifxtpw" target="_SQej0ycoEeSLVrU2ifxtpw" source="_SQejyCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQejmScoEeSLVrU2ifxtpw" target="_SQej1ycoEeSLVrU2ifxtpw" source="_SQej1icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejmicoEeSLVrU2ifxtpw" target="_SQej1ycoEeSLVrU2ifxtpw" source="_SQej0CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQejmycoEeSLVrU2ifxtpw" target="_SQejoicoEeSLVrU2ifxtpw" source="_SQej1ycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQejnCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQejnScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQejnicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQejkicoEeSLVrU2ifxtpw" type="_SQd_sScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejnycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejoCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQejoScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQejkicoEeSLVrU2ifxtpw" outgoing="_SQejkycoEeSLVrU2ifxtpw _SQejlCcoEeSLVrU2ifxtpw _SQejlScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQejoicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQejmycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQejoycoEeSLVrU2ifxtpw" target="_SQejqCcoEeSLVrU2ifxtpw" source="_SQejpCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQejpCcoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1)" outgoing="_SQejoycoEeSLVrU2ifxtpw" operation="_SQd_qycoEeSLVrU2ifxtpw">
                <target xmi:id="_SQejpScoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1).target" incoming="_SQejkycoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejpicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejpycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQejqCcoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQejoycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQejqScoEeSLVrU2ifxtpw" target="_SQejticoEeSLVrU2ifxtpw" source="_SQejqycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQejqicoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQejqycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQejqScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejrCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejrScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQejricoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQejrycoEeSLVrU2ifxtpw" name="Write(Administrator$initializationFlag$1)" structuralFeature="_SQd_sycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQejsCcoEeSLVrU2ifxtpw" name="Write(Administrator$initializationFlag$1).object" incoming="_SQejlCcoEeSLVrU2ifxtpw" type="_SQd_sScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejsScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejsicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQejsycoEeSLVrU2ifxtpw" name="Write(Administrator$initializationFlag$1).result" type="_SQd_sScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejtCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejtScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQejticoEeSLVrU2ifxtpw" name="Write(Administrator$initializationFlag$1).value" incoming="_SQejqScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejtycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejuCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQejuScoEeSLVrU2ifxtpw" name="Read(Administrator$initializationFlag$1)" structuralFeature="_SQd_sycoEeSLVrU2ifxtpw">
              <object xmi:id="_SQejuicoEeSLVrU2ifxtpw" name="Read(Administrator$initializationFlag$1).object" incoming="_SQejlScoEeSLVrU2ifxtpw" type="_SQd_sScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejuycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejvCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQejvScoEeSLVrU2ifxtpw" name="Read(Administrator$initializationFlag$1).result" outgoing="_SQejlicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejvicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejvycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQejwCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQejwScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQejlicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejwicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejwycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQejxCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQejlycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejxScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejxicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQejxycoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQejyCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQejmCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejyScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejyicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQejyycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQejzCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQejzScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQejlycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQejzicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQejzycoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQej0CcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQejmicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQej0ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQej0icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQej0ycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQejmCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQej1CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQej1ScoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQej1icoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQejmScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQej1ycoEeSLVrU2ifxtpw" name="Decision(Test(Administrator$initializationFlag$1))" incoming="_SQejmScoEeSLVrU2ifxtpw _SQejmicoEeSLVrU2ifxtpw" outgoing="_SQejmycoEeSLVrU2ifxtpw" decisionInputFlow="_SQejmicoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQej2CcoEeSLVrU2ifxtpw" name="Administrator$initialization$1" visibility="protected" method="_SQejkCcoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQej2ScoEeSLVrU2ifxtpw" name="Administrator" visibility="package" method="_SQd_ticoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQej2icoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQd_sScoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQej2ycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQej3CcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQej3ScoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQd_8ScoEeSLVrU2ifxtpw" redefinedOperation="_SQd_rCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQej3icoEeSLVrU2ifxtpw" name="Staff" visibility="package">
        <generalization xmi:id="_SQej3ycoEeSLVrU2ifxtpw" general="_SQd_KCcoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQej4CcoEeSLVrU2ifxtpw" name="Staff$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQej4ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQej4icoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQej4ycoEeSLVrU2ifxtpw" name="Staff$method$1" specification="_SQekaScoEeSLVrU2ifxtpw" node="_SQej6CcoEeSLVrU2ifxtpw _SQej6ScoEeSLVrU2ifxtpw" group="_SQej6ScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQej5CcoEeSLVrU2ifxtpw" name="" type="_SQej3icoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQej5ScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQej5icoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQej5ycoEeSLVrU2ifxtpw" target="_SQej6CcoEeSLVrU2ifxtpw" source="_SQej-icoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQej6ScoEeSLVrU2ifxtpw" name="Body(Staff$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQej6icoEeSLVrU2ifxtpw" target="_SQej-icoEeSLVrU2ifxtpw" source="_SQej9ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQej6ycoEeSLVrU2ifxtpw" target="_SQej_CcoEeSLVrU2ifxtpw" source="_SQej-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQej7CcoEeSLVrU2ifxtpw" target="_SQej9ScoEeSLVrU2ifxtpw" source="_SQej-ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQej7ScoEeSLVrU2ifxtpw" target="_SQekACcoEeSLVrU2ifxtpw" source="_SQej-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQej7icoEeSLVrU2ifxtpw" target="_SQekBycoEeSLVrU2ifxtpw" source="_SQekAycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQej7ycoEeSLVrU2ifxtpw" target="_SQekEycoEeSLVrU2ifxtpw" source="_SQekCicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQej8CcoEeSLVrU2ifxtpw" target="_SQekGScoEeSLVrU2ifxtpw" source="_SQekDicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQej8ScoEeSLVrU2ifxtpw" target="_SQekHScoEeSLVrU2ifxtpw" source="_SQekHCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQej8icoEeSLVrU2ifxtpw" target="_SQekHScoEeSLVrU2ifxtpw" source="_SQekFicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQej8ycoEeSLVrU2ifxtpw" target="_SQej-ycoEeSLVrU2ifxtpw" source="_SQekHScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQej9CcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQej9ScoEeSLVrU2ifxtpw" name="Body" incoming="_SQej7CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQej9icoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQej9ycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQej6icoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQej-CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQej-ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQej-icoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQej6icoEeSLVrU2ifxtpw" outgoing="_SQej5ycoEeSLVrU2ifxtpw _SQej6ycoEeSLVrU2ifxtpw _SQej7ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQej-ycoEeSLVrU2ifxtpw" name="Call(Staff$initialization$1)" incoming="_SQej8ycoEeSLVrU2ifxtpw" outgoing="_SQej7CcoEeSLVrU2ifxtpw" operation="_SQekaCcoEeSLVrU2ifxtpw">
              <target xmi:id="_SQej_CcoEeSLVrU2ifxtpw" name="Call(Staff$initialization$1).target" incoming="_SQej6ycoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQej_ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQej_icoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQej_ycoEeSLVrU2ifxtpw" name="Read(Staff$initializationFlag$1)" structuralFeature="_SQej4CcoEeSLVrU2ifxtpw">
              <object xmi:id="_SQekACcoEeSLVrU2ifxtpw" name="Read(Staff$initializationFlag$1).object" incoming="_SQej7ScoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekAScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekAicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQekAycoEeSLVrU2ifxtpw" name="Read(Staff$initializationFlag$1).result" outgoing="_SQej7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekBCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekBScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQekBicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQekBycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQej7icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekCCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekCScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQekCicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQej7ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekCycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekDCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQekDScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQekDicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQej8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekDycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekECcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQekEScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQekEicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQekEycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQej7ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekFCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekFScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQekFicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQej8icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekFycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekGCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQekGScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQej8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekGicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekGycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQekHCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQej8ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQekHScoEeSLVrU2ifxtpw" name="Decision(Test(Staff$initializationFlag$1))" incoming="_SQej8ScoEeSLVrU2ifxtpw _SQej8icoEeSLVrU2ifxtpw" outgoing="_SQej8ycoEeSLVrU2ifxtpw" decisionInputFlow="_SQej8icoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQej6CcoEeSLVrU2ifxtpw" name="Return" incoming="_SQej5ycoEeSLVrU2ifxtpw" parameter="_SQej5CcoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQekHicoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQekbScoEeSLVrU2ifxtpw" node="_SQekHycoEeSLVrU2ifxtpw" group="_SQekHycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQekHycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQekICcoEeSLVrU2ifxtpw" name="Staff$initialization$1" specification="_SQekaCcoEeSLVrU2ifxtpw" node="_SQekIScoEeSLVrU2ifxtpw" group="_SQekIScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQekIScoEeSLVrU2ifxtpw" name="Body(Staff$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekIicoEeSLVrU2ifxtpw" target="_SQekMScoEeSLVrU2ifxtpw" source="_SQekLicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekIycoEeSLVrU2ifxtpw" target="_SQekNScoEeSLVrU2ifxtpw" source="_SQekMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekJCcoEeSLVrU2ifxtpw" target="_SQekQCcoEeSLVrU2ifxtpw" source="_SQekMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekJScoEeSLVrU2ifxtpw" target="_SQekSicoEeSLVrU2ifxtpw" source="_SQekMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekJicoEeSLVrU2ifxtpw" target="_SQekUScoEeSLVrU2ifxtpw" source="_SQekTScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekJycoEeSLVrU2ifxtpw" target="_SQekXScoEeSLVrU2ifxtpw" source="_SQekVCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekKCcoEeSLVrU2ifxtpw" target="_SQekYycoEeSLVrU2ifxtpw" source="_SQekWCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQekKScoEeSLVrU2ifxtpw" target="_SQekZycoEeSLVrU2ifxtpw" source="_SQekZicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekKicoEeSLVrU2ifxtpw" target="_SQekZycoEeSLVrU2ifxtpw" source="_SQekYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQekKycoEeSLVrU2ifxtpw" target="_SQekMicoEeSLVrU2ifxtpw" source="_SQekZycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQekLCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQekLScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQekLicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQekIicoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekLycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekMCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQekMScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQekIicoEeSLVrU2ifxtpw" outgoing="_SQekIycoEeSLVrU2ifxtpw _SQekJCcoEeSLVrU2ifxtpw _SQekJScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQekMicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQekKycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQekMycoEeSLVrU2ifxtpw" target="_SQekOCcoEeSLVrU2ifxtpw" source="_SQekNCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQekNCcoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1)" outgoing="_SQekMycoEeSLVrU2ifxtpw" operation="_SQd_qycoEeSLVrU2ifxtpw">
                <target xmi:id="_SQekNScoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1).target" incoming="_SQekIycoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekNicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekNycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQekOCcoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQekMycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekOScoEeSLVrU2ifxtpw" target="_SQekRicoEeSLVrU2ifxtpw" source="_SQekOycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQekOicoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQekOycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQekOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekPCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekPScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQekPicoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQekPycoEeSLVrU2ifxtpw" name="Write(Staff$initializationFlag$1)" structuralFeature="_SQej4CcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQekQCcoEeSLVrU2ifxtpw" name="Write(Staff$initializationFlag$1).object" incoming="_SQekJCcoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekQScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekQicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQekQycoEeSLVrU2ifxtpw" name="Write(Staff$initializationFlag$1).result" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekRCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekRScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQekRicoEeSLVrU2ifxtpw" name="Write(Staff$initializationFlag$1).value" incoming="_SQekOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekRycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekSCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQekSScoEeSLVrU2ifxtpw" name="Read(Staff$initializationFlag$1)" structuralFeature="_SQej4CcoEeSLVrU2ifxtpw">
              <object xmi:id="_SQekSicoEeSLVrU2ifxtpw" name="Read(Staff$initializationFlag$1).object" incoming="_SQekJScoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekSycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekTCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQekTScoEeSLVrU2ifxtpw" name="Read(Staff$initializationFlag$1).result" outgoing="_SQekJicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekTicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekTycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQekUCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQekUScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQekJicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekUicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekUycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQekVCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQekJycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekVScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekVicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQekVycoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQekWCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQekKCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekWScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekWicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQekWycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQekXCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQekXScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQekJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekXicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekXycoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQekYCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQekKicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekYScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekYicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQekYycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQekKCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekZScoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQekZicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQekKScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQekZycoEeSLVrU2ifxtpw" name="Decision(Test(Staff$initializationFlag$1))" incoming="_SQekKScoEeSLVrU2ifxtpw _SQekKicoEeSLVrU2ifxtpw" outgoing="_SQekKycoEeSLVrU2ifxtpw" decisionInputFlow="_SQekKicoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQekaCcoEeSLVrU2ifxtpw" name="Staff$initialization$1" visibility="protected" method="_SQekICcoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQekaScoEeSLVrU2ifxtpw" name="Staff" visibility="package" method="_SQej4ycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQekaicoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQej3icoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekaycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekbCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQekbScoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQekHicoEeSLVrU2ifxtpw" redefinedOperation="_SQd_rCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQekbicoEeSLVrU2ifxtpw" name="PartTime" visibility="package">
        <generalization xmi:id="_SQekbycoEeSLVrU2ifxtpw" general="_SQd_KCcoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQekcCcoEeSLVrU2ifxtpw" name="PartTime$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekcScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekcicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQekcycoEeSLVrU2ifxtpw" name="PartTime$method$1" specification="_SQek-ScoEeSLVrU2ifxtpw" node="_SQekeCcoEeSLVrU2ifxtpw _SQekeScoEeSLVrU2ifxtpw" group="_SQekeScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQekdCcoEeSLVrU2ifxtpw" name="" type="_SQekbicoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekdScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekdicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekdycoEeSLVrU2ifxtpw" target="_SQekeCcoEeSLVrU2ifxtpw" source="_SQekiicoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQekeScoEeSLVrU2ifxtpw" name="Body(PartTime$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekeicoEeSLVrU2ifxtpw" target="_SQekiicoEeSLVrU2ifxtpw" source="_SQekhycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekeycoEeSLVrU2ifxtpw" target="_SQekjCcoEeSLVrU2ifxtpw" source="_SQekiicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQekfCcoEeSLVrU2ifxtpw" target="_SQekhScoEeSLVrU2ifxtpw" source="_SQekiycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekfScoEeSLVrU2ifxtpw" target="_SQekkCcoEeSLVrU2ifxtpw" source="_SQekiicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekficoEeSLVrU2ifxtpw" target="_SQeklycoEeSLVrU2ifxtpw" source="_SQekkycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekfycoEeSLVrU2ifxtpw" target="_SQekoycoEeSLVrU2ifxtpw" source="_SQekmicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekgCcoEeSLVrU2ifxtpw" target="_SQekqScoEeSLVrU2ifxtpw" source="_SQeknicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQekgScoEeSLVrU2ifxtpw" target="_SQekrScoEeSLVrU2ifxtpw" source="_SQekrCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekgicoEeSLVrU2ifxtpw" target="_SQekrScoEeSLVrU2ifxtpw" source="_SQekpicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQekgycoEeSLVrU2ifxtpw" target="_SQekiycoEeSLVrU2ifxtpw" source="_SQekrScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQekhCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQekhScoEeSLVrU2ifxtpw" name="Body" incoming="_SQekfCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQekhicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQekhycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQekeicoEeSLVrU2ifxtpw" type="_SQekbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekiCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekiScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQekiicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQekeicoEeSLVrU2ifxtpw" outgoing="_SQekdycoEeSLVrU2ifxtpw _SQekeycoEeSLVrU2ifxtpw _SQekfScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQekiycoEeSLVrU2ifxtpw" name="Call(PartTime$initialization$1)" incoming="_SQekgycoEeSLVrU2ifxtpw" outgoing="_SQekfCcoEeSLVrU2ifxtpw" operation="_SQek-CcoEeSLVrU2ifxtpw">
              <target xmi:id="_SQekjCcoEeSLVrU2ifxtpw" name="Call(PartTime$initialization$1).target" incoming="_SQekeycoEeSLVrU2ifxtpw" type="_SQekbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekjScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekjicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQekjycoEeSLVrU2ifxtpw" name="Read(PartTime$initializationFlag$1)" structuralFeature="_SQekcCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SQekkCcoEeSLVrU2ifxtpw" name="Read(PartTime$initializationFlag$1).object" incoming="_SQekfScoEeSLVrU2ifxtpw" type="_SQekbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekkScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekkicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQekkycoEeSLVrU2ifxtpw" name="Read(PartTime$initializationFlag$1).result" outgoing="_SQekficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeklCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeklScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQeklicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQeklycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQekficoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekmCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekmScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQekmicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQekfycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekmycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeknCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQeknScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQeknicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQekgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeknycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekoCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQekoScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQekoicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQekoycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQekfycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekpCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekpScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQekpicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQekgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekpycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekqCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQekqScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQekgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekqycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQekrCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQekgScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQekrScoEeSLVrU2ifxtpw" name="Decision(Test(PartTime$initializationFlag$1))" incoming="_SQekgScoEeSLVrU2ifxtpw _SQekgicoEeSLVrU2ifxtpw" outgoing="_SQekgycoEeSLVrU2ifxtpw" decisionInputFlow="_SQekgicoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQekeCcoEeSLVrU2ifxtpw" name="Return" incoming="_SQekdycoEeSLVrU2ifxtpw" parameter="_SQekdCcoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQekricoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQek_ScoEeSLVrU2ifxtpw" node="_SQekrycoEeSLVrU2ifxtpw" group="_SQekrycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQekrycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQeksCcoEeSLVrU2ifxtpw" name="PartTime$initialization$1" specification="_SQek-CcoEeSLVrU2ifxtpw" node="_SQeksScoEeSLVrU2ifxtpw" group="_SQeksScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQeksScoEeSLVrU2ifxtpw" name="Body(PartTime$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeksicoEeSLVrU2ifxtpw" target="_SQekwScoEeSLVrU2ifxtpw" source="_SQekvicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeksycoEeSLVrU2ifxtpw" target="_SQekxScoEeSLVrU2ifxtpw" source="_SQekwScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQektCcoEeSLVrU2ifxtpw" target="_SQek0CcoEeSLVrU2ifxtpw" source="_SQekwScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQektScoEeSLVrU2ifxtpw" target="_SQek2icoEeSLVrU2ifxtpw" source="_SQekwScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekticoEeSLVrU2ifxtpw" target="_SQek4ScoEeSLVrU2ifxtpw" source="_SQek3ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQektycoEeSLVrU2ifxtpw" target="_SQek7ScoEeSLVrU2ifxtpw" source="_SQek5CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekuCcoEeSLVrU2ifxtpw" target="_SQek8ycoEeSLVrU2ifxtpw" source="_SQek6CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQekuScoEeSLVrU2ifxtpw" target="_SQek9ycoEeSLVrU2ifxtpw" source="_SQek9icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekuicoEeSLVrU2ifxtpw" target="_SQek9ycoEeSLVrU2ifxtpw" source="_SQek8CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQekuycoEeSLVrU2ifxtpw" target="_SQekwicoEeSLVrU2ifxtpw" source="_SQek9ycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQekvCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQekvScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQekvicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQeksicoEeSLVrU2ifxtpw" type="_SQekbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekvycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekwCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQekwScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQeksicoEeSLVrU2ifxtpw" outgoing="_SQeksycoEeSLVrU2ifxtpw _SQektCcoEeSLVrU2ifxtpw _SQektScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQekwicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQekuycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQekwycoEeSLVrU2ifxtpw" target="_SQekyCcoEeSLVrU2ifxtpw" source="_SQekxCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQekxCcoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1)" outgoing="_SQekwycoEeSLVrU2ifxtpw" operation="_SQd_qycoEeSLVrU2ifxtpw">
                <target xmi:id="_SQekxScoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1).target" incoming="_SQeksycoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekxicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekxycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQekyCcoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQekwycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQekyScoEeSLVrU2ifxtpw" target="_SQek1icoEeSLVrU2ifxtpw" source="_SQekyycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQekyicoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQekyycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQekyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQekzCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQekzScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQekzicoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQekzycoEeSLVrU2ifxtpw" name="Write(PartTime$initializationFlag$1)" structuralFeature="_SQekcCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQek0CcoEeSLVrU2ifxtpw" name="Write(PartTime$initializationFlag$1).object" incoming="_SQektCcoEeSLVrU2ifxtpw" type="_SQekbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek0ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek0icoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQek0ycoEeSLVrU2ifxtpw" name="Write(PartTime$initializationFlag$1).result" type="_SQekbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek1CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek1ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQek1icoEeSLVrU2ifxtpw" name="Write(PartTime$initializationFlag$1).value" incoming="_SQekyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek1ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek2CcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQek2ScoEeSLVrU2ifxtpw" name="Read(PartTime$initializationFlag$1)" structuralFeature="_SQekcCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SQek2icoEeSLVrU2ifxtpw" name="Read(PartTime$initializationFlag$1).object" incoming="_SQektScoEeSLVrU2ifxtpw" type="_SQekbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek2ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek3CcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQek3ScoEeSLVrU2ifxtpw" name="Read(PartTime$initializationFlag$1).result" outgoing="_SQekticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek3icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek3ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQek4CcoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQek4ScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQekticoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek4icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek4ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQek5CcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQektycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek5ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek5icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQek5ycoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQek6CcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQekuCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek6ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek6icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQek6ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQek7CcoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQek7ScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQektycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek7icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek7ycoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQek8CcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQekuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek8ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek8icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQek8ycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQekuCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek9CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek9ScoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQek9icoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQekuScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQek9ycoEeSLVrU2ifxtpw" name="Decision(Test(PartTime$initializationFlag$1))" incoming="_SQekuScoEeSLVrU2ifxtpw _SQekuicoEeSLVrU2ifxtpw" outgoing="_SQekuycoEeSLVrU2ifxtpw" decisionInputFlow="_SQekuicoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQek-CcoEeSLVrU2ifxtpw" name="PartTime$initialization$1" visibility="protected" method="_SQeksCcoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQek-ScoEeSLVrU2ifxtpw" name="PartTime" visibility="package" method="_SQekcycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQek-icoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQekbicoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQek-ycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQek_CcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQek_ScoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQekricoEeSLVrU2ifxtpw" redefinedOperation="_SQd_rCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQek_icoEeSLVrU2ifxtpw" name="Issue" visibility="package">
        <ownedAttribute xmi:id="_SQek_ycoEeSLVrU2ifxtpw" name="Issue$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelACcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelAScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQelAicoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQelgicoEeSLVrU2ifxtpw" node="_SQelAycoEeSLVrU2ifxtpw" group="_SQelAycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQelAycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQelBCcoEeSLVrU2ifxtpw" name="Issue$method$1" specification="_SQelgycoEeSLVrU2ifxtpw" node="_SQelCScoEeSLVrU2ifxtpw _SQelCicoEeSLVrU2ifxtpw" group="_SQelCicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQelBScoEeSLVrU2ifxtpw" name="" type="_SQek_icoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelBicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelBycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelCCcoEeSLVrU2ifxtpw" target="_SQelCScoEeSLVrU2ifxtpw" source="_SQelGycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQelCicoEeSLVrU2ifxtpw" name="Body(Issue$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelCycoEeSLVrU2ifxtpw" target="_SQelGycoEeSLVrU2ifxtpw" source="_SQelGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelDCcoEeSLVrU2ifxtpw" target="_SQelHScoEeSLVrU2ifxtpw" source="_SQelGycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQelDScoEeSLVrU2ifxtpw" target="_SQelFicoEeSLVrU2ifxtpw" source="_SQelHCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelDicoEeSLVrU2ifxtpw" target="_SQelIScoEeSLVrU2ifxtpw" source="_SQelGycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelDycoEeSLVrU2ifxtpw" target="_SQelKCcoEeSLVrU2ifxtpw" source="_SQelJCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelECcoEeSLVrU2ifxtpw" target="_SQelNCcoEeSLVrU2ifxtpw" source="_SQelKycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelEScoEeSLVrU2ifxtpw" target="_SQelOicoEeSLVrU2ifxtpw" source="_SQelLycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQelEicoEeSLVrU2ifxtpw" target="_SQelPicoEeSLVrU2ifxtpw" source="_SQelPScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelEycoEeSLVrU2ifxtpw" target="_SQelPicoEeSLVrU2ifxtpw" source="_SQelNycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQelFCcoEeSLVrU2ifxtpw" target="_SQelHCcoEeSLVrU2ifxtpw" source="_SQelPicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQelFScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQelFicoEeSLVrU2ifxtpw" name="Body" incoming="_SQelDScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQelFycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQelGCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQelCycoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelGScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelGicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQelGycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQelCycoEeSLVrU2ifxtpw" outgoing="_SQelCCcoEeSLVrU2ifxtpw _SQelDCcoEeSLVrU2ifxtpw _SQelDicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQelHCcoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1)" incoming="_SQelFCcoEeSLVrU2ifxtpw" outgoing="_SQelDScoEeSLVrU2ifxtpw" operation="_SQelgScoEeSLVrU2ifxtpw">
              <target xmi:id="_SQelHScoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1).target" incoming="_SQelDCcoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelHicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelHycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQelICcoEeSLVrU2ifxtpw" name="Read(Issue$initializationFlag$1)" structuralFeature="_SQek_ycoEeSLVrU2ifxtpw">
              <object xmi:id="_SQelIScoEeSLVrU2ifxtpw" name="Read(Issue$initializationFlag$1).object" incoming="_SQelDicoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelIicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelIycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQelJCcoEeSLVrU2ifxtpw" name="Read(Issue$initializationFlag$1).result" outgoing="_SQelDycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelJScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelJicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQelJycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQelKCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQelDycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelKScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelKicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQelKycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQelECcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelLCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelLScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQelLicoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQelLycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQelEScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelMCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelMScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQelMicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQelMycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQelNCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQelECcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelNScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelNicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQelNycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQelEycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelOCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelOScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQelOicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQelEScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelOycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelPCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQelPScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQelEicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQelPicoEeSLVrU2ifxtpw" name="Decision(Test(Issue$initializationFlag$1))" incoming="_SQelEicoEeSLVrU2ifxtpw _SQelEycoEeSLVrU2ifxtpw" outgoing="_SQelFCcoEeSLVrU2ifxtpw" decisionInputFlow="_SQelEycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQelCScoEeSLVrU2ifxtpw" name="Return" incoming="_SQelCCcoEeSLVrU2ifxtpw" parameter="_SQelBScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQelPycoEeSLVrU2ifxtpw" name="Issue$initialization$1" specification="_SQelgScoEeSLVrU2ifxtpw" node="_SQelQCcoEeSLVrU2ifxtpw" group="_SQelQCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQelQCcoEeSLVrU2ifxtpw" name="Body(Issue$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelQScoEeSLVrU2ifxtpw" target="_SQelTycoEeSLVrU2ifxtpw" source="_SQelTCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelQicoEeSLVrU2ifxtpw" target="_SQelWScoEeSLVrU2ifxtpw" source="_SQelTycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelQycoEeSLVrU2ifxtpw" target="_SQelYycoEeSLVrU2ifxtpw" source="_SQelTycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelRCcoEeSLVrU2ifxtpw" target="_SQelaicoEeSLVrU2ifxtpw" source="_SQelZicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelRScoEeSLVrU2ifxtpw" target="_SQeldicoEeSLVrU2ifxtpw" source="_SQelbScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelRicoEeSLVrU2ifxtpw" target="_SQelfCcoEeSLVrU2ifxtpw" source="_SQelcScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQelRycoEeSLVrU2ifxtpw" target="_SQelgCcoEeSLVrU2ifxtpw" source="_SQelfycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelSCcoEeSLVrU2ifxtpw" target="_SQelgCcoEeSLVrU2ifxtpw" source="_SQeleScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQelSScoEeSLVrU2ifxtpw" target="_SQelUCcoEeSLVrU2ifxtpw" source="_SQelgCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQelSicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQelSycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQelTCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQelQScoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelTScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelTicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQelTycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQelQScoEeSLVrU2ifxtpw" outgoing="_SQelQicoEeSLVrU2ifxtpw _SQelQycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQelUCcoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQelSScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQelUScoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelUicoEeSLVrU2ifxtpw" target="_SQelXycoEeSLVrU2ifxtpw" source="_SQelVCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQelUycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQelVCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQelUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelVScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelVicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQelVycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQelWCcoEeSLVrU2ifxtpw" name="Write(Issue$initializationFlag$1)" structuralFeature="_SQek_ycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQelWScoEeSLVrU2ifxtpw" name="Write(Issue$initializationFlag$1).object" incoming="_SQelQicoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelWicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelWycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQelXCcoEeSLVrU2ifxtpw" name="Write(Issue$initializationFlag$1).result" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelXScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelXicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQelXycoEeSLVrU2ifxtpw" name="Write(Issue$initializationFlag$1).value" incoming="_SQelUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelYCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelYScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQelYicoEeSLVrU2ifxtpw" name="Read(Issue$initializationFlag$1)" structuralFeature="_SQek_ycoEeSLVrU2ifxtpw">
              <object xmi:id="_SQelYycoEeSLVrU2ifxtpw" name="Read(Issue$initializationFlag$1).object" incoming="_SQelQycoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelZScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQelZicoEeSLVrU2ifxtpw" name="Read(Issue$initializationFlag$1).result" outgoing="_SQelRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelZycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelaCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQelaScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQelaicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQelRCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelaycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelbCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQelbScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQelRScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelbicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelbycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQelcCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQelcScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQelRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelcicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelcycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQeldCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQeldScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQeldicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQelRScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeldycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeleCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQeleScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQelSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeleicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeleycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQelfCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQelRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelfScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelficoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQelfycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQelRycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQelgCcoEeSLVrU2ifxtpw" name="Decision(Test(Issue$initializationFlag$1))" incoming="_SQelRycoEeSLVrU2ifxtpw _SQelSCcoEeSLVrU2ifxtpw" outgoing="_SQelSScoEeSLVrU2ifxtpw" decisionInputFlow="_SQelSCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQelgScoEeSLVrU2ifxtpw" name="Issue$initialization$1" visibility="protected" method="_SQelPycoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQelgicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQelAicoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQelgycoEeSLVrU2ifxtpw" name="Issue" visibility="package" method="_SQelBCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQelhCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQek_icoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelhScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelhicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQelhycoEeSLVrU2ifxtpw" name="Pending" visibility="package">
        <generalization xmi:id="_SQeliCcoEeSLVrU2ifxtpw" general="_SQek_icoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQeliScoEeSLVrU2ifxtpw" name="Pending$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeliicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeliycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQeljCcoEeSLVrU2ifxtpw" name="Pending$method$1" specification="_SQemEicoEeSLVrU2ifxtpw" node="_SQelkScoEeSLVrU2ifxtpw _SQelkicoEeSLVrU2ifxtpw" group="_SQelkicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQeljScoEeSLVrU2ifxtpw" name="" type="_SQelhycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeljicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeljycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelkCcoEeSLVrU2ifxtpw" target="_SQelkScoEeSLVrU2ifxtpw" source="_SQeloycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQelkicoEeSLVrU2ifxtpw" name="Body(Pending$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelkycoEeSLVrU2ifxtpw" target="_SQeloycoEeSLVrU2ifxtpw" source="_SQeloCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQellCcoEeSLVrU2ifxtpw" target="_SQelpScoEeSLVrU2ifxtpw" source="_SQeloycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQellScoEeSLVrU2ifxtpw" target="_SQelnicoEeSLVrU2ifxtpw" source="_SQelpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQellicoEeSLVrU2ifxtpw" target="_SQelqScoEeSLVrU2ifxtpw" source="_SQeloycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQellycoEeSLVrU2ifxtpw" target="_SQelsCcoEeSLVrU2ifxtpw" source="_SQelrCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelmCcoEeSLVrU2ifxtpw" target="_SQelvCcoEeSLVrU2ifxtpw" source="_SQelsycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelmScoEeSLVrU2ifxtpw" target="_SQelwicoEeSLVrU2ifxtpw" source="_SQeltycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQelmicoEeSLVrU2ifxtpw" target="_SQelxicoEeSLVrU2ifxtpw" source="_SQelxScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelmycoEeSLVrU2ifxtpw" target="_SQelxicoEeSLVrU2ifxtpw" source="_SQelvycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQelnCcoEeSLVrU2ifxtpw" target="_SQelpCcoEeSLVrU2ifxtpw" source="_SQelxicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQelnScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQelnicoEeSLVrU2ifxtpw" name="Body" incoming="_SQellScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQelnycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQeloCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQelkycoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeloScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeloicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQeloycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQelkycoEeSLVrU2ifxtpw" outgoing="_SQelkCcoEeSLVrU2ifxtpw _SQellCcoEeSLVrU2ifxtpw _SQellicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQelpCcoEeSLVrU2ifxtpw" name="Call(Pending$initialization$1)" incoming="_SQelnCcoEeSLVrU2ifxtpw" outgoing="_SQellScoEeSLVrU2ifxtpw" operation="_SQemEScoEeSLVrU2ifxtpw">
              <target xmi:id="_SQelpScoEeSLVrU2ifxtpw" name="Call(Pending$initialization$1).target" incoming="_SQellCcoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelpicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelpycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQelqCcoEeSLVrU2ifxtpw" name="Read(Pending$initializationFlag$1)" structuralFeature="_SQeliScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQelqScoEeSLVrU2ifxtpw" name="Read(Pending$initializationFlag$1).object" incoming="_SQellicoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelqycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQelrCcoEeSLVrU2ifxtpw" name="Read(Pending$initializationFlag$1).result" outgoing="_SQellycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelrScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelricoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQelrycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQelsCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQellycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelsScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelsicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQelsycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQelmCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeltCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeltScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQelticoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQeltycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQelmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeluCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeluScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQeluicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQeluycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQelvCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQelmCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelvScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelvicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQelvycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQelmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelwCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelwScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQelwicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQelmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQelwycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQelxCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQelxScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQelmicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQelxicoEeSLVrU2ifxtpw" name="Decision(Test(Pending$initializationFlag$1))" incoming="_SQelmicoEeSLVrU2ifxtpw _SQelmycoEeSLVrU2ifxtpw" outgoing="_SQelnCcoEeSLVrU2ifxtpw" decisionInputFlow="_SQelmycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQelkScoEeSLVrU2ifxtpw" name="Return" incoming="_SQelkCcoEeSLVrU2ifxtpw" parameter="_SQeljScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQelxycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQemFicoEeSLVrU2ifxtpw" node="_SQelyCcoEeSLVrU2ifxtpw" group="_SQelyCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQelyCcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQelyScoEeSLVrU2ifxtpw" name="Pending$initialization$1" specification="_SQemEScoEeSLVrU2ifxtpw" node="_SQelyicoEeSLVrU2ifxtpw" group="_SQelyicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQelyicoEeSLVrU2ifxtpw" name="Body(Pending$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelyycoEeSLVrU2ifxtpw" target="_SQel2icoEeSLVrU2ifxtpw" source="_SQel1ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelzCcoEeSLVrU2ifxtpw" target="_SQel3icoEeSLVrU2ifxtpw" source="_SQel2icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelzScoEeSLVrU2ifxtpw" target="_SQel6ScoEeSLVrU2ifxtpw" source="_SQel2icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelzicoEeSLVrU2ifxtpw" target="_SQel8ycoEeSLVrU2ifxtpw" source="_SQel2icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQelzycoEeSLVrU2ifxtpw" target="_SQel-icoEeSLVrU2ifxtpw" source="_SQel9icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQel0CcoEeSLVrU2ifxtpw" target="_SQemBicoEeSLVrU2ifxtpw" source="_SQel_ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQel0ScoEeSLVrU2ifxtpw" target="_SQemDCcoEeSLVrU2ifxtpw" source="_SQemAScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQel0icoEeSLVrU2ifxtpw" target="_SQemECcoEeSLVrU2ifxtpw" source="_SQemDycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQel0ycoEeSLVrU2ifxtpw" target="_SQemECcoEeSLVrU2ifxtpw" source="_SQemCScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQel1CcoEeSLVrU2ifxtpw" target="_SQel2ycoEeSLVrU2ifxtpw" source="_SQemECcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQel1ScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQel1icoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQel1ycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQelyycoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel2CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel2ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQel2icoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQelyycoEeSLVrU2ifxtpw" outgoing="_SQelzCcoEeSLVrU2ifxtpw _SQelzScoEeSLVrU2ifxtpw _SQelzicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQel2ycoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQel1CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQel3CcoEeSLVrU2ifxtpw" target="_SQel4ScoEeSLVrU2ifxtpw" source="_SQel3ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQel3ScoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1)" outgoing="_SQel3CcoEeSLVrU2ifxtpw" operation="_SQelgScoEeSLVrU2ifxtpw">
                <target xmi:id="_SQel3icoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1).target" incoming="_SQelzCcoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel3ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel4CcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQel4ScoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQel3CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQel4icoEeSLVrU2ifxtpw" target="_SQel7ycoEeSLVrU2ifxtpw" source="_SQel5CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQel4ycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQel5CcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQel4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel5ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel5icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQel5ycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQel6CcoEeSLVrU2ifxtpw" name="Write(Pending$initializationFlag$1)" structuralFeature="_SQeliScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQel6ScoEeSLVrU2ifxtpw" name="Write(Pending$initializationFlag$1).object" incoming="_SQelzScoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel6icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel6ycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQel7CcoEeSLVrU2ifxtpw" name="Write(Pending$initializationFlag$1).result" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel7ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel7icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQel7ycoEeSLVrU2ifxtpw" name="Write(Pending$initializationFlag$1).value" incoming="_SQel4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel8CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel8ScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQel8icoEeSLVrU2ifxtpw" name="Read(Pending$initializationFlag$1)" structuralFeature="_SQeliScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQel8ycoEeSLVrU2ifxtpw" name="Read(Pending$initializationFlag$1).object" incoming="_SQelzicoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel9CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel9ScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQel9icoEeSLVrU2ifxtpw" name="Read(Pending$initializationFlag$1).result" outgoing="_SQelzycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel9ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel-CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQel-ScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQel-icoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQelzycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel-ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel_CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQel_ScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQel0CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQel_icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQel_ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQemACcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQemAScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQel0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemAicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemAycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQemBCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQemBScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQemBicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQel0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemBycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemCCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQemCScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQel0ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemCicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemCycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQemDCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQel0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemDScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemDicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQemDycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQel0icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQemECcoEeSLVrU2ifxtpw" name="Decision(Test(Pending$initializationFlag$1))" incoming="_SQel0icoEeSLVrU2ifxtpw _SQel0ycoEeSLVrU2ifxtpw" outgoing="_SQel1CcoEeSLVrU2ifxtpw" decisionInputFlow="_SQel0ycoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQemEScoEeSLVrU2ifxtpw" name="Pending$initialization$1" visibility="protected" method="_SQelyScoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQemEicoEeSLVrU2ifxtpw" name="Pending" visibility="package" method="_SQeljCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQemEycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQelhycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemFCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemFScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQemFicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQelxycoEeSLVrU2ifxtpw" redefinedOperation="_SQelgicoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQemFycoEeSLVrU2ifxtpw" name="InProcess" visibility="package">
        <generalization xmi:id="_SQemGCcoEeSLVrU2ifxtpw" general="_SQek_icoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQemGScoEeSLVrU2ifxtpw" name="InProcess$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemGicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemGycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQemHCcoEeSLVrU2ifxtpw" name="InProcess$method$1" specification="_SQemoicoEeSLVrU2ifxtpw" node="_SQemIScoEeSLVrU2ifxtpw _SQemIicoEeSLVrU2ifxtpw" group="_SQemIicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQemHScoEeSLVrU2ifxtpw" name="" type="_SQemFycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemHicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemHycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemICcoEeSLVrU2ifxtpw" target="_SQemIScoEeSLVrU2ifxtpw" source="_SQemMycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQemIicoEeSLVrU2ifxtpw" name="Body(InProcess$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemIycoEeSLVrU2ifxtpw" target="_SQemMycoEeSLVrU2ifxtpw" source="_SQemMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemJCcoEeSLVrU2ifxtpw" target="_SQemNScoEeSLVrU2ifxtpw" source="_SQemMycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQemJScoEeSLVrU2ifxtpw" target="_SQemLicoEeSLVrU2ifxtpw" source="_SQemNCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemJicoEeSLVrU2ifxtpw" target="_SQemOScoEeSLVrU2ifxtpw" source="_SQemMycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemJycoEeSLVrU2ifxtpw" target="_SQemQCcoEeSLVrU2ifxtpw" source="_SQemPCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemKCcoEeSLVrU2ifxtpw" target="_SQemTCcoEeSLVrU2ifxtpw" source="_SQemQycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemKScoEeSLVrU2ifxtpw" target="_SQemUicoEeSLVrU2ifxtpw" source="_SQemRycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQemKicoEeSLVrU2ifxtpw" target="_SQemVicoEeSLVrU2ifxtpw" source="_SQemVScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemKycoEeSLVrU2ifxtpw" target="_SQemVicoEeSLVrU2ifxtpw" source="_SQemTycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQemLCcoEeSLVrU2ifxtpw" target="_SQemNCcoEeSLVrU2ifxtpw" source="_SQemVicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQemLScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQemLicoEeSLVrU2ifxtpw" name="Body" incoming="_SQemJScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQemLycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQemMCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQemIycoEeSLVrU2ifxtpw" type="_SQemFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemMScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemMicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQemMycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQemIycoEeSLVrU2ifxtpw" outgoing="_SQemICcoEeSLVrU2ifxtpw _SQemJCcoEeSLVrU2ifxtpw _SQemJicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQemNCcoEeSLVrU2ifxtpw" name="Call(InProcess$initialization$1)" incoming="_SQemLCcoEeSLVrU2ifxtpw" outgoing="_SQemJScoEeSLVrU2ifxtpw" operation="_SQemoScoEeSLVrU2ifxtpw">
              <target xmi:id="_SQemNScoEeSLVrU2ifxtpw" name="Call(InProcess$initialization$1).target" incoming="_SQemJCcoEeSLVrU2ifxtpw" type="_SQemFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemNicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemNycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQemOCcoEeSLVrU2ifxtpw" name="Read(InProcess$initializationFlag$1)" structuralFeature="_SQemGScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQemOScoEeSLVrU2ifxtpw" name="Read(InProcess$initializationFlag$1).object" incoming="_SQemJicoEeSLVrU2ifxtpw" type="_SQemFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemOicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemOycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQemPCcoEeSLVrU2ifxtpw" name="Read(InProcess$initializationFlag$1).result" outgoing="_SQemJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemPScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemPicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQemPycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQemQCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQemJycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemQScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemQicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQemQycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQemKCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemRCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemRScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQemRicoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQemRycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQemKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemSCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemSScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQemSicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQemSycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQemTCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQemKCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemTScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemTicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQemTycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQemKycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemUCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemUScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQemUicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQemKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemUycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemVCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQemVScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQemKicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQemVicoEeSLVrU2ifxtpw" name="Decision(Test(InProcess$initializationFlag$1))" incoming="_SQemKicoEeSLVrU2ifxtpw _SQemKycoEeSLVrU2ifxtpw" outgoing="_SQemLCcoEeSLVrU2ifxtpw" decisionInputFlow="_SQemKycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQemIScoEeSLVrU2ifxtpw" name="Return" incoming="_SQemICcoEeSLVrU2ifxtpw" parameter="_SQemHScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQemVycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQempicoEeSLVrU2ifxtpw" node="_SQemWCcoEeSLVrU2ifxtpw" group="_SQemWCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQemWCcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQemWScoEeSLVrU2ifxtpw" name="InProcess$initialization$1" specification="_SQemoScoEeSLVrU2ifxtpw" node="_SQemWicoEeSLVrU2ifxtpw" group="_SQemWicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQemWicoEeSLVrU2ifxtpw" name="Body(InProcess$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemWycoEeSLVrU2ifxtpw" target="_SQemaicoEeSLVrU2ifxtpw" source="_SQemZycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemXCcoEeSLVrU2ifxtpw" target="_SQembicoEeSLVrU2ifxtpw" source="_SQemaicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemXScoEeSLVrU2ifxtpw" target="_SQemeScoEeSLVrU2ifxtpw" source="_SQemaicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemXicoEeSLVrU2ifxtpw" target="_SQemgycoEeSLVrU2ifxtpw" source="_SQemaicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemXycoEeSLVrU2ifxtpw" target="_SQemiicoEeSLVrU2ifxtpw" source="_SQemhicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemYCcoEeSLVrU2ifxtpw" target="_SQemlicoEeSLVrU2ifxtpw" source="_SQemjScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemYScoEeSLVrU2ifxtpw" target="_SQemnCcoEeSLVrU2ifxtpw" source="_SQemkScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQemYicoEeSLVrU2ifxtpw" target="_SQemoCcoEeSLVrU2ifxtpw" source="_SQemnycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemYycoEeSLVrU2ifxtpw" target="_SQemoCcoEeSLVrU2ifxtpw" source="_SQemmScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQemZCcoEeSLVrU2ifxtpw" target="_SQemaycoEeSLVrU2ifxtpw" source="_SQemoCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQemZScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQemZicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQemZycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQemWycoEeSLVrU2ifxtpw" type="_SQemFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemaCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemaScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQemaicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQemWycoEeSLVrU2ifxtpw" outgoing="_SQemXCcoEeSLVrU2ifxtpw _SQemXScoEeSLVrU2ifxtpw _SQemXicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQemaycoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQemZCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQembCcoEeSLVrU2ifxtpw" target="_SQemcScoEeSLVrU2ifxtpw" source="_SQembScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQembScoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1)" outgoing="_SQembCcoEeSLVrU2ifxtpw" operation="_SQelgScoEeSLVrU2ifxtpw">
                <target xmi:id="_SQembicoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1).target" incoming="_SQemXCcoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQembycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemcCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQemcScoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQembCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemcicoEeSLVrU2ifxtpw" target="_SQemfycoEeSLVrU2ifxtpw" source="_SQemdCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQemcycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQemdCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQemcicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemdScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemdicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQemdycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQemeCcoEeSLVrU2ifxtpw" name="Write(InProcess$initializationFlag$1)" structuralFeature="_SQemGScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQemeScoEeSLVrU2ifxtpw" name="Write(InProcess$initializationFlag$1).object" incoming="_SQemXScoEeSLVrU2ifxtpw" type="_SQemFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemeicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemeycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQemfCcoEeSLVrU2ifxtpw" name="Write(InProcess$initializationFlag$1).result" type="_SQemFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemfScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemficoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQemfycoEeSLVrU2ifxtpw" name="Write(InProcess$initializationFlag$1).value" incoming="_SQemcicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemgCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemgScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQemgicoEeSLVrU2ifxtpw" name="Read(InProcess$initializationFlag$1)" structuralFeature="_SQemGScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQemgycoEeSLVrU2ifxtpw" name="Read(InProcess$initializationFlag$1).object" incoming="_SQemXicoEeSLVrU2ifxtpw" type="_SQemFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemhCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemhScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQemhicoEeSLVrU2ifxtpw" name="Read(InProcess$initializationFlag$1).result" outgoing="_SQemXycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemhycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemiCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQemiScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQemiicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQemXycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemiycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemjCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQemjScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQemYCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemjicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemjycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQemkCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQemkScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQemYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemkicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemkycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQemlCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQemlScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQemlicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQemYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemlycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemmCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQemmScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQemYycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemmicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemmycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQemnCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQemYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemnScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemnicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQemnycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQemYicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQemoCcoEeSLVrU2ifxtpw" name="Decision(Test(InProcess$initializationFlag$1))" incoming="_SQemYicoEeSLVrU2ifxtpw _SQemYycoEeSLVrU2ifxtpw" outgoing="_SQemZCcoEeSLVrU2ifxtpw" decisionInputFlow="_SQemYycoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQemoScoEeSLVrU2ifxtpw" name="InProcess$initialization$1" visibility="protected" method="_SQemWScoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQemoicoEeSLVrU2ifxtpw" name="InProcess" visibility="package" method="_SQemHCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQemoycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQemFycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQempCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQempScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQempicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQemVycoEeSLVrU2ifxtpw" redefinedOperation="_SQelgicoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQempycoEeSLVrU2ifxtpw" name="Overdue" visibility="package">
        <generalization xmi:id="_SQemqCcoEeSLVrU2ifxtpw" general="_SQek_icoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQemqScoEeSLVrU2ifxtpw" name="Overdue$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemqicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemqycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQemrCcoEeSLVrU2ifxtpw" name="Overdue$method$1" specification="_SQenMicoEeSLVrU2ifxtpw" node="_SQemsScoEeSLVrU2ifxtpw _SQemsicoEeSLVrU2ifxtpw" group="_SQemsicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQemrScoEeSLVrU2ifxtpw" name="" type="_SQempycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemricoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemrycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemsCcoEeSLVrU2ifxtpw" target="_SQemsScoEeSLVrU2ifxtpw" source="_SQemwycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQemsicoEeSLVrU2ifxtpw" name="Body(Overdue$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemsycoEeSLVrU2ifxtpw" target="_SQemwycoEeSLVrU2ifxtpw" source="_SQemwCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemtCcoEeSLVrU2ifxtpw" target="_SQemxScoEeSLVrU2ifxtpw" source="_SQemwycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQemtScoEeSLVrU2ifxtpw" target="_SQemvicoEeSLVrU2ifxtpw" source="_SQemxCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemticoEeSLVrU2ifxtpw" target="_SQemyScoEeSLVrU2ifxtpw" source="_SQemwycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemtycoEeSLVrU2ifxtpw" target="_SQem0CcoEeSLVrU2ifxtpw" source="_SQemzCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemuCcoEeSLVrU2ifxtpw" target="_SQem3CcoEeSLVrU2ifxtpw" source="_SQem0ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemuScoEeSLVrU2ifxtpw" target="_SQem4icoEeSLVrU2ifxtpw" source="_SQem1ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQemuicoEeSLVrU2ifxtpw" target="_SQem5icoEeSLVrU2ifxtpw" source="_SQem5ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQemuycoEeSLVrU2ifxtpw" target="_SQem5icoEeSLVrU2ifxtpw" source="_SQem3ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQemvCcoEeSLVrU2ifxtpw" target="_SQemxCcoEeSLVrU2ifxtpw" source="_SQem5icoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQemvScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQemvicoEeSLVrU2ifxtpw" name="Body" incoming="_SQemtScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQemvycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQemwCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQemsycoEeSLVrU2ifxtpw" type="_SQempycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemwScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemwicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQemwycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQemsycoEeSLVrU2ifxtpw" outgoing="_SQemsCcoEeSLVrU2ifxtpw _SQemtCcoEeSLVrU2ifxtpw _SQemticoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQemxCcoEeSLVrU2ifxtpw" name="Call(Overdue$initialization$1)" incoming="_SQemvCcoEeSLVrU2ifxtpw" outgoing="_SQemtScoEeSLVrU2ifxtpw" operation="_SQenMScoEeSLVrU2ifxtpw">
              <target xmi:id="_SQemxScoEeSLVrU2ifxtpw" name="Call(Overdue$initialization$1).target" incoming="_SQemtCcoEeSLVrU2ifxtpw" type="_SQempycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemxicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemxycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQemyCcoEeSLVrU2ifxtpw" name="Read(Overdue$initializationFlag$1)" structuralFeature="_SQemqScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQemyScoEeSLVrU2ifxtpw" name="Read(Overdue$initializationFlag$1).object" incoming="_SQemticoEeSLVrU2ifxtpw" type="_SQempycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemyicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemyycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQemzCcoEeSLVrU2ifxtpw" name="Read(Overdue$initializationFlag$1).result" outgoing="_SQemtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQemzScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQemzicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQemzycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQem0CcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQemtycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQem0ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQem0icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQem0ycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQemuCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQem1CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQem1ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQem1icoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQem1ycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQemuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQem2CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQem2ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQem2icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQem2ycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQem3CcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQemuCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQem3ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQem3icoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQem3ycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQemuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQem4CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQem4ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQem4icoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQemuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQem4ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQem5CcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQem5ScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQemuicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQem5icoEeSLVrU2ifxtpw" name="Decision(Test(Overdue$initializationFlag$1))" incoming="_SQemuicoEeSLVrU2ifxtpw _SQemuycoEeSLVrU2ifxtpw" outgoing="_SQemvCcoEeSLVrU2ifxtpw" decisionInputFlow="_SQemuycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQemsScoEeSLVrU2ifxtpw" name="Return" incoming="_SQemsCcoEeSLVrU2ifxtpw" parameter="_SQemrScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQem5ycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQenNicoEeSLVrU2ifxtpw" node="_SQem6CcoEeSLVrU2ifxtpw" group="_SQem6CcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQem6CcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQem6ScoEeSLVrU2ifxtpw" name="Overdue$initialization$1" specification="_SQenMScoEeSLVrU2ifxtpw" node="_SQem6icoEeSLVrU2ifxtpw" group="_SQem6icoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQem6icoEeSLVrU2ifxtpw" name="Body(Overdue$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQem6ycoEeSLVrU2ifxtpw" target="_SQem-icoEeSLVrU2ifxtpw" source="_SQem9ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQem7CcoEeSLVrU2ifxtpw" target="_SQem_icoEeSLVrU2ifxtpw" source="_SQem-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQem7ScoEeSLVrU2ifxtpw" target="_SQenCScoEeSLVrU2ifxtpw" source="_SQem-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQem7icoEeSLVrU2ifxtpw" target="_SQenEycoEeSLVrU2ifxtpw" source="_SQem-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQem7ycoEeSLVrU2ifxtpw" target="_SQenGicoEeSLVrU2ifxtpw" source="_SQenFicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQem8CcoEeSLVrU2ifxtpw" target="_SQenJicoEeSLVrU2ifxtpw" source="_SQenHScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQem8ScoEeSLVrU2ifxtpw" target="_SQenLCcoEeSLVrU2ifxtpw" source="_SQenIScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQem8icoEeSLVrU2ifxtpw" target="_SQenMCcoEeSLVrU2ifxtpw" source="_SQenLycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQem8ycoEeSLVrU2ifxtpw" target="_SQenMCcoEeSLVrU2ifxtpw" source="_SQenKScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQem9CcoEeSLVrU2ifxtpw" target="_SQem-ycoEeSLVrU2ifxtpw" source="_SQenMCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQem9ScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQem9icoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQem9ycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQem6ycoEeSLVrU2ifxtpw" type="_SQempycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQem-CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQem-ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQem-icoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQem6ycoEeSLVrU2ifxtpw" outgoing="_SQem7CcoEeSLVrU2ifxtpw _SQem7ScoEeSLVrU2ifxtpw _SQem7icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQem-ycoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQem9CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQem_CcoEeSLVrU2ifxtpw" target="_SQenAScoEeSLVrU2ifxtpw" source="_SQem_ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQem_ScoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1)" outgoing="_SQem_CcoEeSLVrU2ifxtpw" operation="_SQelgScoEeSLVrU2ifxtpw">
                <target xmi:id="_SQem_icoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1).target" incoming="_SQem7CcoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQem_ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenACcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQenAScoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQem_CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenAicoEeSLVrU2ifxtpw" target="_SQenDycoEeSLVrU2ifxtpw" source="_SQenBCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQenAycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQenBCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQenAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenBScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenBicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQenBycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQenCCcoEeSLVrU2ifxtpw" name="Write(Overdue$initializationFlag$1)" structuralFeature="_SQemqScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQenCScoEeSLVrU2ifxtpw" name="Write(Overdue$initializationFlag$1).object" incoming="_SQem7ScoEeSLVrU2ifxtpw" type="_SQempycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenCicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenCycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQenDCcoEeSLVrU2ifxtpw" name="Write(Overdue$initializationFlag$1).result" type="_SQempycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenDScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenDicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQenDycoEeSLVrU2ifxtpw" name="Write(Overdue$initializationFlag$1).value" incoming="_SQenAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenECcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenEScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQenEicoEeSLVrU2ifxtpw" name="Read(Overdue$initializationFlag$1)" structuralFeature="_SQemqScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQenEycoEeSLVrU2ifxtpw" name="Read(Overdue$initializationFlag$1).object" incoming="_SQem7icoEeSLVrU2ifxtpw" type="_SQempycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenFCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenFScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQenFicoEeSLVrU2ifxtpw" name="Read(Overdue$initializationFlag$1).result" outgoing="_SQem7ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenFycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenGCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQenGScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQenGicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQem7ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenGycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenHCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQenHScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQem8CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenHicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenHycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQenICcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQenIScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQem8ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenIicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenIycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQenJCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQenJScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQenJicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQem8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenJycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenKCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQenKScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQem8ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenKicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenKycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQenLCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQem8ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenLScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenLicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQenLycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQem8icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQenMCcoEeSLVrU2ifxtpw" name="Decision(Test(Overdue$initializationFlag$1))" incoming="_SQem8icoEeSLVrU2ifxtpw _SQem8ycoEeSLVrU2ifxtpw" outgoing="_SQem9CcoEeSLVrU2ifxtpw" decisionInputFlow="_SQem8ycoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQenMScoEeSLVrU2ifxtpw" name="Overdue$initialization$1" visibility="protected" method="_SQem6ScoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQenMicoEeSLVrU2ifxtpw" name="Overdue" visibility="package" method="_SQemrCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQenMycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQempycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenNCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenNScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQenNicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQem5ycoEeSLVrU2ifxtpw" redefinedOperation="_SQelgicoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQenNycoEeSLVrU2ifxtpw" name="Resolved" visibility="package">
        <generalization xmi:id="_SQenOCcoEeSLVrU2ifxtpw" general="_SQek_icoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SQenOScoEeSLVrU2ifxtpw" name="Resolved$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenOicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenOycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQenPCcoEeSLVrU2ifxtpw" name="Resolved$method$1" specification="_SQenwicoEeSLVrU2ifxtpw" node="_SQenQScoEeSLVrU2ifxtpw _SQenQicoEeSLVrU2ifxtpw" group="_SQenQicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQenPScoEeSLVrU2ifxtpw" name="" type="_SQenNycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenPicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenPycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenQCcoEeSLVrU2ifxtpw" target="_SQenQScoEeSLVrU2ifxtpw" source="_SQenUycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQenQicoEeSLVrU2ifxtpw" name="Body(Resolved$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenQycoEeSLVrU2ifxtpw" target="_SQenUycoEeSLVrU2ifxtpw" source="_SQenUCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenRCcoEeSLVrU2ifxtpw" target="_SQenVScoEeSLVrU2ifxtpw" source="_SQenUycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQenRScoEeSLVrU2ifxtpw" target="_SQenTicoEeSLVrU2ifxtpw" source="_SQenVCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenRicoEeSLVrU2ifxtpw" target="_SQenWScoEeSLVrU2ifxtpw" source="_SQenUycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenRycoEeSLVrU2ifxtpw" target="_SQenYCcoEeSLVrU2ifxtpw" source="_SQenXCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenSCcoEeSLVrU2ifxtpw" target="_SQenbCcoEeSLVrU2ifxtpw" source="_SQenYycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenSScoEeSLVrU2ifxtpw" target="_SQencicoEeSLVrU2ifxtpw" source="_SQenZycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQenSicoEeSLVrU2ifxtpw" target="_SQendicoEeSLVrU2ifxtpw" source="_SQendScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenSycoEeSLVrU2ifxtpw" target="_SQendicoEeSLVrU2ifxtpw" source="_SQenbycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQenTCcoEeSLVrU2ifxtpw" target="_SQenVCcoEeSLVrU2ifxtpw" source="_SQendicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQenTScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQenTicoEeSLVrU2ifxtpw" name="Body" incoming="_SQenRScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQenTycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQenUCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQenQycoEeSLVrU2ifxtpw" type="_SQenNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenUScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenUicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQenUycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQenQycoEeSLVrU2ifxtpw" outgoing="_SQenQCcoEeSLVrU2ifxtpw _SQenRCcoEeSLVrU2ifxtpw _SQenRicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQenVCcoEeSLVrU2ifxtpw" name="Call(Resolved$initialization$1)" incoming="_SQenTCcoEeSLVrU2ifxtpw" outgoing="_SQenRScoEeSLVrU2ifxtpw" operation="_SQenwScoEeSLVrU2ifxtpw">
              <target xmi:id="_SQenVScoEeSLVrU2ifxtpw" name="Call(Resolved$initialization$1).target" incoming="_SQenRCcoEeSLVrU2ifxtpw" type="_SQenNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenVicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenVycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQenWCcoEeSLVrU2ifxtpw" name="Read(Resolved$initializationFlag$1)" structuralFeature="_SQenOScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQenWScoEeSLVrU2ifxtpw" name="Read(Resolved$initializationFlag$1).object" incoming="_SQenRicoEeSLVrU2ifxtpw" type="_SQenNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenWicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenWycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQenXCcoEeSLVrU2ifxtpw" name="Read(Resolved$initializationFlag$1).result" outgoing="_SQenRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenXScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenXicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQenXycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQenYCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQenRycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenYScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenYicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQenYycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQenSCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenZScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQenZicoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQenZycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQenSScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenaCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenaScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQenaicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQenaycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQenbCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQenSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenbScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenbicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQenbycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQenSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQencCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQencScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQencicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQenSScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQencycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQendCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQendScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQenSicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQendicoEeSLVrU2ifxtpw" name="Decision(Test(Resolved$initializationFlag$1))" incoming="_SQenSicoEeSLVrU2ifxtpw _SQenSycoEeSLVrU2ifxtpw" outgoing="_SQenTCcoEeSLVrU2ifxtpw" decisionInputFlow="_SQenSycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQenQScoEeSLVrU2ifxtpw" name="Return" incoming="_SQenQCcoEeSLVrU2ifxtpw" parameter="_SQenPScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQendycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQenxicoEeSLVrU2ifxtpw" node="_SQeneCcoEeSLVrU2ifxtpw" group="_SQeneCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQeneCcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQeneScoEeSLVrU2ifxtpw" name="Resolved$initialization$1" specification="_SQenwScoEeSLVrU2ifxtpw" node="_SQeneicoEeSLVrU2ifxtpw" group="_SQeneicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQeneicoEeSLVrU2ifxtpw" name="Body(Resolved$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeneycoEeSLVrU2ifxtpw" target="_SQeniicoEeSLVrU2ifxtpw" source="_SQenhycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenfCcoEeSLVrU2ifxtpw" target="_SQenjicoEeSLVrU2ifxtpw" source="_SQeniicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenfScoEeSLVrU2ifxtpw" target="_SQenmScoEeSLVrU2ifxtpw" source="_SQeniicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenficoEeSLVrU2ifxtpw" target="_SQenoycoEeSLVrU2ifxtpw" source="_SQeniicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenfycoEeSLVrU2ifxtpw" target="_SQenqicoEeSLVrU2ifxtpw" source="_SQenpicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQengCcoEeSLVrU2ifxtpw" target="_SQenticoEeSLVrU2ifxtpw" source="_SQenrScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQengScoEeSLVrU2ifxtpw" target="_SQenvCcoEeSLVrU2ifxtpw" source="_SQensScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQengicoEeSLVrU2ifxtpw" target="_SQenwCcoEeSLVrU2ifxtpw" source="_SQenvycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQengycoEeSLVrU2ifxtpw" target="_SQenwCcoEeSLVrU2ifxtpw" source="_SQenuScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQenhCcoEeSLVrU2ifxtpw" target="_SQeniycoEeSLVrU2ifxtpw" source="_SQenwCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQenhScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQenhicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQenhycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQeneycoEeSLVrU2ifxtpw" type="_SQenNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeniCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeniScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQeniicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQeneycoEeSLVrU2ifxtpw" outgoing="_SQenfCcoEeSLVrU2ifxtpw _SQenfScoEeSLVrU2ifxtpw _SQenficoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQeniycoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQenhCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQenjCcoEeSLVrU2ifxtpw" target="_SQenkScoEeSLVrU2ifxtpw" source="_SQenjScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQenjScoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1)" outgoing="_SQenjCcoEeSLVrU2ifxtpw" operation="_SQelgScoEeSLVrU2ifxtpw">
                <target xmi:id="_SQenjicoEeSLVrU2ifxtpw" name="Call(Issue$initialization$1).target" incoming="_SQenfCcoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenjycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenkCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQenkScoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SQenjCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenkicoEeSLVrU2ifxtpw" target="_SQennycoEeSLVrU2ifxtpw" source="_SQenlCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQenkycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQenlCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQenkicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenlScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenlicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQenlycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQenmCcoEeSLVrU2ifxtpw" name="Write(Resolved$initializationFlag$1)" structuralFeature="_SQenOScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQenmScoEeSLVrU2ifxtpw" name="Write(Resolved$initializationFlag$1).object" incoming="_SQenfScoEeSLVrU2ifxtpw" type="_SQenNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenmicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenmycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQennCcoEeSLVrU2ifxtpw" name="Write(Resolved$initializationFlag$1).result" type="_SQenNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQennScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQennicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQennycoEeSLVrU2ifxtpw" name="Write(Resolved$initializationFlag$1).value" incoming="_SQenkicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenoCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenoScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQenoicoEeSLVrU2ifxtpw" name="Read(Resolved$initializationFlag$1)" structuralFeature="_SQenOScoEeSLVrU2ifxtpw">
              <object xmi:id="_SQenoycoEeSLVrU2ifxtpw" name="Read(Resolved$initializationFlag$1).object" incoming="_SQenficoEeSLVrU2ifxtpw" type="_SQenNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenpCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenpScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQenpicoEeSLVrU2ifxtpw" name="Read(Resolved$initializationFlag$1).result" outgoing="_SQenfycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenpycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenqCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQenqScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQenqicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQenfycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenqycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenrCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQenrScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQengCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenricoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenrycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQensCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQensScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQengScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQensicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQensycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQentCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQentScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQenticoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQengCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQentycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenuCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQenuScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQengycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenuicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenuycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQenvCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQengScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenvScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenvicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQenvycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQengicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQenwCcoEeSLVrU2ifxtpw" name="Decision(Test(Resolved$initializationFlag$1))" incoming="_SQengicoEeSLVrU2ifxtpw _SQengycoEeSLVrU2ifxtpw" outgoing="_SQenhCcoEeSLVrU2ifxtpw" decisionInputFlow="_SQengycoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQenwScoEeSLVrU2ifxtpw" name="Resolved$initialization$1" visibility="protected" method="_SQeneScoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQenwicoEeSLVrU2ifxtpw" name="Resolved" visibility="package" method="_SQenPCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQenwycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQenNycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenxCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenxScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQenxicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQendycoEeSLVrU2ifxtpw" redefinedOperation="_SQelgicoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SQenxycoEeSLVrU2ifxtpw" name="TestRunner" visibility="package" classifierBehavior="_SQenyycoEeSLVrU2ifxtpw" isActive="true">
        <ownedAttribute xmi:id="_SQenyCcoEeSLVrU2ifxtpw" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQenyScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQenyicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQenyycoEeSLVrU2ifxtpw" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_SQenzCcoEeSLVrU2ifxtpw" group="_SQenzCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQenzCcoEeSLVrU2ifxtpw" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQenzScoEeSLVrU2ifxtpw" target="_SQen7ycoEeSLVrU2ifxtpw" source="_SQen6icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQenzicoEeSLVrU2ifxtpw" target="_SQeoCCcoEeSLVrU2ifxtpw" source="_SQen7ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQenzycoEeSLVrU2ifxtpw" target="_SQeoHycoEeSLVrU2ifxtpw" source="_SQeoBScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen0CcoEeSLVrU2ifxtpw" target="_SQeoDScoEeSLVrU2ifxtpw" source="_SQeoCCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen0ScoEeSLVrU2ifxtpw" target="_SQeoNycoEeSLVrU2ifxtpw" source="_SQeoBScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen0icoEeSLVrU2ifxtpw" target="_SQeoJScoEeSLVrU2ifxtpw" source="_SQeoDScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen0ycoEeSLVrU2ifxtpw" target="_SQeoTycoEeSLVrU2ifxtpw" source="_SQeoBScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen1CcoEeSLVrU2ifxtpw" target="_SQeoPScoEeSLVrU2ifxtpw" source="_SQeoJScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen1ScoEeSLVrU2ifxtpw" target="_SQfKsicoEeSLVrU2ifxtpw" source="_SQeoBScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen1icoEeSLVrU2ifxtpw" target="_SQfKoCcoEeSLVrU2ifxtpw" source="_SQeoPScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen1ycoEeSLVrU2ifxtpw" target="_SQfKyicoEeSLVrU2ifxtpw" source="_SQeoBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen2CcoEeSLVrU2ifxtpw" target="_SQfKuCcoEeSLVrU2ifxtpw" source="_SQfKoCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen2ScoEeSLVrU2ifxtpw" target="_SQfK4icoEeSLVrU2ifxtpw" source="_SQeoBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen2icoEeSLVrU2ifxtpw" target="_SQfK0CcoEeSLVrU2ifxtpw" source="_SQfKuCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen2ycoEeSLVrU2ifxtpw" target="_SQfK-icoEeSLVrU2ifxtpw" source="_SQeoBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen3CcoEeSLVrU2ifxtpw" target="_SQfK6CcoEeSLVrU2ifxtpw" source="_SQfK0CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen3ScoEeSLVrU2ifxtpw" target="_SQfLKScoEeSLVrU2ifxtpw" source="_SQeoBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen3icoEeSLVrU2ifxtpw" target="_SQfLACcoEeSLVrU2ifxtpw" source="_SQfK6CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen3ycoEeSLVrU2ifxtpw" target="_SQfLSicoEeSLVrU2ifxtpw" source="_SQeoBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen4CcoEeSLVrU2ifxtpw" target="_SQfLOCcoEeSLVrU2ifxtpw" source="_SQfLACcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen4ScoEeSLVrU2ifxtpw" target="_SQfLYicoEeSLVrU2ifxtpw" source="_SQeoBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen4icoEeSLVrU2ifxtpw" target="_SQfLUCcoEeSLVrU2ifxtpw" source="_SQfLOCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen4ycoEeSLVrU2ifxtpw" target="_SQfLeicoEeSLVrU2ifxtpw" source="_SQeoBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen5CcoEeSLVrU2ifxtpw" target="_SQfLaCcoEeSLVrU2ifxtpw" source="_SQfLUCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen5ScoEeSLVrU2ifxtpw" target="_SQfLkicoEeSLVrU2ifxtpw" source="_SQeoBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen5icoEeSLVrU2ifxtpw" target="_SQfLgCcoEeSLVrU2ifxtpw" source="_SQfLaCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen5ycoEeSLVrU2ifxtpw" target="_SQfLqicoEeSLVrU2ifxtpw" source="_SQeoBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen6CcoEeSLVrU2ifxtpw" target="_SQfLmCcoEeSLVrU2ifxtpw" source="_SQfLgCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQen6ScoEeSLVrU2ifxtpw" target="_SQfLsCcoEeSLVrU2ifxtpw" source="_SQfLmCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQen6icoEeSLVrU2ifxtpw" name="AcceptStatement@44a0001" outgoing="_SQenzScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQen6ycoEeSLVrU2ifxtpw" target="_SQen7CcoEeSLVrU2ifxtpw" source="_SQen7icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SQen7CcoEeSLVrU2ifxtpw" name="Accept(Start)" incoming="_SQen6ycoEeSLVrU2ifxtpw">
                <trigger xmi:id="_SQen7ScoEeSLVrU2ifxtpw" event="_SQfMzScoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SQen7icoEeSLVrU2ifxtpw" name="Initial(Accept(Start))" outgoing="_SQen6ycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQen7ycoEeSLVrU2ifxtpw" name="ExpressionStatement@7ac74594" incoming="_SQenzScoEeSLVrU2ifxtpw" outgoing="_SQenzicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen8CcoEeSLVrU2ifxtpw" target="_SQeoBScoEeSLVrU2ifxtpw" source="_SQen9ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen8ScoEeSLVrU2ifxtpw" target="_SQeoBicoEeSLVrU2ifxtpw" source="_SQen-CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen8icoEeSLVrU2ifxtpw" target="_SQeoBycoEeSLVrU2ifxtpw" source="_SQen-ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQen8ycoEeSLVrU2ifxtpw" target="_SQen_icoEeSLVrU2ifxtpw" source="_SQeoAicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SQen9CcoEeSLVrU2ifxtpw" name="Call(test)" operation="_SQfMuicoEeSLVrU2ifxtpw">
                <result xmi:id="_SQen9ScoEeSLVrU2ifxtpw" name="Call(test).result(employee)" outgoing="_SQen8CcoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQen9icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQen9ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SQen-CcoEeSLVrU2ifxtpw" name="Call(test).result(monitor)" outgoing="_SQen8ScoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQen-ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQen-icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SQen-ycoEeSLVrU2ifxtpw" name="Call(test).result(issue)" outgoing="_SQen8icoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQen_CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQen_ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SQen_icoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_SQen8ycoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQen_ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoACcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SQeoAScoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_SQeoAicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQen8ycoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoAycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoBCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SQeoBScoEeSLVrU2ifxtpw" name="Fork(employee)@1ca8c122" incoming="_SQen8CcoEeSLVrU2ifxtpw" outgoing="_SQenzycoEeSLVrU2ifxtpw _SQen0ScoEeSLVrU2ifxtpw _SQen0ycoEeSLVrU2ifxtpw _SQen1ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SQeoBicoEeSLVrU2ifxtpw" name="Fork(monitor)@4cd0947b" incoming="_SQen8ScoEeSLVrU2ifxtpw" outgoing="_SQen1ycoEeSLVrU2ifxtpw _SQen2ScoEeSLVrU2ifxtpw _SQen2ycoEeSLVrU2ifxtpw _SQen3ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SQeoBycoEeSLVrU2ifxtpw" name="Fork(issue)@11c43ea3" incoming="_SQen8icoEeSLVrU2ifxtpw" outgoing="_SQen3ycoEeSLVrU2ifxtpw _SQen4ScoEeSLVrU2ifxtpw _SQen4ycoEeSLVrU2ifxtpw _SQen5ScoEeSLVrU2ifxtpw _SQen5ycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQeoCCcoEeSLVrU2ifxtpw" name="AcceptStatement@4b056ee7" incoming="_SQenzicoEeSLVrU2ifxtpw" outgoing="_SQen0CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQeoCScoEeSLVrU2ifxtpw" target="_SQeoCicoEeSLVrU2ifxtpw" source="_SQeoDCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SQeoCicoEeSLVrU2ifxtpw" name="Accept(Continue)" incoming="_SQeoCScoEeSLVrU2ifxtpw">
                <trigger xmi:id="_SQeoCycoEeSLVrU2ifxtpw" event="_SQfMzicoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SQeoDCcoEeSLVrU2ifxtpw" name="Initial(Accept(Continue))" outgoing="_SQeoCScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQeoDScoEeSLVrU2ifxtpw" name="ExpressionStatement@2a868f36" incoming="_SQen0CcoEeSLVrU2ifxtpw" outgoing="_SQen0icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeoDicoEeSLVrU2ifxtpw" target="_SQeoEicoEeSLVrU2ifxtpw" source="_SQeoGicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeoDycoEeSLVrU2ifxtpw" target="_SQeoFScoEeSLVrU2ifxtpw" source="_SQeoIicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQeoECcoEeSLVrU2ifxtpw" target="_SQeoEScoEeSLVrU2ifxtpw" source="_SQeoGCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQeoEScoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SQeoECcoEeSLVrU2ifxtpw" behavior="_SQfMzycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQeoEicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SQeoDicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoEycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoFCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQeoFScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SQeoDycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoFicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoFycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQeoGCcoEeSLVrU2ifxtpw" name="Tuple@188e6cdc" outgoing="_SQeoECcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQeoGScoEeSLVrU2ifxtpw" name="Value(&quot;employee instanceof Employee&quot;)">
                  <result xmi:id="_SQeoGicoEeSLVrU2ifxtpw" name="Value(&quot;employee instanceof Employee&quot;).result" outgoing="_SQeoDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoGycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoHCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQeoHScoEeSLVrU2ifxtpw" value="employee instanceof Employee">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQeoHicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Employee)" classifier="_SQd_KCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SQeoHycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Employee).object" incoming="_SQenzycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoICcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoIScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQeoIicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Employee).result" outgoing="_SQeoDycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoIycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoJCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQeoJScoEeSLVrU2ifxtpw" name="ExpressionStatement@389b6025" incoming="_SQen0icoEeSLVrU2ifxtpw" outgoing="_SQen1CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeoJicoEeSLVrU2ifxtpw" target="_SQeoKicoEeSLVrU2ifxtpw" source="_SQeoMicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeoJycoEeSLVrU2ifxtpw" target="_SQeoLScoEeSLVrU2ifxtpw" source="_SQeoOicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQeoKCcoEeSLVrU2ifxtpw" target="_SQeoKScoEeSLVrU2ifxtpw" source="_SQeoMCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQeoKScoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_SQeoKCcoEeSLVrU2ifxtpw" behavior="_SQfNMicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQeoKicoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_SQeoJicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoKycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoLCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQeoLScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_SQeoJycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoLicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoLycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQeoMCcoEeSLVrU2ifxtpw" name="Tuple@780c5e25" outgoing="_SQeoKCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQeoMScoEeSLVrU2ifxtpw" name="Value(&quot;employee hastype Staff&quot;)">
                  <result xmi:id="_SQeoMicoEeSLVrU2ifxtpw" name="Value(&quot;employee hastype Staff&quot;).result" outgoing="_SQeoJicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoMycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoNCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQeoNScoEeSLVrU2ifxtpw" value="employee hastype Staff">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQeoNicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Staff)" classifier="_SQej3icoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQeoNycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Staff).object" incoming="_SQen0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoOCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoOScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQeoOicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Staff).result" outgoing="_SQeoJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoOycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoPCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQeoPScoEeSLVrU2ifxtpw" name="ExpressionStatement@22cd477" incoming="_SQen1CcoEeSLVrU2ifxtpw" outgoing="_SQen1icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeoPicoEeSLVrU2ifxtpw" target="_SQeoQicoEeSLVrU2ifxtpw" source="_SQeoSicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQeoPycoEeSLVrU2ifxtpw" target="_SQeoRScoEeSLVrU2ifxtpw" source="_SQeoUicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQeoQCcoEeSLVrU2ifxtpw" target="_SQeoQScoEeSLVrU2ifxtpw" source="_SQeoSCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQeoQScoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_SQeoQCcoEeSLVrU2ifxtpw" behavior="_SQfNMicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQeoQicoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_SQeoPicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoQycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoRCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQeoRScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_SQeoPycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoRicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoRycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQeoSCcoEeSLVrU2ifxtpw" name="Tuple@3da34d01" outgoing="_SQeoQCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQeoSScoEeSLVrU2ifxtpw" name="Value(&quot;employee hastype Administrator&quot;)">
                  <result xmi:id="_SQeoSicoEeSLVrU2ifxtpw" name="Value(&quot;employee hastype Administrator&quot;).result" outgoing="_SQeoPicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoSycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoTCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQeoTScoEeSLVrU2ifxtpw" value="employee hastype Administrator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQeoTicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Administrator)" classifier="_SQd_sScoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQeoTycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Administrator).object" incoming="_SQen0ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoUCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoUScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQeoUicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Administrator).result" outgoing="_SQeoPycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQeoUycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQeoVCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfKoCcoEeSLVrU2ifxtpw" name="ExpressionStatement@477872b2" incoming="_SQen1icoEeSLVrU2ifxtpw" outgoing="_SQen2CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfKoScoEeSLVrU2ifxtpw" target="_SQfKpScoEeSLVrU2ifxtpw" source="_SQfKrScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfKoicoEeSLVrU2ifxtpw" target="_SQfKqCcoEeSLVrU2ifxtpw" source="_SQfKtScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfKoycoEeSLVrU2ifxtpw" target="_SQfKpCcoEeSLVrU2ifxtpw" source="_SQfKqycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfKpCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SQfKoycoEeSLVrU2ifxtpw" behavior="_SQfMzycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfKpScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SQfKoScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKpicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKpycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfKqCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SQfKoicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKqScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKqicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfKqycoEeSLVrU2ifxtpw" name="Tuple@78a39658" outgoing="_SQfKoycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfKrCcoEeSLVrU2ifxtpw" name="Value(&quot;employee hastype PartTime&quot;)">
                  <result xmi:id="_SQfKrScoEeSLVrU2ifxtpw" name="Value(&quot;employee hastype PartTime&quot;).result" outgoing="_SQfKoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKricoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKrycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfKsCcoEeSLVrU2ifxtpw" value="employee hastype PartTime">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfKsScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(PartTime)" classifier="_SQekbicoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQfKsicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(PartTime).object" incoming="_SQen1ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKsycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKtCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfKtScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(PartTime).result" outgoing="_SQfKoicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKticoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKtycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfKuCcoEeSLVrU2ifxtpw" name="ExpressionStatement@51360a69" incoming="_SQen2CcoEeSLVrU2ifxtpw" outgoing="_SQen2icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfKuScoEeSLVrU2ifxtpw" target="_SQfKvScoEeSLVrU2ifxtpw" source="_SQfKxScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfKuicoEeSLVrU2ifxtpw" target="_SQfKwCcoEeSLVrU2ifxtpw" source="_SQfKzScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfKuycoEeSLVrU2ifxtpw" target="_SQfKvCcoEeSLVrU2ifxtpw" source="_SQfKwycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfKvCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SQfKuycoEeSLVrU2ifxtpw" behavior="_SQfMzycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfKvScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SQfKuScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKvicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKvycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfKwCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SQfKuicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKwScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKwicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfKwycoEeSLVrU2ifxtpw" name="Tuple@56d58984" outgoing="_SQfKuycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfKxCcoEeSLVrU2ifxtpw" name="Value(&quot;monitor instanceof Monitor&quot;)">
                  <result xmi:id="_SQfKxScoEeSLVrU2ifxtpw" name="Value(&quot;monitor instanceof Monitor&quot;).result" outgoing="_SQfKuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKxicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKxycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfKyCcoEeSLVrU2ifxtpw" value="monitor instanceof Monitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfKyScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor)" classifier="_SQd9LycoEeSLVrU2ifxtpw">
                  <object xmi:id="_SQfKyicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor).object" incoming="_SQen1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKyycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKzCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfKzScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor).result" outgoing="_SQfKuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfKzicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfKzycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfK0CcoEeSLVrU2ifxtpw" name="ExpressionStatement@3fbaee2c" incoming="_SQen2icoEeSLVrU2ifxtpw" outgoing="_SQen3CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfK0ScoEeSLVrU2ifxtpw" target="_SQfK1ScoEeSLVrU2ifxtpw" source="_SQfK3ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfK0icoEeSLVrU2ifxtpw" target="_SQfK2CcoEeSLVrU2ifxtpw" source="_SQfK5ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfK0ycoEeSLVrU2ifxtpw" target="_SQfK1CcoEeSLVrU2ifxtpw" source="_SQfK2ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfK1CcoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_SQfK0ycoEeSLVrU2ifxtpw" behavior="_SQfNMicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfK1ScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_SQfK0ScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK1icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK1ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfK2CcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_SQfK0icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK2ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK2icoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfK2ycoEeSLVrU2ifxtpw" name="Tuple@7778f359" outgoing="_SQfK0ycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfK3CcoEeSLVrU2ifxtpw" name="Value(&quot;monitor hastype InActiveMonitor&quot;)">
                  <result xmi:id="_SQfK3ScoEeSLVrU2ifxtpw" name="Value(&quot;monitor hastype InActiveMonitor&quot;).result" outgoing="_SQfK0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK3icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK3ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfK4CcoEeSLVrU2ifxtpw" value="monitor hastype InActiveMonitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfK4ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(InActiveMonitor)" classifier="_SQd9uCcoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQfK4icoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(InActiveMonitor).object" incoming="_SQen2ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK4ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK5CcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfK5ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(InActiveMonitor).result" outgoing="_SQfK0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK5icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK5ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfK6CcoEeSLVrU2ifxtpw" name="ExpressionStatement@30479e85" incoming="_SQen3CcoEeSLVrU2ifxtpw" outgoing="_SQen3icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfK6ScoEeSLVrU2ifxtpw" target="_SQfK7ScoEeSLVrU2ifxtpw" source="_SQfK9ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfK6icoEeSLVrU2ifxtpw" target="_SQfK8CcoEeSLVrU2ifxtpw" source="_SQfK_ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfK6ycoEeSLVrU2ifxtpw" target="_SQfK7CcoEeSLVrU2ifxtpw" source="_SQfK8ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfK7CcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SQfK6ycoEeSLVrU2ifxtpw" behavior="_SQfMzycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfK7ScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SQfK6ScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK7icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK7ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfK8CcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SQfK6icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK8ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK8icoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfK8ycoEeSLVrU2ifxtpw" name="Tuple@3aaa018f" outgoing="_SQfK6ycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfK9CcoEeSLVrU2ifxtpw" name="Value(&quot;monitor hastype ActiveMonitor&quot;)">
                  <result xmi:id="_SQfK9ScoEeSLVrU2ifxtpw" name="Value(&quot;monitor hastype ActiveMonitor&quot;).result" outgoing="_SQfK6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK9icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK9ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfK-CcoEeSLVrU2ifxtpw" value="monitor hastype ActiveMonitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfK-ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(ActiveMonitor)" classifier="_SQd-SCcoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQfK-icoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(ActiveMonitor).object" incoming="_SQen2ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK-ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK_CcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfK_ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(ActiveMonitor).result" outgoing="_SQfK6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfK_icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfK_ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLACcoEeSLVrU2ifxtpw" name="ExpressionStatement@4579c4a9" incoming="_SQen3icoEeSLVrU2ifxtpw" outgoing="_SQen4CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLAScoEeSLVrU2ifxtpw" target="_SQfLBicoEeSLVrU2ifxtpw" source="_SQfLEycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLAicoEeSLVrU2ifxtpw" target="_SQfLCScoEeSLVrU2ifxtpw" source="_SQfLLycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLAycoEeSLVrU2ifxtpw" target="_SQfLDCcoEeSLVrU2ifxtpw" source="_SQfLNCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfLBCcoEeSLVrU2ifxtpw" target="_SQfLBScoEeSLVrU2ifxtpw" source="_SQfLDycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfLBScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SQfLBCcoEeSLVrU2ifxtpw" behavior="_SQfNhycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfLBicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SQfLAScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLBycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLCCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfLCScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SQfLAicoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLCicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLCycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfLDCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SQfLAycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLDScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLDicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLDycoEeSLVrU2ifxtpw" name="Tuple@5939b748" outgoing="_SQfLBCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLECcoEeSLVrU2ifxtpw" target="_SQfLMicoEeSLVrU2ifxtpw" source="_SQfLKicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLEScoEeSLVrU2ifxtpw" target="_SQfLLCcoEeSLVrU2ifxtpw" source="_SQfLMicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfLEicoEeSLVrU2ifxtpw" name="Value(&quot;monitor.n&quot;)">
                  <result xmi:id="_SQfLEycoEeSLVrU2ifxtpw" name="Value(&quot;monitor.n&quot;).result" outgoing="_SQfLAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLFCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLFScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfLFicoEeSLVrU2ifxtpw" value="monitor.n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_SQfLFycoEeSLVrU2ifxtpw" name="CastExpression@10e43b06" mode="parallel" outputElement="_SQfLKicoEeSLVrU2ifxtpw" inputElement="_SQfLKScoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLGCcoEeSLVrU2ifxtpw" target="_SQfLIScoEeSLVrU2ifxtpw" source="_SQfLJycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLGScoEeSLVrU2ifxtpw" target="_SQfLKCcoEeSLVrU2ifxtpw" source="_SQfLJycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLGicoEeSLVrU2ifxtpw" target="_SQfLKCcoEeSLVrU2ifxtpw" source="_SQfLJCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLGycoEeSLVrU2ifxtpw" target="_SQfLHycoEeSLVrU2ifxtpw" source="_SQfLKCcoEeSLVrU2ifxtpw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfLHCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLHScoEeSLVrU2ifxtpw" target="_SQfLJycoEeSLVrU2ifxtpw" source="_SQfLKScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLHicoEeSLVrU2ifxtpw" target="_SQfLKicoEeSLVrU2ifxtpw" source="_SQfLHycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_SQfLHycoEeSLVrU2ifxtpw" name="Merge(CastExpression@10e43b06.operand)" incoming="_SQfLGycoEeSLVrU2ifxtpw" outgoing="_SQfLHicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfLICcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(ActiveMonitor)" classifier="_SQd-SCcoEeSLVrU2ifxtpw">
                    <object xmi:id="_SQfLIScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(ActiveMonitor).object" incoming="_SQfLGCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLIicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLIycoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SQfLJCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(ActiveMonitor).result" outgoing="_SQfLGicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLJScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLJicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SQfLJycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(ActiveMonitor).object)" incoming="_SQfLHScoEeSLVrU2ifxtpw" outgoing="_SQfLGCcoEeSLVrU2ifxtpw _SQfLGScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_SQfLKCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(ActiveMonitor).result)" incoming="_SQfLGScoEeSLVrU2ifxtpw _SQfLGicoEeSLVrU2ifxtpw" outgoing="_SQfLGycoEeSLVrU2ifxtpw" decisionInputFlow="_SQfLGicoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_SQfLKScoEeSLVrU2ifxtpw" name="CastExpression@10e43b06.inputElement" incoming="_SQen3ScoEeSLVrU2ifxtpw" outgoing="_SQfLHScoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" regionAsInput="_SQfLFycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_SQfLKicoEeSLVrU2ifxtpw" name="CastExpression@10e43b06.outputElement" incoming="_SQfLHicoEeSLVrU2ifxtpw" outgoing="_SQfLECcoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" regionAsOutput="_SQfLFycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQfLKycoEeSLVrU2ifxtpw" name="Read(n)" structuralFeature="_SQd-TScoEeSLVrU2ifxtpw">
                  <object xmi:id="_SQfLLCcoEeSLVrU2ifxtpw" name="Read(n).object" incoming="_SQfLEScoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLLScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLLicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfLLycoEeSLVrU2ifxtpw" name="Read(n).result" outgoing="_SQfLAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLMCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLMScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SQfLMicoEeSLVrU2ifxtpw" name="Fork(CastExpression@10e43b06.outputElement)" incoming="_SQfLECcoEeSLVrU2ifxtpw" outgoing="_SQfLEScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfLMycoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SQfLNCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SQfLAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLNScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLNicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SQfLNycoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLOCcoEeSLVrU2ifxtpw" name="ExpressionStatement@714d8fdf" incoming="_SQen4CcoEeSLVrU2ifxtpw" outgoing="_SQen4icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLOScoEeSLVrU2ifxtpw" target="_SQfLPScoEeSLVrU2ifxtpw" source="_SQfLRScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLOicoEeSLVrU2ifxtpw" target="_SQfLQCcoEeSLVrU2ifxtpw" source="_SQfLTScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfLOycoEeSLVrU2ifxtpw" target="_SQfLPCcoEeSLVrU2ifxtpw" source="_SQfLQycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfLPCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SQfLOycoEeSLVrU2ifxtpw" behavior="_SQfMzycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfLPScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SQfLOScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLPicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLPycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfLQCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SQfLOicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLQScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLQicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLQycoEeSLVrU2ifxtpw" name="Tuple@2c23a4b1" outgoing="_SQfLOycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfLRCcoEeSLVrU2ifxtpw" name="Value(&quot;issue instanceof Issue&quot;)">
                  <result xmi:id="_SQfLRScoEeSLVrU2ifxtpw" name="Value(&quot;issue instanceof Issue&quot;).result" outgoing="_SQfLOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLRicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLRycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfLSCcoEeSLVrU2ifxtpw" value="issue instanceof Issue">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfLSScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Issue)" classifier="_SQek_icoEeSLVrU2ifxtpw">
                  <object xmi:id="_SQfLSicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Issue).object" incoming="_SQen3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLSycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLTCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfLTScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Issue).result" outgoing="_SQfLOicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLTicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLTycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLUCcoEeSLVrU2ifxtpw" name="ExpressionStatement@72738e7b" incoming="_SQen4icoEeSLVrU2ifxtpw" outgoing="_SQen5CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLUScoEeSLVrU2ifxtpw" target="_SQfLVScoEeSLVrU2ifxtpw" source="_SQfLXScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLUicoEeSLVrU2ifxtpw" target="_SQfLWCcoEeSLVrU2ifxtpw" source="_SQfLZScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfLUycoEeSLVrU2ifxtpw" target="_SQfLVCcoEeSLVrU2ifxtpw" source="_SQfLWycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfLVCcoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_SQfLUycoEeSLVrU2ifxtpw" behavior="_SQfNMicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfLVScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_SQfLUScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLVicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLVycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfLWCcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_SQfLUicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLWScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLWicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLWycoEeSLVrU2ifxtpw" name="Tuple@46639129" outgoing="_SQfLUycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfLXCcoEeSLVrU2ifxtpw" name="Value(&quot;issue hastype Pending&quot;)">
                  <result xmi:id="_SQfLXScoEeSLVrU2ifxtpw" name="Value(&quot;issue hastype Pending&quot;).result" outgoing="_SQfLUScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLXicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLXycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfLYCcoEeSLVrU2ifxtpw" value="issue hastype Pending">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfLYScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Pending)" classifier="_SQelhycoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQfLYicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Pending).object" incoming="_SQen4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLYycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLZCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfLZScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Pending).result" outgoing="_SQfLUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLZicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLZycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLaCcoEeSLVrU2ifxtpw" name="ExpressionStatement@265a50d6" incoming="_SQen5CcoEeSLVrU2ifxtpw" outgoing="_SQen5icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLaScoEeSLVrU2ifxtpw" target="_SQfLbScoEeSLVrU2ifxtpw" source="_SQfLdScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLaicoEeSLVrU2ifxtpw" target="_SQfLcCcoEeSLVrU2ifxtpw" source="_SQfLfScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfLaycoEeSLVrU2ifxtpw" target="_SQfLbCcoEeSLVrU2ifxtpw" source="_SQfLcycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfLbCcoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_SQfLaycoEeSLVrU2ifxtpw" behavior="_SQfNMicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfLbScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_SQfLaScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLbicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLbycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfLcCcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_SQfLaicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLcScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLcicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLcycoEeSLVrU2ifxtpw" name="Tuple@77ca77b5" outgoing="_SQfLaycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfLdCcoEeSLVrU2ifxtpw" name="Value(&quot;issue hastype Overdue&quot;)">
                  <result xmi:id="_SQfLdScoEeSLVrU2ifxtpw" name="Value(&quot;issue hastype Overdue&quot;).result" outgoing="_SQfLaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLdicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLdycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfLeCcoEeSLVrU2ifxtpw" value="issue hastype Overdue">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfLeScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Overdue)" classifier="_SQempycoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQfLeicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Overdue).object" incoming="_SQen4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLeycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLfCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfLfScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Overdue).result" outgoing="_SQfLaicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLficoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLfycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLgCcoEeSLVrU2ifxtpw" name="ExpressionStatement@2d538498" incoming="_SQen5icoEeSLVrU2ifxtpw" outgoing="_SQen6CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLgScoEeSLVrU2ifxtpw" target="_SQfLhScoEeSLVrU2ifxtpw" source="_SQfLjScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLgicoEeSLVrU2ifxtpw" target="_SQfLiCcoEeSLVrU2ifxtpw" source="_SQfLlScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfLgycoEeSLVrU2ifxtpw" target="_SQfLhCcoEeSLVrU2ifxtpw" source="_SQfLiycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfLhCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SQfLgycoEeSLVrU2ifxtpw" behavior="_SQfMzycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfLhScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SQfLgScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLhicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLhycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfLiCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SQfLgicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLiScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLiicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLiycoEeSLVrU2ifxtpw" name="Tuple@6b32734c" outgoing="_SQfLgycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfLjCcoEeSLVrU2ifxtpw" name="Value(&quot;issue hastype Resolved&quot;)">
                  <result xmi:id="_SQfLjScoEeSLVrU2ifxtpw" name="Value(&quot;issue hastype Resolved&quot;).result" outgoing="_SQfLgScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLjicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLjycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfLkCcoEeSLVrU2ifxtpw" value="issue hastype Resolved">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfLkScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Resolved)" classifier="_SQenNycoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQfLkicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Resolved).object" incoming="_SQen5ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLkycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLlCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfLlScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Resolved).result" outgoing="_SQfLgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLlicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLlycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLmCcoEeSLVrU2ifxtpw" name="ExpressionStatement@15ddc780" incoming="_SQen6CcoEeSLVrU2ifxtpw" outgoing="_SQen6ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLmScoEeSLVrU2ifxtpw" target="_SQfLnScoEeSLVrU2ifxtpw" source="_SQfLpScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLmicoEeSLVrU2ifxtpw" target="_SQfLoCcoEeSLVrU2ifxtpw" source="_SQfLrScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfLmycoEeSLVrU2ifxtpw" target="_SQfLnCcoEeSLVrU2ifxtpw" source="_SQfLoycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfLnCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SQfLmycoEeSLVrU2ifxtpw" behavior="_SQfMzycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfLnScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SQfLmScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLnicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLnycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfLoCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SQfLmicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLoScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLoicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLoycoEeSLVrU2ifxtpw" name="Tuple@33055eb5" outgoing="_SQfLmycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfLpCcoEeSLVrU2ifxtpw" name="Value(&quot;issue hastype InProcess&quot;)">
                  <result xmi:id="_SQfLpScoEeSLVrU2ifxtpw" name="Value(&quot;issue hastype InProcess&quot;).result" outgoing="_SQfLmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLpicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLpycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfLqCcoEeSLVrU2ifxtpw" value="issue hastype InProcess">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfLqScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(InProcess)" classifier="_SQemFycoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SQfLqicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(InProcess).object" incoming="_SQen5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLqycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLrCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfLrScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(InProcess).result" outgoing="_SQfLmicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLricoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLrycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLsCcoEeSLVrU2ifxtpw" name="ExpressionStatement@78343bce" incoming="_SQen6ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLsScoEeSLVrU2ifxtpw" target="_SQfLtCcoEeSLVrU2ifxtpw" source="_SQfLvCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfLsicoEeSLVrU2ifxtpw" target="_SQfLsycoEeSLVrU2ifxtpw" source="_SQfLuicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfLsycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SQfLsicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SQfLtCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SQfLsScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLtScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLticoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SQfLtycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLuCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLuScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfLuicoEeSLVrU2ifxtpw" name="Tuple@2253097c" outgoing="_SQfLsicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfLuycoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                  <result xmi:id="_SQfLvCcoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_SQfLsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLvScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLvicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfLvycoEeSLVrU2ifxtpw" value="Done">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQfLwCcoEeSLVrU2ifxtpw" name="test$method$1" specification="_SQfMuicoEeSLVrU2ifxtpw" node="_SQfLzScoEeSLVrU2ifxtpw _SQfLzicoEeSLVrU2ifxtpw _SQfLzycoEeSLVrU2ifxtpw _SQfL0CcoEeSLVrU2ifxtpw" group="_SQfL0CcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQfLwScoEeSLVrU2ifxtpw" name="employee" type="_SQd_KCcoEeSLVrU2ifxtpw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLwicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLwycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SQfLxCcoEeSLVrU2ifxtpw" name="monitor" type="_SQd9LycoEeSLVrU2ifxtpw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLxScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLxicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SQfLxycoEeSLVrU2ifxtpw" name="issue" type="_SQek_icoEeSLVrU2ifxtpw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfLyCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfLyScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLyicoEeSLVrU2ifxtpw" target="_SQfLzScoEeSLVrU2ifxtpw" source="_SQfL4ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLyycoEeSLVrU2ifxtpw" target="_SQfLzicoEeSLVrU2ifxtpw" source="_SQfL5CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfLzCcoEeSLVrU2ifxtpw" target="_SQfLzycoEeSLVrU2ifxtpw" source="_SQfL5ycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQfL0CcoEeSLVrU2ifxtpw" name="Body(test$method$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfL0ScoEeSLVrU2ifxtpw" target="_SQfL-icoEeSLVrU2ifxtpw" source="_SQfL6icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfL0icoEeSLVrU2ifxtpw" target="_SQfMCicoEeSLVrU2ifxtpw" source="_SQfL-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL0ycoEeSLVrU2ifxtpw" target="_SQfMHCcoEeSLVrU2ifxtpw" source="_SQfL7CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfL1CcoEeSLVrU2ifxtpw" target="_SQfMGicoEeSLVrU2ifxtpw" source="_SQfMCicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL1ScoEeSLVrU2ifxtpw" target="_SQfMIScoEeSLVrU2ifxtpw" source="_SQfL7CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfL1icoEeSLVrU2ifxtpw" target="_SQfMHycoEeSLVrU2ifxtpw" source="_SQfMGicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL1ycoEeSLVrU2ifxtpw" target="_SQfMJicoEeSLVrU2ifxtpw" source="_SQfL7CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfL2CcoEeSLVrU2ifxtpw" target="_SQfMJCcoEeSLVrU2ifxtpw" source="_SQfMHycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL2ScoEeSLVrU2ifxtpw" target="_SQfMLScoEeSLVrU2ifxtpw" source="_SQfL_CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL2icoEeSLVrU2ifxtpw" target="_SQfMMCcoEeSLVrU2ifxtpw" source="_SQfL_CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfL2ycoEeSLVrU2ifxtpw" target="_SQfMKScoEeSLVrU2ifxtpw" source="_SQfMJCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL3CcoEeSLVrU2ifxtpw" target="_SQfMNycoEeSLVrU2ifxtpw" source="_SQfMDCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfL3ScoEeSLVrU2ifxtpw" target="_SQfMNScoEeSLVrU2ifxtpw" source="_SQfMKScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL3icoEeSLVrU2ifxtpw" target="_SQfL4ScoEeSLVrU2ifxtpw" source="_SQfL7CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL3ycoEeSLVrU2ifxtpw" target="_SQfL5CcoEeSLVrU2ifxtpw" source="_SQfL_CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL4CcoEeSLVrU2ifxtpw" target="_SQfL5ycoEeSLVrU2ifxtpw" source="_SQfMDCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SQfL4ScoEeSLVrU2ifxtpw" name="Output(employee)" incoming="_SQfL3icoEeSLVrU2ifxtpw" outgoing="_SQfLyicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfL4icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfL4ycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_SQfL5CcoEeSLVrU2ifxtpw" name="Output(monitor)" incoming="_SQfL3ycoEeSLVrU2ifxtpw" outgoing="_SQfLyycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfL5ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfL5icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_SQfL5ycoEeSLVrU2ifxtpw" name="Output(issue)" incoming="_SQfL4CcoEeSLVrU2ifxtpw" outgoing="_SQfLzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfL6CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfL6ScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfL6icoEeSLVrU2ifxtpw" name="ExpressionStatement@63cb4947" outgoing="_SQfL0ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL6ycoEeSLVrU2ifxtpw" target="_SQfL7CcoEeSLVrU2ifxtpw" source="_SQfL8CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SQfL7CcoEeSLVrU2ifxtpw" name="Fork(employee)@87e258d" incoming="_SQfL6ycoEeSLVrU2ifxtpw" outgoing="_SQfL0ycoEeSLVrU2ifxtpw _SQfL1ScoEeSLVrU2ifxtpw _SQfL1ycoEeSLVrU2ifxtpw _SQfL3icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfL7ScoEeSLVrU2ifxtpw" name="RightHandSide@11d35056">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL7icoEeSLVrU2ifxtpw" target="_SQfL8ycoEeSLVrU2ifxtpw" source="_SQfL9ycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_SQfL7ycoEeSLVrU2ifxtpw" name="Call(Staff)" operation="_SQekaScoEeSLVrU2ifxtpw">
                  <result xmi:id="_SQfL8CcoEeSLVrU2ifxtpw" name="Call(Staff).result()" outgoing="_SQfL6ycoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfL8ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfL8icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_SQfL8ycoEeSLVrU2ifxtpw" name="Call(Staff).target" incoming="_SQfL7icoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfL9CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfL9ScoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_SQfL9icoEeSLVrU2ifxtpw" name="Create(Staff)" classifier="_SQej3icoEeSLVrU2ifxtpw">
                  <result xmi:id="_SQfL9ycoEeSLVrU2ifxtpw" name="Create(Staff).result" outgoing="_SQfL7icoEeSLVrU2ifxtpw" type="_SQej3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfL-CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfL-ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfL-icoEeSLVrU2ifxtpw" name="ExpressionStatement@2d6b2d22" incoming="_SQfL0ScoEeSLVrU2ifxtpw" outgoing="_SQfL0icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL-ycoEeSLVrU2ifxtpw" target="_SQfL_CcoEeSLVrU2ifxtpw" source="_SQfMACcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SQfL_CcoEeSLVrU2ifxtpw" name="Fork(monitor)@ec60808" incoming="_SQfL-ycoEeSLVrU2ifxtpw" outgoing="_SQfL2ScoEeSLVrU2ifxtpw _SQfL2icoEeSLVrU2ifxtpw _SQfL3ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfL_ScoEeSLVrU2ifxtpw" name="RightHandSide@6b394ccb">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfL_icoEeSLVrU2ifxtpw" target="_SQfMAycoEeSLVrU2ifxtpw" source="_SQfMBycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_SQfL_ycoEeSLVrU2ifxtpw" name="Call(InActiveMonitor)" operation="_SQd-QycoEeSLVrU2ifxtpw">
                  <result xmi:id="_SQfMACcoEeSLVrU2ifxtpw" name="Call(InActiveMonitor).result()" outgoing="_SQfL-ycoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMAScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMAicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_SQfMAycoEeSLVrU2ifxtpw" name="Call(InActiveMonitor).target" incoming="_SQfL_icoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMBCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMBScoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_SQfMBicoEeSLVrU2ifxtpw" name="Create(InActiveMonitor)" classifier="_SQd9uCcoEeSLVrU2ifxtpw">
                  <result xmi:id="_SQfMBycoEeSLVrU2ifxtpw" name="Create(InActiveMonitor).result" outgoing="_SQfL_icoEeSLVrU2ifxtpw" type="_SQd9uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMCCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMCScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMCicoEeSLVrU2ifxtpw" name="ExpressionStatement@28652359" incoming="_SQfL0icoEeSLVrU2ifxtpw" outgoing="_SQfL1CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMCycoEeSLVrU2ifxtpw" target="_SQfMDCcoEeSLVrU2ifxtpw" source="_SQfMECcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SQfMDCcoEeSLVrU2ifxtpw" name="Fork(issue)@2ede2f0b" incoming="_SQfMCycoEeSLVrU2ifxtpw" outgoing="_SQfL3CcoEeSLVrU2ifxtpw _SQfL4CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMDScoEeSLVrU2ifxtpw" name="RightHandSide@7ce29336">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMDicoEeSLVrU2ifxtpw" target="_SQfMEycoEeSLVrU2ifxtpw" source="_SQfMFycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_SQfMDycoEeSLVrU2ifxtpw" name="Call(Pending)" operation="_SQemEicoEeSLVrU2ifxtpw">
                  <result xmi:id="_SQfMECcoEeSLVrU2ifxtpw" name="Call(Pending).result()" outgoing="_SQfMCycoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMEScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMEicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_SQfMEycoEeSLVrU2ifxtpw" name="Call(Pending).target" incoming="_SQfMDicoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMFCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMFScoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_SQfMFicoEeSLVrU2ifxtpw" name="Create(Pending)" classifier="_SQelhycoEeSLVrU2ifxtpw">
                  <result xmi:id="_SQfMFycoEeSLVrU2ifxtpw" name="Create(Pending).result" outgoing="_SQfMDicoEeSLVrU2ifxtpw" type="_SQelhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMGCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMGScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMGicoEeSLVrU2ifxtpw" name="ClassifyStatement@3c8a9a23" incoming="_SQfL1CcoEeSLVrU2ifxtpw" outgoing="_SQfL1icoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_SQfMGycoEeSLVrU2ifxtpw" name="Reclassify(* to Administrator)" isReplaceAll="true" newClassifier="_SQd_sScoEeSLVrU2ifxtpw">
                <object xmi:id="_SQfMHCcoEeSLVrU2ifxtpw" name="Reclassify(* to Administrator).object" incoming="_SQfL0ycoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMHScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMHicoEeSLVrU2ifxtpw" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMHycoEeSLVrU2ifxtpw" name="ClassifyStatement@6708c0f5" incoming="_SQfL1icoEeSLVrU2ifxtpw" outgoing="_SQfL2CcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_SQfMICcoEeSLVrU2ifxtpw" name="Reclassify( to PartTime)" newClassifier="_SQekbicoEeSLVrU2ifxtpw">
                <object xmi:id="_SQfMIScoEeSLVrU2ifxtpw" name="Reclassify( to PartTime).object" incoming="_SQfL1ScoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMIicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMIycoEeSLVrU2ifxtpw" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMJCcoEeSLVrU2ifxtpw" name="ClassifyStatement@6c92a833" incoming="_SQfL2CcoEeSLVrU2ifxtpw" outgoing="_SQfL2ycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_SQfMJScoEeSLVrU2ifxtpw" name="Reclassify(Administrator to )" oldClassifier="_SQd_sScoEeSLVrU2ifxtpw">
                <object xmi:id="_SQfMJicoEeSLVrU2ifxtpw" name="Reclassify(Administrator to ).object" incoming="_SQfL1ycoEeSLVrU2ifxtpw" type="_SQd_KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMJycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMKCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMKScoEeSLVrU2ifxtpw" name="ClassifyStatement@7050f40d" incoming="_SQfL2ycoEeSLVrU2ifxtpw" outgoing="_SQfL3ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfMKicoEeSLVrU2ifxtpw" target="_SQfMMScoEeSLVrU2ifxtpw" source="_SQfMLCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMKycoEeSLVrU2ifxtpw" target="_SQfMMicoEeSLVrU2ifxtpw" source="_SQfMMCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_SQfMLCcoEeSLVrU2ifxtpw" name="Reclassify(InActiveMonitor to ActiveMonitor)" outgoing="_SQfMKicoEeSLVrU2ifxtpw" newClassifier="_SQd-SCcoEeSLVrU2ifxtpw" oldClassifier="_SQd9uCcoEeSLVrU2ifxtpw">
                <object xmi:id="_SQfMLScoEeSLVrU2ifxtpw" name="Reclassify(InActiveMonitor to ActiveMonitor).object" incoming="_SQfL2ScoEeSLVrU2ifxtpw" type="_SQd9LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMLicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMLycoEeSLVrU2ifxtpw" value="1"/>
                </object>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SQfMMCcoEeSLVrU2ifxtpw" name="Fork(Fork(monitor)@ec60808)" incoming="_SQfL2icoEeSLVrU2ifxtpw" outgoing="_SQfMKycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_SQfMMScoEeSLVrU2ifxtpw" name="Start(ActiveMonitor)" incoming="_SQfMKicoEeSLVrU2ifxtpw">
                <object xmi:id="_SQfMMicoEeSLVrU2ifxtpw" name="Start(ActiveMonitor).object" incoming="_SQfMKycoEeSLVrU2ifxtpw" type="_SQd-SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMMycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMNCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMNScoEeSLVrU2ifxtpw" name="ClassifyStatement@eb6d585" incoming="_SQfL3ScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_SQfMNicoEeSLVrU2ifxtpw" name="Reclassify(Pending,Overdue to Resolved,InProcess)" newClassifier="_SQenNycoEeSLVrU2ifxtpw _SQemFycoEeSLVrU2ifxtpw" oldClassifier="_SQelhycoEeSLVrU2ifxtpw _SQempycoEeSLVrU2ifxtpw">
                <object xmi:id="_SQfMNycoEeSLVrU2ifxtpw" name="Reclassify(Pending,Overdue to Resolved,InProcess).object" incoming="_SQfL3CcoEeSLVrU2ifxtpw" type="_SQek_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMOCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMOScoEeSLVrU2ifxtpw" value="1"/>
                </object>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfLzScoEeSLVrU2ifxtpw" name="Output(employee)" incoming="_SQfLyicoEeSLVrU2ifxtpw" parameter="_SQfLwScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfLzicoEeSLVrU2ifxtpw" name="Output(monitor)" incoming="_SQfLyycoEeSLVrU2ifxtpw" parameter="_SQfLxCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfLzycoEeSLVrU2ifxtpw" name="Output(issue)" incoming="_SQfLzCcoEeSLVrU2ifxtpw" parameter="_SQfLxycoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQfMOicoEeSLVrU2ifxtpw" name="TestRunner$method$1" specification="_SQfMxCcoEeSLVrU2ifxtpw" node="_SQfMPycoEeSLVrU2ifxtpw _SQfMQCcoEeSLVrU2ifxtpw" group="_SQfMQCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQfMOycoEeSLVrU2ifxtpw" name="" type="_SQenxycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMPCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMPScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMPicoEeSLVrU2ifxtpw" target="_SQfMPycoEeSLVrU2ifxtpw" source="_SQfMUScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SQfMQCcoEeSLVrU2ifxtpw" name="Body(TestRunner$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMQScoEeSLVrU2ifxtpw" target="_SQfMUScoEeSLVrU2ifxtpw" source="_SQfMTicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMQicoEeSLVrU2ifxtpw" target="_SQfMUycoEeSLVrU2ifxtpw" source="_SQfMUScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfMQycoEeSLVrU2ifxtpw" target="_SQfMTCcoEeSLVrU2ifxtpw" source="_SQfMUicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMRCcoEeSLVrU2ifxtpw" target="_SQfMVycoEeSLVrU2ifxtpw" source="_SQfMUScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMRScoEeSLVrU2ifxtpw" target="_SQfMXicoEeSLVrU2ifxtpw" source="_SQfMWicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMRicoEeSLVrU2ifxtpw" target="_SQfMaicoEeSLVrU2ifxtpw" source="_SQfMYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMRycoEeSLVrU2ifxtpw" target="_SQfMcCcoEeSLVrU2ifxtpw" source="_SQfMZScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfMSCcoEeSLVrU2ifxtpw" target="_SQfMdCcoEeSLVrU2ifxtpw" source="_SQfMcycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMSScoEeSLVrU2ifxtpw" target="_SQfMdCcoEeSLVrU2ifxtpw" source="_SQfMbScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfMSicoEeSLVrU2ifxtpw" target="_SQfMUicoEeSLVrU2ifxtpw" source="_SQfMdCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfMSycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMTCcoEeSLVrU2ifxtpw" name="Body" incoming="_SQfMQycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQfMTScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQfMTicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQfMQScoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMTycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMUCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQfMUScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQfMQScoEeSLVrU2ifxtpw" outgoing="_SQfMPicoEeSLVrU2ifxtpw _SQfMQicoEeSLVrU2ifxtpw _SQfMRCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQfMUicoEeSLVrU2ifxtpw" name="Call(TestRunner$initialization$1)" incoming="_SQfMSicoEeSLVrU2ifxtpw" outgoing="_SQfMQycoEeSLVrU2ifxtpw" operation="_SQfMuScoEeSLVrU2ifxtpw">
              <target xmi:id="_SQfMUycoEeSLVrU2ifxtpw" name="Call(TestRunner$initialization$1).target" incoming="_SQfMQicoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMVCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMVScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQfMVicoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_SQenyCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SQfMVycoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1).object" incoming="_SQfMRCcoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMWCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMWScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQfMWicoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1).result" outgoing="_SQfMRScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMWycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMXCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfMXScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQfMXicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQfMRScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMXycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMYCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQfMYScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQfMRicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMYicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMYycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfMZCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQfMZScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQfMRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMZicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMZycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQfMaCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQfMaScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQfMaicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQfMRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMaycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMbCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQfMbScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQfMSScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMbicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMbycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQfMcCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQfMRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMcScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMcicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQfMcycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQfMSCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQfMdCcoEeSLVrU2ifxtpw" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_SQfMSCcoEeSLVrU2ifxtpw _SQfMSScoEeSLVrU2ifxtpw" outgoing="_SQfMSicoEeSLVrU2ifxtpw" decisionInputFlow="_SQfMSScoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfMPycoEeSLVrU2ifxtpw" name="Return" incoming="_SQfMPicoEeSLVrU2ifxtpw" parameter="_SQfMOycoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQfMdScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SQfMyCcoEeSLVrU2ifxtpw" node="_SQfMdicoEeSLVrU2ifxtpw" group="_SQfMdicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQfMdicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SQfMdycoEeSLVrU2ifxtpw" name="TestRunner$initialization$1" specification="_SQfMuScoEeSLVrU2ifxtpw" node="_SQfMeCcoEeSLVrU2ifxtpw" group="_SQfMeCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SQfMeCcoEeSLVrU2ifxtpw" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMeScoEeSLVrU2ifxtpw" target="_SQfMhycoEeSLVrU2ifxtpw" source="_SQfMhCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMeicoEeSLVrU2ifxtpw" target="_SQfMkScoEeSLVrU2ifxtpw" source="_SQfMhycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMeycoEeSLVrU2ifxtpw" target="_SQfMmycoEeSLVrU2ifxtpw" source="_SQfMhycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMfCcoEeSLVrU2ifxtpw" target="_SQfMoicoEeSLVrU2ifxtpw" source="_SQfMnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMfScoEeSLVrU2ifxtpw" target="_SQfMricoEeSLVrU2ifxtpw" source="_SQfMpScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMficoEeSLVrU2ifxtpw" target="_SQfMtCcoEeSLVrU2ifxtpw" source="_SQfMqScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfMfycoEeSLVrU2ifxtpw" target="_SQfMuCcoEeSLVrU2ifxtpw" source="_SQfMtycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMgCcoEeSLVrU2ifxtpw" target="_SQfMuCcoEeSLVrU2ifxtpw" source="_SQfMsScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfMgScoEeSLVrU2ifxtpw" target="_SQfMiCcoEeSLVrU2ifxtpw" source="_SQfMuCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfMgicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SQfMgycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SQfMhCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SQfMeScoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMhScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMhicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQfMhycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SQfMeScoEeSLVrU2ifxtpw" outgoing="_SQfMeicoEeSLVrU2ifxtpw _SQfMeycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMiCcoEeSLVrU2ifxtpw" name="Initialization" incoming="_SQfMgScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfMiScoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfMiicoEeSLVrU2ifxtpw" target="_SQfMlycoEeSLVrU2ifxtpw" source="_SQfMjCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfMiycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SQfMjCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQfMiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMjScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMjicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SQfMjycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SQfMkCcoEeSLVrU2ifxtpw" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_SQenyCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SQfMkScoEeSLVrU2ifxtpw" name="Write(TestRunner$initializationFlag$1).object" incoming="_SQfMeicoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMkicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMkycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfMlCcoEeSLVrU2ifxtpw" name="Write(TestRunner$initializationFlag$1).result" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMlScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMlicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SQfMlycoEeSLVrU2ifxtpw" name="Write(TestRunner$initializationFlag$1).value" incoming="_SQfMiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMmCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMmScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SQfMmicoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_SQenyCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SQfMmycoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1).object" incoming="_SQfMeycoEeSLVrU2ifxtpw" type="_SQenxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMnCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMnScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SQfMnicoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1).result" outgoing="_SQfMfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMnycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMoCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfMoScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SQfMoicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SQfMfCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMoycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMpCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQfMpScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SQfMfScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMpicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMpycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfMqCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SQfMqScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SQfMficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMqycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SQfMrCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQfMrScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SQfMricoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SQfMfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMrycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMsCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQfMsScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SQfMgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMsicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMsycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQfMtCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SQfMficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMtScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMticoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SQfMtycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SQfMfycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQfMuCcoEeSLVrU2ifxtpw" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_SQfMfycoEeSLVrU2ifxtpw _SQfMgCcoEeSLVrU2ifxtpw" outgoing="_SQfMgScoEeSLVrU2ifxtpw" decisionInputFlow="_SQfMgCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SQfMuScoEeSLVrU2ifxtpw" name="TestRunner$initialization$1" visibility="protected" method="_SQfMdycoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SQfMuicoEeSLVrU2ifxtpw" name="test" visibility="public" method="_SQfLwCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQfMuycoEeSLVrU2ifxtpw" name="employee" visibility="package" type="_SQd_KCcoEeSLVrU2ifxtpw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMvCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMvScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SQfMvicoEeSLVrU2ifxtpw" name="monitor" visibility="package" type="_SQd9LycoEeSLVrU2ifxtpw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMvycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMwCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SQfMwScoEeSLVrU2ifxtpw" name="issue" visibility="package" type="_SQek_icoEeSLVrU2ifxtpw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMwicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMwycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQfMxCcoEeSLVrU2ifxtpw" name="TestRunner" visibility="package" method="_SQfMOicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SQfMxScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SQenxycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfMxicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfMxycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SQfMyCcoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SQfMdScoEeSLVrU2ifxtpw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SQfMyScoEeSLVrU2ifxtpw" name="Start"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SQfMyicoEeSLVrU2ifxtpw" name="Continue"/>
        <ownedReception xmi:id="_SQfMyycoEeSLVrU2ifxtpw" name="Start" signal="_SQfMyScoEeSLVrU2ifxtpw"/>
        <ownedReception xmi:id="_SQfMzCcoEeSLVrU2ifxtpw" name="Continue" signal="_SQfMyicoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SQfMzScoEeSLVrU2ifxtpw" name="Event(Start)" signal="_SQfMyScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SQfMzicoEeSLVrU2ifxtpw" name="Event(Continue)" signal="_SQfMyicoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SQfMzycoEeSLVrU2ifxtpw" name="AssertTrue" node="_SQfM3ycoEeSLVrU2ifxtpw _SQfM4CcoEeSLVrU2ifxtpw _SQfM4ScoEeSLVrU2ifxtpw _SQfM4icoEeSLVrU2ifxtpw _SQfM4ycoEeSLVrU2ifxtpw" group="_SQfM4ycoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SQfM0CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SQfM0ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SQfM0icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SQfM0ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SQfM1CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SQfM1ScoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfM1icoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfM1ycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SQfM2CcoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfM2ScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfM2icoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM2ycoEeSLVrU2ifxtpw" target="_SQfM4CcoEeSLVrU2ifxtpw" source="_SQfM3ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM3CcoEeSLVrU2ifxtpw" target="_SQfM4icoEeSLVrU2ifxtpw" source="_SQfM4ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM3ScoEeSLVrU2ifxtpw" target="_SQfM_icoEeSLVrU2ifxtpw" source="_SQfM4icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM3icoEeSLVrU2ifxtpw" target="_SQfNJScoEeSLVrU2ifxtpw" source="_SQfM4CcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SQfM4ycoEeSLVrU2ifxtpw" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SQfM5CcoEeSLVrU2ifxtpw" name="IfStatement@33b61388">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM5ScoEeSLVrU2ifxtpw" target="_SQfM9ScoEeSLVrU2ifxtpw" source="_SQfM_icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM5icoEeSLVrU2ifxtpw" target="_SQfNACcoEeSLVrU2ifxtpw" source="_SQfM_icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM5ycoEeSLVrU2ifxtpw" target="_SQfNBicoEeSLVrU2ifxtpw" source="_SQfNAycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM6CcoEeSLVrU2ifxtpw" target="_SQfNBycoEeSLVrU2ifxtpw" source="_SQfM-CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM6ScoEeSLVrU2ifxtpw" target="_SQfNCCcoEeSLVrU2ifxtpw" source="_SQfNBicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM6icoEeSLVrU2ifxtpw" target="_SQfNCCcoEeSLVrU2ifxtpw" source="_SQfNBicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM6ycoEeSLVrU2ifxtpw" target="_SQfNBycoEeSLVrU2ifxtpw" source="_SQfNCCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfM7CcoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM7ScoEeSLVrU2ifxtpw" target="_SQfM-ycoEeSLVrU2ifxtpw" source="_SQfM8CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfM7icoEeSLVrU2ifxtpw" target="_SQfNCicoEeSLVrU2ifxtpw" source="_SQfNBycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfM7ycoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SQfM8CcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SQfM7ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfM8ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfM8icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SQfM8ycoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SQfM9CcoEeSLVrU2ifxtpw" name="Test(==)">
            <first xmi:id="_SQfM9ScoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SQfM5ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfM9icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfM9ycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SQfM-CcoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SQfM6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfM-ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfM-icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SQfM-ycoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SQfM7ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfM_CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfM_ScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SQfM_icoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_SQfM3ScoEeSLVrU2ifxtpw" outgoing="_SQfM5ScoEeSLVrU2ifxtpw _SQfM5icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfM_ycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SQfNACcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SQfM5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNAScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNAicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SQfNAycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SQfM5ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNBCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNBScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SQfNBicoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SQfM5ycoEeSLVrU2ifxtpw" outgoing="_SQfM6ScoEeSLVrU2ifxtpw _SQfM6icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SQfNBycoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_SQfM6CcoEeSLVrU2ifxtpw _SQfM6ycoEeSLVrU2ifxtpw" outgoing="_SQfM7icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SQfNCCcoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SQfM6ScoEeSLVrU2ifxtpw _SQfM6icoEeSLVrU2ifxtpw" outgoing="_SQfM6ycoEeSLVrU2ifxtpw" decisionInputFlow="_SQfM6icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfNCScoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_SQfNCicoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SQfM7icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNCycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNDCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SQfNDScoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNDicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNDycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfNECcoEeSLVrU2ifxtpw" name="ExpressionStatement@46175cbd">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNEScoEeSLVrU2ifxtpw" target="_SQfNFCcoEeSLVrU2ifxtpw" source="_SQfNKCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNEicoEeSLVrU2ifxtpw" target="_SQfNEycoEeSLVrU2ifxtpw" source="_SQfNGicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfNEycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SQfNEicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SQfNFCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SQfNEScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNFScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNFicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SQfNFycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNGCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNGScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfNGicoEeSLVrU2ifxtpw" name="Tuple@6a1b2e2" outgoing="_SQfNEicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNGycoEeSLVrU2ifxtpw" target="_SQfNIicoEeSLVrU2ifxtpw" source="_SQfNHScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfNHCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SQfNHScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_SQfNGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNHicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNHycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SQfNICcoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfNIScoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SQfNIicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SQfNGycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNIycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNJCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfNJScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SQfM3icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNJicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNJycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SQfNKCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SQfNEScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNKScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNKicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfNKycoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SQfNLCcoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNLScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNLicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SQfNLycoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_SQfNMCcoEeSLVrU2ifxtpw" body="_SQfNECcoEeSLVrU2ifxtpw" decider="_SQfNDScoEeSLVrU2ifxtpw" successorClause="_SQfNMScoEeSLVrU2ifxtpw" test="_SQfM7ycoEeSLVrU2ifxtpw _SQfM9CcoEeSLVrU2ifxtpw _SQfM_ycoEeSLVrU2ifxtpw _SQfNCScoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_SQfNMScoEeSLVrU2ifxtpw" decider="_SQfNLCcoEeSLVrU2ifxtpw" predecessorClause="_SQfNMCcoEeSLVrU2ifxtpw" test="_SQfNKycoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfM3ycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SQfM2ycoEeSLVrU2ifxtpw" parameter="_SQfM1ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SQfM4CcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SQfM2ycoEeSLVrU2ifxtpw" outgoing="_SQfM3icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfM4ScoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_SQfM3CcoEeSLVrU2ifxtpw" parameter="_SQfM2CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SQfM4icoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_SQfM3CcoEeSLVrU2ifxtpw" outgoing="_SQfM3ScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SQfNMicoEeSLVrU2ifxtpw" name="AssertFalse" node="_SQfNQycoEeSLVrU2ifxtpw _SQfNRCcoEeSLVrU2ifxtpw _SQfNRScoEeSLVrU2ifxtpw _SQfNRicoEeSLVrU2ifxtpw _SQfNRycoEeSLVrU2ifxtpw" group="_SQfNRycoEeSLVrU2ifxtpw">
      <elementImport xmi:id="_SQfNMycoEeSLVrU2ifxtpw" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_SQfNNCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SQfNNScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SQfNNicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SQfNNycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SQfNOCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SQfNOScoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNOicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNOycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SQfNPCcoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNPScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNPicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNPycoEeSLVrU2ifxtpw" target="_SQfNRCcoEeSLVrU2ifxtpw" source="_SQfNQycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNQCcoEeSLVrU2ifxtpw" target="_SQfNRicoEeSLVrU2ifxtpw" source="_SQfNRScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNQScoEeSLVrU2ifxtpw" target="_SQfNZycoEeSLVrU2ifxtpw" source="_SQfNRCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNQicoEeSLVrU2ifxtpw" target="_SQfNfCcoEeSLVrU2ifxtpw" source="_SQfNRicoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SQfNRycoEeSLVrU2ifxtpw" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfNSCcoEeSLVrU2ifxtpw" name="ExpressionStatement@594c518c">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNSScoEeSLVrU2ifxtpw" target="_SQfNTScoEeSLVrU2ifxtpw" source="_SQfNaicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNSicoEeSLVrU2ifxtpw" target="_SQfNUCcoEeSLVrU2ifxtpw" source="_SQfNhScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNSycoEeSLVrU2ifxtpw" target="_SQfNTCcoEeSLVrU2ifxtpw" source="_SQfNUycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfNTCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SQfNSycoEeSLVrU2ifxtpw" behavior="_SQfMzycoEeSLVrU2ifxtpw">
            <argument xmi:id="_SQfNTScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SQfNSScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNTicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNTycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_SQfNUCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SQfNSicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNUScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNUicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfNUycoEeSLVrU2ifxtpw" name="Tuple@70c9462e" outgoing="_SQfNSycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNVCcoEeSLVrU2ifxtpw" target="_SQfNZCcoEeSLVrU2ifxtpw" source="_SQfNXycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNVScoEeSLVrU2ifxtpw" target="_SQfNcycoEeSLVrU2ifxtpw" source="_SQfNfCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNVicoEeSLVrU2ifxtpw" target="_SQfNficoEeSLVrU2ifxtpw" source="_SQfNfCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNVycoEeSLVrU2ifxtpw" target="_SQfNhCcoEeSLVrU2ifxtpw" source="_SQfNgScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNWCcoEeSLVrU2ifxtpw" target="_SQfNhScoEeSLVrU2ifxtpw" source="_SQfNdicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNWScoEeSLVrU2ifxtpw" target="_SQfNhicoEeSLVrU2ifxtpw" source="_SQfNhCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNWicoEeSLVrU2ifxtpw" target="_SQfNhicoEeSLVrU2ifxtpw" source="_SQfNhCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNWycoEeSLVrU2ifxtpw" target="_SQfNhScoEeSLVrU2ifxtpw" source="_SQfNhicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfNXCcoEeSLVrU2ifxtpw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNXScoEeSLVrU2ifxtpw" target="_SQfNeScoEeSLVrU2ifxtpw" source="_SQfNbicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfNXicoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;)">
              <result xmi:id="_SQfNXycoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;).result" outgoing="_SQfNVCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNYCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNYScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_SQfNYicoEeSLVrU2ifxtpw" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfNYycoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_SQfNZCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SQfNVCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNZScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNZicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SQfNZycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SQfNQScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNaCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNaScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SQfNaicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SQfNSScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNaycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNbCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfNbScoEeSLVrU2ifxtpw" name="Value(false)">
              <result xmi:id="_SQfNbicoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_SQfNXScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNbycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNcCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SQfNcScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SQfNcicoEeSLVrU2ifxtpw" name="Test(==)">
              <first xmi:id="_SQfNcycoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SQfNVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNdCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNdScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SQfNdicoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SQfNWCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNdycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNeCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SQfNeScoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SQfNXScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNeicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNeycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQfNfCcoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_SQfNQicoEeSLVrU2ifxtpw" outgoing="_SQfNVScoEeSLVrU2ifxtpw _SQfNVicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfNfScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
              <argument xmi:id="_SQfNficoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SQfNVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNfycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNgCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SQfNgScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SQfNVycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNgicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNgycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQfNhCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SQfNVycoEeSLVrU2ifxtpw" outgoing="_SQfNWScoEeSLVrU2ifxtpw _SQfNWicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SQfNhScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_SQfNWCcoEeSLVrU2ifxtpw _SQfNWycoEeSLVrU2ifxtpw" outgoing="_SQfNSicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SQfNhicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SQfNWScoEeSLVrU2ifxtpw _SQfNWicoEeSLVrU2ifxtpw" outgoing="_SQfNWycoEeSLVrU2ifxtpw" decisionInputFlow="_SQfNWicoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfNQycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SQfNPycoEeSLVrU2ifxtpw" parameter="_SQfNOScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SQfNRCcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SQfNPycoEeSLVrU2ifxtpw" outgoing="_SQfNQScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfNRScoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_SQfNQCcoEeSLVrU2ifxtpw" parameter="_SQfNPCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SQfNRicoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_SQfNQCcoEeSLVrU2ifxtpw" outgoing="_SQfNQicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SQfNhycoEeSLVrU2ifxtpw" name="AssertEqual" node="_SQfNoCcoEeSLVrU2ifxtpw _SQfNoScoEeSLVrU2ifxtpw _SQfNoicoEeSLVrU2ifxtpw _SQfNoycoEeSLVrU2ifxtpw _SQfNpCcoEeSLVrU2ifxtpw _SQfNpScoEeSLVrU2ifxtpw _SQfNpicoEeSLVrU2ifxtpw" group="_SQfNpicoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SQfNiCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SQfNiScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SQfNiicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SQfNiycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SQfNjCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SQfNjScoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNjicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNjycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SQfNkCcoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNkScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNkicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SQfNkycoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNlCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNlScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNlicoEeSLVrU2ifxtpw" target="_SQfNoScoEeSLVrU2ifxtpw" source="_SQfNoCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNlycoEeSLVrU2ifxtpw" target="_SQfNoycoEeSLVrU2ifxtpw" source="_SQfNoicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNmCcoEeSLVrU2ifxtpw" target="_SQfNpScoEeSLVrU2ifxtpw" source="_SQfNpCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNmScoEeSLVrU2ifxtpw" target="_SQfNyycoEeSLVrU2ifxtpw" source="_SQfNoycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNmicoEeSLVrU2ifxtpw" target="_SQfN0ycoEeSLVrU2ifxtpw" source="_SQfNpScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNmycoEeSLVrU2ifxtpw" target="_SQfOCicoEeSLVrU2ifxtpw" source="_SQfNoScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNnCcoEeSLVrU2ifxtpw" target="_SQfOMCcoEeSLVrU2ifxtpw" source="_SQfNpScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNnScoEeSLVrU2ifxtpw" target="_SQfOTicoEeSLVrU2ifxtpw" source="_SQfNpScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNnicoEeSLVrU2ifxtpw" target="_SQfOdCcoEeSLVrU2ifxtpw" source="_SQfNpScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNnycoEeSLVrU2ifxtpw" target="_SQfOlCcoEeSLVrU2ifxtpw" source="_SQfNpScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SQfNpicoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SQfNpycoEeSLVrU2ifxtpw" name="IfStatement@1642d711">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNqCcoEeSLVrU2ifxtpw" target="_SQfNwicoEeSLVrU2ifxtpw" source="_SQfNyycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNqScoEeSLVrU2ifxtpw" target="_SQfNzScoEeSLVrU2ifxtpw" source="_SQfNyycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNqicoEeSLVrU2ifxtpw" target="_SQfNyCcoEeSLVrU2ifxtpw" source="_SQfN0ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNqycoEeSLVrU2ifxtpw" target="_SQfN1ScoEeSLVrU2ifxtpw" source="_SQfN0ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNrCcoEeSLVrU2ifxtpw" target="_SQfN3CcoEeSLVrU2ifxtpw" source="_SQfN0CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNrScoEeSLVrU2ifxtpw" target="_SQfN3ScoEeSLVrU2ifxtpw" source="_SQfN2CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNricoEeSLVrU2ifxtpw" target="_SQfN3ycoEeSLVrU2ifxtpw" source="_SQfN3CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNrycoEeSLVrU2ifxtpw" target="_SQfN5icoEeSLVrU2ifxtpw" source="_SQfN3ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNsCcoEeSLVrU2ifxtpw" target="_SQfN7CcoEeSLVrU2ifxtpw" source="_SQfN3ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNsScoEeSLVrU2ifxtpw" target="_SQfNwScoEeSLVrU2ifxtpw" source="_SQfN7CcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfNsicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNsycoEeSLVrU2ifxtpw" target="_SQfN3icoEeSLVrU2ifxtpw" source="_SQfN7CcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfNtCcoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNtScoEeSLVrU2ifxtpw" target="_SQfN7ScoEeSLVrU2ifxtpw" source="_SQfN2ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNticoEeSLVrU2ifxtpw" target="_SQfN7ScoEeSLVrU2ifxtpw" source="_SQfN3CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNtycoEeSLVrU2ifxtpw" target="_SQfN7CcoEeSLVrU2ifxtpw" source="_SQfN7ScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfNuCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNuScoEeSLVrU2ifxtpw" target="_SQfN5ScoEeSLVrU2ifxtpw" source="_SQfN7ScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfNuicoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNuycoEeSLVrU2ifxtpw" target="_SQfN7icoEeSLVrU2ifxtpw" source="_SQfNxScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNvCcoEeSLVrU2ifxtpw" target="_SQfN7icoEeSLVrU2ifxtpw" source="_SQfN4icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNvScoEeSLVrU2ifxtpw" target="_SQfN7icoEeSLVrU2ifxtpw" source="_SQfN6ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfNvicoEeSLVrU2ifxtpw" target="_SQfN8CcoEeSLVrU2ifxtpw" source="_SQfN7icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNvycoEeSLVrU2ifxtpw" target="_SQfOHycoEeSLVrU2ifxtpw" source="_SQfN9icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfNwCcoEeSLVrU2ifxtpw" target="_SQfOmycoEeSLVrU2ifxtpw" source="_SQfOHycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SQfNwScoEeSLVrU2ifxtpw" name="Test(==)" incoming="_SQfNsScoEeSLVrU2ifxtpw">
            <first xmi:id="_SQfNwicoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SQfNqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNwycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNxCcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SQfNxScoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SQfNuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNxicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNxycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SQfNyCcoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SQfNqicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNyScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNyicoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SQfNyycoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_SQfNmScoEeSLVrU2ifxtpw" outgoing="_SQfNqCcoEeSLVrU2ifxtpw _SQfNqScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfNzCcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SQfNzScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SQfNqScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfNzicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfNzycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SQfN0CcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SQfNrCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN0ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN0icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SQfN0ycoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_SQfNmicoEeSLVrU2ifxtpw" outgoing="_SQfNqicoEeSLVrU2ifxtpw _SQfNqycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfN1CcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SQfN1ScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SQfNqycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN1icoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN1ycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SQfN2CcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SQfNrScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN2ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN2icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SQfN2ycoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_SQfNtScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SQfN3CcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SQfNrCcoEeSLVrU2ifxtpw" outgoing="_SQfNricoEeSLVrU2ifxtpw _SQfNticoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SQfN3ScoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SQfNrScoEeSLVrU2ifxtpw" outgoing="_SQfNrycoEeSLVrU2ifxtpw _SQfNsCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfN3icoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_SQfNsycoEeSLVrU2ifxtpw">
            <argument xmi:id="_SQfN3ycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SQfNricoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN4CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN4ScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SQfN4icoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_SQfNvCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN4ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN5CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfN5ScoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_SQfNuScoEeSLVrU2ifxtpw">
            <argument xmi:id="_SQfN5icoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SQfNrycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN5ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN6CcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SQfN6ScoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_SQfNvScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN6icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN6ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_SQfN7CcoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SQfNsCcoEeSLVrU2ifxtpw _SQfNtycoEeSLVrU2ifxtpw" outgoing="_SQfNsScoEeSLVrU2ifxtpw _SQfNsycoEeSLVrU2ifxtpw" decisionInputFlow="_SQfNsCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SQfN7ScoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SQfNtScoEeSLVrU2ifxtpw _SQfNticoEeSLVrU2ifxtpw" outgoing="_SQfNtycoEeSLVrU2ifxtpw _SQfNuScoEeSLVrU2ifxtpw" decisionInputFlow="_SQfNticoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SQfN7icoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_SQfNuycoEeSLVrU2ifxtpw _SQfNvCcoEeSLVrU2ifxtpw _SQfNvScoEeSLVrU2ifxtpw" outgoing="_SQfNvicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfN7ycoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_SQfN8CcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SQfNvicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN8ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN8icoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SQfN8ycoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN9CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN9ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfN9icoEeSLVrU2ifxtpw" name="ExpressionStatement@298ecc19" outgoing="_SQfNvycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfN9ycoEeSLVrU2ifxtpw" target="_SQfN-icoEeSLVrU2ifxtpw" source="_SQfOHCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfN-CcoEeSLVrU2ifxtpw" target="_SQfN-ScoEeSLVrU2ifxtpw" source="_SQfN_ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfN-ScoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SQfN-CcoEeSLVrU2ifxtpw" behavior="_SQfOsicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SQfN-icoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SQfN9ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfN-ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfN_CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfN_ScoEeSLVrU2ifxtpw" name="Tuple@16f6bcc6" outgoing="_SQfN-CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfN_icoEeSLVrU2ifxtpw" target="_SQfOBycoEeSLVrU2ifxtpw" source="_SQfOAicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfN_ycoEeSLVrU2ifxtpw" target="_SQfOFicoEeSLVrU2ifxtpw" source="_SQfODScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOACcoEeSLVrU2ifxtpw" target="_SQfOGScoEeSLVrU2ifxtpw" source="_SQfOEScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfOAScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SQfOAicoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_SQfN_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOAycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOBCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SQfOBScoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfOBicoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SQfOBycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SQfN_icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOCCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOCScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfOCicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SQfNmycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOCycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfODCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SQfODScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SQfN_ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfODicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfODycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfOECcoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_SQfOEScoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_SQfOACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOEicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOEycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SQfOFCcoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfOFScoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SQfOFicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SQfN_ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOFycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOGCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SQfOGScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SQfOACcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOGicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOGycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SQfOHCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SQfN9ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOHScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOHicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfOHycoEeSLVrU2ifxtpw" name="ExpressionStatement@7c0098ed" incoming="_SQfNvycoEeSLVrU2ifxtpw" outgoing="_SQfNwCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOICcoEeSLVrU2ifxtpw" target="_SQfOIycoEeSLVrU2ifxtpw" source="_SQfOmicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfOIScoEeSLVrU2ifxtpw" target="_SQfOIicoEeSLVrU2ifxtpw" source="_SQfOJicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfOIicoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SQfOIScoEeSLVrU2ifxtpw" behavior="_SQfOsicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SQfOIycoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SQfOICcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOJCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOJScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfOJicoEeSLVrU2ifxtpw" name="Tuple@745cabe9" outgoing="_SQfOIScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfOJycoEeSLVrU2ifxtpw" target="_SQfOmScoEeSLVrU2ifxtpw" source="_SQfOmCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOKCcoEeSLVrU2ifxtpw" target="_SQfOmScoEeSLVrU2ifxtpw" source="_SQfOMycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfOKScoEeSLVrU2ifxtpw" target="_SQfONicoEeSLVrU2ifxtpw" source="_SQfOmScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfOKicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SQfOKycoEeSLVrU2ifxtpw" target="_SQfOQCcoEeSLVrU2ifxtpw" source="_SQfOmScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfOLCcoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOLScoEeSLVrU2ifxtpw" target="_SQfOmicoEeSLVrU2ifxtpw" source="_SQfOOCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOLicoEeSLVrU2ifxtpw" target="_SQfOmicoEeSLVrU2ifxtpw" source="_SQfOSicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfOLycoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_SQfOMCcoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_SQfNnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOMScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOMicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SQfOMycoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_SQfOKCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfONCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfONScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfONicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1fc17fd6.operand2" incoming="_SQfOKScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfONycoEeSLVrU2ifxtpw" target="_SQfOOCcoEeSLVrU2ifxtpw" source="_SQfOPCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SQfOOCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1fc17fd6.operand2.result" incoming="_SQfONycoEeSLVrU2ifxtpw" outgoing="_SQfOLScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOOScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOOicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfOOycoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_SQfOPCcoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_SQfONycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOPScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOPicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SQfOPycoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfOQCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1fc17fd6.operand3" incoming="_SQfOKycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_SQfOQScoEeSLVrU2ifxtpw" target="_SQfOlicoEeSLVrU2ifxtpw" source="_SQfOlScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOQicoEeSLVrU2ifxtpw" target="_SQfOlicoEeSLVrU2ifxtpw" source="_SQfOUScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SQfOQycoEeSLVrU2ifxtpw" target="_SQfOVCcoEeSLVrU2ifxtpw" source="_SQfOlicoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfORCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SQfORScoEeSLVrU2ifxtpw" target="_SQfOjycoEeSLVrU2ifxtpw" source="_SQfOlicoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfORicoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfORycoEeSLVrU2ifxtpw" target="_SQfOlycoEeSLVrU2ifxtpw" source="_SQfOWicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOSCcoEeSLVrU2ifxtpw" target="_SQfOlycoEeSLVrU2ifxtpw" source="_SQfOkScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOSScoEeSLVrU2ifxtpw" target="_SQfOSicoEeSLVrU2ifxtpw" source="_SQfOlycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SQfOSicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1fc17fd6.operand3.result" incoming="_SQfOSScoEeSLVrU2ifxtpw" outgoing="_SQfOLicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOSycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOTCcoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfOTScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_SQfOTicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_SQfNnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOTycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOUCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SQfOUScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_SQfOQicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOUicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOUycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfOVCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1f8da406.operand2" incoming="_SQfOQycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOVScoEeSLVrU2ifxtpw" target="_SQfOdycoEeSLVrU2ifxtpw" source="_SQfOXicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOVicoEeSLVrU2ifxtpw" target="_SQfOeicoEeSLVrU2ifxtpw" source="_SQfOdScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOVycoEeSLVrU2ifxtpw" target="_SQfOhicoEeSLVrU2ifxtpw" source="_SQfOfScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOWCcoEeSLVrU2ifxtpw" target="_SQfOiScoEeSLVrU2ifxtpw" source="_SQfOgScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOWScoEeSLVrU2ifxtpw" target="_SQfOWicoEeSLVrU2ifxtpw" source="_SQfOjCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SQfOWicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1f8da406.operand2.result" incoming="_SQfOWScoEeSLVrU2ifxtpw" outgoing="_SQfORycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOWycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOXCcoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfOXScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SQfOXicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_SQfOVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOXycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOYCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SQfOYScoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_SQfOYicoEeSLVrU2ifxtpw" name="CastExpression@201abe50" mode="parallel" outputElement="_SQfOdScoEeSLVrU2ifxtpw" inputElement="_SQfOdCcoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOYycoEeSLVrU2ifxtpw" target="_SQfObCcoEeSLVrU2ifxtpw" source="_SQfOcicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOZCcoEeSLVrU2ifxtpw" target="_SQfOcycoEeSLVrU2ifxtpw" source="_SQfOcicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOZScoEeSLVrU2ifxtpw" target="_SQfOcycoEeSLVrU2ifxtpw" source="_SQfObycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOZicoEeSLVrU2ifxtpw" target="_SQfOaicoEeSLVrU2ifxtpw" source="_SQfOcycoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_SQfOZycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOaCcoEeSLVrU2ifxtpw" target="_SQfOcicoEeSLVrU2ifxtpw" source="_SQfOdCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOaScoEeSLVrU2ifxtpw" target="_SQfOdScoEeSLVrU2ifxtpw" source="_SQfOaicoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_SQfOaicoEeSLVrU2ifxtpw" name="Merge(CastExpression@201abe50.operand)" incoming="_SQfOZicoEeSLVrU2ifxtpw" outgoing="_SQfOaScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SQfOaycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_SQfObCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_SQfOYycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfObScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfObicoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SQfObycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_SQfOZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOcCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOcScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SQfOcicoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_SQfOaCcoEeSLVrU2ifxtpw" outgoing="_SQfOYycoEeSLVrU2ifxtpw _SQfOZCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_SQfOcycoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_SQfOZCcoEeSLVrU2ifxtpw _SQfOZScoEeSLVrU2ifxtpw" outgoing="_SQfOZicoEeSLVrU2ifxtpw" decisionInputFlow="_SQfOZScoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SQfOdCcoEeSLVrU2ifxtpw" name="CastExpression@201abe50.inputElement" incoming="_SQfNnicoEeSLVrU2ifxtpw" outgoing="_SQfOaCcoEeSLVrU2ifxtpw" regionAsInput="_SQfOYicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SQfOdScoEeSLVrU2ifxtpw" name="CastExpression@201abe50.outputElement" incoming="_SQfOaScoEeSLVrU2ifxtpw" outgoing="_SQfOVicoEeSLVrU2ifxtpw" regionAsOutput="_SQfOYicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfOdicoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SQfOdycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SQfOVScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOeCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOeScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SQfOeicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SQfOVicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOeycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOfCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SQfOfScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SQfOVycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOficoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOfycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfOgCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SQfOgScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_SQfOWCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOgicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOgycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SQfOhCcoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfOhScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SQfOhicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SQfOVycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOhycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOiCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SQfOiScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SQfOWCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOiicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOiycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SQfOjCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SQfOWScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOjScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOjicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfOjycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1f8da406.operand3" incoming="_SQfORScoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOkCcoEeSLVrU2ifxtpw" target="_SQfOkScoEeSLVrU2ifxtpw" source="_SQfOlCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SQfOkScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1f8da406.operand3.result" incoming="_SQfOkCcoEeSLVrU2ifxtpw" outgoing="_SQfOSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOkicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOkycoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_SQfOlCcoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_SQfNnycoEeSLVrU2ifxtpw" outgoing="_SQfOkCcoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SQfOlScoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@1f8da406)" outgoing="_SQfOQScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SQfOlicoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@1f8da406)" incoming="_SQfOQScoEeSLVrU2ifxtpw _SQfOQicoEeSLVrU2ifxtpw" outgoing="_SQfOQycoEeSLVrU2ifxtpw _SQfORScoEeSLVrU2ifxtpw" decisionInputFlow="_SQfOQicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SQfOlycoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@1f8da406.result)" incoming="_SQfORycoEeSLVrU2ifxtpw _SQfOSCcoEeSLVrU2ifxtpw" outgoing="_SQfOSScoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SQfOmCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@1fc17fd6)" outgoing="_SQfOJycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SQfOmScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@1fc17fd6)" incoming="_SQfOJycoEeSLVrU2ifxtpw _SQfOKCcoEeSLVrU2ifxtpw" outgoing="_SQfOKScoEeSLVrU2ifxtpw _SQfOKycoEeSLVrU2ifxtpw" decisionInputFlow="_SQfOKCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SQfOmicoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@1fc17fd6.result)" incoming="_SQfOLScoEeSLVrU2ifxtpw _SQfOLicoEeSLVrU2ifxtpw" outgoing="_SQfOICcoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfOmycoEeSLVrU2ifxtpw" name="ExpressionStatement@2f31f226" incoming="_SQfNwCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOnCcoEeSLVrU2ifxtpw" target="_SQfOnycoEeSLVrU2ifxtpw" source="_SQfOpycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfOnScoEeSLVrU2ifxtpw" target="_SQfOnicoEeSLVrU2ifxtpw" source="_SQfOpScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfOnicoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SQfOnScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SQfOnycoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SQfOnCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOoCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOoScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SQfOoicoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOoycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOpCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfOpScoEeSLVrU2ifxtpw" name="Tuple@54cbca1b" outgoing="_SQfOnScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfOpicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_SQfOpycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_SQfOnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOqCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOqScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SQfOqicoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfOqycoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SQfOrCcoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOrScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOricoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SQfOrycoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_SQfOsCcoEeSLVrU2ifxtpw" body="_SQfN9icoEeSLVrU2ifxtpw _SQfOHycoEeSLVrU2ifxtpw _SQfOmycoEeSLVrU2ifxtpw" decider="_SQfN8ycoEeSLVrU2ifxtpw" successorClause="_SQfOsScoEeSLVrU2ifxtpw" test="_SQfNwScoEeSLVrU2ifxtpw _SQfNzCcoEeSLVrU2ifxtpw _SQfN1CcoEeSLVrU2ifxtpw _SQfN3icoEeSLVrU2ifxtpw _SQfN5ScoEeSLVrU2ifxtpw _SQfN7ycoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_SQfOsScoEeSLVrU2ifxtpw" decider="_SQfOrCcoEeSLVrU2ifxtpw" predecessorClause="_SQfOsCcoEeSLVrU2ifxtpw" test="_SQfOqycoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfNoCcoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SQfNlicoEeSLVrU2ifxtpw" parameter="_SQfNjScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SQfNoScoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SQfNlicoEeSLVrU2ifxtpw" outgoing="_SQfNmycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfNoicoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_SQfNlycoEeSLVrU2ifxtpw" parameter="_SQfNkCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SQfNoycoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_SQfNlycoEeSLVrU2ifxtpw" outgoing="_SQfNmScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfNpCcoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_SQfNmCcoEeSLVrU2ifxtpw" parameter="_SQfNkycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SQfNpScoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_SQfNmCcoEeSLVrU2ifxtpw" outgoing="_SQfNmicoEeSLVrU2ifxtpw _SQfNnCcoEeSLVrU2ifxtpw _SQfNnScoEeSLVrU2ifxtpw _SQfNnicoEeSLVrU2ifxtpw _SQfNnycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SQfOsicoEeSLVrU2ifxtpw" name="Write" node="_SQfOvScoEeSLVrU2ifxtpw _SQfOvicoEeSLVrU2ifxtpw _SQfOvycoEeSLVrU2ifxtpw" group="_SQfOvycoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SQfOsycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SQfOtCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SQfOtScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SQfOticoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SQfOtycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SQfOuCcoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfOuScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfOuicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOuycoEeSLVrU2ifxtpw" target="_SQfOvicoEeSLVrU2ifxtpw" source="_SQfOvScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOvCcoEeSLVrU2ifxtpw" target="_SQfxsScoEeSLVrU2ifxtpw" source="_SQfOvicoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SQfOvycoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfOwCcoEeSLVrU2ifxtpw" name="ExpressionStatement@3830ff35">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOwScoEeSLVrU2ifxtpw" target="_SQfxvicoEeSLVrU2ifxtpw" source="_SQfxyycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SQfOwicoEeSLVrU2ifxtpw" target="_SQfOwycoEeSLVrU2ifxtpw" source="_SQfxvycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SQfOwycoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_SQfOwicoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SQfxvicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfOxCcoEeSLVrU2ifxtpw" target="_SQfxtScoEeSLVrU2ifxtpw" source="_SQfxsScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfxsCcoEeSLVrU2ifxtpw" target="_SQfxuycoEeSLVrU2ifxtpw" source="_SQfxvicoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_SQfxsScoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_SQfOvCcoEeSLVrU2ifxtpw" outgoing="_SQfOxCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfxsicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfxsycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SQfxtCcoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_SQfxtScoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_SQfOxCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfxticoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfxtycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SQfxuCcoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfxuScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfxuicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SQfxuycoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_SQfxsCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfxvCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfxvScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SQfxvicoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_SQfOwScoEeSLVrU2ifxtpw" outgoing="_SQfxsCcoEeSLVrU2ifxtpw" regionAsInput="_SQfOwycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfxvycoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_SQfOwicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfxwCcoEeSLVrU2ifxtpw" target="_SQfxxScoEeSLVrU2ifxtpw" source="_SQfx0CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfxwScoEeSLVrU2ifxtpw" target="_SQfx2CcoEeSLVrU2ifxtpw" source="_SQfx1CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SQfxwicoEeSLVrU2ifxtpw" target="_SQfxxCcoEeSLVrU2ifxtpw" source="_SQfxzicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SQfxwycoEeSLVrU2ifxtpw" target="_SQfxyCcoEeSLVrU2ifxtpw" source="_SQfx2CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SQfxxCcoEeSLVrU2ifxtpw" name="Call(At)" incoming="_SQfxwicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SQfxxScoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SQfxwCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfxxicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfxxycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SQfxyCcoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SQfxwycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfxyScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfxyicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SQfxyycoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SQfOwScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfxzCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfxzScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SQfxzicoEeSLVrU2ifxtpw" name="Tuple@5d084a4e" outgoing="_SQfxwicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_SQfxzycoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_SQfx0CcoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_SQfxwCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfx0ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfx0icoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SQfx0ycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SQfx1CcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SQfxwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQfx1ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQfx1icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SQfx1ycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SQfx2CcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SQfxwScoEeSLVrU2ifxtpw" outgoing="_SQfxwycoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SQfOvScoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_SQfOuycoEeSLVrU2ifxtpw" parameter="_SQfOuCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SQfOvicoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_SQfOuycoEeSLVrU2ifxtpw" outgoing="_SQfOvCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <profileApplication xmi:id="_SQfx2ScoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_SQfx2icoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_SQfx2ycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd9sycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQfx3CcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd_rScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQfx3ScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQemFicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQfx3icoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQemEicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQfx3ycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd-QycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQfx4CcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd-RycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQfx4ScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQenxicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQfx4icoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd_rCcoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQfx4ycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd9LicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQgYwCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQenMicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQgYwScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQempicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQgYwicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQenwicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQgYwycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQek-ScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQgYxCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQelgicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQgYxScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd_JycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQgYxicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQelgycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQgYxycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQekbScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQgYyCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQenNicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQgYyScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQej3ScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQgYyicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd9tycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQg_0CcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQek_ScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQg_0ScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQfMxCcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQg_0icoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd9KicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQg_0ycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQej2ScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQg_1CcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQemoicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQg_1ScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQd_IycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SQg_1icoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQfMyCcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SQg_1ycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SQekaScoEeSLVrU2ifxtpw"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_RgzaICcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_RgzaIScoEeSLVrU2ifxtpw" name="Expressions_Constructor_Destructor" classifierBehavior="_RgzaKicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_RgzaIicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RgzaIycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RgzaJCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RgzaJScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RgzaJicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_RgzaJycoEeSLVrU2ifxtpw" name="Expressions_Constructor_Destructor$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzaKCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaKScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RgzaKicoEeSLVrU2ifxtpw" name="Expressions_Constructor_Destructor$classifierBehavior$1" visibility="private" isActive="true" node="_RgzaKycoEeSLVrU2ifxtpw" group="_RgzaKycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RgzaKycoEeSLVrU2ifxtpw" name="Body(Expressions_Constructor_Destructor$classifierBehavior$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaLCcoEeSLVrU2ifxtpw" target="_RgzaoicoEeSLVrU2ifxtpw" source="_RgzafScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaLScoEeSLVrU2ifxtpw" target="_RgzahScoEeSLVrU2ifxtpw" source="_RgzaUycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaLicoEeSLVrU2ifxtpw" target="_RgzaxScoEeSLVrU2ifxtpw" source="_RgzafScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaLycoEeSLVrU2ifxtpw" target="_RgzaqCcoEeSLVrU2ifxtpw" source="_RgzahScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaMCcoEeSLVrU2ifxtpw" target="_Rgza5CcoEeSLVrU2ifxtpw" source="_RgzafScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaMScoEeSLVrU2ifxtpw" target="_RgzayycoEeSLVrU2ifxtpw" source="_RgzaqCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaMicoEeSLVrU2ifxtpw" target="_Rgza_icoEeSLVrU2ifxtpw" source="_RgzafScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaMycoEeSLVrU2ifxtpw" target="_Rgza5ScoEeSLVrU2ifxtpw" source="_RgzayycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaNCcoEeSLVrU2ifxtpw" target="_RgzbHCcoEeSLVrU2ifxtpw" source="_RgzaficoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaNScoEeSLVrU2ifxtpw" target="_Rgza_ycoEeSLVrU2ifxtpw" source="_Rgza5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaNicoEeSLVrU2ifxtpw" target="_RgzbPycoEeSLVrU2ifxtpw" source="_RgzaficoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaNycoEeSLVrU2ifxtpw" target="_RgzbIicoEeSLVrU2ifxtpw" source="_Rgza_ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaOCcoEeSLVrU2ifxtpw" target="_RgzbXicoEeSLVrU2ifxtpw" source="_RgzaficoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaOScoEeSLVrU2ifxtpw" target="_RgzbRScoEeSLVrU2ifxtpw" source="_RgzbIicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaOicoEeSLVrU2ifxtpw" target="_RgzbeCcoEeSLVrU2ifxtpw" source="_RgzaficoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaOycoEeSLVrU2ifxtpw" target="_RgzbXycoEeSLVrU2ifxtpw" source="_RgzbRScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaPCcoEeSLVrU2ifxtpw" target="_RgzblicoEeSLVrU2ifxtpw" source="_RgzafycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaPScoEeSLVrU2ifxtpw" target="_RgzbeScoEeSLVrU2ifxtpw" source="_RgzbXycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaPicoEeSLVrU2ifxtpw" target="_RgzbuScoEeSLVrU2ifxtpw" source="_RgzafycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaPycoEeSLVrU2ifxtpw" target="_RgzbnCcoEeSLVrU2ifxtpw" source="_RgzbeScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaQCcoEeSLVrU2ifxtpw" target="_Rgzb2CcoEeSLVrU2ifxtpw" source="_RgzafycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaQScoEeSLVrU2ifxtpw" target="_RgzbvycoEeSLVrU2ifxtpw" source="_RgzbnCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaQicoEeSLVrU2ifxtpw" target="_Rgzb8icoEeSLVrU2ifxtpw" source="_RgzafycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaQycoEeSLVrU2ifxtpw" target="_Rgzb2ScoEeSLVrU2ifxtpw" source="_RgzbvycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaRCcoEeSLVrU2ifxtpw" target="_RgzcBScoEeSLVrU2ifxtpw" source="_RgzagCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaRScoEeSLVrU2ifxtpw" target="_Rgzb8ycoEeSLVrU2ifxtpw" source="_Rgzb2ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaRicoEeSLVrU2ifxtpw" target="_RgzcHScoEeSLVrU2ifxtpw" source="_RgzagicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaRycoEeSLVrU2ifxtpw" target="_RgzcCycoEeSLVrU2ifxtpw" source="_Rgzb8ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaSCcoEeSLVrU2ifxtpw" target="_RgzcNScoEeSLVrU2ifxtpw" source="_RgzagycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaSScoEeSLVrU2ifxtpw" target="_RgzcIycoEeSLVrU2ifxtpw" source="_RgzcCycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaSicoEeSLVrU2ifxtpw" target="_RgzcWCcoEeSLVrU2ifxtpw" source="_RgzagScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaSycoEeSLVrU2ifxtpw" target="_RgzcOycoEeSLVrU2ifxtpw" source="_RgzcIycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaTCcoEeSLVrU2ifxtpw" target="_RgzcdycoEeSLVrU2ifxtpw" source="_RgzagScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaTScoEeSLVrU2ifxtpw" target="_RgzcXicoEeSLVrU2ifxtpw" source="_RgzcOycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaTicoEeSLVrU2ifxtpw" target="_RgzclScoEeSLVrU2ifxtpw" source="_RgzahCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaTycoEeSLVrU2ifxtpw" target="_RgzceCcoEeSLVrU2ifxtpw" source="_RgzcXicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaUCcoEeSLVrU2ifxtpw" target="_RgzcuCcoEeSLVrU2ifxtpw" source="_RgzahCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaUScoEeSLVrU2ifxtpw" target="_RgzcmycoEeSLVrU2ifxtpw" source="_RgzceCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaUicoEeSLVrU2ifxtpw" target="_RgzczCcoEeSLVrU2ifxtpw" source="_RgzcmycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzaUycoEeSLVrU2ifxtpw" name="ExpressionStatement@50d2d2b0" outgoing="_RgzaLScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaVCcoEeSLVrU2ifxtpw" target="_RgzafScoEeSLVrU2ifxtpw" source="_RgzaXicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaVScoEeSLVrU2ifxtpw" target="_RgzaficoEeSLVrU2ifxtpw" source="_RgzaYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaVicoEeSLVrU2ifxtpw" target="_RgzafycoEeSLVrU2ifxtpw" source="_RgzaZCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaVycoEeSLVrU2ifxtpw" target="_RgzagCcoEeSLVrU2ifxtpw" source="_RgzaZycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaWCcoEeSLVrU2ifxtpw" target="_RgzagScoEeSLVrU2ifxtpw" source="_RgzaaicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaWScoEeSLVrU2ifxtpw" target="_RgzagicoEeSLVrU2ifxtpw" source="_RgzabScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaWicoEeSLVrU2ifxtpw" target="_RgzagycoEeSLVrU2ifxtpw" source="_RgzacCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaWycoEeSLVrU2ifxtpw" target="_RgzahCcoEeSLVrU2ifxtpw" source="_RgzacycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaXCcoEeSLVrU2ifxtpw" target="_RgzadicoEeSLVrU2ifxtpw" source="_RgzaeicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RgzaXScoEeSLVrU2ifxtpw" name="Call(test)" operation="_Rg0CZScoEeSLVrU2ifxtpw">
              <result xmi:id="_RgzaXicoEeSLVrU2ifxtpw" name="Call(test).result(employee1)" outgoing="_RgzaVCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzaXycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaYCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RgzaYScoEeSLVrU2ifxtpw" name="Call(test).result(employee2)" outgoing="_RgzaVScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzaYicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaYycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RgzaZCcoEeSLVrU2ifxtpw" name="Call(test).result(employee3)" outgoing="_RgzaVicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzaZScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaZicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RgzaZycoEeSLVrU2ifxtpw" name="Call(test).result(init)" outgoing="_RgzaVycoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzaaCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaaScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RgzaaicoEeSLVrU2ifxtpw" name="Call(test).result(log)" outgoing="_RgzaWCcoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzaaycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzabCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RgzabScoEeSLVrU2ifxtpw" name="Call(test).result(monitor1)" outgoing="_RgzaWScoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzabicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzabycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RgzacCcoEeSLVrU2ifxtpw" name="Call(test).result(monitor2)" outgoing="_RgzaWicoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzacScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzacicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RgzacycoEeSLVrU2ifxtpw" name="Call(test).result(d)" outgoing="_RgzaWycoEeSLVrU2ifxtpw" type="_Rg0q0CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzadCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzadScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_RgzadicoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_RgzaXCcoEeSLVrU2ifxtpw" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzadycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaeCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RgzaeScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_RgzaeicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RgzaXCcoEeSLVrU2ifxtpw" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzaeycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzafCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzafScoEeSLVrU2ifxtpw" name="Fork(employee1)@715c2e3a" incoming="_RgzaVCcoEeSLVrU2ifxtpw" outgoing="_RgzaLCcoEeSLVrU2ifxtpw _RgzaLicoEeSLVrU2ifxtpw _RgzaMCcoEeSLVrU2ifxtpw _RgzaMicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzaficoEeSLVrU2ifxtpw" name="Fork(employee2)@6da5e8b1" incoming="_RgzaVScoEeSLVrU2ifxtpw" outgoing="_RgzaNCcoEeSLVrU2ifxtpw _RgzaNicoEeSLVrU2ifxtpw _RgzaOCcoEeSLVrU2ifxtpw _RgzaOicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzafycoEeSLVrU2ifxtpw" name="Fork(employee3)@274ff4b4" incoming="_RgzaVicoEeSLVrU2ifxtpw" outgoing="_RgzaPCcoEeSLVrU2ifxtpw _RgzaPicoEeSLVrU2ifxtpw _RgzaQCcoEeSLVrU2ifxtpw _RgzaQicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzagCcoEeSLVrU2ifxtpw" name="Fork(init)@724a6995" incoming="_RgzaVycoEeSLVrU2ifxtpw" outgoing="_RgzaRCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzagScoEeSLVrU2ifxtpw" name="Fork(log)@7359efd1" incoming="_RgzaWCcoEeSLVrU2ifxtpw" outgoing="_RgzaSicoEeSLVrU2ifxtpw _RgzaTCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzagicoEeSLVrU2ifxtpw" name="Fork(monitor1)@158fbd81" incoming="_RgzaWScoEeSLVrU2ifxtpw" outgoing="_RgzaRicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzagycoEeSLVrU2ifxtpw" name="Fork(monitor2)@fe26b36" incoming="_RgzaWicoEeSLVrU2ifxtpw" outgoing="_RgzaSCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzahCcoEeSLVrU2ifxtpw" name="Fork(d)@59ecae5f" incoming="_RgzaWycoEeSLVrU2ifxtpw" outgoing="_RgzaTicoEeSLVrU2ifxtpw _RgzaUCcoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzahScoEeSLVrU2ifxtpw" name="ExpressionStatement@46db8311" incoming="_RgzaLScoEeSLVrU2ifxtpw" outgoing="_RgzaLycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzahicoEeSLVrU2ifxtpw" target="_RgzaiycoEeSLVrU2ifxtpw" source="_RgzalycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzahycoEeSLVrU2ifxtpw" target="_RgzajicoEeSLVrU2ifxtpw" source="_RgzanycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaiCcoEeSLVrU2ifxtpw" target="_RgzakScoEeSLVrU2ifxtpw" source="_RgzapCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzaiScoEeSLVrU2ifxtpw" target="_RgzaiicoEeSLVrU2ifxtpw" source="_RgzalCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzaiicoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RgzaiScoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzaiycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RgzahicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzajCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzajScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzajicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RgzahycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzajycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzakCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzakScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RgzaiCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzakicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzakycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzalCcoEeSLVrU2ifxtpw" name="Tuple@41ddf2cd" outgoing="_RgzaiScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzalScoEeSLVrU2ifxtpw" target="_RgzanCcoEeSLVrU2ifxtpw" source="_RgzaoicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzalicoEeSLVrU2ifxtpw" name="Value(&quot;employee1.id&quot;)">
                <result xmi:id="_RgzalycoEeSLVrU2ifxtpw" name="Value(&quot;employee1.id&quot;).result" outgoing="_RgzahicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzamCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzamScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzamicoEeSLVrU2ifxtpw" value="employee1.id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzamycoEeSLVrU2ifxtpw" name="Read(id)" structuralFeature="_Rg0o-CcoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzanCcoEeSLVrU2ifxtpw" name="Read(id).object" incoming="_RgzalScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzanScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzanicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzanycoEeSLVrU2ifxtpw" name="Read(id).result" outgoing="_RgzahycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzaoCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaoScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzaoicoEeSLVrU2ifxtpw" name="Fork(Fork(employee1)@715c2e3a)" incoming="_RgzaLCcoEeSLVrU2ifxtpw" outgoing="_RgzalScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzaoycoEeSLVrU2ifxtpw" name="Value(100)">
                <result xmi:id="_RgzapCcoEeSLVrU2ifxtpw" name="Value(100).result" outgoing="_RgzaiCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzapScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzapicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RgzapycoEeSLVrU2ifxtpw" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzaqCcoEeSLVrU2ifxtpw" name="ExpressionStatement@7b1c0951" incoming="_RgzaLycoEeSLVrU2ifxtpw" outgoing="_RgzaMScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaqScoEeSLVrU2ifxtpw" target="_RgzaricoEeSLVrU2ifxtpw" source="_RgzauicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaqicoEeSLVrU2ifxtpw" target="_RgzasScoEeSLVrU2ifxtpw" source="_RgzawicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzaqycoEeSLVrU2ifxtpw" target="_RgzatCcoEeSLVrU2ifxtpw" source="_RgzaxycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzarCcoEeSLVrU2ifxtpw" target="_RgzarScoEeSLVrU2ifxtpw" source="_RgzatycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzarScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RgzarCcoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzaricoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RgzaqScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzarycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzasCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzasScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RgzaqicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzasicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzasycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzatCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RgzaqycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzatScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaticoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzatycoEeSLVrU2ifxtpw" name="Tuple@19bed536" outgoing="_RgzarCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzauCcoEeSLVrU2ifxtpw" target="_RgzavycoEeSLVrU2ifxtpw" source="_RgzaxScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzauScoEeSLVrU2ifxtpw" name="Value(&quot;employee1.name&quot;)">
                <result xmi:id="_RgzauicoEeSLVrU2ifxtpw" name="Value(&quot;employee1.name&quot;).result" outgoing="_RgzaqScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzauycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzavCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzavScoEeSLVrU2ifxtpw" value="employee1.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzavicoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_Rg0o-ycoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzavycoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_RgzauCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzawCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzawScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzawicoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_RgzaqicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzawycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzaxCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzaxScoEeSLVrU2ifxtpw" name="Fork(Fork(employee1)@715c2e3a)" incoming="_RgzaLicoEeSLVrU2ifxtpw" outgoing="_RgzauCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzaxicoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;)">
                <result xmi:id="_RgzaxycoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;).result" outgoing="_RgzaqycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzayCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzayScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzayicoEeSLVrU2ifxtpw" value="Fred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzayycoEeSLVrU2ifxtpw" name="ExpressionStatement@5dcd5df" incoming="_RgzaMScoEeSLVrU2ifxtpw" outgoing="_RgzaMycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzazCcoEeSLVrU2ifxtpw" target="_Rgza0CcoEeSLVrU2ifxtpw" source="_Rgza2ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzazScoEeSLVrU2ifxtpw" target="_Rgza0ycoEeSLVrU2ifxtpw" source="_Rgza4ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzazicoEeSLVrU2ifxtpw" target="_RgzazycoEeSLVrU2ifxtpw" source="_Rgza1icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzazycoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_RgzazicoEeSLVrU2ifxtpw" behavior="_Rg0sIScoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rgza0CcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_RgzazCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza0ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza0icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rgza0ycoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_RgzazScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza1CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza1ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgza1icoEeSLVrU2ifxtpw" name="Tuple@4240d9c3" outgoing="_RgzazicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgza1ycoEeSLVrU2ifxtpw" target="_Rgza3icoEeSLVrU2ifxtpw" source="_Rgza5CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rgza2CcoEeSLVrU2ifxtpw" name="Value(&quot;employee1.transferred&quot;)">
                <result xmi:id="_Rgza2ScoEeSLVrU2ifxtpw" name="Value(&quot;employee1.transferred&quot;).result" outgoing="_RgzazCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza2icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza2ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rgza3CcoEeSLVrU2ifxtpw" value="employee1.transferred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rgza3ScoEeSLVrU2ifxtpw" name="Read(transferred)" structuralFeature="_Rg0o_icoEeSLVrU2ifxtpw">
                <object xmi:id="_Rgza3icoEeSLVrU2ifxtpw" name="Read(transferred).object" incoming="_Rgza1ycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza3ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza4CcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Rgza4ScoEeSLVrU2ifxtpw" name="Read(transferred).result" outgoing="_RgzazScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza4icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza4ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Rgza5CcoEeSLVrU2ifxtpw" name="Fork(Fork(employee1)@715c2e3a)" incoming="_RgzaMCcoEeSLVrU2ifxtpw" outgoing="_Rgza1ycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgza5ScoEeSLVrU2ifxtpw" name="ExpressionStatement@54c1bb6b" incoming="_RgzaMycoEeSLVrU2ifxtpw" outgoing="_RgzaNScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgza5icoEeSLVrU2ifxtpw" target="_Rgza6icoEeSLVrU2ifxtpw" source="_Rgza8ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgza5ycoEeSLVrU2ifxtpw" target="_Rgza7ScoEeSLVrU2ifxtpw" source="_Rgza-ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rgza6CcoEeSLVrU2ifxtpw" target="_Rgza6ScoEeSLVrU2ifxtpw" source="_Rgza8CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rgza6ScoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_Rgza6CcoEeSLVrU2ifxtpw" behavior="_Rg0sIScoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rgza6icoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_Rgza5icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza6ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza7CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rgza7ScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_Rgza5ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza7icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza7ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgza8CcoEeSLVrU2ifxtpw" name="Tuple@58fd1503" outgoing="_Rgza6CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgza8ScoEeSLVrU2ifxtpw" target="_Rgza-CcoEeSLVrU2ifxtpw" source="_Rgza_icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rgza8icoEeSLVrU2ifxtpw" name="Value(&quot;employee1.relocated&quot;)">
                <result xmi:id="_Rgza8ycoEeSLVrU2ifxtpw" name="Value(&quot;employee1.relocated&quot;).result" outgoing="_Rgza5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza9CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza9ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rgza9icoEeSLVrU2ifxtpw" value="employee1.relocated">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rgza9ycoEeSLVrU2ifxtpw" name="Read(relocated)" structuralFeature="_Rg0pAScoEeSLVrU2ifxtpw">
                <object xmi:id="_Rgza-CcoEeSLVrU2ifxtpw" name="Read(relocated).object" incoming="_Rgza8ScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza-ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza-icoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Rgza-ycoEeSLVrU2ifxtpw" name="Read(relocated).result" outgoing="_Rgza5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgza_CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgza_ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Rgza_icoEeSLVrU2ifxtpw" name="Fork(Fork(employee1)@715c2e3a)" incoming="_RgzaMicoEeSLVrU2ifxtpw" outgoing="_Rgza8ScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgza_ycoEeSLVrU2ifxtpw" name="ExpressionStatement@668caeb0" incoming="_RgzaNScoEeSLVrU2ifxtpw" outgoing="_RgzaNycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbACcoEeSLVrU2ifxtpw" target="_RgzbBScoEeSLVrU2ifxtpw" source="_RgzbEScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbAScoEeSLVrU2ifxtpw" target="_RgzbCCcoEeSLVrU2ifxtpw" source="_RgzbGScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbAicoEeSLVrU2ifxtpw" target="_RgzbCycoEeSLVrU2ifxtpw" source="_RgzbHicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzbAycoEeSLVrU2ifxtpw" target="_RgzbBCcoEeSLVrU2ifxtpw" source="_RgzbDicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzbBCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RgzbAycoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzbBScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RgzbACcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbBicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbBycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbCCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RgzbAScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbCScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbCicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbCycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RgzbAicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbDCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbDScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbDicoEeSLVrU2ifxtpw" name="Tuple@73836d99" outgoing="_RgzbAycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbDycoEeSLVrU2ifxtpw" target="_RgzbFicoEeSLVrU2ifxtpw" source="_RgzbHCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbECcoEeSLVrU2ifxtpw" name="Value(&quot;employee2.id&quot;)">
                <result xmi:id="_RgzbEScoEeSLVrU2ifxtpw" name="Value(&quot;employee2.id&quot;).result" outgoing="_RgzbACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbEicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbEycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzbFCcoEeSLVrU2ifxtpw" value="employee2.id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzbFScoEeSLVrU2ifxtpw" name="Read(id)" structuralFeature="_Rg0o-CcoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzbFicoEeSLVrU2ifxtpw" name="Read(id).object" incoming="_RgzbDycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbFycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbGCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzbGScoEeSLVrU2ifxtpw" name="Read(id).result" outgoing="_RgzbAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbGicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbGycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzbHCcoEeSLVrU2ifxtpw" name="Fork(Fork(employee2)@6da5e8b1)" incoming="_RgzaNCcoEeSLVrU2ifxtpw" outgoing="_RgzbDycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbHScoEeSLVrU2ifxtpw" name="Value(100)">
                <result xmi:id="_RgzbHicoEeSLVrU2ifxtpw" name="Value(100).result" outgoing="_RgzbAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbHycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbICcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RgzbIScoEeSLVrU2ifxtpw" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbIicoEeSLVrU2ifxtpw" name="ExpressionStatement@6c6f2214" incoming="_RgzaNycoEeSLVrU2ifxtpw" outgoing="_RgzaOScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbIycoEeSLVrU2ifxtpw" target="_RgzbKCcoEeSLVrU2ifxtpw" source="_RgzbNCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbJCcoEeSLVrU2ifxtpw" target="_RgzbKycoEeSLVrU2ifxtpw" source="_RgzbPCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbJScoEeSLVrU2ifxtpw" target="_RgzbLicoEeSLVrU2ifxtpw" source="_RgzbQScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzbJicoEeSLVrU2ifxtpw" target="_RgzbJycoEeSLVrU2ifxtpw" source="_RgzbMScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzbJycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RgzbJicoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzbKCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RgzbIycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbKScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbKicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbKycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RgzbJCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbLCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbLScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbLicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RgzbJScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbLycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbMCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbMScoEeSLVrU2ifxtpw" name="Tuple@5870a2ae" outgoing="_RgzbJicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbMicoEeSLVrU2ifxtpw" target="_RgzbOScoEeSLVrU2ifxtpw" source="_RgzbPycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbMycoEeSLVrU2ifxtpw" name="Value(&quot;employee2.name&quot;)">
                <result xmi:id="_RgzbNCcoEeSLVrU2ifxtpw" name="Value(&quot;employee2.name&quot;).result" outgoing="_RgzbIycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbNScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbNicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzbNycoEeSLVrU2ifxtpw" value="employee2.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzbOCcoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_Rg0o-ycoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzbOScoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_RgzbMicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbOicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbOycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzbPCcoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_RgzbJCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbPScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbPicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzbPycoEeSLVrU2ifxtpw" name="Fork(Fork(employee2)@6da5e8b1)" incoming="_RgzaNicoEeSLVrU2ifxtpw" outgoing="_RgzbMicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbQCcoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;)">
                <result xmi:id="_RgzbQScoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;).result" outgoing="_RgzbJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbQicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbQycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzbRCcoEeSLVrU2ifxtpw" value="Fred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbRScoEeSLVrU2ifxtpw" name="ExpressionStatement@19beb675" incoming="_RgzaOScoEeSLVrU2ifxtpw" outgoing="_RgzaOycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbRicoEeSLVrU2ifxtpw" target="_RgzbSicoEeSLVrU2ifxtpw" source="_RgzbUycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbRycoEeSLVrU2ifxtpw" target="_RgzbTScoEeSLVrU2ifxtpw" source="_RgzbWycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzbSCcoEeSLVrU2ifxtpw" target="_RgzbSScoEeSLVrU2ifxtpw" source="_RgzbUCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzbSScoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_RgzbSCcoEeSLVrU2ifxtpw" behavior="_Rg1PUycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzbSicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_RgzbRicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbSycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbTCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbTScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_RgzbRycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbTicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbTycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbUCcoEeSLVrU2ifxtpw" name="Tuple@64b8ecac" outgoing="_RgzbSCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbUScoEeSLVrU2ifxtpw" target="_RgzbWCcoEeSLVrU2ifxtpw" source="_RgzbXicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbUicoEeSLVrU2ifxtpw" name="Value(&quot;employee2.transferred&quot;)">
                <result xmi:id="_RgzbUycoEeSLVrU2ifxtpw" name="Value(&quot;employee2.transferred&quot;).result" outgoing="_RgzbRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbVCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbVScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzbVicoEeSLVrU2ifxtpw" value="employee2.transferred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzbVycoEeSLVrU2ifxtpw" name="Read(transferred)" structuralFeature="_Rg0o_icoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzbWCcoEeSLVrU2ifxtpw" name="Read(transferred).object" incoming="_RgzbUScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbWScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbWicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzbWycoEeSLVrU2ifxtpw" name="Read(transferred).result" outgoing="_RgzbRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbXCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbXScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzbXicoEeSLVrU2ifxtpw" name="Fork(Fork(employee2)@6da5e8b1)" incoming="_RgzaOCcoEeSLVrU2ifxtpw" outgoing="_RgzbUScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbXycoEeSLVrU2ifxtpw" name="ExpressionStatement@1fa6dc16" incoming="_RgzaOycoEeSLVrU2ifxtpw" outgoing="_RgzaPScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbYCcoEeSLVrU2ifxtpw" target="_RgzbZCcoEeSLVrU2ifxtpw" source="_RgzbbScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbYScoEeSLVrU2ifxtpw" target="_RgzbZycoEeSLVrU2ifxtpw" source="_RgzbdScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzbYicoEeSLVrU2ifxtpw" target="_RgzbYycoEeSLVrU2ifxtpw" source="_RgzbaicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzbYycoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_RgzbYicoEeSLVrU2ifxtpw" behavior="_Rg0sIScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzbZCcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_RgzbYCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbZScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbZicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbZycoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_RgzbYScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbaCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbaScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbaicoEeSLVrU2ifxtpw" name="Tuple@562ce6ad" outgoing="_RgzbYicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbaycoEeSLVrU2ifxtpw" target="_RgzbcicoEeSLVrU2ifxtpw" source="_RgzbeCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbbCcoEeSLVrU2ifxtpw" name="Value(&quot;employee2.relocated&quot;)">
                <result xmi:id="_RgzbbScoEeSLVrU2ifxtpw" name="Value(&quot;employee2.relocated&quot;).result" outgoing="_RgzbYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbbicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbbycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzbcCcoEeSLVrU2ifxtpw" value="employee2.relocated">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzbcScoEeSLVrU2ifxtpw" name="Read(relocated)" structuralFeature="_Rg0pAScoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzbcicoEeSLVrU2ifxtpw" name="Read(relocated).object" incoming="_RgzbaycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbcycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbdCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzbdScoEeSLVrU2ifxtpw" name="Read(relocated).result" outgoing="_RgzbYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbdicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbdycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzbeCcoEeSLVrU2ifxtpw" name="Fork(Fork(employee2)@6da5e8b1)" incoming="_RgzaOicoEeSLVrU2ifxtpw" outgoing="_RgzbaycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbeScoEeSLVrU2ifxtpw" name="ExpressionStatement@217c40eb" incoming="_RgzaPScoEeSLVrU2ifxtpw" outgoing="_RgzaPycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbeicoEeSLVrU2ifxtpw" target="_RgzbfycoEeSLVrU2ifxtpw" source="_RgzbiycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbeycoEeSLVrU2ifxtpw" target="_RgzbgicoEeSLVrU2ifxtpw" source="_RgzbkycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbfCcoEeSLVrU2ifxtpw" target="_RgzbhScoEeSLVrU2ifxtpw" source="_RgzbmCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzbfScoEeSLVrU2ifxtpw" target="_RgzbficoEeSLVrU2ifxtpw" source="_RgzbiCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzbficoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RgzbfScoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzbfycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RgzbeicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbgCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbgScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbgicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RgzbeycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbgycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbhCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbhScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RgzbfCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbhicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbhycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbiCcoEeSLVrU2ifxtpw" name="Tuple@10dccd9c" outgoing="_RgzbfScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbiScoEeSLVrU2ifxtpw" target="_RgzbkCcoEeSLVrU2ifxtpw" source="_RgzblicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbiicoEeSLVrU2ifxtpw" name="Value(&quot;employee3.id&quot;)">
                <result xmi:id="_RgzbiycoEeSLVrU2ifxtpw" name="Value(&quot;employee3.id&quot;).result" outgoing="_RgzbeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbjCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbjScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzbjicoEeSLVrU2ifxtpw" value="employee3.id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzbjycoEeSLVrU2ifxtpw" name="Read(id)" structuralFeature="_Rg0o-CcoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzbkCcoEeSLVrU2ifxtpw" name="Read(id).object" incoming="_RgzbiScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbkScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbkicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzbkycoEeSLVrU2ifxtpw" name="Read(id).result" outgoing="_RgzbeycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzblCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzblScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzblicoEeSLVrU2ifxtpw" name="Fork(Fork(employee3)@274ff4b4)" incoming="_RgzaPCcoEeSLVrU2ifxtpw" outgoing="_RgzbiScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzblycoEeSLVrU2ifxtpw" name="Value(100)">
                <result xmi:id="_RgzbmCcoEeSLVrU2ifxtpw" name="Value(100).result" outgoing="_RgzbfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbmScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbmicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RgzbmycoEeSLVrU2ifxtpw" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbnCcoEeSLVrU2ifxtpw" name="ExpressionStatement@31d30caa" incoming="_RgzaPycoEeSLVrU2ifxtpw" outgoing="_RgzaQScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbnScoEeSLVrU2ifxtpw" target="_RgzboicoEeSLVrU2ifxtpw" source="_RgzbricoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbnicoEeSLVrU2ifxtpw" target="_RgzbpScoEeSLVrU2ifxtpw" source="_RgzbticoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbnycoEeSLVrU2ifxtpw" target="_RgzbqCcoEeSLVrU2ifxtpw" source="_RgzbuycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzboCcoEeSLVrU2ifxtpw" target="_RgzboScoEeSLVrU2ifxtpw" source="_RgzbqycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzboScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RgzboCcoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzboicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RgzbnScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzboycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbpCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbpScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RgzbnicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbpicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbpycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbqCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RgzbnycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbqScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbqicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbqycoEeSLVrU2ifxtpw" name="Tuple@754b50c7" outgoing="_RgzboCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbrCcoEeSLVrU2ifxtpw" target="_RgzbsycoEeSLVrU2ifxtpw" source="_RgzbuScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbrScoEeSLVrU2ifxtpw" name="Value(&quot;employee3.name&quot;)">
                <result xmi:id="_RgzbricoEeSLVrU2ifxtpw" name="Value(&quot;employee3.name&quot;).result" outgoing="_RgzbnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbrycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbsCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzbsScoEeSLVrU2ifxtpw" value="employee3.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzbsicoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_Rg0o-ycoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzbsycoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_RgzbrCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbtCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbtScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzbticoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_RgzbnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbtycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbuCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzbuScoEeSLVrU2ifxtpw" name="Fork(Fork(employee3)@274ff4b4)" incoming="_RgzaPicoEeSLVrU2ifxtpw" outgoing="_RgzbrCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbuicoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;)">
                <result xmi:id="_RgzbuycoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;).result" outgoing="_RgzbnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbvCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbvScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzbvicoEeSLVrU2ifxtpw" value="Fred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbvycoEeSLVrU2ifxtpw" name="ExpressionStatement@444123f9" incoming="_RgzaQScoEeSLVrU2ifxtpw" outgoing="_RgzaQycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbwCcoEeSLVrU2ifxtpw" target="_RgzbxCcoEeSLVrU2ifxtpw" source="_RgzbzScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbwScoEeSLVrU2ifxtpw" target="_RgzbxycoEeSLVrU2ifxtpw" source="_Rgzb1ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzbwicoEeSLVrU2ifxtpw" target="_RgzbwycoEeSLVrU2ifxtpw" source="_RgzbyicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzbwycoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_RgzbwicoEeSLVrU2ifxtpw" behavior="_Rg1PUycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzbxCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_RgzbwCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbxScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbxicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzbxycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_RgzbwScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbyCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbyScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzbyicoEeSLVrU2ifxtpw" name="Tuple@1753c2c5" outgoing="_RgzbwicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzbyycoEeSLVrU2ifxtpw" target="_Rgzb0icoEeSLVrU2ifxtpw" source="_Rgzb2CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzbzCcoEeSLVrU2ifxtpw" name="Value(&quot;employee3.transferred&quot;)">
                <result xmi:id="_RgzbzScoEeSLVrU2ifxtpw" name="Value(&quot;employee3.transferred&quot;).result" outgoing="_RgzbwCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzbzicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzbzycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rgzb0CcoEeSLVrU2ifxtpw" value="employee3.transferred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rgzb0ScoEeSLVrU2ifxtpw" name="Read(transferred)" structuralFeature="_Rg0o_icoEeSLVrU2ifxtpw">
                <object xmi:id="_Rgzb0icoEeSLVrU2ifxtpw" name="Read(transferred).object" incoming="_RgzbyycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb0ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb1CcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Rgzb1ScoEeSLVrU2ifxtpw" name="Read(transferred).result" outgoing="_RgzbwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb1icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb1ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Rgzb2CcoEeSLVrU2ifxtpw" name="Fork(Fork(employee3)@274ff4b4)" incoming="_RgzaQCcoEeSLVrU2ifxtpw" outgoing="_RgzbyycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgzb2ScoEeSLVrU2ifxtpw" name="ExpressionStatement@423e6c6e" incoming="_RgzaQycoEeSLVrU2ifxtpw" outgoing="_RgzaRScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzb2icoEeSLVrU2ifxtpw" target="_Rgzb3icoEeSLVrU2ifxtpw" source="_Rgzb5ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzb2ycoEeSLVrU2ifxtpw" target="_Rgzb4ScoEeSLVrU2ifxtpw" source="_Rgzb7ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rgzb3CcoEeSLVrU2ifxtpw" target="_Rgzb3ScoEeSLVrU2ifxtpw" source="_Rgzb5CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rgzb3ScoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_Rgzb3CcoEeSLVrU2ifxtpw" behavior="_Rg1PUycoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rgzb3icoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_Rgzb2icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb3ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb4CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rgzb4ScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_Rgzb2ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb4icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb4ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgzb5CcoEeSLVrU2ifxtpw" name="Tuple@4fe5de93" outgoing="_Rgzb3CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzb5ScoEeSLVrU2ifxtpw" target="_Rgzb7CcoEeSLVrU2ifxtpw" source="_Rgzb8icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rgzb5icoEeSLVrU2ifxtpw" name="Value(&quot;employee3.relocated&quot;)">
                <result xmi:id="_Rgzb5ycoEeSLVrU2ifxtpw" name="Value(&quot;employee3.relocated&quot;).result" outgoing="_Rgzb2icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb6CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb6ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rgzb6icoEeSLVrU2ifxtpw" value="employee3.relocated">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rgzb6ycoEeSLVrU2ifxtpw" name="Read(relocated)" structuralFeature="_Rg0pAScoEeSLVrU2ifxtpw">
                <object xmi:id="_Rgzb7CcoEeSLVrU2ifxtpw" name="Read(relocated).object" incoming="_Rgzb5ScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb7ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb7icoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Rgzb7ycoEeSLVrU2ifxtpw" name="Read(relocated).result" outgoing="_Rgzb2ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb8CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb8ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Rgzb8icoEeSLVrU2ifxtpw" name="Fork(Fork(employee3)@274ff4b4)" incoming="_RgzaQicoEeSLVrU2ifxtpw" outgoing="_Rgzb5ScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgzb8ycoEeSLVrU2ifxtpw" name="ExpressionStatement@55785458" incoming="_RgzaRScoEeSLVrU2ifxtpw" outgoing="_RgzaRycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzb9CcoEeSLVrU2ifxtpw" target="_Rgzb-CcoEeSLVrU2ifxtpw" source="_RgzcACcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzb9ScoEeSLVrU2ifxtpw" target="_Rgzb-ycoEeSLVrU2ifxtpw" source="_RgzcCCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rgzb9icoEeSLVrU2ifxtpw" target="_Rgzb9ycoEeSLVrU2ifxtpw" source="_Rgzb_icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rgzb9ycoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_Rgzb9icoEeSLVrU2ifxtpw" behavior="_Rg0sIScoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rgzb-CcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_Rgzb9CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb-ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb-icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rgzb-ycoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_Rgzb9ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzb_CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzb_ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgzb_icoEeSLVrU2ifxtpw" name="Tuple@59b42422" outgoing="_Rgzb9icoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rgzb_ycoEeSLVrU2ifxtpw" name="Value(&quot;init instanceof Initialization&quot;)">
                <result xmi:id="_RgzcACcoEeSLVrU2ifxtpw" name="Value(&quot;init instanceof Initialization&quot;).result" outgoing="_Rgzb9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcAScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcAicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcAycoEeSLVrU2ifxtpw" value="init instanceof Initialization">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RgzcBCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Initialization)" classifier="_Rg0CgycoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzcBScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Initialization).object" incoming="_RgzaRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcBicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcBycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzcCCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Initialization).result" outgoing="_Rgzb9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcCScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcCicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcCycoEeSLVrU2ifxtpw" name="ExpressionStatement@5150974c" incoming="_RgzaRycoEeSLVrU2ifxtpw" outgoing="_RgzaSScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcDCcoEeSLVrU2ifxtpw" target="_RgzcECcoEeSLVrU2ifxtpw" source="_RgzcGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcDScoEeSLVrU2ifxtpw" target="_RgzcEycoEeSLVrU2ifxtpw" source="_RgzcICcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzcDicoEeSLVrU2ifxtpw" target="_RgzcDycoEeSLVrU2ifxtpw" source="_RgzcFicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzcDycoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_RgzcDicoEeSLVrU2ifxtpw" behavior="_Rg1PUycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzcECcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_RgzcDCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcEScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcEicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzcEycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_RgzcDScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcFCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcFScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcFicoEeSLVrU2ifxtpw" name="Tuple@4f608ea3" outgoing="_RgzcDicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzcFycoEeSLVrU2ifxtpw" name="Value(&quot;monitor1 instanceof Monitor&quot;)">
                <result xmi:id="_RgzcGCcoEeSLVrU2ifxtpw" name="Value(&quot;monitor1 instanceof Monitor&quot;).result" outgoing="_RgzcDCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcGScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcGicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcGycoEeSLVrU2ifxtpw" value="monitor1 instanceof Monitor">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RgzcHCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor)" classifier="_Rg0ECycoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzcHScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor).object" incoming="_RgzaRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcHicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcHycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzcICcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor).result" outgoing="_RgzcDScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcIScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcIicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcIycoEeSLVrU2ifxtpw" name="ExpressionStatement@36832981" incoming="_RgzaSScoEeSLVrU2ifxtpw" outgoing="_RgzaSycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcJCcoEeSLVrU2ifxtpw" target="_RgzcKCcoEeSLVrU2ifxtpw" source="_RgzcMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcJScoEeSLVrU2ifxtpw" target="_RgzcKycoEeSLVrU2ifxtpw" source="_RgzcOCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzcJicoEeSLVrU2ifxtpw" target="_RgzcJycoEeSLVrU2ifxtpw" source="_RgzcLicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzcJycoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_RgzcJicoEeSLVrU2ifxtpw" behavior="_Rg0sIScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzcKCcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_RgzcJCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcKScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcKicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzcKycoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_RgzcJScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcLCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcLScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcLicoEeSLVrU2ifxtpw" name="Tuple@30847332" outgoing="_RgzcJicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzcLycoEeSLVrU2ifxtpw" name="Value(&quot;monitor2 instanceof Monitor&quot;)">
                <result xmi:id="_RgzcMCcoEeSLVrU2ifxtpw" name="Value(&quot;monitor2 instanceof Monitor&quot;).result" outgoing="_RgzcJCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcMScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcMicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcMycoEeSLVrU2ifxtpw" value="monitor2 instanceof Monitor">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RgzcNCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor)" classifier="_Rg0ECycoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzcNScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor).object" incoming="_RgzaSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcNicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcNycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzcOCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Monitor).result" outgoing="_RgzcJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcOScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcOicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcOycoEeSLVrU2ifxtpw" name="ExpressionStatement@4420dbc1" incoming="_RgzaSycoEeSLVrU2ifxtpw" outgoing="_RgzaTScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcPCcoEeSLVrU2ifxtpw" target="_RgzcQScoEeSLVrU2ifxtpw" source="_RgzcTScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcPScoEeSLVrU2ifxtpw" target="_RgzcRCcoEeSLVrU2ifxtpw" source="_RgzcVScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcPicoEeSLVrU2ifxtpw" target="_RgzcRycoEeSLVrU2ifxtpw" source="_RgzcWicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzcPycoEeSLVrU2ifxtpw" target="_RgzcQCcoEeSLVrU2ifxtpw" source="_RgzcSicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzcQCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RgzcPycoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzcQScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RgzcPCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcQicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcQycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzcRCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RgzcPScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcRScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcRicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzcRycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RgzcPicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcSCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcSScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcSicoEeSLVrU2ifxtpw" name="Tuple@3c71b23a" outgoing="_RgzcPycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcSycoEeSLVrU2ifxtpw" target="_RgzcUicoEeSLVrU2ifxtpw" source="_RgzcWCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzcTCcoEeSLVrU2ifxtpw" name="Value(&quot;log.name&quot;)">
                <result xmi:id="_RgzcTScoEeSLVrU2ifxtpw" name="Value(&quot;log.name&quot;).result" outgoing="_RgzcPCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcTicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcTycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcUCcoEeSLVrU2ifxtpw" value="log.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzcUScoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_Rg0oQycoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzcUicoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_RgzcSycoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcUycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcVCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzcVScoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_RgzcPScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcVicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcVycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzcWCcoEeSLVrU2ifxtpw" name="Fork(Fork(log)@7359efd1)" incoming="_RgzaSicoEeSLVrU2ifxtpw" outgoing="_RgzcSycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzcWScoEeSLVrU2ifxtpw" name="Value(&quot;Default&quot;)">
                <result xmi:id="_RgzcWicoEeSLVrU2ifxtpw" name="Value(&quot;Default&quot;).result" outgoing="_RgzcPicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcWycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcXCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcXScoEeSLVrU2ifxtpw" value="Default">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcXicoEeSLVrU2ifxtpw" name="ExpressionStatement@1f030fca" incoming="_RgzaTScoEeSLVrU2ifxtpw" outgoing="_RgzaTycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcXycoEeSLVrU2ifxtpw" target="_RgzcYycoEeSLVrU2ifxtpw" source="_RgzcbCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcYCcoEeSLVrU2ifxtpw" target="_RgzcZicoEeSLVrU2ifxtpw" source="_RgzcdCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzcYScoEeSLVrU2ifxtpw" target="_RgzcYicoEeSLVrU2ifxtpw" source="_RgzcaScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzcYicoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_RgzcYScoEeSLVrU2ifxtpw" behavior="_Rg1PUycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzcYycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_RgzcXycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcZScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzcZicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_RgzcYCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcZycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcaCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcaScoEeSLVrU2ifxtpw" name="Tuple@6daab103" outgoing="_RgzcYScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcaicoEeSLVrU2ifxtpw" target="_RgzccScoEeSLVrU2ifxtpw" source="_RgzcdycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzcaycoEeSLVrU2ifxtpw" name="Value(&quot;log.logged&quot;)">
                <result xmi:id="_RgzcbCcoEeSLVrU2ifxtpw" name="Value(&quot;log.logged&quot;).result" outgoing="_RgzcXycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcbScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcbicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcbycoEeSLVrU2ifxtpw" value="log.logged">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzccCcoEeSLVrU2ifxtpw" name="Read(logged)" structuralFeature="_Rg0oRicoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzccScoEeSLVrU2ifxtpw" name="Read(logged).object" incoming="_RgzcaicoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzccicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzccycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzcdCcoEeSLVrU2ifxtpw" name="Read(logged).result" outgoing="_RgzcYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcdScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcdicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzcdycoEeSLVrU2ifxtpw" name="Fork(Fork(log)@7359efd1)" incoming="_RgzaTCcoEeSLVrU2ifxtpw" outgoing="_RgzcaicoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzceCcoEeSLVrU2ifxtpw" name="ExpressionStatement@588880da" incoming="_RgzaTycoEeSLVrU2ifxtpw" outgoing="_RgzaUScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzceScoEeSLVrU2ifxtpw" target="_RgzcficoEeSLVrU2ifxtpw" source="_RgzciicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzceicoEeSLVrU2ifxtpw" target="_RgzcgScoEeSLVrU2ifxtpw" source="_RgzckicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzceycoEeSLVrU2ifxtpw" target="_RgzchCcoEeSLVrU2ifxtpw" source="_RgzclycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzcfCcoEeSLVrU2ifxtpw" target="_RgzcfScoEeSLVrU2ifxtpw" source="_RgzchycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzcfScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RgzcfCcoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzcficoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RgzceScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcfycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcgCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzcgScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RgzceicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcgicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcgycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzchCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RgzceycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzchScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzchicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzchycoEeSLVrU2ifxtpw" name="Tuple@1570c3cd" outgoing="_RgzcfCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzciCcoEeSLVrU2ifxtpw" target="_RgzcjycoEeSLVrU2ifxtpw" source="_RgzclScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzciScoEeSLVrU2ifxtpw" name="Value(&quot;d.x&quot;)">
                <result xmi:id="_RgzciicoEeSLVrU2ifxtpw" name="Value(&quot;d.x&quot;).result" outgoing="_RgzceScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzciycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcjCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcjScoEeSLVrU2ifxtpw" value="d.x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzcjicoEeSLVrU2ifxtpw" name="Read(x)" structuralFeature="_Rg0q0icoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzcjycoEeSLVrU2ifxtpw" name="Read(x).object" incoming="_RgzciCcoEeSLVrU2ifxtpw" type="_Rg0q0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzckCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzckScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzckicoEeSLVrU2ifxtpw" name="Read(x).result" outgoing="_RgzceicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzckycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzclCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzclScoEeSLVrU2ifxtpw" name="Fork(Fork(d)@59ecae5f)" incoming="_RgzaTicoEeSLVrU2ifxtpw" outgoing="_RgzciCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzclicoEeSLVrU2ifxtpw" name="Value(&quot;test&quot;)">
                <result xmi:id="_RgzclycoEeSLVrU2ifxtpw" name="Value(&quot;test&quot;).result" outgoing="_RgzceycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcmCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcmScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcmicoEeSLVrU2ifxtpw" value="test">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcmycoEeSLVrU2ifxtpw" name="ExpressionStatement@48c4035f" incoming="_RgzaUScoEeSLVrU2ifxtpw" outgoing="_RgzaUicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcnCcoEeSLVrU2ifxtpw" target="_RgzcoScoEeSLVrU2ifxtpw" source="_RgzcrScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcnScoEeSLVrU2ifxtpw" target="_RgzcpCcoEeSLVrU2ifxtpw" source="_RgzctScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcnicoEeSLVrU2ifxtpw" target="_RgzcpycoEeSLVrU2ifxtpw" source="_RgzcvScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzcnycoEeSLVrU2ifxtpw" target="_RgzcoCcoEeSLVrU2ifxtpw" source="_RgzcqicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzcoCcoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_RgzcnycoEeSLVrU2ifxtpw" behavior="_Rg1PticoEeSLVrU2ifxtpw">
              <argument xmi:id="_RgzcoScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_RgzcnCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcoicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcoycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RgzcpCcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_RgzcnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcpScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcpicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RgzcpycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_RgzcnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcqCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcqScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcqicoEeSLVrU2ifxtpw" name="Tuple@7ffe93df" outgoing="_RgzcnycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcqycoEeSLVrU2ifxtpw" target="_RgzcsicoEeSLVrU2ifxtpw" source="_RgzcuCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzcrCcoEeSLVrU2ifxtpw" name="Value(&quot;d.y&quot;)">
                <result xmi:id="_RgzcrScoEeSLVrU2ifxtpw" name="Value(&quot;d.y&quot;).result" outgoing="_RgzcnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcricoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcrycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzcsCcoEeSLVrU2ifxtpw" value="d.y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RgzcsScoEeSLVrU2ifxtpw" name="Read(y)" structuralFeature="_Rg0qzScoEeSLVrU2ifxtpw">
                <object xmi:id="_RgzcsicoEeSLVrU2ifxtpw" name="Read(y).object" incoming="_RgzcqycoEeSLVrU2ifxtpw" type="_Rg0qzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcsycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzctCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RgzctScoEeSLVrU2ifxtpw" name="Read(y).result" outgoing="_RgzcnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcticoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzctycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RgzcuCcoEeSLVrU2ifxtpw" name="Fork(Fork(d)@59ecae5f)" incoming="_RgzaUCcoEeSLVrU2ifxtpw" outgoing="_RgzcqycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcuScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@472f569">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RgzcuicoEeSLVrU2ifxtpw" target="_RgzcxicoEeSLVrU2ifxtpw" source="_RgzcwCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcuycoEeSLVrU2ifxtpw" target="_RgzcvScoEeSLVrU2ifxtpw" source="_RgzcwicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzcvCcoEeSLVrU2ifxtpw" target="_RgzcvScoEeSLVrU2ifxtpw" source="_RgzcyCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RgzcvScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@472f569.output" incoming="_RgzcuycoEeSLVrU2ifxtpw _RgzcvCcoEeSLVrU2ifxtpw" outgoing="_RgzcnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcvicoEeSLVrU2ifxtpw" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcvycoEeSLVrU2ifxtpw" value="2"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcwCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@66161ddb#1" outgoing="_RgzcuicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzcwScoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_RgzcwicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RgzcuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcwycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcxCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RgzcxScoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzcxicoEeSLVrU2ifxtpw" name="SequenceExpressionList@66161ddb#2" incoming="_RgzcuicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzcxycoEeSLVrU2ifxtpw" name="Value(2)">
                    <result xmi:id="_RgzcyCcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_RgzcvCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzcyScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzcyicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RgzcyycoEeSLVrU2ifxtpw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzczCcoEeSLVrU2ifxtpw" name="ExpressionStatement@3c34415b" incoming="_RgzaUicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzczScoEeSLVrU2ifxtpw" target="_Rgzc0CcoEeSLVrU2ifxtpw" source="_Rgzc2CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzczicoEeSLVrU2ifxtpw" target="_RgzczycoEeSLVrU2ifxtpw" source="_Rgzc1icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RgzczycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RgzczicoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rgzc0CcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RgzczScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc0ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc0icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rgzc0ycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc1CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc1ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rgzc1icoEeSLVrU2ifxtpw" name="Tuple@65bd77cd" outgoing="_RgzczicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rgzc1ycoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_Rgzc2CcoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_RgzczScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc2ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc2icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rgzc2ycoEeSLVrU2ifxtpw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rgzc3CcoEeSLVrU2ifxtpw" name="test$method$1" specification="_Rg0CZScoEeSLVrU2ifxtpw" node="_Rgzc_ScoEeSLVrU2ifxtpw _Rgzc_icoEeSLVrU2ifxtpw _Rgzc_ycoEeSLVrU2ifxtpw _RgzdACcoEeSLVrU2ifxtpw _RgzdAScoEeSLVrU2ifxtpw _RgzdAicoEeSLVrU2ifxtpw _RgzdAycoEeSLVrU2ifxtpw _RgzdBCcoEeSLVrU2ifxtpw _RgzdBScoEeSLVrU2ifxtpw" group="_RgzdBScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Rgzc3ScoEeSLVrU2ifxtpw" name="employee1" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc3icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc3ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rgzc4CcoEeSLVrU2ifxtpw" name="employee2" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc4ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc4icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rgzc4ycoEeSLVrU2ifxtpw" name="employee3" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc5CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc5ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rgzc5icoEeSLVrU2ifxtpw" name="init" type="_Rg0CgycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc5ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc6CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rgzc6ScoEeSLVrU2ifxtpw" name="log" type="_Rg0EwScoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc6icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc6ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rgzc7CcoEeSLVrU2ifxtpw" name="monitor1" type="_Rg0ECycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc7ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc7icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rgzc7ycoEeSLVrU2ifxtpw" name="monitor2" type="_Rg0ECycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc8CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc8ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rgzc8icoEeSLVrU2ifxtpw" name="d" type="_Rg0q0CcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rgzc8ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rgzc9CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzc9ScoEeSLVrU2ifxtpw" target="_Rgzc_ScoEeSLVrU2ifxtpw" source="_RgzdHicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzc9icoEeSLVrU2ifxtpw" target="_Rgzc_icoEeSLVrU2ifxtpw" source="_RgzdIScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzc9ycoEeSLVrU2ifxtpw" target="_Rgzc_ycoEeSLVrU2ifxtpw" source="_RgzdJCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzc-CcoEeSLVrU2ifxtpw" target="_RgzdACcoEeSLVrU2ifxtpw" source="_RgzdJycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzc-ScoEeSLVrU2ifxtpw" target="_RgzdAScoEeSLVrU2ifxtpw" source="_RgzdKicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzc-icoEeSLVrU2ifxtpw" target="_RgzdAicoEeSLVrU2ifxtpw" source="_RgzdLScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzc-ycoEeSLVrU2ifxtpw" target="_RgzdAycoEeSLVrU2ifxtpw" source="_RgzdMCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rgzc_CcoEeSLVrU2ifxtpw" target="_RgzdBCcoEeSLVrU2ifxtpw" source="_RgzdMycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_RgzdBScoEeSLVrU2ifxtpw" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdBicoEeSLVrU2ifxtpw" target="_RgzdPycoEeSLVrU2ifxtpw" source="_RgzdNicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdBycoEeSLVrU2ifxtpw" target="_RgzdTicoEeSLVrU2ifxtpw" source="_RgzdOCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdCCcoEeSLVrU2ifxtpw" target="_RgzdUScoEeSLVrU2ifxtpw" source="_RgzdQScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdCScoEeSLVrU2ifxtpw" target="_RgzdSCcoEeSLVrU2ifxtpw" source="_RgzdPycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdCicoEeSLVrU2ifxtpw" target="_RgzdZCcoEeSLVrU2ifxtpw" source="_RgzdSicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdCycoEeSLVrU2ifxtpw" target="_RgzdXicoEeSLVrU2ifxtpw" source="_RgzdSCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdDCcoEeSLVrU2ifxtpw" target="_RgzddycoEeSLVrU2ifxtpw" source="_RgzdYCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdDScoEeSLVrU2ifxtpw" target="_RgzdcScoEeSLVrU2ifxtpw" source="_RgzdXicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdDicoEeSLVrU2ifxtpw" target="_RgzdhCcoEeSLVrU2ifxtpw" source="_RgzdcScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdDycoEeSLVrU2ifxtpw" target="_RgzdlCcoEeSLVrU2ifxtpw" source="_RgzdhCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdECcoEeSLVrU2ifxtpw" target="_RgzdpCcoEeSLVrU2ifxtpw" source="_RgzdlCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdEScoEeSLVrU2ifxtpw" target="_Rg0BNScoEeSLVrU2ifxtpw" source="_RgzdhicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdEicoEeSLVrU2ifxtpw" target="_RgzdtCcoEeSLVrU2ifxtpw" source="_RgzdpCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdEycoEeSLVrU2ifxtpw" target="_Rg0BQScoEeSLVrU2ifxtpw" source="_RgzdlicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdFCcoEeSLVrU2ifxtpw" target="_Rg0BOicoEeSLVrU2ifxtpw" source="_RgzdtCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdFScoEeSLVrU2ifxtpw" target="_Rg0BWicoEeSLVrU2ifxtpw" source="_Rg0BOicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdFicoEeSLVrU2ifxtpw" target="_RgzdHicoEeSLVrU2ifxtpw" source="_RgzdSicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdFycoEeSLVrU2ifxtpw" target="_RgzdIScoEeSLVrU2ifxtpw" source="_RgzdYCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdGCcoEeSLVrU2ifxtpw" target="_RgzdJCcoEeSLVrU2ifxtpw" source="_RgzdcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdGScoEeSLVrU2ifxtpw" target="_RgzdJycoEeSLVrU2ifxtpw" source="_RgzdhicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdGicoEeSLVrU2ifxtpw" target="_RgzdKicoEeSLVrU2ifxtpw" source="_RgzdlicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdGycoEeSLVrU2ifxtpw" target="_RgzdLScoEeSLVrU2ifxtpw" source="_RgzdpicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdHCcoEeSLVrU2ifxtpw" target="_RgzdMCcoEeSLVrU2ifxtpw" source="_Rg0BTCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdHScoEeSLVrU2ifxtpw" target="_RgzdMycoEeSLVrU2ifxtpw" source="_Rg0BXCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_RgzdHicoEeSLVrU2ifxtpw" name="Output(employee1)" incoming="_RgzdFicoEeSLVrU2ifxtpw" outgoing="_Rgzc9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdHycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdICcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RgzdIScoEeSLVrU2ifxtpw" name="Output(employee2)" incoming="_RgzdFycoEeSLVrU2ifxtpw" outgoing="_Rgzc9icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdIicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdIycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RgzdJCcoEeSLVrU2ifxtpw" name="Output(employee3)" incoming="_RgzdGCcoEeSLVrU2ifxtpw" outgoing="_Rgzc9ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdJScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdJicoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RgzdJycoEeSLVrU2ifxtpw" name="Output(init)" incoming="_RgzdGScoEeSLVrU2ifxtpw" outgoing="_Rgzc-CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdKCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdKScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RgzdKicoEeSLVrU2ifxtpw" name="Output(log)" incoming="_RgzdGicoEeSLVrU2ifxtpw" outgoing="_Rgzc-ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdKycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdLCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RgzdLScoEeSLVrU2ifxtpw" name="Output(monitor1)" incoming="_RgzdGycoEeSLVrU2ifxtpw" outgoing="_Rgzc-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdLicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdLycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RgzdMCcoEeSLVrU2ifxtpw" name="Output(monitor2)" incoming="_RgzdHCcoEeSLVrU2ifxtpw" outgoing="_Rgzc-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdMScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdMicoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RgzdMycoEeSLVrU2ifxtpw" name="Output(d)" incoming="_RgzdHScoEeSLVrU2ifxtpw" outgoing="_Rgzc_CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdNCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdNScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdNicoEeSLVrU2ifxtpw" name="ExpressionStatement@1ddebd83" outgoing="_RgzdBicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdNycoEeSLVrU2ifxtpw" target="_RgzdOCcoEeSLVrU2ifxtpw" source="_RgzdOycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzdOCcoEeSLVrU2ifxtpw" name="Fork(i)@691d04b" incoming="_RgzdNycoEeSLVrU2ifxtpw" outgoing="_RgzdBycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdOScoEeSLVrU2ifxtpw" name="RightHandSide@4f01ef4b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzdOicoEeSLVrU2ifxtpw" name="Value(100)">
                <result xmi:id="_RgzdOycoEeSLVrU2ifxtpw" name="Value(100).result" outgoing="_RgzdNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdPCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdPScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RgzdPicoEeSLVrU2ifxtpw" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdPycoEeSLVrU2ifxtpw" name="ExpressionStatement@647cd838" incoming="_RgzdBicoEeSLVrU2ifxtpw" outgoing="_RgzdCScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdQCcoEeSLVrU2ifxtpw" target="_RgzdQScoEeSLVrU2ifxtpw" source="_RgzdRCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzdQScoEeSLVrU2ifxtpw" name="Fork(name)@3e372f29" incoming="_RgzdQCcoEeSLVrU2ifxtpw" outgoing="_RgzdCCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdQicoEeSLVrU2ifxtpw" name="RightHandSide@18f94ca8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RgzdQycoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;)">
                <result xmi:id="_RgzdRCcoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;).result" outgoing="_RgzdQCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdRScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdRicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RgzdRycoEeSLVrU2ifxtpw" value="Fred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdSCcoEeSLVrU2ifxtpw" name="ExpressionStatement@3ddb2946" incoming="_RgzdCScoEeSLVrU2ifxtpw" outgoing="_RgzdCycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdSScoEeSLVrU2ifxtpw" target="_RgzdSicoEeSLVrU2ifxtpw" source="_RgzdVCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzdSicoEeSLVrU2ifxtpw" name="Fork(employee1)@387a466a" incoming="_RgzdSScoEeSLVrU2ifxtpw" outgoing="_RgzdCicoEeSLVrU2ifxtpw _RgzdFicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdSycoEeSLVrU2ifxtpw" name="RightHandSide@63a4f61d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdTCcoEeSLVrU2ifxtpw" target="_RgzdVycoEeSLVrU2ifxtpw" source="_RgzdWycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RgzdTScoEeSLVrU2ifxtpw" name="Call(Employee)" operation="_Rg0qsycoEeSLVrU2ifxtpw">
                <argument xmi:id="_RgzdTicoEeSLVrU2ifxtpw" name="Call(Employee).argument(id)" incoming="_RgzdBycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdTycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdUCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RgzdUScoEeSLVrU2ifxtpw" name="Call(Employee).argument(name)" incoming="_RgzdCCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdUicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdUycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RgzdVCcoEeSLVrU2ifxtpw" name="Call(Employee).result()" outgoing="_RgzdSScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdVScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdVicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_RgzdVycoEeSLVrU2ifxtpw" name="Call(Employee).target" incoming="_RgzdTCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdWCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdWScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RgzdWicoEeSLVrU2ifxtpw" name="Create(Employee)" classifier="_Rg0o9CcoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdWycoEeSLVrU2ifxtpw" name="Create(Employee).result" outgoing="_RgzdTCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdXCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdXScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdXicoEeSLVrU2ifxtpw" name="ExpressionStatement@58f4648a" incoming="_RgzdCycoEeSLVrU2ifxtpw" outgoing="_RgzdDScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdXycoEeSLVrU2ifxtpw" target="_RgzdYCcoEeSLVrU2ifxtpw" source="_RgzdZycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzdYCcoEeSLVrU2ifxtpw" name="Fork(employee2)@2f0e19fc" incoming="_RgzdXycoEeSLVrU2ifxtpw" outgoing="_RgzdDCcoEeSLVrU2ifxtpw _RgzdFycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdYScoEeSLVrU2ifxtpw" name="RightHandSide@46cc0786">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdYicoEeSLVrU2ifxtpw" target="_RgzdaicoEeSLVrU2ifxtpw" source="_RgzdbicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RgzdYycoEeSLVrU2ifxtpw" name="Call(transferred)" operation="_Rg0qvScoEeSLVrU2ifxtpw">
                <argument xmi:id="_RgzdZCcoEeSLVrU2ifxtpw" name="Call(transferred).argument(employeeInfo)" incoming="_RgzdCicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdZScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdZicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RgzdZycoEeSLVrU2ifxtpw" name="Call(transferred).result()" outgoing="_RgzdXycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdaCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdaScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_RgzdaicoEeSLVrU2ifxtpw" name="Call(transferred).target" incoming="_RgzdYicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdaycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdbCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RgzdbScoEeSLVrU2ifxtpw" name="Create(Employee)" classifier="_Rg0o9CcoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdbicoEeSLVrU2ifxtpw" name="Create(Employee).result" outgoing="_RgzdYicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdbycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdcCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdcScoEeSLVrU2ifxtpw" name="ExpressionStatement@727268e7" incoming="_RgzdDScoEeSLVrU2ifxtpw" outgoing="_RgzdDicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdcicoEeSLVrU2ifxtpw" target="_RgzdcycoEeSLVrU2ifxtpw" source="_RgzdeicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzdcycoEeSLVrU2ifxtpw" name="Fork(employee3)@4a272157" incoming="_RgzdcicoEeSLVrU2ifxtpw" outgoing="_RgzdGCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzddCcoEeSLVrU2ifxtpw" name="RightHandSide@4efdfcc9">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzddScoEeSLVrU2ifxtpw" target="_RgzdfScoEeSLVrU2ifxtpw" source="_RgzdgScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RgzddicoEeSLVrU2ifxtpw" name="Call(relocated)" operation="_Rg0qxCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RgzddycoEeSLVrU2ifxtpw" name="Call(relocated).argument(employeeInfo)" incoming="_RgzdDCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdeCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdeScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RgzdeicoEeSLVrU2ifxtpw" name="Call(relocated).result()" outgoing="_RgzdcicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdeycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdfCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_RgzdfScoEeSLVrU2ifxtpw" name="Call(relocated).target" incoming="_RgzddScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdficoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdfycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RgzdgCcoEeSLVrU2ifxtpw" name="Create(Employee)" classifier="_Rg0o9CcoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdgScoEeSLVrU2ifxtpw" name="Create(Employee).result" outgoing="_RgzddScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdgicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdgycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdhCcoEeSLVrU2ifxtpw" name="ExpressionStatement@79b2713f" incoming="_RgzdDicoEeSLVrU2ifxtpw" outgoing="_RgzdDycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdhScoEeSLVrU2ifxtpw" target="_RgzdhicoEeSLVrU2ifxtpw" source="_RgzdiicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzdhicoEeSLVrU2ifxtpw" name="Fork(init)@2e467082" incoming="_RgzdhScoEeSLVrU2ifxtpw" outgoing="_RgzdEScoEeSLVrU2ifxtpw _RgzdGScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdhycoEeSLVrU2ifxtpw" name="RightHandSide@12847e8a">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdiCcoEeSLVrU2ifxtpw" target="_RgzdjScoEeSLVrU2ifxtpw" source="_RgzdkScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RgzdiScoEeSLVrU2ifxtpw" name="Call(Initialization2)" operation="_Rg0EBicoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdiicoEeSLVrU2ifxtpw" name="Call(Initialization2).result()" outgoing="_RgzdhScoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdiycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdjCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_RgzdjScoEeSLVrU2ifxtpw" name="Call(Initialization2).target" incoming="_RgzdiCcoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdjicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdjycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RgzdkCcoEeSLVrU2ifxtpw" name="Create(Initialization2)" classifier="_Rg0DSycoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdkScoEeSLVrU2ifxtpw" name="Create(Initialization2).result" outgoing="_RgzdiCcoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdkicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdkycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdlCcoEeSLVrU2ifxtpw" name="ExpressionStatement@5e8e595a" incoming="_RgzdDycoEeSLVrU2ifxtpw" outgoing="_RgzdECcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdlScoEeSLVrU2ifxtpw" target="_RgzdlicoEeSLVrU2ifxtpw" source="_RgzdmicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzdlicoEeSLVrU2ifxtpw" name="Fork(log)@3591acd5" incoming="_RgzdlScoEeSLVrU2ifxtpw" outgoing="_RgzdEycoEeSLVrU2ifxtpw _RgzdGicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdlycoEeSLVrU2ifxtpw" name="RightHandSide@6ee9ef6c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdmCcoEeSLVrU2ifxtpw" target="_RgzdnScoEeSLVrU2ifxtpw" source="_RgzdoScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RgzdmScoEeSLVrU2ifxtpw" name="Call(Log)" operation="_Rg0o7ycoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdmicoEeSLVrU2ifxtpw" name="Call(Log).result()" outgoing="_RgzdlScoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdmycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdnCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_RgzdnScoEeSLVrU2ifxtpw" name="Call(Log).target" incoming="_RgzdmCcoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdnicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdnycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RgzdoCcoEeSLVrU2ifxtpw" name="Create(Log)" classifier="_Rg0EwScoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdoScoEeSLVrU2ifxtpw" name="Create(Log).result" outgoing="_RgzdmCcoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdoicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdoycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdpCcoEeSLVrU2ifxtpw" name="ExpressionStatement@6176214a" incoming="_RgzdECcoEeSLVrU2ifxtpw" outgoing="_RgzdEicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdpScoEeSLVrU2ifxtpw" target="_RgzdpicoEeSLVrU2ifxtpw" source="_RgzdqicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RgzdpicoEeSLVrU2ifxtpw" name="Fork(monitor1)@2da4212c" incoming="_RgzdpScoEeSLVrU2ifxtpw" outgoing="_RgzdGycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdpycoEeSLVrU2ifxtpw" name="RightHandSide@727de71c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdqCcoEeSLVrU2ifxtpw" target="_RgzdrScoEeSLVrU2ifxtpw" source="_RgzdsScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RgzdqScoEeSLVrU2ifxtpw" name="Call(Monitor)" operation="_Rg0EvScoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdqicoEeSLVrU2ifxtpw" name="Call(Monitor).result()" outgoing="_RgzdpScoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdqycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdrCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_RgzdrScoEeSLVrU2ifxtpw" name="Call(Monitor).target" incoming="_RgzdqCcoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdricoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdrycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RgzdsCcoEeSLVrU2ifxtpw" name="Create(Monitor)" classifier="_Rg0ECycoEeSLVrU2ifxtpw">
                <result xmi:id="_RgzdsScoEeSLVrU2ifxtpw" name="Create(Monitor).result" outgoing="_RgzdqCcoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RgzdsicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RgzdsycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RgzdtCcoEeSLVrU2ifxtpw" name="ExpressionStatement@3ce41206" incoming="_RgzdEicoEeSLVrU2ifxtpw" outgoing="_RgzdFCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RgzdtScoEeSLVrU2ifxtpw" target="_Rg0BMicoEeSLVrU2ifxtpw" source="_Rg0BNScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RgzdticoEeSLVrU2ifxtpw" target="_Rg0BNicoEeSLVrU2ifxtpw" source="_Rg0BMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BMCcoEeSLVrU2ifxtpw" target="_Rg0BNycoEeSLVrU2ifxtpw" source="_Rg0BNScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0BMScoEeSLVrU2ifxtpw" name="Call(destroy)" outgoing="_RgzdticoEeSLVrU2ifxtpw" operation="_Rg0DSicoEeSLVrU2ifxtpw">
              <target xmi:id="_Rg0BMicoEeSLVrU2ifxtpw" name="Call(destroy).target" incoming="_RgzdtScoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BMycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BNCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0BNScoEeSLVrU2ifxtpw" name="Fork" incoming="_RgzdEScoEeSLVrU2ifxtpw" outgoing="_RgzdtScoEeSLVrU2ifxtpw _Rg0BMCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DestroyObjectAction" xmi:id="_Rg0BNicoEeSLVrU2ifxtpw" name="DestroyObject" incoming="_RgzdticoEeSLVrU2ifxtpw" isDestroyLinks="true" isDestroyOwnedObjects="true">
              <target xmi:id="_Rg0BNycoEeSLVrU2ifxtpw" name="DestroyObject.target" incoming="_Rg0BMCcoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BOCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BOScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0BOicoEeSLVrU2ifxtpw" name="ExpressionStatement@182c92ef" incoming="_RgzdFCcoEeSLVrU2ifxtpw" outgoing="_RgzdFScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BOycoEeSLVrU2ifxtpw" target="_Rg0BRCcoEeSLVrU2ifxtpw" source="_Rg0BRycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0BPCcoEeSLVrU2ifxtpw" target="_Rg0BSCcoEeSLVrU2ifxtpw" source="_Rg0BQCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BPScoEeSLVrU2ifxtpw" target="_Rg0BSScoEeSLVrU2ifxtpw" source="_Rg0BRycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BPicoEeSLVrU2ifxtpw" target="_Rg0BRycoEeSLVrU2ifxtpw" source="_Rg0BTCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BPycoEeSLVrU2ifxtpw" target="_Rg0BTCcoEeSLVrU2ifxtpw" source="_Rg0BUCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0BQCcoEeSLVrU2ifxtpw" name="Call(destroy)" outgoing="_Rg0BPCcoEeSLVrU2ifxtpw" operation="_Rg0EuScoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg0BQScoEeSLVrU2ifxtpw" name="Call(destroy).argument(recoveryLog)" incoming="_RgzdEycoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BQicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BQycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <target xmi:id="_Rg0BRCcoEeSLVrU2ifxtpw" name="Call(destroy).target" incoming="_Rg0BOycoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BRScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BRicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0BRycoEeSLVrU2ifxtpw" name="Fork" incoming="_Rg0BPicoEeSLVrU2ifxtpw" outgoing="_Rg0BOycoEeSLVrU2ifxtpw _Rg0BPScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DestroyObjectAction" xmi:id="_Rg0BSCcoEeSLVrU2ifxtpw" name="DestroyObject" incoming="_Rg0BPCcoEeSLVrU2ifxtpw" isDestroyLinks="true" isDestroyOwnedObjects="true">
              <target xmi:id="_Rg0BSScoEeSLVrU2ifxtpw" name="DestroyObject.target" incoming="_Rg0BPScoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BSicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BSycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0BTCcoEeSLVrU2ifxtpw" name="Fork(monitor2)@1eb605e7" incoming="_Rg0BPycoEeSLVrU2ifxtpw" outgoing="_Rg0BPicoEeSLVrU2ifxtpw _RgzdHCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0BTScoEeSLVrU2ifxtpw" name="RightHandSide@403d9071">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BTicoEeSLVrU2ifxtpw" target="_Rg0BUycoEeSLVrU2ifxtpw" source="_Rg0BVycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0BTycoEeSLVrU2ifxtpw" name="Call(Monitor)" operation="_Rg0EvScoEeSLVrU2ifxtpw">
                <result xmi:id="_Rg0BUCcoEeSLVrU2ifxtpw" name="Call(Monitor).result()" outgoing="_Rg0BPycoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BUScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BUicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_Rg0BUycoEeSLVrU2ifxtpw" name="Call(Monitor).target" incoming="_Rg0BTicoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BVCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BVScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_Rg0BVicoEeSLVrU2ifxtpw" name="Create(Monitor)" classifier="_Rg0ECycoEeSLVrU2ifxtpw">
                <result xmi:id="_Rg0BVycoEeSLVrU2ifxtpw" name="Create(Monitor).result" outgoing="_Rg0BTicoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BWCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BWScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0BWicoEeSLVrU2ifxtpw" name="ExpressionStatement@6e41a173" incoming="_RgzdFScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BWycoEeSLVrU2ifxtpw" target="_Rg0BXCcoEeSLVrU2ifxtpw" source="_Rg0BxicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0BXCcoEeSLVrU2ifxtpw" name="Fork(d)@1e5bcf80" incoming="_Rg0BWycoEeSLVrU2ifxtpw" outgoing="_RgzdHScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0BXScoEeSLVrU2ifxtpw" name="RightHandSide@1d93ec12">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BXicoEeSLVrU2ifxtpw" target="_Rg0BZicoEeSLVrU2ifxtpw" source="_Rg0BzicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BXycoEeSLVrU2ifxtpw" target="_Rg0BaScoEeSLVrU2ifxtpw" source="_Rg0B1icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0BYCcoEeSLVrU2ifxtpw" target="_Rg0BYScoEeSLVrU2ifxtpw" source="_Rg0BzCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0BYScoEeSLVrU2ifxtpw" name="Create(Expressions_Constructor_Destructor::D)" incoming="_Rg0BYCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BYicoEeSLVrU2ifxtpw" target="_Rg0BeCcoEeSLVrU2ifxtpw" source="_Rg0BZicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BYycoEeSLVrU2ifxtpw" target="_Rg0BcicoEeSLVrU2ifxtpw" source="_Rg0BbScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BZCcoEeSLVrU2ifxtpw" target="_Rg0BwCcoEeSLVrU2ifxtpw" source="_Rg0BdScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BZScoEeSLVrU2ifxtpw" target="_Rg0BwycoEeSLVrU2ifxtpw" source="_Rg0BaScoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_Rg0BZicoEeSLVrU2ifxtpw" name="Create(Expressions_Constructor_Destructor::D).input(Expressions_Constructor_Destructor::D::x)" incoming="_Rg0BXicoEeSLVrU2ifxtpw" outgoing="_Rg0BYicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BZycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BaCcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeInput xmi:id="_Rg0BaScoEeSLVrU2ifxtpw" name="Create(Expressions_Constructor_Destructor::D).input(Expressions_Constructor_Destructor::D0::y)" incoming="_Rg0BXycoEeSLVrU2ifxtpw" outgoing="_Rg0BZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BaicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BaycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0BbCcoEeSLVrU2ifxtpw" name="Value(D)">
                  <result xmi:id="_Rg0BbScoEeSLVrU2ifxtpw" name="Value(D).result" outgoing="_Rg0BYycoEeSLVrU2ifxtpw" type="_Rg0q0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BbicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BbycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_Rg0BcCcoEeSLVrU2ifxtpw" type="_Rg0q0CcoEeSLVrU2ifxtpw" instance="_Rg0q1ScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0BcScoEeSLVrU2ifxtpw" name="Write(x)" structuralFeature="_Rg0q0icoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0BcicoEeSLVrU2ifxtpw" name="Write(x).object" incoming="_Rg0BYycoEeSLVrU2ifxtpw" type="_Rg0q0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BcycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BdCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0BdScoEeSLVrU2ifxtpw" name="Write(x).result" outgoing="_Rg0BZCcoEeSLVrU2ifxtpw" type="_Rg0q0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BdicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BdycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0BeCcoEeSLVrU2ifxtpw" name="Write(x).value" incoming="_Rg0BYicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BeScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BeicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:LoopNode" xmi:id="_Rg0BeycoEeSLVrU2ifxtpw" name="Iterate(Write(y))" bodyOutput="_Rg0BiicoEeSLVrU2ifxtpw _Rg0BsCcoEeSLVrU2ifxtpw" bodyPart="_Rg0BhicoEeSLVrU2ifxtpw _Rg0BkycoEeSLVrU2ifxtpw _Rg0BmScoEeSLVrU2ifxtpw _Rg0BnycoEeSLVrU2ifxtpw _Rg0BqScoEeSLVrU2ifxtpw" decider="_Rg0BtycoEeSLVrU2ifxtpw" isTestedFirst="true" test="_Rg0BsycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BfCcoEeSLVrU2ifxtpw" target="_Rg0BkCcoEeSLVrU2ifxtpw" source="_Rg0BlCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BfScoEeSLVrU2ifxtpw" target="_Rg0BhycoEeSLVrU2ifxtpw" source="_Rg0BuicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BficoEeSLVrU2ifxtpw" target="_Rg0BmCcoEeSLVrU2ifxtpw" source="_Rg0BvScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BfycoEeSLVrU2ifxtpw" target="_Rg0BnicoEeSLVrU2ifxtpw" source="_Rg0BmicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BgCcoEeSLVrU2ifxtpw" target="_Rg0BoCcoEeSLVrU2ifxtpw" source="_Rg0BmCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BgScoEeSLVrU2ifxtpw" target="_Rg0BoycoEeSLVrU2ifxtpw" source="_Rg0BnicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BgicoEeSLVrU2ifxtpw" target="_Rg0BjScoEeSLVrU2ifxtpw" source="_Rg0BpicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BgycoEeSLVrU2ifxtpw" target="_Rg0BqicoEeSLVrU2ifxtpw" source="_Rg0BmCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BhCcoEeSLVrU2ifxtpw" target="_Rg0BrScoEeSLVrU2ifxtpw" source="_Rg0BnicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0BhScoEeSLVrU2ifxtpw" target="_Rg0BtCcoEeSLVrU2ifxtpw" source="_Rg0BmCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0BhicoEeSLVrU2ifxtpw" name="Write(y)" structuralFeature="_Rg0qzScoEeSLVrU2ifxtpw">
                    <object xmi:id="_Rg0BhycoEeSLVrU2ifxtpw" name="Write(y).object" incoming="_Rg0BfScoEeSLVrU2ifxtpw" type="_Rg0qzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BiCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BiScoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_Rg0BiicoEeSLVrU2ifxtpw" name="Write(y).result" type="_Rg0qzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BiycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BjCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_Rg0BjScoEeSLVrU2ifxtpw" name="Write(y).value" incoming="_Rg0BgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BjicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BjycoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                    <insertAt xmi:id="_Rg0BkCcoEeSLVrU2ifxtpw" name="Write(y).insertAt" incoming="_Rg0BfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BkScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BkicoEeSLVrU2ifxtpw" value="1"/>
                    </insertAt>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0BkycoEeSLVrU2ifxtpw" name="Value(*)">
                    <result xmi:id="_Rg0BlCcoEeSLVrU2ifxtpw" name="Value(*).result" outgoing="_Rg0BfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BlScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BlicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BlycoEeSLVrU2ifxtpw" value="*">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Rg0BmCcoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_Rg0BficoEeSLVrU2ifxtpw" outgoing="_Rg0BgCcoEeSLVrU2ifxtpw _Rg0BgycoEeSLVrU2ifxtpw _Rg0BhScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0BmScoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_Rg0BmicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg0BfycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BmycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BnCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0BnScoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Rg0BnicoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_Rg0BfycoEeSLVrU2ifxtpw" outgoing="_Rg0BgScoEeSLVrU2ifxtpw _Rg0BhCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0BnycoEeSLVrU2ifxtpw" name="Call(ListGet)">
                    <argument xmi:id="_Rg0BoCcoEeSLVrU2ifxtpw" name="Call(ListGet).argument(list)" incoming="_Rg0BgCcoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BoScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BoicoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_Rg0BoycoEeSLVrU2ifxtpw" name="Call(ListGet).argument(index)" incoming="_Rg0BgScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BpCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BpScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg0BpicoEeSLVrU2ifxtpw" name="Call(ListGet).result(result)" outgoing="_Rg0BgicoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BpycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BqCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListGet"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0BqScoEeSLVrU2ifxtpw" name="Call(ExcludeAt)">
                    <argument xmi:id="_Rg0BqicoEeSLVrU2ifxtpw" name="Call(ExcludeAt).argument(seq)" incoming="_Rg0BgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BqycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BrCcoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_Rg0BrScoEeSLVrU2ifxtpw" name="Call(ExcludeAt).argument(index)" incoming="_Rg0BhCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BricoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BrycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg0BsCcoEeSLVrU2ifxtpw" name="Call(ExcludeAt).result()" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BsScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BsicoEeSLVrU2ifxtpw" value="*"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0BsycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
                    <argument xmi:id="_Rg0BtCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_Rg0BhScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BtScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BticoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <result xmi:id="_Rg0BtycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BuCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BuScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                  </node>
                  <loopVariable xmi:id="_Rg0BuicoEeSLVrU2ifxtpw" name="Iterate(Write(y)).loopVariable()(Write(x).result)" outgoing="_Rg0BfScoEeSLVrU2ifxtpw" type="_Rg0qzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BuycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BvCcoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_Rg0BvScoEeSLVrU2ifxtpw" name="Iterate(Write(y)).loopVariable()(value)" outgoing="_Rg0BficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BvicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BvycoEeSLVrU2ifxtpw" value="*"/>
                  </loopVariable>
                  <loopVariableInput xmi:id="_Rg0BwCcoEeSLVrU2ifxtpw" name="Iterate(Write(y)).loopVariableInput(Write(x).result)" incoming="_Rg0BZCcoEeSLVrU2ifxtpw" type="_Rg0qzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BwScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BwicoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_Rg0BwycoEeSLVrU2ifxtpw" name="Iterate(Write(y)).loopVariableInput(value)" incoming="_Rg0BZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BxCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0BxScoEeSLVrU2ifxtpw" value="*"/>
                  </loopVariableInput>
                  <result xmi:id="_Rg0BxicoEeSLVrU2ifxtpw" name="Iterate(Write(y)).result(Write(x).result)" outgoing="_Rg0BWycoEeSLVrU2ifxtpw" type="_Rg0qzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BxycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ByCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <result xmi:id="_Rg0ByScoEeSLVrU2ifxtpw" name="Iterate(Write(y)).result(value)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ByicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ByycoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0BzCcoEeSLVrU2ifxtpw" name="Tuple@12bf0bcd" outgoing="_Rg0BYCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0BzScoEeSLVrU2ifxtpw" name="Value(&quot;test&quot;)">
                  <result xmi:id="_Rg0BzicoEeSLVrU2ifxtpw" name="Value(&quot;test&quot;).result" outgoing="_Rg0BXicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0BzycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0B0CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Rg0B0ScoEeSLVrU2ifxtpw" value="test">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0B0icoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@1c1ae5e8">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0B0ycoEeSLVrU2ifxtpw" target="_Rg0B3ycoEeSLVrU2ifxtpw" source="_Rg0B2ScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B1CcoEeSLVrU2ifxtpw" target="_Rg0B1icoEeSLVrU2ifxtpw" source="_Rg0B2ycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B1ScoEeSLVrU2ifxtpw" target="_Rg0B1icoEeSLVrU2ifxtpw" source="_Rg0B4ScoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_Rg0B1icoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@1c1ae5e8.output" incoming="_Rg0B1CcoEeSLVrU2ifxtpw _Rg0B1ScoEeSLVrU2ifxtpw" outgoing="_Rg0BXycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0B1ycoEeSLVrU2ifxtpw" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0B2CcoEeSLVrU2ifxtpw" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0B2ScoEeSLVrU2ifxtpw" name="SequenceExpressionList@2d388e7b#1" outgoing="_Rg0B0ycoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0B2icoEeSLVrU2ifxtpw" name="Value(1)">
                      <result xmi:id="_Rg0B2ycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg0B1CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0B3CcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0B3ScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0B3icoEeSLVrU2ifxtpw" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0B3ycoEeSLVrU2ifxtpw" name="SequenceExpressionList@2d388e7b#2" incoming="_Rg0B0ycoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0B4CcoEeSLVrU2ifxtpw" name="Value(2)">
                      <result xmi:id="_Rg0B4ScoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_Rg0B1ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0B4icoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0B4ycoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0B5CcoEeSLVrU2ifxtpw" value="2">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rgzc_ScoEeSLVrU2ifxtpw" name="Output(employee1)" incoming="_Rgzc9ScoEeSLVrU2ifxtpw" parameter="_Rgzc3ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rgzc_icoEeSLVrU2ifxtpw" name="Output(employee2)" incoming="_Rgzc9icoEeSLVrU2ifxtpw" parameter="_Rgzc4CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rgzc_ycoEeSLVrU2ifxtpw" name="Output(employee3)" incoming="_Rgzc9ycoEeSLVrU2ifxtpw" parameter="_Rgzc4ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RgzdACcoEeSLVrU2ifxtpw" name="Output(init)" incoming="_Rgzc-CcoEeSLVrU2ifxtpw" parameter="_Rgzc5icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RgzdAScoEeSLVrU2ifxtpw" name="Output(log)" incoming="_Rgzc-ScoEeSLVrU2ifxtpw" parameter="_Rgzc6ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RgzdAicoEeSLVrU2ifxtpw" name="Output(monitor1)" incoming="_Rgzc-icoEeSLVrU2ifxtpw" parameter="_Rgzc7CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RgzdAycoEeSLVrU2ifxtpw" name="Output(monitor2)" incoming="_Rgzc-ycoEeSLVrU2ifxtpw" parameter="_Rgzc7ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RgzdBCcoEeSLVrU2ifxtpw" name="Output(d)" incoming="_Rgzc_CcoEeSLVrU2ifxtpw" parameter="_Rgzc8icoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0B5ScoEeSLVrU2ifxtpw" name="Expressions_Constructor_Destructor$method$1" specification="_Rg0CficoEeSLVrU2ifxtpw" node="_Rg0B6icoEeSLVrU2ifxtpw _Rg0B6ycoEeSLVrU2ifxtpw" group="_Rg0B6ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Rg0B5icoEeSLVrU2ifxtpw" name="" type="_RgzaIScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0B5ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0B6CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B6ScoEeSLVrU2ifxtpw" target="_Rg0B6icoEeSLVrU2ifxtpw" source="_Rg0B_CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Rg0B6ycoEeSLVrU2ifxtpw" name="Body(Expressions_Constructor_Destructor$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B7CcoEeSLVrU2ifxtpw" target="_Rg0B_CcoEeSLVrU2ifxtpw" source="_Rg0B-ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B7ScoEeSLVrU2ifxtpw" target="_Rg0B_icoEeSLVrU2ifxtpw" source="_Rg0B_CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0B7icoEeSLVrU2ifxtpw" target="_Rg0B9ycoEeSLVrU2ifxtpw" source="_Rg0B_ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B7ycoEeSLVrU2ifxtpw" target="_Rg0CAicoEeSLVrU2ifxtpw" source="_Rg0B_CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B8CcoEeSLVrU2ifxtpw" target="_Rg0CCScoEeSLVrU2ifxtpw" source="_Rg0CBScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B8ScoEeSLVrU2ifxtpw" target="_Rg0CFScoEeSLVrU2ifxtpw" source="_Rg0CDCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B8icoEeSLVrU2ifxtpw" target="_Rg0CGycoEeSLVrU2ifxtpw" source="_Rg0CECcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0B8ycoEeSLVrU2ifxtpw" target="_Rg0CHycoEeSLVrU2ifxtpw" source="_Rg0CHicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0B9CcoEeSLVrU2ifxtpw" target="_Rg0CHycoEeSLVrU2ifxtpw" source="_Rg0CGCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0B9ScoEeSLVrU2ifxtpw" target="_Rg0B_ScoEeSLVrU2ifxtpw" source="_Rg0CHycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0B9icoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0B9ycoEeSLVrU2ifxtpw" name="Body" incoming="_Rg0B7icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0B-CcoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_Rg0B-ScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0B7CcoEeSLVrU2ifxtpw" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0B-icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0B-ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0B_CcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0B7CcoEeSLVrU2ifxtpw" outgoing="_Rg0B6ScoEeSLVrU2ifxtpw _Rg0B7ScoEeSLVrU2ifxtpw _Rg0B7ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0B_ScoEeSLVrU2ifxtpw" name="Call(Expressions_Constructor_Destructor$initialization$1)" incoming="_Rg0B9ScoEeSLVrU2ifxtpw" outgoing="_Rg0B7icoEeSLVrU2ifxtpw" operation="_Rg0CZCcoEeSLVrU2ifxtpw">
            <target xmi:id="_Rg0B_icoEeSLVrU2ifxtpw" name="Call(Expressions_Constructor_Destructor$initialization$1).target" incoming="_Rg0B7ScoEeSLVrU2ifxtpw" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0B_ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CACcoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0CAScoEeSLVrU2ifxtpw" name="Read(Expressions_Constructor_Destructor$initializationFlag$1)" structuralFeature="_RgzaJycoEeSLVrU2ifxtpw">
            <object xmi:id="_Rg0CAicoEeSLVrU2ifxtpw" name="Read(Expressions_Constructor_Destructor$initializationFlag$1).object" incoming="_Rg0B7ycoEeSLVrU2ifxtpw" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CAycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CBCcoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_Rg0CBScoEeSLVrU2ifxtpw" name="Read(Expressions_Constructor_Destructor$initializationFlag$1).result" outgoing="_Rg0B8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CBicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CBycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0CCCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_Rg0CCScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0B8CcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CCicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CCycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Rg0CDCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0B8ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CDScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CDicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0CDycoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_Rg0CECcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0B8icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CEScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CEicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0CEycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0CFCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_Rg0CFScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0B8ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CFicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CFycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_Rg0CGCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0B9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CGScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CGicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_Rg0CGycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0B8icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CHCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CHScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Rg0CHicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0B8ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Rg0CHycoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Constructor_Destructor$initializationFlag$1))" incoming="_Rg0B8ycoEeSLVrU2ifxtpw _Rg0B9CcoEeSLVrU2ifxtpw" outgoing="_Rg0B9ScoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0B9CcoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0B6icoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0B6ScoEeSLVrU2ifxtpw" parameter="_Rg0B5icoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0CICcoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_Rg0CgicoEeSLVrU2ifxtpw" node="_Rg0CIScoEeSLVrU2ifxtpw" group="_Rg0CIScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_Rg0CIScoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0CIicoEeSLVrU2ifxtpw" name="Expressions_Constructor_Destructor$initialization$1" specification="_Rg0CZCcoEeSLVrU2ifxtpw" node="_Rg0CIycoEeSLVrU2ifxtpw" group="_Rg0CIycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_Rg0CIycoEeSLVrU2ifxtpw" name="Body(Expressions_Constructor_Destructor$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CJCcoEeSLVrU2ifxtpw" target="_Rg0CMicoEeSLVrU2ifxtpw" source="_Rg0CLycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CJScoEeSLVrU2ifxtpw" target="_Rg0CPCcoEeSLVrU2ifxtpw" source="_Rg0CMicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CJicoEeSLVrU2ifxtpw" target="_Rg0CRicoEeSLVrU2ifxtpw" source="_Rg0CMicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CJycoEeSLVrU2ifxtpw" target="_Rg0CTScoEeSLVrU2ifxtpw" source="_Rg0CSScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CKCcoEeSLVrU2ifxtpw" target="_Rg0CWScoEeSLVrU2ifxtpw" source="_Rg0CUCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CKScoEeSLVrU2ifxtpw" target="_Rg0CXycoEeSLVrU2ifxtpw" source="_Rg0CVCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0CKicoEeSLVrU2ifxtpw" target="_Rg0CYycoEeSLVrU2ifxtpw" source="_Rg0CYicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CKycoEeSLVrU2ifxtpw" target="_Rg0CYycoEeSLVrU2ifxtpw" source="_Rg0CXCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0CLCcoEeSLVrU2ifxtpw" target="_Rg0CMycoEeSLVrU2ifxtpw" source="_Rg0CYycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0CLScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0CLicoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_Rg0CLycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0CJCcoEeSLVrU2ifxtpw" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CMCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CMScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0CMicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0CJCcoEeSLVrU2ifxtpw" outgoing="_Rg0CJScoEeSLVrU2ifxtpw _Rg0CJicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0CMycoEeSLVrU2ifxtpw" name="Initialization" incoming="_Rg0CLCcoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0CNCcoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CNScoEeSLVrU2ifxtpw" target="_Rg0CQicoEeSLVrU2ifxtpw" source="_Rg0CNycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0CNicoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_Rg0CNycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0CNScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0COCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0COScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0COicoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0COycoEeSLVrU2ifxtpw" name="Write(Expressions_Constructor_Destructor$initializationFlag$1)" structuralFeature="_RgzaJycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_Rg0CPCcoEeSLVrU2ifxtpw" name="Write(Expressions_Constructor_Destructor$initializationFlag$1).object" incoming="_Rg0CJScoEeSLVrU2ifxtpw" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CPScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CPicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Rg0CPycoEeSLVrU2ifxtpw" name="Write(Expressions_Constructor_Destructor$initializationFlag$1).result" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CQCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CQScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_Rg0CQicoEeSLVrU2ifxtpw" name="Write(Expressions_Constructor_Destructor$initializationFlag$1).value" incoming="_Rg0CNScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CQycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CRCcoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0CRScoEeSLVrU2ifxtpw" name="Read(Expressions_Constructor_Destructor$initializationFlag$1)" structuralFeature="_RgzaJycoEeSLVrU2ifxtpw">
            <object xmi:id="_Rg0CRicoEeSLVrU2ifxtpw" name="Read(Expressions_Constructor_Destructor$initializationFlag$1).object" incoming="_Rg0CJicoEeSLVrU2ifxtpw" type="_RgzaIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CRycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CSCcoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_Rg0CSScoEeSLVrU2ifxtpw" name="Read(Expressions_Constructor_Destructor$initializationFlag$1).result" outgoing="_Rg0CJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CSicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CSycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0CTCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_Rg0CTScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0CJycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CTicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CTycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Rg0CUCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0CKCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CUScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CUicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0CUycoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_Rg0CVCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0CKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CVScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CVicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0CVycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0CWCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_Rg0CWScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0CKCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CWicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CWycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_Rg0CXCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0CKycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CXScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CXicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_Rg0CXycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0CKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CYCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CYScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Rg0CYicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0CKicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Rg0CYycoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Constructor_Destructor$initializationFlag$1))" incoming="_Rg0CKicoEeSLVrU2ifxtpw _Rg0CKycoEeSLVrU2ifxtpw" outgoing="_Rg0CLCcoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0CKycoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_Rg0CZCcoEeSLVrU2ifxtpw" name="Expressions_Constructor_Destructor$initialization$1" visibility="protected" method="_Rg0CIicoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_Rg0CZScoEeSLVrU2ifxtpw" name="test" visibility="package" method="_Rgzc3CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Rg0CZicoEeSLVrU2ifxtpw" name="employee1" visibility="package" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CZycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CaCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rg0CaScoEeSLVrU2ifxtpw" name="employee2" visibility="package" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CaicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CaycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rg0CbCcoEeSLVrU2ifxtpw" name="employee3" visibility="package" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CbScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CbicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rg0CbycoEeSLVrU2ifxtpw" name="init" visibility="package" type="_Rg0CgycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CcCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CcScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rg0CcicoEeSLVrU2ifxtpw" name="log" visibility="package" type="_Rg0EwScoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CcycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CdCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rg0CdScoEeSLVrU2ifxtpw" name="monitor1" visibility="package" type="_Rg0ECycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CdicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CdycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rg0CeCcoEeSLVrU2ifxtpw" name="monitor2" visibility="package" type="_Rg0ECycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CeScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CeicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Rg0CeycoEeSLVrU2ifxtpw" name="d" visibility="package" type="_Rg0q0CcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CfCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CfScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Rg0CficoEeSLVrU2ifxtpw" name="Expressions_Constructor_Destructor" visibility="package" method="_Rg0B5ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Rg0CfycoEeSLVrU2ifxtpw" name="" visibility="package" type="_RgzaIScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CgCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CgScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Rg0CgicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_Rg0CICcoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_Rg0CgycoEeSLVrU2ifxtpw" name="Initialization" visibility="package">
        <ownedAttribute xmi:id="_Rg0ChCcoEeSLVrU2ifxtpw" name="Initialization$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ChScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ChicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0ChycoEeSLVrU2ifxtpw" name="a" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CiCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CiScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0CiicoEeSLVrU2ifxtpw" name="b" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CiycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CjCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0CjScoEeSLVrU2ifxtpw" name="Initialization$method$1" specification="_Rg0DRicoEeSLVrU2ifxtpw" node="_Rg0CkicoEeSLVrU2ifxtpw _Rg0CkycoEeSLVrU2ifxtpw" group="_Rg0CkycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0CjicoEeSLVrU2ifxtpw" name="" type="_Rg0CgycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CjycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CkCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CkScoEeSLVrU2ifxtpw" target="_Rg0CkicoEeSLVrU2ifxtpw" source="_Rg0CpCcoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_Rg0CkycoEeSLVrU2ifxtpw" name="Body(Initialization$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ClCcoEeSLVrU2ifxtpw" target="_Rg0CpCcoEeSLVrU2ifxtpw" source="_Rg0CoScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ClScoEeSLVrU2ifxtpw" target="_Rg0CpicoEeSLVrU2ifxtpw" source="_Rg0CpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0ClicoEeSLVrU2ifxtpw" target="_Rg0CnycoEeSLVrU2ifxtpw" source="_Rg0CpScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ClycoEeSLVrU2ifxtpw" target="_Rg0CqicoEeSLVrU2ifxtpw" source="_Rg0CpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CmCcoEeSLVrU2ifxtpw" target="_Rg0CsScoEeSLVrU2ifxtpw" source="_Rg0CrScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CmScoEeSLVrU2ifxtpw" target="_Rg0CvScoEeSLVrU2ifxtpw" source="_Rg0CtCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CmicoEeSLVrU2ifxtpw" target="_Rg0CwycoEeSLVrU2ifxtpw" source="_Rg0CuCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0CmycoEeSLVrU2ifxtpw" target="_Rg0CxycoEeSLVrU2ifxtpw" source="_Rg0CxicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CnCcoEeSLVrU2ifxtpw" target="_Rg0CxycoEeSLVrU2ifxtpw" source="_Rg0CwCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0CnScoEeSLVrU2ifxtpw" target="_Rg0CpScoEeSLVrU2ifxtpw" source="_Rg0CxycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0CnicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0CnycoEeSLVrU2ifxtpw" name="Body" incoming="_Rg0ClicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0CoCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0CoScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0ClCcoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CoicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CoycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0CpCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0ClCcoEeSLVrU2ifxtpw" outgoing="_Rg0CkScoEeSLVrU2ifxtpw _Rg0ClScoEeSLVrU2ifxtpw _Rg0ClycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0CpScoEeSLVrU2ifxtpw" name="Call(Initialization$initialization$1)" incoming="_Rg0CnScoEeSLVrU2ifxtpw" outgoing="_Rg0ClicoEeSLVrU2ifxtpw" operation="_Rg0DRScoEeSLVrU2ifxtpw">
              <target xmi:id="_Rg0CpicoEeSLVrU2ifxtpw" name="Call(Initialization$initialization$1).target" incoming="_Rg0ClScoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CpycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CqCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0CqScoEeSLVrU2ifxtpw" name="Read(Initialization$initializationFlag$1)" structuralFeature="_Rg0ChCcoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0CqicoEeSLVrU2ifxtpw" name="Read(Initialization$initializationFlag$1).object" incoming="_Rg0ClycoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CqycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CrCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0CrScoEeSLVrU2ifxtpw" name="Read(Initialization$initializationFlag$1).result" outgoing="_Rg0CmCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CricoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CrycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0CsCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0CsScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0CmCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CsicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CsycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0CtCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0CmScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CtScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CticoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0CtycoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0CuCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0CmicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CuScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CuicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0CuycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0CvCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0CvScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0CmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CvicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CvycoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0CwCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0CnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CwScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CwicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0CwycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0CmicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0CxCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0CxScoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0CxicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0CmycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0CxycoEeSLVrU2ifxtpw" name="Decision(Test(Initialization$initializationFlag$1))" incoming="_Rg0CmycoEeSLVrU2ifxtpw _Rg0CnCcoEeSLVrU2ifxtpw" outgoing="_Rg0CnScoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0CnCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0CkicoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0CkScoEeSLVrU2ifxtpw" parameter="_Rg0CjicoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0CyCcoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_Rg0DSicoEeSLVrU2ifxtpw" node="_Rg0CyScoEeSLVrU2ifxtpw" group="_Rg0CyScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0CyScoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0CyicoEeSLVrU2ifxtpw" name="Initialization$initialization$1" specification="_Rg0DRScoEeSLVrU2ifxtpw" node="_Rg0CyycoEeSLVrU2ifxtpw" group="_Rg0CyycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0CyycoEeSLVrU2ifxtpw" name="Body(Initialization$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CzCcoEeSLVrU2ifxtpw" target="_Rg0C3CcoEeSLVrU2ifxtpw" source="_Rg0C2ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CzScoEeSLVrU2ifxtpw" target="_Rg0C-ycoEeSLVrU2ifxtpw" source="_Rg0C3CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CzicoEeSLVrU2ifxtpw" target="_Rg0DDCcoEeSLVrU2ifxtpw" source="_Rg0C3CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0CzycoEeSLVrU2ifxtpw" target="_Rg0DHScoEeSLVrU2ifxtpw" source="_Rg0C3CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C0CcoEeSLVrU2ifxtpw" target="_Rg0DJycoEeSLVrU2ifxtpw" source="_Rg0C3CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C0ScoEeSLVrU2ifxtpw" target="_Rg0DLicoEeSLVrU2ifxtpw" source="_Rg0DKicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C0icoEeSLVrU2ifxtpw" target="_Rg0DOicoEeSLVrU2ifxtpw" source="_Rg0DMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C0ycoEeSLVrU2ifxtpw" target="_Rg0DQCcoEeSLVrU2ifxtpw" source="_Rg0DNScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0C1CcoEeSLVrU2ifxtpw" target="_Rg0DRCcoEeSLVrU2ifxtpw" source="_Rg0DQycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C1ScoEeSLVrU2ifxtpw" target="_Rg0DRCcoEeSLVrU2ifxtpw" source="_Rg0DPScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0C1icoEeSLVrU2ifxtpw" target="_Rg0C3ScoEeSLVrU2ifxtpw" source="_Rg0DRCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0C1ycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0C2CcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0C2ScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0CzCcoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0C2icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0C2ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0C3CcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0CzCcoEeSLVrU2ifxtpw" outgoing="_Rg0CzScoEeSLVrU2ifxtpw _Rg0CzicoEeSLVrU2ifxtpw _Rg0CzycoEeSLVrU2ifxtpw _Rg0C0CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0C3ScoEeSLVrU2ifxtpw" name="Initialization" incoming="_Rg0C1icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0C3icoEeSLVrU2ifxtpw" target="_Rg0DBCcoEeSLVrU2ifxtpw" source="_Rg0C4CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0C3ycoEeSLVrU2ifxtpw" target="_Rg0DFScoEeSLVrU2ifxtpw" source="_Rg0DBCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0C4CcoEeSLVrU2ifxtpw" name="Initialize(a)" outgoing="_Rg0C3icoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C4ScoEeSLVrU2ifxtpw" target="_Rg0C5ScoEeSLVrU2ifxtpw" source="_Rg0C9icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0C4icoEeSLVrU2ifxtpw" target="_Rg0C5CcoEeSLVrU2ifxtpw" source="_Rg0C6ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C4ycoEeSLVrU2ifxtpw" target="_Rg0DAScoEeSLVrU2ifxtpw" source="_Rg0C6CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0C5CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__PrimitiveTypes$Integer__)" incoming="_Rg0C4icoEeSLVrU2ifxtpw" behavior="_Rg0q1icoEeSLVrU2ifxtpw">
                  <argument xmi:id="_Rg0C5ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__PrimitiveTypes$Integer__).argument(seq)" incoming="_Rg0C4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0C5icoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0C5ycoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <result xmi:id="_Rg0C6CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__PrimitiveTypes$Integer__).result()" outgoing="_Rg0C4ycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0C6ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0C6icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0C6ycoEeSLVrU2ifxtpw" name="Tuple@16669d39" outgoing="_Rg0C4icoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C7CcoEeSLVrU2ifxtpw" target="_Rg0C-ScoEeSLVrU2ifxtpw" source="_Rg0C7ycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0C7ScoEeSLVrU2ifxtpw" target="_Rg0C8ycoEeSLVrU2ifxtpw" source="_Rg0C-ScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0C7icoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_Rg0C7ycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0C7CcoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0C8CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0C8ScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0C8icoEeSLVrU2ifxtpw" name="Read(b)" structuralFeature="_Rg0CiicoEeSLVrU2ifxtpw">
                    <object xmi:id="_Rg0C8ycoEeSLVrU2ifxtpw" name="Read(b).object" incoming="_Rg0C7ScoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0C9CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0C9ScoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_Rg0C9icoEeSLVrU2ifxtpw" name="Read(b).result" outgoing="_Rg0C4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0C9ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0C-CcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Rg0C-ScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0C7CcoEeSLVrU2ifxtpw" outgoing="_Rg0C7ScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0C-icoEeSLVrU2ifxtpw" name="Write(a)" structuralFeature="_Rg0ChycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0C-ycoEeSLVrU2ifxtpw" name="Write(a).object" incoming="_Rg0CzScoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0C_CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0C_ScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0C_icoEeSLVrU2ifxtpw" name="Write(a).result" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0C_ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DACcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0DAScoEeSLVrU2ifxtpw" name="Write(a).value" incoming="_Rg0C4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DAicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DAycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0DBCcoEeSLVrU2ifxtpw" name="Initialize(b)" incoming="_Rg0C3icoEeSLVrU2ifxtpw" outgoing="_Rg0C3ycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DBScoEeSLVrU2ifxtpw" target="_Rg0DEicoEeSLVrU2ifxtpw" source="_Rg0DBycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0DBicoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_Rg0DBycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg0DBScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DCCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DCScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0DCicoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0DCycoEeSLVrU2ifxtpw" name="Write(b)" structuralFeature="_Rg0CiicoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0DDCcoEeSLVrU2ifxtpw" name="Write(b).object" incoming="_Rg0CzicoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DDScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DDicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0DDycoEeSLVrU2ifxtpw" name="Write(b).result" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DECcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DEScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0DEicoEeSLVrU2ifxtpw" name="Write(b).value" incoming="_Rg0DBScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DEycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DFCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0DFScoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_Rg0C3ycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DFicoEeSLVrU2ifxtpw" target="_Rg0DIycoEeSLVrU2ifxtpw" source="_Rg0DGCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0DFycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_Rg0DGCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0DFicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DGScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DGicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0DGycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0DHCcoEeSLVrU2ifxtpw" name="Write(Initialization$initializationFlag$1)" structuralFeature="_Rg0ChCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0DHScoEeSLVrU2ifxtpw" name="Write(Initialization$initializationFlag$1).object" incoming="_Rg0CzycoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DHicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DHycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0DICcoEeSLVrU2ifxtpw" name="Write(Initialization$initializationFlag$1).result" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DIScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DIicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0DIycoEeSLVrU2ifxtpw" name="Write(Initialization$initializationFlag$1).value" incoming="_Rg0DFicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DJCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DJScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0DJicoEeSLVrU2ifxtpw" name="Read(Initialization$initializationFlag$1)" structuralFeature="_Rg0ChCcoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0DJycoEeSLVrU2ifxtpw" name="Read(Initialization$initializationFlag$1).object" incoming="_Rg0C0CcoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DKCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DKScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0DKicoEeSLVrU2ifxtpw" name="Read(Initialization$initializationFlag$1).result" outgoing="_Rg0C0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DKycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DLCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0DLScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0DLicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0C0ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DLycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DMCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0DMScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0C0icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DMicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DMycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0DNCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0DNScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0C0ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DNicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DNycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0DOCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0DOScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0DOicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0C0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DOycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DPCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0DPScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0C1ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DPicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DPycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0DQCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0C0ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DQScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DQicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0DQycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0C1CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0DRCcoEeSLVrU2ifxtpw" name="Decision(Test(Initialization$initializationFlag$1))" incoming="_Rg0C1CcoEeSLVrU2ifxtpw _Rg0C1ScoEeSLVrU2ifxtpw" outgoing="_Rg0C1icoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0C1ScoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_Rg0DRScoEeSLVrU2ifxtpw" name="Initialization$initialization$1" visibility="protected" method="_Rg0CyicoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_Rg0DRicoEeSLVrU2ifxtpw" name="Initialization" visibility="package" method="_Rg0CjScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0DRycoEeSLVrU2ifxtpw" name="" visibility="package" type="_Rg0CgycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DSCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DSScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Rg0DSicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_Rg0CyCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_Rg0DSycoEeSLVrU2ifxtpw" name="Initialization2" visibility="package">
        <generalization xmi:id="_Rg0DTCcoEeSLVrU2ifxtpw" general="_Rg0CgycoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_Rg0DTScoEeSLVrU2ifxtpw" name="Initialization2$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DTicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DTycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0DUCcoEeSLVrU2ifxtpw" name="c" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DUScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DUicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0DUycoEeSLVrU2ifxtpw" name="Initialization2$method$1" specification="_Rg0EBicoEeSLVrU2ifxtpw" node="_Rg0DWCcoEeSLVrU2ifxtpw _Rg0DWScoEeSLVrU2ifxtpw" group="_Rg0DWScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0DVCcoEeSLVrU2ifxtpw" name="" type="_Rg0DSycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DVScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DVicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DVycoEeSLVrU2ifxtpw" target="_Rg0DWCcoEeSLVrU2ifxtpw" source="_Rg0DaicoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_Rg0DWScoEeSLVrU2ifxtpw" name="Body(Initialization2$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DWicoEeSLVrU2ifxtpw" target="_Rg0DaicoEeSLVrU2ifxtpw" source="_Rg0DZycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DWycoEeSLVrU2ifxtpw" target="_Rg0DbCcoEeSLVrU2ifxtpw" source="_Rg0DaicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0DXCcoEeSLVrU2ifxtpw" target="_Rg0DZScoEeSLVrU2ifxtpw" source="_Rg0DaycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DXScoEeSLVrU2ifxtpw" target="_Rg0DcCcoEeSLVrU2ifxtpw" source="_Rg0DaicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DXicoEeSLVrU2ifxtpw" target="_Rg0DdycoEeSLVrU2ifxtpw" source="_Rg0DcycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DXycoEeSLVrU2ifxtpw" target="_Rg0DgycoEeSLVrU2ifxtpw" source="_Rg0DeicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DYCcoEeSLVrU2ifxtpw" target="_Rg0DiScoEeSLVrU2ifxtpw" source="_Rg0DficoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0DYScoEeSLVrU2ifxtpw" target="_Rg0DjScoEeSLVrU2ifxtpw" source="_Rg0DjCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DYicoEeSLVrU2ifxtpw" target="_Rg0DjScoEeSLVrU2ifxtpw" source="_Rg0DhicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0DYycoEeSLVrU2ifxtpw" target="_Rg0DaycoEeSLVrU2ifxtpw" source="_Rg0DjScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0DZCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0DZScoEeSLVrU2ifxtpw" name="Body" incoming="_Rg0DXCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0DZicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0DZycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0DWicoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DaCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DaScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0DaicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0DWicoEeSLVrU2ifxtpw" outgoing="_Rg0DVycoEeSLVrU2ifxtpw _Rg0DWycoEeSLVrU2ifxtpw _Rg0DXScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0DaycoEeSLVrU2ifxtpw" name="Call(Initialization2$initialization$1)" incoming="_Rg0DYycoEeSLVrU2ifxtpw" outgoing="_Rg0DXCcoEeSLVrU2ifxtpw" operation="_Rg0EBScoEeSLVrU2ifxtpw">
              <target xmi:id="_Rg0DbCcoEeSLVrU2ifxtpw" name="Call(Initialization2$initialization$1).target" incoming="_Rg0DWycoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DbScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DbicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0DbycoEeSLVrU2ifxtpw" name="Read(Initialization2$initializationFlag$1)" structuralFeature="_Rg0DTScoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0DcCcoEeSLVrU2ifxtpw" name="Read(Initialization2$initializationFlag$1).object" incoming="_Rg0DXScoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DcScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DcicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0DcycoEeSLVrU2ifxtpw" name="Read(Initialization2$initializationFlag$1).result" outgoing="_Rg0DXicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DdCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DdScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0DdicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0DdycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0DXicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DeCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DeScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0DeicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0DXycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DeycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DfCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0DfScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0DficoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0DYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DfycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DgCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0DgScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0DgicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0DgycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0DXycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DhCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DhScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0DhicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0DYicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DhycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DiCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0DiScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0DYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DiicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DiycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0DjCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0DYScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0DjScoEeSLVrU2ifxtpw" name="Decision(Test(Initialization2$initializationFlag$1))" incoming="_Rg0DYScoEeSLVrU2ifxtpw _Rg0DYicoEeSLVrU2ifxtpw" outgoing="_Rg0DYycoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0DYicoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0DWCcoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0DVycoEeSLVrU2ifxtpw" parameter="_Rg0DVCcoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0DjicoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_Rg0ECicoEeSLVrU2ifxtpw" node="_Rg0DjycoEeSLVrU2ifxtpw" group="_Rg0DjycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0DjycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0DkCcoEeSLVrU2ifxtpw" name="Initialization2$initialization$1" specification="_Rg0EBScoEeSLVrU2ifxtpw" node="_Rg0DkScoEeSLVrU2ifxtpw" group="_Rg0DkScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0DkScoEeSLVrU2ifxtpw" name="Body(Initialization2$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DkicoEeSLVrU2ifxtpw" target="_Rg0DoicoEeSLVrU2ifxtpw" source="_Rg0DnycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DkycoEeSLVrU2ifxtpw" target="_Rg0DpycoEeSLVrU2ifxtpw" source="_Rg0DoicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DlCcoEeSLVrU2ifxtpw" target="_Rg0DzCcoEeSLVrU2ifxtpw" source="_Rg0DoicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DlScoEeSLVrU2ifxtpw" target="_Rg0D3ScoEeSLVrU2ifxtpw" source="_Rg0DoicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DlicoEeSLVrU2ifxtpw" target="_Rg0D5ycoEeSLVrU2ifxtpw" source="_Rg0DoicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DlycoEeSLVrU2ifxtpw" target="_Rg0D7icoEeSLVrU2ifxtpw" source="_Rg0D6icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DmCcoEeSLVrU2ifxtpw" target="_Rg0D-icoEeSLVrU2ifxtpw" source="_Rg0D8ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DmScoEeSLVrU2ifxtpw" target="_Rg0EACcoEeSLVrU2ifxtpw" source="_Rg0D9ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0DmicoEeSLVrU2ifxtpw" target="_Rg0EBCcoEeSLVrU2ifxtpw" source="_Rg0EAycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DmycoEeSLVrU2ifxtpw" target="_Rg0EBCcoEeSLVrU2ifxtpw" source="_Rg0D_ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0DnCcoEeSLVrU2ifxtpw" target="_Rg0DoycoEeSLVrU2ifxtpw" source="_Rg0EBCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0DnScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0DnicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0DnycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0DkicoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DoCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DoScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0DoicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0DkicoEeSLVrU2ifxtpw" outgoing="_Rg0DkycoEeSLVrU2ifxtpw _Rg0DlCcoEeSLVrU2ifxtpw _Rg0DlScoEeSLVrU2ifxtpw _Rg0DlicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0DoycoEeSLVrU2ifxtpw" name="Initialization" incoming="_Rg0DnCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0DpCcoEeSLVrU2ifxtpw" target="_Rg0DqicoEeSLVrU2ifxtpw" source="_Rg0DpicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0DpScoEeSLVrU2ifxtpw" target="_Rg0D1ScoEeSLVrU2ifxtpw" source="_Rg0DqicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0DpicoEeSLVrU2ifxtpw" name="Call(Initialization$initialization$1)" outgoing="_Rg0DpCcoEeSLVrU2ifxtpw" operation="_Rg0DRScoEeSLVrU2ifxtpw">
                <target xmi:id="_Rg0DpycoEeSLVrU2ifxtpw" name="Call(Initialization$initialization$1).target" incoming="_Rg0DkycoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DqCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DqScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0DqicoEeSLVrU2ifxtpw" name="Initialize(c)" incoming="_Rg0DpCcoEeSLVrU2ifxtpw" outgoing="_Rg0DpScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DqycoEeSLVrU2ifxtpw" target="_Rg0DuycoEeSLVrU2ifxtpw" source="_Rg0DsScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DrCcoEeSLVrU2ifxtpw" target="_Rg0DtScoEeSLVrU2ifxtpw" source="_Rg0DuycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DrScoEeSLVrU2ifxtpw" target="_Rg0DwicoEeSLVrU2ifxtpw" source="_Rg0DuCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DricoEeSLVrU2ifxtpw" target="_Rg0DxScoEeSLVrU2ifxtpw" source="_Rg0DvScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0DrycoEeSLVrU2ifxtpw" target="_Rg0D0icoEeSLVrU2ifxtpw" source="_Rg0DyCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0DsCcoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_Rg0DsScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0DqycoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DsicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DsycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0DtCcoEeSLVrU2ifxtpw" name="Read(a)" structuralFeature="_Rg0ChycoEeSLVrU2ifxtpw">
                  <object xmi:id="_Rg0DtScoEeSLVrU2ifxtpw" name="Read(a).object" incoming="_Rg0DrCcoEeSLVrU2ifxtpw" type="_Rg0CgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DticoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DtycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0DuCcoEeSLVrU2ifxtpw" name="Read(a).result" outgoing="_Rg0DrScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DuScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DuicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Rg0DuycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0DqycoEeSLVrU2ifxtpw" outgoing="_Rg0DrCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0DvCcoEeSLVrU2ifxtpw" name="Value(2)">
                  <result xmi:id="_Rg0DvScoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_Rg0DricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DvicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DvycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0DwCcoEeSLVrU2ifxtpw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0DwScoEeSLVrU2ifxtpw" name="Call(+)">
                  <argument xmi:id="_Rg0DwicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_Rg0DrScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DwycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DxCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_Rg0DxScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_Rg0DricoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DxicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DxycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_Rg0DyCcoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_Rg0DrycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DyScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DyicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0DyycoEeSLVrU2ifxtpw" name="Write(c)" structuralFeature="_Rg0DUCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0DzCcoEeSLVrU2ifxtpw" name="Write(c).object" incoming="_Rg0DlCcoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0DzScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0DzicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0DzycoEeSLVrU2ifxtpw" name="Write(c).result" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D0CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D0ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0D0icoEeSLVrU2ifxtpw" name="Write(c).value" incoming="_Rg0DrycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D0ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D1CcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0D1ScoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_Rg0DpScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0D1icoEeSLVrU2ifxtpw" target="_Rg0D4ycoEeSLVrU2ifxtpw" source="_Rg0D2CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0D1ycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_Rg0D2CcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0D1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D2ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D2icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0D2ycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0D3CcoEeSLVrU2ifxtpw" name="Write(Initialization2$initializationFlag$1)" structuralFeature="_Rg0DTScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0D3ScoEeSLVrU2ifxtpw" name="Write(Initialization2$initializationFlag$1).object" incoming="_Rg0DlScoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D3icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D3ycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0D4CcoEeSLVrU2ifxtpw" name="Write(Initialization2$initializationFlag$1).result" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D4ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D4icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0D4ycoEeSLVrU2ifxtpw" name="Write(Initialization2$initializationFlag$1).value" incoming="_Rg0D1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D5CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D5ScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0D5icoEeSLVrU2ifxtpw" name="Read(Initialization2$initializationFlag$1)" structuralFeature="_Rg0DTScoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0D5ycoEeSLVrU2ifxtpw" name="Read(Initialization2$initializationFlag$1).object" incoming="_Rg0DlicoEeSLVrU2ifxtpw" type="_Rg0DSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D6CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D6ScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0D6icoEeSLVrU2ifxtpw" name="Read(Initialization2$initializationFlag$1).result" outgoing="_Rg0DlycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D6ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D7CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0D7ScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0D7icoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0DlycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D7ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D8CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0D8ScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0DmCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D8icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D8ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0D9CcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0D9ScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0DmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D9icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D9ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0D-CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0D-ScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0D-icoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0DmCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D-ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D_CcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0D_ScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0DmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0D_icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0D_ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0EACcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0DmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EAScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EAicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0EAycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0DmicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0EBCcoEeSLVrU2ifxtpw" name="Decision(Test(Initialization2$initializationFlag$1))" incoming="_Rg0DmicoEeSLVrU2ifxtpw _Rg0DmycoEeSLVrU2ifxtpw" outgoing="_Rg0DnCcoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0DmycoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_Rg0EBScoEeSLVrU2ifxtpw" name="Initialization2$initialization$1" visibility="protected" method="_Rg0DkCcoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_Rg0EBicoEeSLVrU2ifxtpw" name="Initialization2" visibility="package" method="_Rg0DUycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0EBycoEeSLVrU2ifxtpw" name="" visibility="package" type="_Rg0DSycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ECCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ECScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Rg0ECicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_Rg0DjicoEeSLVrU2ifxtpw" redefinedOperation="_Rg0DSicoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_Rg0ECycoEeSLVrU2ifxtpw" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_Rg0EDCcoEeSLVrU2ifxtpw" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EDScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EDicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0EDycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_Rg0EuScoEeSLVrU2ifxtpw" node="_Rg0EFScoEeSLVrU2ifxtpw _Rg0EFicoEeSLVrU2ifxtpw _Rg0EFycoEeSLVrU2ifxtpw" group="_Rg0EFycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0EECcoEeSLVrU2ifxtpw" name="recoveryLog" type="_Rg0EwScoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EEScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EEicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EEycoEeSLVrU2ifxtpw" target="_Rg0EFicoEeSLVrU2ifxtpw" source="_Rg0EFScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EFCcoEeSLVrU2ifxtpw" target="_Rg0EHycoEeSLVrU2ifxtpw" source="_Rg0EFicoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_Rg0EFycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0EGCcoEeSLVrU2ifxtpw" name="ExpressionStatement@7668952e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EGScoEeSLVrU2ifxtpw" target="_Rg0EKCcoEeSLVrU2ifxtpw" source="_Rg0EJScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EGicoEeSLVrU2ifxtpw" target="_Rg0ELCcoEeSLVrU2ifxtpw" source="_Rg0EIicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EGycoEeSLVrU2ifxtpw" target="_Rg0EJScoEeSLVrU2ifxtpw" source="_Rg0ENycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0EHCcoEeSLVrU2ifxtpw" target="_Rg0EHScoEeSLVrU2ifxtpw" source="_Rg0ENScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0EHScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@6e756e07)" incoming="_Rg0EHCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Rg0EHicoEeSLVrU2ifxtpw" name="Clear(logged)" structuralFeature="_Rg0oRicoEeSLVrU2ifxtpw">
                <object xmi:id="_Rg0EHycoEeSLVrU2ifxtpw" name="Clear(logged).object" incoming="_Rg0EFCcoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EICcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EIScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Rg0EIicoEeSLVrU2ifxtpw" name="Clear(logged).result" outgoing="_Rg0EGicoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EIycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EJCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Rg0EJScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@6e756e07)" incoming="_Rg0EGycoEeSLVrU2ifxtpw" outgoing="_Rg0EGScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0EJicoEeSLVrU2ifxtpw" name="WriteAll(Log::logged)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EJycoEeSLVrU2ifxtpw" target="_Rg0EMicoEeSLVrU2ifxtpw" source="_Rg0EKCcoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_Rg0EKCcoEeSLVrU2ifxtpw" name="WriteAll(Log::logged).input(Log::logged)" incoming="_Rg0EGScoEeSLVrU2ifxtpw" outgoing="_Rg0EJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EKScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EKicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0EKycoEeSLVrU2ifxtpw" name="Write(logged)" structuralFeature="_Rg0oRicoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0ELCcoEeSLVrU2ifxtpw" name="Write(logged).object" incoming="_Rg0EGicoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ELScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ELicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0ELycoEeSLVrU2ifxtpw" name="Write(logged).result" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EMCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EMScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0EMicoEeSLVrU2ifxtpw" name="Write(logged).value" incoming="_Rg0EJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EMycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ENCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0ENScoEeSLVrU2ifxtpw" name="RightHandSide@2dc94518" outgoing="_Rg0EHCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0ENicoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_Rg0ENycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0EGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EOCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EOScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0EOicoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0EFScoEeSLVrU2ifxtpw" name="Input(recoveryLog)" outgoing="_Rg0EEycoEeSLVrU2ifxtpw" parameter="_Rg0EECcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0EFicoEeSLVrU2ifxtpw" name="Fork(recoveryLog)" incoming="_Rg0EEycoEeSLVrU2ifxtpw" outgoing="_Rg0EFCcoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0EOycoEeSLVrU2ifxtpw" name="Monitor$method$1" specification="_Rg0EvScoEeSLVrU2ifxtpw" node="_Rg0EQCcoEeSLVrU2ifxtpw _Rg0EQScoEeSLVrU2ifxtpw" group="_Rg0EQScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0EPCcoEeSLVrU2ifxtpw" name="" type="_Rg0ECycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EPScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EPicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EPycoEeSLVrU2ifxtpw" target="_Rg0EQCcoEeSLVrU2ifxtpw" source="_Rg0EUicoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_Rg0EQScoEeSLVrU2ifxtpw" name="Body(Monitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EQicoEeSLVrU2ifxtpw" target="_Rg0EUicoEeSLVrU2ifxtpw" source="_Rg0ETycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EQycoEeSLVrU2ifxtpw" target="_Rg0EVCcoEeSLVrU2ifxtpw" source="_Rg0EUicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0ERCcoEeSLVrU2ifxtpw" target="_Rg0ETScoEeSLVrU2ifxtpw" source="_Rg0EUycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ERScoEeSLVrU2ifxtpw" target="_Rg0EWCcoEeSLVrU2ifxtpw" source="_Rg0EUicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ERicoEeSLVrU2ifxtpw" target="_Rg0EXycoEeSLVrU2ifxtpw" source="_Rg0EWycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ERycoEeSLVrU2ifxtpw" target="_Rg0EaycoEeSLVrU2ifxtpw" source="_Rg0EYicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ESCcoEeSLVrU2ifxtpw" target="_Rg0EcScoEeSLVrU2ifxtpw" source="_Rg0EZicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0ESScoEeSLVrU2ifxtpw" target="_Rg0EdScoEeSLVrU2ifxtpw" source="_Rg0EdCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ESicoEeSLVrU2ifxtpw" target="_Rg0EdScoEeSLVrU2ifxtpw" source="_Rg0EbicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0ESycoEeSLVrU2ifxtpw" target="_Rg0EUycoEeSLVrU2ifxtpw" source="_Rg0EdScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0ETCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0ETScoEeSLVrU2ifxtpw" name="Body" incoming="_Rg0ERCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0ETicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0ETycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0EQicoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EUCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EUScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0EUicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0EQicoEeSLVrU2ifxtpw" outgoing="_Rg0EPycoEeSLVrU2ifxtpw _Rg0EQycoEeSLVrU2ifxtpw _Rg0ERScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0EUycoEeSLVrU2ifxtpw" name="Call(Monitor$initialization$1)" incoming="_Rg0ESycoEeSLVrU2ifxtpw" outgoing="_Rg0ERCcoEeSLVrU2ifxtpw" operation="_Rg0EuCcoEeSLVrU2ifxtpw">
              <target xmi:id="_Rg0EVCcoEeSLVrU2ifxtpw" name="Call(Monitor$initialization$1).target" incoming="_Rg0EQycoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EVScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EVicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0EVycoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1)" structuralFeature="_Rg0EDCcoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0EWCcoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1).object" incoming="_Rg0ERScoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EWScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EWicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0EWycoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1).result" outgoing="_Rg0ERicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EXCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EXScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0EXicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0EXycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0ERicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EYCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EYScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0EYicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0ERycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EYycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EZCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0EZScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0EZicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0ESCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EZycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EaCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0EaScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0EaicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0EaycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0ERycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EbCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EbScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0EbicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0ESicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EbycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EcCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0EcScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0ESCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EcicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EcycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0EdCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0ESScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0EdScoEeSLVrU2ifxtpw" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_Rg0ESScoEeSLVrU2ifxtpw _Rg0ESicoEeSLVrU2ifxtpw" outgoing="_Rg0ESycoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0ESicoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0EQCcoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0EPycoEeSLVrU2ifxtpw" parameter="_Rg0EPCcoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0EdicoEeSLVrU2ifxtpw" name="Monitor$initialization$1" specification="_Rg0EuCcoEeSLVrU2ifxtpw" node="_Rg0EdycoEeSLVrU2ifxtpw" group="_Rg0EdycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0EdycoEeSLVrU2ifxtpw" name="Body(Monitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EeCcoEeSLVrU2ifxtpw" target="_Rg0EhicoEeSLVrU2ifxtpw" source="_Rg0EgycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EeScoEeSLVrU2ifxtpw" target="_Rg0EkCcoEeSLVrU2ifxtpw" source="_Rg0EhicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EeicoEeSLVrU2ifxtpw" target="_Rg0EmicoEeSLVrU2ifxtpw" source="_Rg0EhicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EeycoEeSLVrU2ifxtpw" target="_Rg0EoScoEeSLVrU2ifxtpw" source="_Rg0EnScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EfCcoEeSLVrU2ifxtpw" target="_Rg0ErScoEeSLVrU2ifxtpw" source="_Rg0EpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EfScoEeSLVrU2ifxtpw" target="_Rg0EsycoEeSLVrU2ifxtpw" source="_Rg0EqCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0EficoEeSLVrU2ifxtpw" target="_Rg0EtycoEeSLVrU2ifxtpw" source="_Rg0EticoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EfycoEeSLVrU2ifxtpw" target="_Rg0EtycoEeSLVrU2ifxtpw" source="_Rg0EsCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0EgCcoEeSLVrU2ifxtpw" target="_Rg0EhycoEeSLVrU2ifxtpw" source="_Rg0EtycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0EgScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0EgicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0EgycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0EeCcoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EhCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EhScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0EhicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0EeCcoEeSLVrU2ifxtpw" outgoing="_Rg0EeScoEeSLVrU2ifxtpw _Rg0EeicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0EhycoEeSLVrU2ifxtpw" name="Initialization" incoming="_Rg0EgCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0EiCcoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0EiScoEeSLVrU2ifxtpw" target="_Rg0ElicoEeSLVrU2ifxtpw" source="_Rg0EiycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0EiicoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_Rg0EiycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0EiScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EjCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EjScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0EjicoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0EjycoEeSLVrU2ifxtpw" name="Write(Monitor$initializationFlag$1)" structuralFeature="_Rg0EDCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0EkCcoEeSLVrU2ifxtpw" name="Write(Monitor$initializationFlag$1).object" incoming="_Rg0EeScoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EkScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EkicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0EkycoEeSLVrU2ifxtpw" name="Write(Monitor$initializationFlag$1).result" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ElCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ElScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0ElicoEeSLVrU2ifxtpw" name="Write(Monitor$initializationFlag$1).value" incoming="_Rg0EiScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ElycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EmCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0EmScoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1)" structuralFeature="_Rg0EDCcoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0EmicoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1).object" incoming="_Rg0EeicoEeSLVrU2ifxtpw" type="_Rg0ECycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EmycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EnCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0EnScoEeSLVrU2ifxtpw" name="Read(Monitor$initializationFlag$1).result" outgoing="_Rg0EeycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EnicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EnycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0EoCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0EoScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0EeycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EoicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EoycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0EpCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0EfCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EpScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EpicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0EpycoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0EqCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0EfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EqScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EqicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0EqycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0ErCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0ErScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0EfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EricoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ErycoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0EsCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0EfycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EsScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EsicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0EsycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0EfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EtCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EtScoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0EticoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0EficoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0EtycoEeSLVrU2ifxtpw" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_Rg0EficoEeSLVrU2ifxtpw _Rg0EfycoEeSLVrU2ifxtpw" outgoing="_Rg0EgCcoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0EfycoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_Rg0EuCcoEeSLVrU2ifxtpw" name="Monitor$initialization$1" visibility="protected" method="_Rg0EdicoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_Rg0EuScoEeSLVrU2ifxtpw" name="destroy" visibility="public" method="_Rg0EDycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0EuicoEeSLVrU2ifxtpw" name="recoveryLog" visibility="package" type="_Rg0EwScoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EuycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EvCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Rg0EvScoEeSLVrU2ifxtpw" name="Monitor" visibility="package" method="_Rg0EOycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0EvicoEeSLVrU2ifxtpw" name="" visibility="package" type="_Rg0ECycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0EvycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0EwCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_Rg0EwScoEeSLVrU2ifxtpw" name="Log" visibility="package">
        <ownedAttribute xmi:id="_Rg0oQCcoEeSLVrU2ifxtpw" name="Log$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oQScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oQicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0oQycoEeSLVrU2ifxtpw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oRCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oRScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0oRicoEeSLVrU2ifxtpw" name="logged" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oRycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oSCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0oSScoEeSLVrU2ifxtpw" name="Log$method$1" specification="_Rg0o7ycoEeSLVrU2ifxtpw" node="_Rg0oTicoEeSLVrU2ifxtpw _Rg0oTycoEeSLVrU2ifxtpw" group="_Rg0oTycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0oSicoEeSLVrU2ifxtpw" name="" type="_Rg0EwScoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oSycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oTCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oTScoEeSLVrU2ifxtpw" target="_Rg0oTicoEeSLVrU2ifxtpw" source="_Rg0oYCcoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_Rg0oTycoEeSLVrU2ifxtpw" name="Body(Log$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oUCcoEeSLVrU2ifxtpw" target="_Rg0oYCcoEeSLVrU2ifxtpw" source="_Rg0oXScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oUScoEeSLVrU2ifxtpw" target="_Rg0oYicoEeSLVrU2ifxtpw" source="_Rg0oYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0oUicoEeSLVrU2ifxtpw" target="_Rg0oWycoEeSLVrU2ifxtpw" source="_Rg0oYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oUycoEeSLVrU2ifxtpw" target="_Rg0oZicoEeSLVrU2ifxtpw" source="_Rg0oYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oVCcoEeSLVrU2ifxtpw" target="_Rg0obScoEeSLVrU2ifxtpw" source="_Rg0oaScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oVScoEeSLVrU2ifxtpw" target="_Rg0oeScoEeSLVrU2ifxtpw" source="_Rg0ocCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oVicoEeSLVrU2ifxtpw" target="_Rg0ofycoEeSLVrU2ifxtpw" source="_Rg0odCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0oVycoEeSLVrU2ifxtpw" target="_Rg0ogycoEeSLVrU2ifxtpw" source="_Rg0ogicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oWCcoEeSLVrU2ifxtpw" target="_Rg0ogycoEeSLVrU2ifxtpw" source="_Rg0ofCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0oWScoEeSLVrU2ifxtpw" target="_Rg0oYScoEeSLVrU2ifxtpw" source="_Rg0ogycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0oWicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0oWycoEeSLVrU2ifxtpw" name="Body" incoming="_Rg0oUicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0oXCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0oXScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0oUCcoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oXicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oXycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0oYCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0oUCcoEeSLVrU2ifxtpw" outgoing="_Rg0oTScoEeSLVrU2ifxtpw _Rg0oUScoEeSLVrU2ifxtpw _Rg0oUycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0oYScoEeSLVrU2ifxtpw" name="Call(Log$initialization$1)" incoming="_Rg0oWScoEeSLVrU2ifxtpw" outgoing="_Rg0oUicoEeSLVrU2ifxtpw" operation="_Rg0o7icoEeSLVrU2ifxtpw">
              <target xmi:id="_Rg0oYicoEeSLVrU2ifxtpw" name="Call(Log$initialization$1).target" incoming="_Rg0oUScoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oYycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oZCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0oZScoEeSLVrU2ifxtpw" name="Read(Log$initializationFlag$1)" structuralFeature="_Rg0oQCcoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0oZicoEeSLVrU2ifxtpw" name="Read(Log$initializationFlag$1).object" incoming="_Rg0oUycoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oZycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oaCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0oaScoEeSLVrU2ifxtpw" name="Read(Log$initializationFlag$1).result" outgoing="_Rg0oVCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oaicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oaycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0obCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0obScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0oVCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0obicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0obycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0ocCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0oVScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ocScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ocicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0ocycoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0odCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0oVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0odScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0odicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0odycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0oeCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0oeScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0oVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oeicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oeycoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0ofCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0oWCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ofScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oficoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0ofycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0oVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ogCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ogScoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0ogicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0oVycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0ogycoEeSLVrU2ifxtpw" name="Decision(Test(Log$initializationFlag$1))" incoming="_Rg0oVycoEeSLVrU2ifxtpw _Rg0oWCcoEeSLVrU2ifxtpw" outgoing="_Rg0oWScoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0oWCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0oTicoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0oTScoEeSLVrU2ifxtpw" parameter="_Rg0oSicoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0ohCcoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_Rg0o8ycoEeSLVrU2ifxtpw" node="_Rg0ohScoEeSLVrU2ifxtpw" group="_Rg0ohScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0ohScoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0ohicoEeSLVrU2ifxtpw" name="Log$initialization$1" specification="_Rg0o7icoEeSLVrU2ifxtpw" node="_Rg0ohycoEeSLVrU2ifxtpw" group="_Rg0ohycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0ohycoEeSLVrU2ifxtpw" name="Body(Log$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oiCcoEeSLVrU2ifxtpw" target="_Rg0omCcoEeSLVrU2ifxtpw" source="_Rg0olScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oiScoEeSLVrU2ifxtpw" target="_Rg0opCcoEeSLVrU2ifxtpw" source="_Rg0omCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oiicoEeSLVrU2ifxtpw" target="_Rg0otScoEeSLVrU2ifxtpw" source="_Rg0omCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oiycoEeSLVrU2ifxtpw" target="_Rg0oxicoEeSLVrU2ifxtpw" source="_Rg0omCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ojCcoEeSLVrU2ifxtpw" target="_Rg0o0CcoEeSLVrU2ifxtpw" source="_Rg0omCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ojScoEeSLVrU2ifxtpw" target="_Rg0o1ycoEeSLVrU2ifxtpw" source="_Rg0o0ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ojicoEeSLVrU2ifxtpw" target="_Rg0o4ycoEeSLVrU2ifxtpw" source="_Rg0o2icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ojycoEeSLVrU2ifxtpw" target="_Rg0o6ScoEeSLVrU2ifxtpw" source="_Rg0o3icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0okCcoEeSLVrU2ifxtpw" target="_Rg0o7ScoEeSLVrU2ifxtpw" source="_Rg0o7CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0okScoEeSLVrU2ifxtpw" target="_Rg0o7ScoEeSLVrU2ifxtpw" source="_Rg0o5icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0okicoEeSLVrU2ifxtpw" target="_Rg0omScoEeSLVrU2ifxtpw" source="_Rg0o7ScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0okycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0olCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0olScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0oiCcoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0olicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0olycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0omCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0oiCcoEeSLVrU2ifxtpw" outgoing="_Rg0oiScoEeSLVrU2ifxtpw _Rg0oiicoEeSLVrU2ifxtpw _Rg0oiycoEeSLVrU2ifxtpw _Rg0ojCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0omScoEeSLVrU2ifxtpw" name="Initialization" incoming="_Rg0okicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0omicoEeSLVrU2ifxtpw" target="_Rg0orScoEeSLVrU2ifxtpw" source="_Rg0onCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0omycoEeSLVrU2ifxtpw" target="_Rg0ovicoEeSLVrU2ifxtpw" source="_Rg0orScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0onCcoEeSLVrU2ifxtpw" name="Initialize(name)" outgoing="_Rg0omicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0onScoEeSLVrU2ifxtpw" target="_Rg0oqicoEeSLVrU2ifxtpw" source="_Rg0onycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0onicoEeSLVrU2ifxtpw" name="Value(&quot;Default&quot;)">
                  <result xmi:id="_Rg0onycoEeSLVrU2ifxtpw" name="Value(&quot;Default&quot;).result" outgoing="_Rg0onScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ooCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ooScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Rg0ooicoEeSLVrU2ifxtpw" value="Default">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0ooycoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_Rg0oQycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0opCcoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_Rg0oiScoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0opScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0opicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0opycoEeSLVrU2ifxtpw" name="Write(name).result" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oqCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oqScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0oqicoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_Rg0onScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oqycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0orCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0orScoEeSLVrU2ifxtpw" name="Initialize(logged)" incoming="_Rg0omicoEeSLVrU2ifxtpw" outgoing="_Rg0omycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0oricoEeSLVrU2ifxtpw" target="_Rg0ouycoEeSLVrU2ifxtpw" source="_Rg0osCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0orycoEeSLVrU2ifxtpw" name="Value(false)">
                  <result xmi:id="_Rg0osCcoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_Rg0oricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0osScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0osicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0osycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0otCcoEeSLVrU2ifxtpw" name="Write(logged)" structuralFeature="_Rg0oRicoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0otScoEeSLVrU2ifxtpw" name="Write(logged).object" incoming="_Rg0oiicoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oticoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0otycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0ouCcoEeSLVrU2ifxtpw" name="Write(logged).result" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ouScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ouicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0ouycoEeSLVrU2ifxtpw" name="Write(logged).value" incoming="_Rg0oricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ovCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ovScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0ovicoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_Rg0omycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ovycoEeSLVrU2ifxtpw" target="_Rg0ozCcoEeSLVrU2ifxtpw" source="_Rg0owScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0owCcoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_Rg0owScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0ovycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0owicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0owycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0oxCcoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0oxScoEeSLVrU2ifxtpw" name="Write(Log$initializationFlag$1)" structuralFeature="_Rg0oQCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0oxicoEeSLVrU2ifxtpw" name="Write(Log$initializationFlag$1).object" incoming="_Rg0oiycoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oxycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oyCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0oyScoEeSLVrU2ifxtpw" name="Write(Log$initializationFlag$1).result" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0oyicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0oyycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0ozCcoEeSLVrU2ifxtpw" name="Write(Log$initializationFlag$1).value" incoming="_Rg0ovycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ozScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ozicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0ozycoEeSLVrU2ifxtpw" name="Read(Log$initializationFlag$1)" structuralFeature="_Rg0oQCcoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0o0CcoEeSLVrU2ifxtpw" name="Read(Log$initializationFlag$1).object" incoming="_Rg0ojCcoEeSLVrU2ifxtpw" type="_Rg0EwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o0ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o0icoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0o0ycoEeSLVrU2ifxtpw" name="Read(Log$initializationFlag$1).result" outgoing="_Rg0ojScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o1CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o1ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0o1icoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0o1ycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0ojScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o2CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o2ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0o2icoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0ojicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o2ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o3CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0o3ScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0o3icoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0ojycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o3ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o4CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0o4ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0o4icoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0o4ycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0ojicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o5CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o5ScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0o5icoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0okScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o5ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o6CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0o6ScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0ojycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o6icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o6ycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0o7CcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0okCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0o7ScoEeSLVrU2ifxtpw" name="Decision(Test(Log$initializationFlag$1))" incoming="_Rg0okCcoEeSLVrU2ifxtpw _Rg0okScoEeSLVrU2ifxtpw" outgoing="_Rg0okicoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0okScoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_Rg0o7icoEeSLVrU2ifxtpw" name="Log$initialization$1" visibility="protected" method="_Rg0ohicoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_Rg0o7ycoEeSLVrU2ifxtpw" name="Log" visibility="package" method="_Rg0oSScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0o8CcoEeSLVrU2ifxtpw" name="" visibility="package" type="_Rg0EwScoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o8ScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o8icoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Rg0o8ycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_Rg0ohCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_Rg0o9CcoEeSLVrU2ifxtpw" name="Employee" visibility="package">
        <ownedAttribute xmi:id="_Rg0o9ScoEeSLVrU2ifxtpw" name="Employee$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o9icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o9ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0o-CcoEeSLVrU2ifxtpw" name="id" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o-ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o-icoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0o-ycoEeSLVrU2ifxtpw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o_CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0o_ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0o_icoEeSLVrU2ifxtpw" name="transferred" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0o_ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pACcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Rg0pAScoEeSLVrU2ifxtpw" name="relocated" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pAicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pAycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0pBCcoEeSLVrU2ifxtpw" name="Employee$method$1" specification="_Rg0qsycoEeSLVrU2ifxtpw" node="_Rg0pEycoEeSLVrU2ifxtpw _Rg0pFCcoEeSLVrU2ifxtpw _Rg0pFScoEeSLVrU2ifxtpw _Rg0pFicoEeSLVrU2ifxtpw _Rg0pFycoEeSLVrU2ifxtpw _Rg0pGCcoEeSLVrU2ifxtpw" group="_Rg0pGCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0pBScoEeSLVrU2ifxtpw" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pBicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pBycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Rg0pCCcoEeSLVrU2ifxtpw" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pCScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pCicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Rg0pCycoEeSLVrU2ifxtpw" name="" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pDCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pDScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pDicoEeSLVrU2ifxtpw" target="_Rg0pFCcoEeSLVrU2ifxtpw" source="_Rg0pEycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pDycoEeSLVrU2ifxtpw" target="_Rg0pFicoEeSLVrU2ifxtpw" source="_Rg0pFScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pECcoEeSLVrU2ifxtpw" target="_Rg0pNycoEeSLVrU2ifxtpw" source="_Rg0pFCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pEScoEeSLVrU2ifxtpw" target="_Rg0pWScoEeSLVrU2ifxtpw" source="_Rg0pFicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pEicoEeSLVrU2ifxtpw" target="_Rg0pFycoEeSLVrU2ifxtpw" source="_Rg0pbicoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_Rg0pGCcoEeSLVrU2ifxtpw" name="Body(Employee$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pGScoEeSLVrU2ifxtpw" target="_Rg0pbicoEeSLVrU2ifxtpw" source="_Rg0paycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pGicoEeSLVrU2ifxtpw" target="_Rg0pcCcoEeSLVrU2ifxtpw" source="_Rg0pbicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0pGycoEeSLVrU2ifxtpw" target="_Rg0pJCcoEeSLVrU2ifxtpw" source="_Rg0pbycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pHCcoEeSLVrU2ifxtpw" target="_Rg0pdCcoEeSLVrU2ifxtpw" source="_Rg0pbicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pHScoEeSLVrU2ifxtpw" target="_Rg0peycoEeSLVrU2ifxtpw" source="_Rg0pdycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pHicoEeSLVrU2ifxtpw" target="_Rg0phycoEeSLVrU2ifxtpw" source="_Rg0pficoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pHycoEeSLVrU2ifxtpw" target="_Rg0pjScoEeSLVrU2ifxtpw" source="_Rg0pgicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0pICcoEeSLVrU2ifxtpw" target="_Rg0pkScoEeSLVrU2ifxtpw" source="_Rg0pkCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pIScoEeSLVrU2ifxtpw" target="_Rg0pkScoEeSLVrU2ifxtpw" source="_Rg0piicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0pIicoEeSLVrU2ifxtpw" target="_Rg0pbycoEeSLVrU2ifxtpw" source="_Rg0pkScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0pIycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pJCcoEeSLVrU2ifxtpw" name="Body" incoming="_Rg0pGycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0pJScoEeSLVrU2ifxtpw" target="_Rg0pSCcoEeSLVrU2ifxtpw" source="_Rg0pJicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pJicoEeSLVrU2ifxtpw" name="ExpressionStatement@2fb6e7c8" outgoing="_Rg0pJScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pJycoEeSLVrU2ifxtpw" target="_Rg0pMScoEeSLVrU2ifxtpw" source="_Rg0pLScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pKCcoEeSLVrU2ifxtpw" target="_Rg0pOicoEeSLVrU2ifxtpw" source="_Rg0pNycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pKScoEeSLVrU2ifxtpw" target="_Rg0pPicoEeSLVrU2ifxtpw" source="_Rg0pNCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0pKicoEeSLVrU2ifxtpw" target="_Rg0pKycoEeSLVrU2ifxtpw" source="_Rg0pRycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pKycoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@29ca7e4c)" incoming="_Rg0pKicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0pLCcoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_Rg0pLScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0pJycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pLicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pLycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Rg0pMCcoEeSLVrU2ifxtpw" name="Clear(id)" structuralFeature="_Rg0o-CcoEeSLVrU2ifxtpw">
                  <object xmi:id="_Rg0pMScoEeSLVrU2ifxtpw" name="Clear(id).object" incoming="_Rg0pJycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pMicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pMycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0pNCcoEeSLVrU2ifxtpw" name="Clear(id).result" outgoing="_Rg0pKScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pNScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pNicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Rg0pNycoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@29ca7e4c)" incoming="_Rg0pECcoEeSLVrU2ifxtpw" outgoing="_Rg0pKCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pOCcoEeSLVrU2ifxtpw" name="WriteAll(Employee::id)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pOScoEeSLVrU2ifxtpw" target="_Rg0pRCcoEeSLVrU2ifxtpw" source="_Rg0pOicoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_Rg0pOicoEeSLVrU2ifxtpw" name="WriteAll(Employee::id).input(Employee::id)" incoming="_Rg0pKCcoEeSLVrU2ifxtpw" outgoing="_Rg0pOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pOycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pPCcoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0pPScoEeSLVrU2ifxtpw" name="Write(id)" structuralFeature="_Rg0o-CcoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_Rg0pPicoEeSLVrU2ifxtpw" name="Write(id).object" incoming="_Rg0pKScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pPycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pQCcoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_Rg0pQScoEeSLVrU2ifxtpw" name="Write(id).result" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pQicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pQycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_Rg0pRCcoEeSLVrU2ifxtpw" name="Write(id).value" incoming="_Rg0pOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pRScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pRicoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pRycoEeSLVrU2ifxtpw" name="RightHandSide@64fa7ecd" outgoing="_Rg0pKicoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pSCcoEeSLVrU2ifxtpw" name="ExpressionStatement@6a05f8ae" incoming="_Rg0pJScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pSScoEeSLVrU2ifxtpw" target="_Rg0pUycoEeSLVrU2ifxtpw" source="_Rg0pTycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pSicoEeSLVrU2ifxtpw" target="_Rg0pXCcoEeSLVrU2ifxtpw" source="_Rg0pWScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pSycoEeSLVrU2ifxtpw" target="_Rg0pYCcoEeSLVrU2ifxtpw" source="_Rg0pVicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0pTCcoEeSLVrU2ifxtpw" target="_Rg0pTScoEeSLVrU2ifxtpw" source="_Rg0paScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pTScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@2e099de3)" incoming="_Rg0pTCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0pTicoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_Rg0pTycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0pSScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pUCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pUScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Rg0pUicoEeSLVrU2ifxtpw" name="Clear(name)" structuralFeature="_Rg0o-ycoEeSLVrU2ifxtpw">
                  <object xmi:id="_Rg0pUycoEeSLVrU2ifxtpw" name="Clear(name).object" incoming="_Rg0pSScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pVCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pVScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0pVicoEeSLVrU2ifxtpw" name="Clear(name).result" outgoing="_Rg0pSycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pVycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pWCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Rg0pWScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@2e099de3)" incoming="_Rg0pEScoEeSLVrU2ifxtpw" outgoing="_Rg0pSicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pWicoEeSLVrU2ifxtpw" name="WriteAll(Employee::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pWycoEeSLVrU2ifxtpw" target="_Rg0pZicoEeSLVrU2ifxtpw" source="_Rg0pXCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_Rg0pXCcoEeSLVrU2ifxtpw" name="WriteAll(Employee::name).input(Employee::name)" incoming="_Rg0pSicoEeSLVrU2ifxtpw" outgoing="_Rg0pWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pXScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pXicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0pXycoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_Rg0o-ycoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_Rg0pYCcoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_Rg0pSycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pYScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pYicoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_Rg0pYycoEeSLVrU2ifxtpw" name="Write(name).result" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pZCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pZScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_Rg0pZicoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_Rg0pWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pZycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0paCcoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0paScoEeSLVrU2ifxtpw" name="RightHandSide@3474ba7c" outgoing="_Rg0pTCcoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0paicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0paycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0pGScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pbCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pbScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0pbicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0pGScoEeSLVrU2ifxtpw" outgoing="_Rg0pEicoEeSLVrU2ifxtpw _Rg0pGicoEeSLVrU2ifxtpw _Rg0pHCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0pbycoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1)" incoming="_Rg0pIicoEeSLVrU2ifxtpw" outgoing="_Rg0pGycoEeSLVrU2ifxtpw" operation="_Rg0qsicoEeSLVrU2ifxtpw">
              <target xmi:id="_Rg0pcCcoEeSLVrU2ifxtpw" name="Call(Employee$initialization$1).target" incoming="_Rg0pGicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pcScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pcicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0pcycoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1)" structuralFeature="_Rg0o9ScoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0pdCcoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1).object" incoming="_Rg0pHCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pdScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pdicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0pdycoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1).result" outgoing="_Rg0pHScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0peCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0peScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0peicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0peycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0pHScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pfCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pfScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0pficoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0pHicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pfycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pgCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0pgScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0pgicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0pHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pgycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0phCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0phScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0phicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0phycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0pHicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0piCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0piScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0piicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0pIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0piycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pjCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0pjScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0pHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pjicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pjycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0pkCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0pICcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0pkScoEeSLVrU2ifxtpw" name="Decision(Test(Employee$initializationFlag$1))" incoming="_Rg0pICcoEeSLVrU2ifxtpw _Rg0pIScoEeSLVrU2ifxtpw" outgoing="_Rg0pIicoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0pIScoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0pEycoEeSLVrU2ifxtpw" name="Input(id)" outgoing="_Rg0pDicoEeSLVrU2ifxtpw" parameter="_Rg0pBScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0pFCcoEeSLVrU2ifxtpw" name="Fork(id)" incoming="_Rg0pDicoEeSLVrU2ifxtpw" outgoing="_Rg0pECcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0pFScoEeSLVrU2ifxtpw" name="Input(name)" outgoing="_Rg0pDycoEeSLVrU2ifxtpw" parameter="_Rg0pCCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0pFicoEeSLVrU2ifxtpw" name="Fork(name)" incoming="_Rg0pDycoEeSLVrU2ifxtpw" outgoing="_Rg0pEScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0pFycoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0pEicoEeSLVrU2ifxtpw" parameter="_Rg0pCycoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0pkicoEeSLVrU2ifxtpw" name="transferred$method$1" specification="_Rg0qvScoEeSLVrU2ifxtpw" node="_Rg0pnScoEeSLVrU2ifxtpw _Rg0pnicoEeSLVrU2ifxtpw _Rg0pnycoEeSLVrU2ifxtpw _Rg0poCcoEeSLVrU2ifxtpw" group="_Rg0poCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0pkycoEeSLVrU2ifxtpw" name="employeeInfo" type="_Rg0o9CcoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0plCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0plScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Rg0plicoEeSLVrU2ifxtpw" name="" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0plycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pmCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pmScoEeSLVrU2ifxtpw" target="_Rg0pnicoEeSLVrU2ifxtpw" source="_Rg0pnScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pmicoEeSLVrU2ifxtpw" target="_Rg0pwCcoEeSLVrU2ifxtpw" source="_Rg0pnicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pmycoEeSLVrU2ifxtpw" target="_Rg0pyCcoEeSLVrU2ifxtpw" source="_Rg0pnicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pnCcoEeSLVrU2ifxtpw" target="_Rg0pnycoEeSLVrU2ifxtpw" source="_Rg0p-ScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_Rg0poCcoEeSLVrU2ifxtpw" name="Body(transferred$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0poScoEeSLVrU2ifxtpw" target="_Rg0p-ScoEeSLVrU2ifxtpw" source="_Rg0p9icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0poicoEeSLVrU2ifxtpw" name="Body">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0poycoEeSLVrU2ifxtpw" target="_Rg0pzScoEeSLVrU2ifxtpw" source="_Rg0ppCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0ppCcoEeSLVrU2ifxtpw" name="ExpressionStatement@47d31aaa" outgoing="_Rg0poycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ppScoEeSLVrU2ifxtpw" target="_Rg0pqicoEeSLVrU2ifxtpw" source="_Rg0pvScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ppicoEeSLVrU2ifxtpw" target="_Rg0prScoEeSLVrU2ifxtpw" source="_Rg0pxScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0ppycoEeSLVrU2ifxtpw" target="_Rg0pqScoEeSLVrU2ifxtpw" source="_Rg0pticoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pqCcoEeSLVrU2ifxtpw" target="_Rg0psycoEeSLVrU2ifxtpw" source="_Rg0pyicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0pqScoEeSLVrU2ifxtpw" name="Call(Employee)" incoming="_Rg0ppycoEeSLVrU2ifxtpw" operation="_Rg0qsycoEeSLVrU2ifxtpw">
                  <argument xmi:id="_Rg0pqicoEeSLVrU2ifxtpw" name="Call(Employee).argument(id)" incoming="_Rg0ppScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pqycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0prCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_Rg0prScoEeSLVrU2ifxtpw" name="Call(Employee).argument(name)" incoming="_Rg0ppicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pricoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0prycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_Rg0psCcoEeSLVrU2ifxtpw" name="Call(Employee).result()" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0psScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0psicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_Rg0psycoEeSLVrU2ifxtpw" name="Call(Employee).target" incoming="_Rg0pqCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ptCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ptScoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pticoEeSLVrU2ifxtpw" name="Tuple@5d34f270" outgoing="_Rg0ppycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ptycoEeSLVrU2ifxtpw" target="_Rg0puicoEeSLVrU2ifxtpw" source="_Rg0pwCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0puCcoEeSLVrU2ifxtpw" target="_Rg0pwicoEeSLVrU2ifxtpw" source="_Rg0pyCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0puScoEeSLVrU2ifxtpw" name="Read(id)" structuralFeature="_Rg0o-CcoEeSLVrU2ifxtpw">
                    <object xmi:id="_Rg0puicoEeSLVrU2ifxtpw" name="Read(id).object" incoming="_Rg0ptycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0puycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pvCcoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_Rg0pvScoEeSLVrU2ifxtpw" name="Read(id).result" outgoing="_Rg0ppScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pvicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pvycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Rg0pwCcoEeSLVrU2ifxtpw" name="Fork(Fork(employeeInfo))" incoming="_Rg0pmicoEeSLVrU2ifxtpw" outgoing="_Rg0ptycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0pwScoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_Rg0o-ycoEeSLVrU2ifxtpw">
                    <object xmi:id="_Rg0pwicoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_Rg0puCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pwycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pxCcoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_Rg0pxScoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_Rg0ppicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pxicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pxycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Rg0pyCcoEeSLVrU2ifxtpw" name="Fork(Fork(employeeInfo))" incoming="_Rg0pmycoEeSLVrU2ifxtpw" outgoing="_Rg0puCcoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0pyScoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_Rg0pyicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0pqCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0pyycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0pzCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0pzScoEeSLVrU2ifxtpw" name="ExpressionStatement@5ed47303" incoming="_Rg0poycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pzicoEeSLVrU2ifxtpw" target="_Rg0p2ScoEeSLVrU2ifxtpw" source="_Rg0p1ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0pzycoEeSLVrU2ifxtpw" target="_Rg0p4icoEeSLVrU2ifxtpw" source="_Rg0p3ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0p0CcoEeSLVrU2ifxtpw" target="_Rg0p5icoEeSLVrU2ifxtpw" source="_Rg0p3CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0p0ScoEeSLVrU2ifxtpw" target="_Rg0p3ycoEeSLVrU2ifxtpw" source="_Rg0p8ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0p0icoEeSLVrU2ifxtpw" target="_Rg0p0ycoEeSLVrU2ifxtpw" source="_Rg0p7ycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0p0ycoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@8323ee8)" incoming="_Rg0p0icoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0p1CcoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_Rg0p1ScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0pzicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p1icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p1ycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Rg0p2CcoEeSLVrU2ifxtpw" name="Clear(transferred)" structuralFeature="_Rg0o_icoEeSLVrU2ifxtpw">
                  <object xmi:id="_Rg0p2ScoEeSLVrU2ifxtpw" name="Clear(transferred).object" incoming="_Rg0pzicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p2icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p2ycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0p3CcoEeSLVrU2ifxtpw" name="Clear(transferred).result" outgoing="_Rg0p0CcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p3ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p3icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Rg0p3ycoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@8323ee8)" incoming="_Rg0p0ScoEeSLVrU2ifxtpw" outgoing="_Rg0pzycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0p4CcoEeSLVrU2ifxtpw" name="WriteAll(Employee::transferred)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0p4ScoEeSLVrU2ifxtpw" target="_Rg0p7CcoEeSLVrU2ifxtpw" source="_Rg0p4icoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_Rg0p4icoEeSLVrU2ifxtpw" name="WriteAll(Employee::transferred).input(Employee::transferred)" incoming="_Rg0pzycoEeSLVrU2ifxtpw" outgoing="_Rg0p4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p4ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p5CcoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0p5ScoEeSLVrU2ifxtpw" name="Write(transferred)" structuralFeature="_Rg0o_icoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_Rg0p5icoEeSLVrU2ifxtpw" name="Write(transferred).object" incoming="_Rg0p0CcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p5ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p6CcoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_Rg0p6ScoEeSLVrU2ifxtpw" name="Write(transferred).result" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p6icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p6ycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_Rg0p7CcoEeSLVrU2ifxtpw" name="Write(transferred).value" incoming="_Rg0p4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p7ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p7icoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0p7ycoEeSLVrU2ifxtpw" name="RightHandSide@1cc8444d" outgoing="_Rg0p0icoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0p8CcoEeSLVrU2ifxtpw" name="Value(true)">
                    <result xmi:id="_Rg0p8ScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0p0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p8icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p8ycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0p9CcoEeSLVrU2ifxtpw" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0p9ScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0p9icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0poScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p9ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p-CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0p-ScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0poScoEeSLVrU2ifxtpw" outgoing="_Rg0pnCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0pnScoEeSLVrU2ifxtpw" name="Input(employeeInfo)" outgoing="_Rg0pmScoEeSLVrU2ifxtpw" parameter="_Rg0pkycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0pnicoEeSLVrU2ifxtpw" name="Fork(employeeInfo)" incoming="_Rg0pmScoEeSLVrU2ifxtpw" outgoing="_Rg0pmicoEeSLVrU2ifxtpw _Rg0pmycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0pnycoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0pnCcoEeSLVrU2ifxtpw" parameter="_Rg0plicoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0p-icoEeSLVrU2ifxtpw" name="relocated$method$1" specification="_Rg0qxCcoEeSLVrU2ifxtpw" node="_Rg0qBCcoEeSLVrU2ifxtpw _Rg0qBScoEeSLVrU2ifxtpw _Rg0qBicoEeSLVrU2ifxtpw _Rg0qBycoEeSLVrU2ifxtpw" group="_Rg0qBycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0p-ycoEeSLVrU2ifxtpw" name="employeeInfo" type="_Rg0o9CcoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p_CcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0p_ScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Rg0p_icoEeSLVrU2ifxtpw" name="" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0p_ycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qACcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qAScoEeSLVrU2ifxtpw" target="_Rg0qBScoEeSLVrU2ifxtpw" source="_Rg0qBCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qAicoEeSLVrU2ifxtpw" target="_Rg0qDicoEeSLVrU2ifxtpw" source="_Rg0qBScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qAycoEeSLVrU2ifxtpw" target="_Rg0qBicoEeSLVrU2ifxtpw" source="_Rg0qRycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_Rg0qBycoEeSLVrU2ifxtpw" name="Body(relocated$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qCCcoEeSLVrU2ifxtpw" target="_Rg0qRycoEeSLVrU2ifxtpw" source="_Rg0qRCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qCScoEeSLVrU2ifxtpw" name="Body">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0qCicoEeSLVrU2ifxtpw" target="_Rg0qGycoEeSLVrU2ifxtpw" source="_Rg0qCycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qCycoEeSLVrU2ifxtpw" name="ExpressionStatement@2a4c4d05" outgoing="_Rg0qCicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qDCcoEeSLVrU2ifxtpw" target="_Rg0qFCcoEeSLVrU2ifxtpw" source="_Rg0qGCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallOperationAction" xmi:id="_Rg0qDScoEeSLVrU2ifxtpw" name="Call(transferred)" operation="_Rg0qvScoEeSLVrU2ifxtpw">
                  <argument xmi:id="_Rg0qDicoEeSLVrU2ifxtpw" name="Call(transferred).argument(employeeInfo)" incoming="_Rg0qAicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qDycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qECcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_Rg0qEScoEeSLVrU2ifxtpw" name="Call(transferred).result()" type="_Rg0o9CcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qEicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qEycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_Rg0qFCcoEeSLVrU2ifxtpw" name="Call(transferred).target" incoming="_Rg0qDCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qFScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qFicoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0qFycoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_Rg0qGCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0qDCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qGScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qGicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qGycoEeSLVrU2ifxtpw" name="ExpressionStatement@321e302b" incoming="_Rg0qCicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qHCcoEeSLVrU2ifxtpw" target="_Rg0qJycoEeSLVrU2ifxtpw" source="_Rg0qIycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qHScoEeSLVrU2ifxtpw" target="_Rg0qMCcoEeSLVrU2ifxtpw" source="_Rg0qLScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qHicoEeSLVrU2ifxtpw" target="_Rg0qNCcoEeSLVrU2ifxtpw" source="_Rg0qKicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qHycoEeSLVrU2ifxtpw" target="_Rg0qLScoEeSLVrU2ifxtpw" source="_Rg0qPycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0qICcoEeSLVrU2ifxtpw" target="_Rg0qIScoEeSLVrU2ifxtpw" source="_Rg0qPScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qIScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@46b1b3d5)" incoming="_Rg0qICcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0qIicoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_Rg0qIycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0qHCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qJCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qJScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Rg0qJicoEeSLVrU2ifxtpw" name="Clear(relocated)" structuralFeature="_Rg0pAScoEeSLVrU2ifxtpw">
                  <object xmi:id="_Rg0qJycoEeSLVrU2ifxtpw" name="Clear(relocated).object" incoming="_Rg0qHCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qKCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qKScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0qKicoEeSLVrU2ifxtpw" name="Clear(relocated).result" outgoing="_Rg0qHicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qKycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qLCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Rg0qLScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@46b1b3d5)" incoming="_Rg0qHycoEeSLVrU2ifxtpw" outgoing="_Rg0qHScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qLicoEeSLVrU2ifxtpw" name="WriteAll(Employee::relocated)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qLycoEeSLVrU2ifxtpw" target="_Rg0qOicoEeSLVrU2ifxtpw" source="_Rg0qMCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_Rg0qMCcoEeSLVrU2ifxtpw" name="WriteAll(Employee::relocated).input(Employee::relocated)" incoming="_Rg0qHScoEeSLVrU2ifxtpw" outgoing="_Rg0qLycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qMScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qMicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0qMycoEeSLVrU2ifxtpw" name="Write(relocated)" structuralFeature="_Rg0pAScoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_Rg0qNCcoEeSLVrU2ifxtpw" name="Write(relocated).object" incoming="_Rg0qHicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qNScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qNicoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_Rg0qNycoEeSLVrU2ifxtpw" name="Write(relocated).result" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qOCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qOScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_Rg0qOicoEeSLVrU2ifxtpw" name="Write(relocated).value" incoming="_Rg0qLycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qOycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qPCcoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qPScoEeSLVrU2ifxtpw" name="RightHandSide@6ed22c1b" outgoing="_Rg0qICcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0qPicoEeSLVrU2ifxtpw" name="Value(true)">
                    <result xmi:id="_Rg0qPycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0qHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qQCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qQScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0qQicoEeSLVrU2ifxtpw" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0qQycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0qRCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0qCCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qRScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qRicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0qRycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0qCCcoEeSLVrU2ifxtpw" outgoing="_Rg0qAycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0qBCcoEeSLVrU2ifxtpw" name="Input(employeeInfo)" outgoing="_Rg0qAScoEeSLVrU2ifxtpw" parameter="_Rg0p-ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0qBScoEeSLVrU2ifxtpw" name="Fork(employeeInfo)" incoming="_Rg0qAScoEeSLVrU2ifxtpw" outgoing="_Rg0qAicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0qBicoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0qAycoEeSLVrU2ifxtpw" parameter="_Rg0p_icoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0qSCcoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_Rg0qyycoEeSLVrU2ifxtpw" node="_Rg0qSScoEeSLVrU2ifxtpw" group="_Rg0qSScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0qSScoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Rg0qSicoEeSLVrU2ifxtpw" name="Employee$initialization$1" specification="_Rg0qsicoEeSLVrU2ifxtpw" node="_Rg0qSycoEeSLVrU2ifxtpw" group="_Rg0qSycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_Rg0qSycoEeSLVrU2ifxtpw" name="Body(Employee$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qTCcoEeSLVrU2ifxtpw" target="_Rg0qXCcoEeSLVrU2ifxtpw" source="_Rg0qWScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qTScoEeSLVrU2ifxtpw" target="_Rg0qaCcoEeSLVrU2ifxtpw" source="_Rg0qXCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qTicoEeSLVrU2ifxtpw" target="_Rg0qeScoEeSLVrU2ifxtpw" source="_Rg0qXCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qTycoEeSLVrU2ifxtpw" target="_Rg0qiicoEeSLVrU2ifxtpw" source="_Rg0qXCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qUCcoEeSLVrU2ifxtpw" target="_Rg0qlCcoEeSLVrU2ifxtpw" source="_Rg0qXCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qUScoEeSLVrU2ifxtpw" target="_Rg0qmycoEeSLVrU2ifxtpw" source="_Rg0qlycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qUicoEeSLVrU2ifxtpw" target="_Rg0qpycoEeSLVrU2ifxtpw" source="_Rg0qnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qUycoEeSLVrU2ifxtpw" target="_Rg0qrScoEeSLVrU2ifxtpw" source="_Rg0qoicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0qVCcoEeSLVrU2ifxtpw" target="_Rg0qsScoEeSLVrU2ifxtpw" source="_Rg0qsCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qVScoEeSLVrU2ifxtpw" target="_Rg0qsScoEeSLVrU2ifxtpw" source="_Rg0qqicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0qVicoEeSLVrU2ifxtpw" target="_Rg0qXScoEeSLVrU2ifxtpw" source="_Rg0qsScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0qVycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Rg0qWCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Rg0qWScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Rg0qTCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qWicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qWycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0qXCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Rg0qTCcoEeSLVrU2ifxtpw" outgoing="_Rg0qTScoEeSLVrU2ifxtpw _Rg0qTicoEeSLVrU2ifxtpw _Rg0qTycoEeSLVrU2ifxtpw _Rg0qUCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qXScoEeSLVrU2ifxtpw" name="Initialization" incoming="_Rg0qVicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0qXicoEeSLVrU2ifxtpw" target="_Rg0qcScoEeSLVrU2ifxtpw" source="_Rg0qYCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0qXycoEeSLVrU2ifxtpw" target="_Rg0qgicoEeSLVrU2ifxtpw" source="_Rg0qcScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qYCcoEeSLVrU2ifxtpw" name="Initialize(transferred)" outgoing="_Rg0qXicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qYScoEeSLVrU2ifxtpw" target="_Rg0qbicoEeSLVrU2ifxtpw" source="_Rg0qYycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0qYicoEeSLVrU2ifxtpw" name="Value(false)">
                  <result xmi:id="_Rg0qYycoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_Rg0qYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qZCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qZScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0qZicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0qZycoEeSLVrU2ifxtpw" name="Write(transferred)" structuralFeature="_Rg0o_icoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0qaCcoEeSLVrU2ifxtpw" name="Write(transferred).object" incoming="_Rg0qTScoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qaScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qaicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0qaycoEeSLVrU2ifxtpw" name="Write(transferred).result" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qbCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qbScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0qbicoEeSLVrU2ifxtpw" name="Write(transferred).value" incoming="_Rg0qYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qbycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qcCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qcScoEeSLVrU2ifxtpw" name="Initialize(relocated)" incoming="_Rg0qXicoEeSLVrU2ifxtpw" outgoing="_Rg0qXycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qcicoEeSLVrU2ifxtpw" target="_Rg0qfycoEeSLVrU2ifxtpw" source="_Rg0qdCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0qcycoEeSLVrU2ifxtpw" name="Value(false)">
                  <result xmi:id="_Rg0qdCcoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_Rg0qcicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qdScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qdicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0qdycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0qeCcoEeSLVrU2ifxtpw" name="Write(relocated)" structuralFeature="_Rg0pAScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0qeScoEeSLVrU2ifxtpw" name="Write(relocated).object" incoming="_Rg0qTicoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qeicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qeycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0qfCcoEeSLVrU2ifxtpw" name="Write(relocated).result" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qfScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qficoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0qfycoEeSLVrU2ifxtpw" name="Write(relocated).value" incoming="_Rg0qcicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qgCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qgScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0qgicoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_Rg0qXycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0qgycoEeSLVrU2ifxtpw" target="_Rg0qkCcoEeSLVrU2ifxtpw" source="_Rg0qhScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0qhCcoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_Rg0qhScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg0qgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qhicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qhycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0qiCcoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Rg0qiScoEeSLVrU2ifxtpw" name="Write(Employee$initializationFlag$1)" structuralFeature="_Rg0o9ScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_Rg0qiicoEeSLVrU2ifxtpw" name="Write(Employee$initializationFlag$1).object" incoming="_Rg0qTycoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qiycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qjCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0qjScoEeSLVrU2ifxtpw" name="Write(Employee$initializationFlag$1).result" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qjicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qjycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_Rg0qkCcoEeSLVrU2ifxtpw" name="Write(Employee$initializationFlag$1).value" incoming="_Rg0qgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qkScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qkicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Rg0qkycoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1)" structuralFeature="_Rg0o9ScoEeSLVrU2ifxtpw">
              <object xmi:id="_Rg0qlCcoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1).object" incoming="_Rg0qUCcoEeSLVrU2ifxtpw" type="_Rg0o9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qlScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qlicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_Rg0qlycoEeSLVrU2ifxtpw" name="Read(Employee$initializationFlag$1).result" outgoing="_Rg0qUScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qmCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qmScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0qmicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_Rg0qmycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Rg0qUScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qnCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qnScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0qnicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Rg0qUicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qnycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qoCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0qoScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_Rg0qoicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Rg0qUycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qoycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qpCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg0qpScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0qpicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_Rg0qpycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Rg0qUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qqCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qqScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0qqicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Rg0qVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qqycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qrCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0qrScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Rg0qUycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qricoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qrycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Rg0qsCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Rg0qVCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg0qsScoEeSLVrU2ifxtpw" name="Decision(Test(Employee$initializationFlag$1))" incoming="_Rg0qVCcoEeSLVrU2ifxtpw _Rg0qVScoEeSLVrU2ifxtpw" outgoing="_Rg0qVicoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0qVScoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_Rg0qsicoEeSLVrU2ifxtpw" name="Employee$initialization$1" visibility="protected" method="_Rg0qSicoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_Rg0qsycoEeSLVrU2ifxtpw" name="Employee" visibility="public" method="_Rg0pBCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0qtCcoEeSLVrU2ifxtpw" name="id" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qtScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qticoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Rg0qtycoEeSLVrU2ifxtpw" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0quCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0quScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Rg0quicoEeSLVrU2ifxtpw" name="" visibility="package" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0quycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qvCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Rg0qvScoEeSLVrU2ifxtpw" name="transferred" visibility="public" method="_Rg0pkicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0qvicoEeSLVrU2ifxtpw" name="employeeInfo" visibility="package" type="_Rg0o9CcoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qvycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qwCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Rg0qwScoEeSLVrU2ifxtpw" name="" visibility="package" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qwicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qwycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Rg0qxCcoEeSLVrU2ifxtpw" name="relocated" visibility="public" method="_Rg0p-icoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_Rg0qxScoEeSLVrU2ifxtpw" name="employeeInfo" visibility="package" type="_Rg0o9CcoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qxicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qxycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Rg0qyCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_Rg0o9CcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qyScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qyicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Rg0qyycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_Rg0qSCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:DataType" xmi:id="_Rg0qzCcoEeSLVrU2ifxtpw" name="D0" visibility="package">
        <ownedAttribute xmi:id="_Rg0qzScoEeSLVrU2ifxtpw" name="y" visibility="public" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0qzicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0qzycoEeSLVrU2ifxtpw" value="*"/>
        </ownedAttribute>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:DataType" xmi:id="_Rg0q0CcoEeSLVrU2ifxtpw" name="D" visibility="package">
        <generalization xmi:id="_Rg0q0ScoEeSLVrU2ifxtpw" general="_Rg0qzCcoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_Rg0q0icoEeSLVrU2ifxtpw" name="x" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0q0ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0q1CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:InstanceSpecification" xmi:id="_Rg0q1ScoEeSLVrU2ifxtpw" name="D" classifier="_Rg0q0CcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg0q1icoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$size__PrimitiveTypes$Integer__" node="_Rg0q4ScoEeSLVrU2ifxtpw _Rg0q4icoEeSLVrU2ifxtpw _Rg0q4ycoEeSLVrU2ifxtpw _Rg0q5CcoEeSLVrU2ifxtpw _Rg0q5ScoEeSLVrU2ifxtpw" group="_Rg0q5ScoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_Rg0q1ycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0q2CcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0q2ScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Rg0q2icoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0q2ycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0q3CcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0q3ScoEeSLVrU2ifxtpw" target="_Rg0q4icoEeSLVrU2ifxtpw" source="_Rg0q4ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0q3icoEeSLVrU2ifxtpw" target="_Rg0q5CcoEeSLVrU2ifxtpw" source="_Rg0q5icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0q3ycoEeSLVrU2ifxtpw" target="_Rg0q7CcoEeSLVrU2ifxtpw" source="_Rg0q4icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0q4CcoEeSLVrU2ifxtpw" target="_Rg0q4ycoEeSLVrU2ifxtpw" source="_Rg0q6CcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_Rg0q5ScoEeSLVrU2ifxtpw" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0q5icoEeSLVrU2ifxtpw" name="ReturnStatement@22536490" outgoing="_Rg0q3icoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0q5ycoEeSLVrU2ifxtpw" target="_Rg0q6CcoEeSLVrU2ifxtpw" source="_Rg0q7ycoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_Rg0q6CcoEeSLVrU2ifxtpw" name="ReturnStatement@22536490.output" incoming="_Rg0q5ycoEeSLVrU2ifxtpw" outgoing="_Rg0q4CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0q6ScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0q6icoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0q6ycoEeSLVrU2ifxtpw" name="Call(Size)">
            <argument xmi:id="_Rg0q7CcoEeSLVrU2ifxtpw" name="Call(Size).argument(seq)" incoming="_Rg0q3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0q7ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0q7icoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Rg0q7ycoEeSLVrU2ifxtpw" name="Call(Size).result()" outgoing="_Rg0q5ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0q8CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0q8ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0q4ScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Rg0q3ScoEeSLVrU2ifxtpw" parameter="_Rg0q1ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg0q4icoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Rg0q3ScoEeSLVrU2ifxtpw" outgoing="_Rg0q3ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0q4ycoEeSLVrU2ifxtpw" name="Return" incoming="_Rg0q4CcoEeSLVrU2ifxtpw" parameter="_Rg0q2icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_Rg0q5CcoEeSLVrU2ifxtpw" name="Final" incoming="_Rg0q3icoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg0q8icoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Rg0q8ycoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Rg0q9CcoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Rg0q9ScoEeSLVrU2ifxtpw" client="_Rg0q1icoEeSLVrU2ifxtpw" supplier="_Rg0q8icoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg0q9icoEeSLVrU2ifxtpw" name="AssertEqual" node="_Rg0rDycoEeSLVrU2ifxtpw _Rg0rECcoEeSLVrU2ifxtpw _Rg0rEScoEeSLVrU2ifxtpw _Rg0rEicoEeSLVrU2ifxtpw _Rg0rEycoEeSLVrU2ifxtpw _Rg0rFCcoEeSLVrU2ifxtpw _Rg0rFScoEeSLVrU2ifxtpw" group="_Rg0rFScoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_Rg0q9ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_Rg0q-CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Rg0q-ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Rg0q-icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_Rg0q-ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_Rg0q_CcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0q_ScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0q_icoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Rg0q_ycoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rACcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rAScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Rg0rAicoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rAycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rBCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rBScoEeSLVrU2ifxtpw" target="_Rg0rECcoEeSLVrU2ifxtpw" source="_Rg0rDycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rBicoEeSLVrU2ifxtpw" target="_Rg0rEicoEeSLVrU2ifxtpw" source="_Rg0rEScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rBycoEeSLVrU2ifxtpw" target="_Rg0rFCcoEeSLVrU2ifxtpw" source="_Rg0rEycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rCCcoEeSLVrU2ifxtpw" target="_Rg0rOicoEeSLVrU2ifxtpw" source="_Rg0rEicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rCScoEeSLVrU2ifxtpw" target="_Rg0rQicoEeSLVrU2ifxtpw" source="_Rg0rFCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rCicoEeSLVrU2ifxtpw" target="_Rg0reScoEeSLVrU2ifxtpw" source="_Rg0rECcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rCycoEeSLVrU2ifxtpw" target="_Rg0rnycoEeSLVrU2ifxtpw" source="_Rg0rFCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rDCcoEeSLVrU2ifxtpw" target="_Rg0rvScoEeSLVrU2ifxtpw" source="_Rg0rFCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rDScoEeSLVrU2ifxtpw" target="_Rg0r4ycoEeSLVrU2ifxtpw" source="_Rg0rFCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rDicoEeSLVrU2ifxtpw" target="_Rg0sAycoEeSLVrU2ifxtpw" source="_Rg0rFCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_Rg0rFScoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_Rg0rFicoEeSLVrU2ifxtpw" name="IfStatement@71a80d42">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rFycoEeSLVrU2ifxtpw" target="_Rg0rMScoEeSLVrU2ifxtpw" source="_Rg0rOicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rGCcoEeSLVrU2ifxtpw" target="_Rg0rPCcoEeSLVrU2ifxtpw" source="_Rg0rOicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rGScoEeSLVrU2ifxtpw" target="_Rg0rNycoEeSLVrU2ifxtpw" source="_Rg0rQicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rGicoEeSLVrU2ifxtpw" target="_Rg0rRCcoEeSLVrU2ifxtpw" source="_Rg0rQicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rGycoEeSLVrU2ifxtpw" target="_Rg0rSycoEeSLVrU2ifxtpw" source="_Rg0rPycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rHCcoEeSLVrU2ifxtpw" target="_Rg0rTCcoEeSLVrU2ifxtpw" source="_Rg0rRycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rHScoEeSLVrU2ifxtpw" target="_Rg0rTicoEeSLVrU2ifxtpw" source="_Rg0rSycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rHicoEeSLVrU2ifxtpw" target="_Rg0rVScoEeSLVrU2ifxtpw" source="_Rg0rTCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rHycoEeSLVrU2ifxtpw" target="_Rg0rWycoEeSLVrU2ifxtpw" source="_Rg0rTCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rICcoEeSLVrU2ifxtpw" target="_Rg0rMCcoEeSLVrU2ifxtpw" source="_Rg0rWycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0rIScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rIicoEeSLVrU2ifxtpw" target="_Rg0rTScoEeSLVrU2ifxtpw" source="_Rg0rWycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0rIycoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rJCcoEeSLVrU2ifxtpw" target="_Rg0rXCcoEeSLVrU2ifxtpw" source="_Rg0rSicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rJScoEeSLVrU2ifxtpw" target="_Rg0rXCcoEeSLVrU2ifxtpw" source="_Rg0rSycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rJicoEeSLVrU2ifxtpw" target="_Rg0rWycoEeSLVrU2ifxtpw" source="_Rg0rXCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0rJycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rKCcoEeSLVrU2ifxtpw" target="_Rg0rVCcoEeSLVrU2ifxtpw" source="_Rg0rXCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0rKScoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rKicoEeSLVrU2ifxtpw" target="_Rg0rXScoEeSLVrU2ifxtpw" source="_Rg0rNCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rKycoEeSLVrU2ifxtpw" target="_Rg0rXScoEeSLVrU2ifxtpw" source="_Rg0rUScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rLCcoEeSLVrU2ifxtpw" target="_Rg0rXScoEeSLVrU2ifxtpw" source="_Rg0rWCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rLScoEeSLVrU2ifxtpw" target="_Rg0rXycoEeSLVrU2ifxtpw" source="_Rg0rXScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rLicoEeSLVrU2ifxtpw" target="_Rg0rjicoEeSLVrU2ifxtpw" source="_Rg0rZScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rLycoEeSLVrU2ifxtpw" target="_Rg0sCicoEeSLVrU2ifxtpw" source="_Rg0rjicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0rMCcoEeSLVrU2ifxtpw" name="Test(==)" incoming="_Rg0rICcoEeSLVrU2ifxtpw">
            <first xmi:id="_Rg0rMScoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_Rg0rFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rMicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rMycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_Rg0rNCcoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_Rg0rKicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rNScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rNicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_Rg0rNycoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_Rg0rGScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rOCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rOScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0rOicoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_Rg0rCCcoEeSLVrU2ifxtpw" outgoing="_Rg0rFycoEeSLVrU2ifxtpw _Rg0rGCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rOycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_Rg0rPCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_Rg0rGCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rPScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rPicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Rg0rPycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_Rg0rGycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rQCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rQScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0rQicoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_Rg0rCScoEeSLVrU2ifxtpw" outgoing="_Rg0rGScoEeSLVrU2ifxtpw _Rg0rGicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rQycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_Rg0rRCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_Rg0rGicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rRScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rRicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Rg0rRycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_Rg0rHCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rSCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rSScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Rg0rSicoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_Rg0rJCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0rSycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_Rg0rGycoEeSLVrU2ifxtpw" outgoing="_Rg0rHScoEeSLVrU2ifxtpw _Rg0rJScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg0rTCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_Rg0rHCcoEeSLVrU2ifxtpw" outgoing="_Rg0rHicoEeSLVrU2ifxtpw _Rg0rHycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rTScoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_Rg0rIicoEeSLVrU2ifxtpw">
            <argument xmi:id="_Rg0rTicoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_Rg0rHScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rTycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rUCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_Rg0rUScoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_Rg0rKycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rUicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rUycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rVCcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_Rg0rKCcoEeSLVrU2ifxtpw">
            <argument xmi:id="_Rg0rVScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_Rg0rHicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rVicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rVycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_Rg0rWCcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_Rg0rLCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rWScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rWicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_Rg0rWycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_Rg0rHycoEeSLVrU2ifxtpw _Rg0rJicoEeSLVrU2ifxtpw" outgoing="_Rg0rICcoEeSLVrU2ifxtpw _Rg0rIicoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0rHycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Rg0rXCcoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_Rg0rJCcoEeSLVrU2ifxtpw _Rg0rJScoEeSLVrU2ifxtpw" outgoing="_Rg0rJicoEeSLVrU2ifxtpw _Rg0rKCcoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0rJScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_Rg0rXScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_Rg0rKicoEeSLVrU2ifxtpw _Rg0rKycoEeSLVrU2ifxtpw _Rg0rLCcoEeSLVrU2ifxtpw" outgoing="_Rg0rLScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rXicoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_Rg0rXycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_Rg0rLScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rYCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rYScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_Rg0rYicoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rYycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rZCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0rZScoEeSLVrU2ifxtpw" name="ExpressionStatement@39fdaf4b" outgoing="_Rg0rLicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rZicoEeSLVrU2ifxtpw" target="_Rg0raScoEeSLVrU2ifxtpw" source="_Rg0riycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rZycoEeSLVrU2ifxtpw" target="_Rg0raCcoEeSLVrU2ifxtpw" source="_Rg0rbCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0raCcoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_Rg0rZycoEeSLVrU2ifxtpw" behavior="_Rg1RWScoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg0raScoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_Rg0rZicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0raicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0raycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0rbCcoEeSLVrU2ifxtpw" name="Tuple@5e5a719a" outgoing="_Rg0rZycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rbScoEeSLVrU2ifxtpw" target="_Rg0rdicoEeSLVrU2ifxtpw" source="_Rg0rcScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rbicoEeSLVrU2ifxtpw" target="_Rg0rhScoEeSLVrU2ifxtpw" source="_Rg0rfCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rbycoEeSLVrU2ifxtpw" target="_Rg0riCcoEeSLVrU2ifxtpw" source="_Rg0rgCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0rcCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_Rg0rcScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_Rg0rbScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rcicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rcycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rg0rdCcoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rdScoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_Rg0rdicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg0rbScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rdycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0reCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_Rg0reScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg0rCicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0reicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0reycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_Rg0rfCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg0rbicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rfScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rficoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0rfycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_Rg0rgCcoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_Rg0rbycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rgScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rgicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rg0rgycoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rhCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_Rg0rhScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg0rbicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rhicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rhycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_Rg0riCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg0rbycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0riScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0riicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_Rg0riycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg0rZicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rjCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rjScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0rjicoEeSLVrU2ifxtpw" name="ExpressionStatement@724206cc" incoming="_Rg0rLicoEeSLVrU2ifxtpw" outgoing="_Rg0rLycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rjycoEeSLVrU2ifxtpw" target="_Rg0rkicoEeSLVrU2ifxtpw" source="_Rg0sCScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rkCcoEeSLVrU2ifxtpw" target="_Rg0rkScoEeSLVrU2ifxtpw" source="_Rg0rlScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rkScoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_Rg0rkCcoEeSLVrU2ifxtpw" behavior="_Rg1RWScoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg0rkicoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_Rg0rjycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rkycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rlCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0rlScoEeSLVrU2ifxtpw" name="Tuple@389bc6c" outgoing="_Rg0rkCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rlicoEeSLVrU2ifxtpw" target="_Rg0sCCcoEeSLVrU2ifxtpw" source="_Rg0sBycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rlycoEeSLVrU2ifxtpw" target="_Rg0sCCcoEeSLVrU2ifxtpw" source="_Rg0roicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rmCcoEeSLVrU2ifxtpw" target="_Rg0rpScoEeSLVrU2ifxtpw" source="_Rg0sCCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0rmScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rmicoEeSLVrU2ifxtpw" target="_Rg0rrycoEeSLVrU2ifxtpw" source="_Rg0sCCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0rmycoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rnCcoEeSLVrU2ifxtpw" target="_Rg0sCScoEeSLVrU2ifxtpw" source="_Rg0rpycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rnScoEeSLVrU2ifxtpw" target="_Rg0sCScoEeSLVrU2ifxtpw" source="_Rg0ruScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0rnicoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_Rg0rnycoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_Rg0rCycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0roCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0roScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_Rg0roicoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_Rg0rlycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0roycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rpCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0rpScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@53c02c6c.operand2" incoming="_Rg0rmCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rpicoEeSLVrU2ifxtpw" target="_Rg0rpycoEeSLVrU2ifxtpw" source="_Rg0rqycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_Rg0rpycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@53c02c6c.operand2.result" incoming="_Rg0rpicoEeSLVrU2ifxtpw" outgoing="_Rg0rnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rqCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rqScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0rqicoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_Rg0rqycoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_Rg0rpicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rrCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rrScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Rg0rricoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0rrycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@53c02c6c.operand3" incoming="_Rg0rmicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rsCcoEeSLVrU2ifxtpw" target="_Rg0sBScoEeSLVrU2ifxtpw" source="_Rg0sBCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rsScoEeSLVrU2ifxtpw" target="_Rg0sBScoEeSLVrU2ifxtpw" source="_Rg0rwCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rsicoEeSLVrU2ifxtpw" target="_Rg0rwycoEeSLVrU2ifxtpw" source="_Rg0sBScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0rsycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0rtCcoEeSLVrU2ifxtpw" target="_Rg0r_icoEeSLVrU2ifxtpw" source="_Rg0sBScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0rtScoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rticoEeSLVrU2ifxtpw" target="_Rg0sBicoEeSLVrU2ifxtpw" source="_Rg0ryScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rtycoEeSLVrU2ifxtpw" target="_Rg0sBicoEeSLVrU2ifxtpw" source="_Rg0sACcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ruCcoEeSLVrU2ifxtpw" target="_Rg0ruScoEeSLVrU2ifxtpw" source="_Rg0sBicoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_Rg0ruScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@53c02c6c.operand3.result" incoming="_Rg0ruCcoEeSLVrU2ifxtpw" outgoing="_Rg0rnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ruicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ruycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Rg0rvCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_Rg0rvScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_Rg0rDCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rvicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rvycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Rg0rwCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_Rg0rsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rwScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rwicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0rwycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@7e658a10.operand2" incoming="_Rg0rsicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rxCcoEeSLVrU2ifxtpw" target="_Rg0r5icoEeSLVrU2ifxtpw" source="_Rg0rzScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rxScoEeSLVrU2ifxtpw" target="_Rg0r6ScoEeSLVrU2ifxtpw" source="_Rg0r5CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rxicoEeSLVrU2ifxtpw" target="_Rg0r9ScoEeSLVrU2ifxtpw" source="_Rg0r7CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0rxycoEeSLVrU2ifxtpw" target="_Rg0r-CcoEeSLVrU2ifxtpw" source="_Rg0r8CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0ryCcoEeSLVrU2ifxtpw" target="_Rg0ryScoEeSLVrU2ifxtpw" source="_Rg0r-ycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_Rg0ryScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@7e658a10.operand2.result" incoming="_Rg0ryCcoEeSLVrU2ifxtpw" outgoing="_Rg0rticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0ryicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0ryycoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0rzCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_Rg0rzScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_Rg0rxCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0rzicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0rzycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Rg0r0CcoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_Rg0r0ScoEeSLVrU2ifxtpw" name="CastExpression@741ca87c" mode="parallel" outputElement="_Rg0r5CcoEeSLVrU2ifxtpw" inputElement="_Rg0r4ycoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0r0icoEeSLVrU2ifxtpw" target="_Rg0r2ycoEeSLVrU2ifxtpw" source="_Rg0r4ScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0r0ycoEeSLVrU2ifxtpw" target="_Rg0r4icoEeSLVrU2ifxtpw" source="_Rg0r4ScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0r1CcoEeSLVrU2ifxtpw" target="_Rg0r4icoEeSLVrU2ifxtpw" source="_Rg0r3icoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0r1ScoEeSLVrU2ifxtpw" target="_Rg0r2ScoEeSLVrU2ifxtpw" source="_Rg0r4icoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0r1icoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0r1ycoEeSLVrU2ifxtpw" target="_Rg0r4ScoEeSLVrU2ifxtpw" source="_Rg0r4ycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0r2CcoEeSLVrU2ifxtpw" target="_Rg0r5CcoEeSLVrU2ifxtpw" source="_Rg0r2ScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_Rg0r2ScoEeSLVrU2ifxtpw" name="Merge(CastExpression@741ca87c.operand)" incoming="_Rg0r1ScoEeSLVrU2ifxtpw" outgoing="_Rg0r2CcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Rg0r2icoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_Rg0r2ycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_Rg0r0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r3CcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r3ScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_Rg0r3icoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_Rg0r1CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r3ycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r4CcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_Rg0r4ScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_Rg0r1ycoEeSLVrU2ifxtpw" outgoing="_Rg0r0icoEeSLVrU2ifxtpw _Rg0r0ycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_Rg0r4icoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_Rg0r0ycoEeSLVrU2ifxtpw _Rg0r1CcoEeSLVrU2ifxtpw" outgoing="_Rg0r1ScoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0r1CcoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_Rg0r4ycoEeSLVrU2ifxtpw" name="CastExpression@741ca87c.inputElement" incoming="_Rg0rDScoEeSLVrU2ifxtpw" outgoing="_Rg0r1ycoEeSLVrU2ifxtpw" regionAsInput="_Rg0r0ScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_Rg0r5CcoEeSLVrU2ifxtpw" name="CastExpression@741ca87c.outputElement" incoming="_Rg0r2CcoEeSLVrU2ifxtpw" outgoing="_Rg0rxScoEeSLVrU2ifxtpw" regionAsOutput="_Rg0r0ScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0r5ScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_Rg0r5icoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg0rxCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r5ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r6CcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_Rg0r6ScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg0rxScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r6icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r6ycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg0r7CcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg0rxicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r7ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r7icoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0r7ycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_Rg0r8CcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_Rg0rxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r8ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r8icoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Rg0r8ycoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0r9CcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_Rg0r9ScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg0rxicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r9icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r9ycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_Rg0r-CcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg0rxycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r-ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r-icoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg0r-ycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg0ryCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0r_CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0r_ScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0r_icoEeSLVrU2ifxtpw" name="ConditionalTestExpression@7e658a10.operand3" incoming="_Rg0rtCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0r_ycoEeSLVrU2ifxtpw" target="_Rg0sACcoEeSLVrU2ifxtpw" source="_Rg0sAycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_Rg0sACcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@7e658a10.operand3.result" incoming="_Rg0r_ycoEeSLVrU2ifxtpw" outgoing="_Rg0rtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sAScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sAicoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_Rg0sAycoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_Rg0rDicoEeSLVrU2ifxtpw" outgoing="_Rg0r_ycoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_Rg0sBCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@7e658a10)" outgoing="_Rg0rsCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_Rg0sBScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@7e658a10)" incoming="_Rg0rsCcoEeSLVrU2ifxtpw _Rg0rsScoEeSLVrU2ifxtpw" outgoing="_Rg0rsicoEeSLVrU2ifxtpw _Rg0rtCcoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0rsScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_Rg0sBicoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@7e658a10.result)" incoming="_Rg0rticoEeSLVrU2ifxtpw _Rg0rtycoEeSLVrU2ifxtpw" outgoing="_Rg0ruCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Rg0sBycoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@53c02c6c)" outgoing="_Rg0rlicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_Rg0sCCcoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@53c02c6c)" incoming="_Rg0rlicoEeSLVrU2ifxtpw _Rg0rlycoEeSLVrU2ifxtpw" outgoing="_Rg0rmCcoEeSLVrU2ifxtpw _Rg0rmicoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0rlycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_Rg0sCScoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@53c02c6c.result)" incoming="_Rg0rnCcoEeSLVrU2ifxtpw _Rg0rnScoEeSLVrU2ifxtpw" outgoing="_Rg0rjycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0sCicoEeSLVrU2ifxtpw" name="ExpressionStatement@21780b86" incoming="_Rg0rLycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sCycoEeSLVrU2ifxtpw" target="_Rg0sDicoEeSLVrU2ifxtpw" source="_Rg0sFicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0sDCcoEeSLVrU2ifxtpw" target="_Rg0sDScoEeSLVrU2ifxtpw" source="_Rg0sFCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0sDScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_Rg0sDCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg0sDicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_Rg0sCycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sDycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sECcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg0sEScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sEicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sEycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0sFCcoEeSLVrU2ifxtpw" name="Tuple@56784481" outgoing="_Rg0sDCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0sFScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_Rg0sFicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_Rg0sCycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sFycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sGCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rg0sGScoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0sGicoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_Rg0sGycoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sHCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sHScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0sHicoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_Rg0sHycoEeSLVrU2ifxtpw" body="_Rg0rZScoEeSLVrU2ifxtpw _Rg0rjicoEeSLVrU2ifxtpw _Rg0sCicoEeSLVrU2ifxtpw" decider="_Rg0rYicoEeSLVrU2ifxtpw" successorClause="_Rg0sICcoEeSLVrU2ifxtpw" test="_Rg0rMCcoEeSLVrU2ifxtpw _Rg0rOycoEeSLVrU2ifxtpw _Rg0rQycoEeSLVrU2ifxtpw _Rg0rTScoEeSLVrU2ifxtpw _Rg0rVCcoEeSLVrU2ifxtpw _Rg0rXicoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_Rg0sICcoEeSLVrU2ifxtpw" decider="_Rg0sGycoEeSLVrU2ifxtpw" predecessorClause="_Rg0sHycoEeSLVrU2ifxtpw" test="_Rg0sGicoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0rDycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_Rg0rBScoEeSLVrU2ifxtpw" parameter="_Rg0q_CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg0rECcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_Rg0rBScoEeSLVrU2ifxtpw" outgoing="_Rg0rCicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0rEScoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_Rg0rBicoEeSLVrU2ifxtpw" parameter="_Rg0q_ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg0rEicoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_Rg0rBicoEeSLVrU2ifxtpw" outgoing="_Rg0rCCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0rEycoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_Rg0rBycoEeSLVrU2ifxtpw" parameter="_Rg0rAicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg0rFCcoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_Rg0rBycoEeSLVrU2ifxtpw" outgoing="_Rg0rCScoEeSLVrU2ifxtpw _Rg0rCycoEeSLVrU2ifxtpw _Rg0rDCcoEeSLVrU2ifxtpw _Rg0rDScoEeSLVrU2ifxtpw _Rg0rDicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg0sIScoEeSLVrU2ifxtpw" name="AssertFalse" node="_Rg0sMicoEeSLVrU2ifxtpw _Rg0sMycoEeSLVrU2ifxtpw _Rg0sNCcoEeSLVrU2ifxtpw _Rg0sNScoEeSLVrU2ifxtpw _Rg0sNicoEeSLVrU2ifxtpw" group="_Rg0sNicoEeSLVrU2ifxtpw">
      <elementImport xmi:id="_Rg0sIicoEeSLVrU2ifxtpw" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_Rg0sIycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_Rg0sJCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Rg0sJScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Rg0sJicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_Rg0sJycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_Rg0sKCcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sKScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sKicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Rg0sKycoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sLCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sLScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sLicoEeSLVrU2ifxtpw" target="_Rg0sMycoEeSLVrU2ifxtpw" source="_Rg0sMicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sLycoEeSLVrU2ifxtpw" target="_Rg0sNScoEeSLVrU2ifxtpw" source="_Rg0sNCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sMCcoEeSLVrU2ifxtpw" target="_Rg0sVicoEeSLVrU2ifxtpw" source="_Rg0sMycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sMScoEeSLVrU2ifxtpw" target="_Rg0saycoEeSLVrU2ifxtpw" source="_Rg0sNScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_Rg0sNicoEeSLVrU2ifxtpw" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0sNycoEeSLVrU2ifxtpw" name="ExpressionStatement@3605334">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sOCcoEeSLVrU2ifxtpw" target="_Rg0sPCcoEeSLVrU2ifxtpw" source="_Rg0sWScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sOScoEeSLVrU2ifxtpw" target="_Rg0sPycoEeSLVrU2ifxtpw" source="_Rg1PUScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg0sOicoEeSLVrU2ifxtpw" target="_Rg0sOycoEeSLVrU2ifxtpw" source="_Rg0sQicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0sOycoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_Rg0sOicoEeSLVrU2ifxtpw" behavior="_Rg1PUycoEeSLVrU2ifxtpw">
            <argument xmi:id="_Rg0sPCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_Rg0sOCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sPScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sPicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_Rg0sPycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_Rg0sOScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sQCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sQScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg0sQicoEeSLVrU2ifxtpw" name="Tuple@3846c5e6" outgoing="_Rg0sOicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sQycoEeSLVrU2ifxtpw" target="_Rg0sUycoEeSLVrU2ifxtpw" source="_Rg0sTicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sRCcoEeSLVrU2ifxtpw" target="_Rg0sYicoEeSLVrU2ifxtpw" source="_Rg0saycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sRScoEeSLVrU2ifxtpw" target="_Rg0sbScoEeSLVrU2ifxtpw" source="_Rg0saycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sRicoEeSLVrU2ifxtpw" target="_Rg1PUCcoEeSLVrU2ifxtpw" source="_Rg0scCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sRycoEeSLVrU2ifxtpw" target="_Rg1PUScoEeSLVrU2ifxtpw" source="_Rg0sZScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sSCcoEeSLVrU2ifxtpw" target="_Rg1PUicoEeSLVrU2ifxtpw" source="_Rg1PUCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sSScoEeSLVrU2ifxtpw" target="_Rg1PUicoEeSLVrU2ifxtpw" source="_Rg1PUCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sSicoEeSLVrU2ifxtpw" target="_Rg1PUScoEeSLVrU2ifxtpw" source="_Rg1PUicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg0sSycoEeSLVrU2ifxtpw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg0sTCcoEeSLVrU2ifxtpw" target="_Rg0saCcoEeSLVrU2ifxtpw" source="_Rg0sXScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0sTScoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;)">
              <result xmi:id="_Rg0sTicoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;).result" outgoing="_Rg0sQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sTycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sUCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_Rg0sUScoEeSLVrU2ifxtpw" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0sUicoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_Rg0sUycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg0sQycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sVCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sVScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rg0sVicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg0sMCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sVycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sWCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg0sWScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg0sOCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sWicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sWycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg0sXCcoEeSLVrU2ifxtpw" name="Value(false)">
              <result xmi:id="_Rg0sXScoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_Rg0sTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sXicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sXycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg0sYCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg0sYScoEeSLVrU2ifxtpw" name="Test(==)">
              <first xmi:id="_Rg0sYicoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_Rg0sRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sYycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sZCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_Rg0sZScoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_Rg0sRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sZicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sZycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_Rg0saCcoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_Rg0sTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0saScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0saicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg0saycoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_Rg0sMScoEeSLVrU2ifxtpw" outgoing="_Rg0sRCcoEeSLVrU2ifxtpw _Rg0sRScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg0sbCcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
              <argument xmi:id="_Rg0sbScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_Rg0sRScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0sbicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0sbycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg0scCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_Rg0sRicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg0scScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg0scicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1PUCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_Rg0sRicoEeSLVrU2ifxtpw" outgoing="_Rg0sSCcoEeSLVrU2ifxtpw _Rg0sSScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_Rg1PUScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_Rg0sRycoEeSLVrU2ifxtpw _Rg0sSicoEeSLVrU2ifxtpw" outgoing="_Rg0sOScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Rg1PUicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_Rg0sSCcoEeSLVrU2ifxtpw _Rg0sSScoEeSLVrU2ifxtpw" outgoing="_Rg0sSicoEeSLVrU2ifxtpw" decisionInputFlow="_Rg0sSScoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0sMicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_Rg0sLicoEeSLVrU2ifxtpw" parameter="_Rg0sKCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg0sMycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_Rg0sLicoEeSLVrU2ifxtpw" outgoing="_Rg0sMCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg0sNCcoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_Rg0sLycoEeSLVrU2ifxtpw" parameter="_Rg0sKycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg0sNScoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_Rg0sLycoEeSLVrU2ifxtpw" outgoing="_Rg0sMScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg1PUycoEeSLVrU2ifxtpw" name="AssertTrue" node="_Rg1PYycoEeSLVrU2ifxtpw _Rg1PZCcoEeSLVrU2ifxtpw _Rg1PZScoEeSLVrU2ifxtpw _Rg1PZicoEeSLVrU2ifxtpw _Rg1PZycoEeSLVrU2ifxtpw" group="_Rg1PZycoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_Rg1PVCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_Rg1PVScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Rg1PVicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Rg1PVycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_Rg1PWCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_Rg1PWScoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PWicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PWycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Rg1PXCcoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PXScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PXicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PXycoEeSLVrU2ifxtpw" target="_Rg1PZCcoEeSLVrU2ifxtpw" source="_Rg1PYycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PYCcoEeSLVrU2ifxtpw" target="_Rg1PZicoEeSLVrU2ifxtpw" source="_Rg1PZScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PYScoEeSLVrU2ifxtpw" target="_Rg1PgicoEeSLVrU2ifxtpw" source="_Rg1PZicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PYicoEeSLVrU2ifxtpw" target="_Rg1PqScoEeSLVrU2ifxtpw" source="_Rg1PZCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_Rg1PZycoEeSLVrU2ifxtpw" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_Rg1PaCcoEeSLVrU2ifxtpw" name="IfStatement@349a4184">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PaScoEeSLVrU2ifxtpw" target="_Rg1PeScoEeSLVrU2ifxtpw" source="_Rg1PgicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PaicoEeSLVrU2ifxtpw" target="_Rg1PhCcoEeSLVrU2ifxtpw" source="_Rg1PgicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PaycoEeSLVrU2ifxtpw" target="_Rg1PiicoEeSLVrU2ifxtpw" source="_Rg1PhycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PbCcoEeSLVrU2ifxtpw" target="_Rg1PiycoEeSLVrU2ifxtpw" source="_Rg1PfCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PbScoEeSLVrU2ifxtpw" target="_Rg1PjCcoEeSLVrU2ifxtpw" source="_Rg1PiicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PbicoEeSLVrU2ifxtpw" target="_Rg1PjCcoEeSLVrU2ifxtpw" source="_Rg1PiicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PbycoEeSLVrU2ifxtpw" target="_Rg1PiycoEeSLVrU2ifxtpw" source="_Rg1PjCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Rg1PcCcoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PcScoEeSLVrU2ifxtpw" target="_Rg1PfycoEeSLVrU2ifxtpw" source="_Rg1PdCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PcicoEeSLVrU2ifxtpw" target="_Rg1PjicoEeSLVrU2ifxtpw" source="_Rg1PiycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1PcycoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_Rg1PdCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Rg1PcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PdScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PdicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg1PdycoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Rg1PeCcoEeSLVrU2ifxtpw" name="Test(==)">
            <first xmi:id="_Rg1PeScoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_Rg1PaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PeicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PeycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_Rg1PfCcoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_Rg1PbCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PfScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PficoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_Rg1PfycoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_Rg1PcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PgCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PgScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg1PgicoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_Rg1PYScoEeSLVrU2ifxtpw" outgoing="_Rg1PaScoEeSLVrU2ifxtpw _Rg1PaicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1PgycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_Rg1PhCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_Rg1PaicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PhScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PhicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Rg1PhycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_Rg1PaycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PiCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PiScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Rg1PiicoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_Rg1PaycoEeSLVrU2ifxtpw" outgoing="_Rg1PbScoEeSLVrU2ifxtpw _Rg1PbicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_Rg1PiycoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_Rg1PbCcoEeSLVrU2ifxtpw _Rg1PbycoEeSLVrU2ifxtpw" outgoing="_Rg1PcicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Rg1PjCcoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_Rg1PbScoEeSLVrU2ifxtpw _Rg1PbicoEeSLVrU2ifxtpw" outgoing="_Rg1PbycoEeSLVrU2ifxtpw" decisionInputFlow="_Rg1PbicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1PjScoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_Rg1PjicoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_Rg1PcicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PjycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PkCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_Rg1PkScoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PkicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PkycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1PlCcoEeSLVrU2ifxtpw" name="ExpressionStatement@3ade2178">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PlScoEeSLVrU2ifxtpw" target="_Rg1PmCcoEeSLVrU2ifxtpw" source="_Rg1PrCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1PlicoEeSLVrU2ifxtpw" target="_Rg1PlycoEeSLVrU2ifxtpw" source="_Rg1PnicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1PlycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_Rg1PlicoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg1PmCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_Rg1PlScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PmScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PmicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1PmycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PnCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PnScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1PnicoEeSLVrU2ifxtpw" name="Tuple@7ced859d" outgoing="_Rg1PlicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PnycoEeSLVrU2ifxtpw" target="_Rg1PpicoEeSLVrU2ifxtpw" source="_Rg1PoScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1PoCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_Rg1PoScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_Rg1PnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PoicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PoycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Rg1PpCcoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1PpScoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_Rg1PpicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg1PnycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PpycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PqCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_Rg1PqScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg1PYicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PqicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PqycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_Rg1PrCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg1PlScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PrScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PricoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1PrycoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_Rg1PsCcoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PsScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PsicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_Rg1PsycoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_Rg1PtCcoEeSLVrU2ifxtpw" body="_Rg1PlCcoEeSLVrU2ifxtpw" decider="_Rg1PkScoEeSLVrU2ifxtpw" successorClause="_Rg1PtScoEeSLVrU2ifxtpw" test="_Rg1PcycoEeSLVrU2ifxtpw _Rg1PeCcoEeSLVrU2ifxtpw _Rg1PgycoEeSLVrU2ifxtpw _Rg1PjScoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_Rg1PtScoEeSLVrU2ifxtpw" decider="_Rg1PsCcoEeSLVrU2ifxtpw" predecessorClause="_Rg1PtCcoEeSLVrU2ifxtpw" test="_Rg1PrycoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg1PYycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_Rg1PXycoEeSLVrU2ifxtpw" parameter="_Rg1PWScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg1PZCcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_Rg1PXycoEeSLVrU2ifxtpw" outgoing="_Rg1PYicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg1PZScoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_Rg1PYCcoEeSLVrU2ifxtpw" parameter="_Rg1PXCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg1PZicoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_Rg1PYCcoEeSLVrU2ifxtpw" outgoing="_Rg1PYScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg1PticoEeSLVrU2ifxtpw" name="AssertList" node="_Rg1P0CcoEeSLVrU2ifxtpw _Rg1P0ScoEeSLVrU2ifxtpw _Rg1P0icoEeSLVrU2ifxtpw _Rg1P0ycoEeSLVrU2ifxtpw _Rg1P1CcoEeSLVrU2ifxtpw _Rg1P1ScoEeSLVrU2ifxtpw _Rg1P1icoEeSLVrU2ifxtpw" group="_Rg1P1icoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_Rg1PtycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_Rg1PuCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Rg1PuScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Rg1PuicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_Rg1PuycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_Rg1PvCcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PvScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PvicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Rg1PvycoEeSLVrU2ifxtpw" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PwCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PwScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Rg1PwicoEeSLVrU2ifxtpw" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1PwycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1PxCcoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PxScoEeSLVrU2ifxtpw" target="_Rg1P0ScoEeSLVrU2ifxtpw" source="_Rg1P0CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PxicoEeSLVrU2ifxtpw" target="_Rg1P0ycoEeSLVrU2ifxtpw" source="_Rg1P0icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PxycoEeSLVrU2ifxtpw" target="_Rg1P1ScoEeSLVrU2ifxtpw" source="_Rg1P1CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PyCcoEeSLVrU2ifxtpw" target="_Rg1P7ycoEeSLVrU2ifxtpw" source="_Rg1P0ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PyScoEeSLVrU2ifxtpw" target="_Rg1P-ScoEeSLVrU2ifxtpw" source="_Rg1P0ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PyicoEeSLVrU2ifxtpw" target="_Rg1QACcoEeSLVrU2ifxtpw" source="_Rg1P1ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PyycoEeSLVrU2ifxtpw" target="_Rg1Q8CcoEeSLVrU2ifxtpw" source="_Rg1P1ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PzCcoEeSLVrU2ifxtpw" target="_Rg1Q8ycoEeSLVrU2ifxtpw" source="_Rg1P0ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PzScoEeSLVrU2ifxtpw" target="_Rg1Q9icoEeSLVrU2ifxtpw" source="_Rg1P0ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PzicoEeSLVrU2ifxtpw" target="_Rg1RLScoEeSLVrU2ifxtpw" source="_Rg1P0ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1PzycoEeSLVrU2ifxtpw" target="_Rg1RNCcoEeSLVrU2ifxtpw" source="_Rg1P1ScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_Rg1P1icoEeSLVrU2ifxtpw" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1P1ycoEeSLVrU2ifxtpw" target="_Rg1QBicoEeSLVrU2ifxtpw" source="_Rg1P2CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1P2CcoEeSLVrU2ifxtpw" name="ExpressionStatement@5661ef8" outgoing="_Rg1P1ycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1P2ScoEeSLVrU2ifxtpw" target="_Rg1P3icoEeSLVrU2ifxtpw" source="_Rg1P9ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1P2icoEeSLVrU2ifxtpw" target="_Rg1P4ScoEeSLVrU2ifxtpw" source="_Rg1P_CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1P2ycoEeSLVrU2ifxtpw" target="_Rg1P5CcoEeSLVrU2ifxtpw" source="_Rg1QAycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1P3CcoEeSLVrU2ifxtpw" target="_Rg1P3ScoEeSLVrU2ifxtpw" source="_Rg1P5ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1P3ScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_Rg1P3CcoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
            <argument xmi:id="_Rg1P3icoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_Rg1P2ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P3ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P4CcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_Rg1P4ScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_Rg1P2icoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P4icoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P4ycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_Rg1P5CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_Rg1P2ycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P5ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P5icoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1P5ycoEeSLVrU2ifxtpw" name="Tuple@1b2d77b2" outgoing="_Rg1P3CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1P6CcoEeSLVrU2ifxtpw" target="_Rg1P8icoEeSLVrU2ifxtpw" source="_Rg1P6icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1P6ScoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_Rg1P6icoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;).result" outgoing="_Rg1P6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P6ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P7CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_Rg1P7ScoEeSLVrU2ifxtpw" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1P7icoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_Rg1P7ycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg1PyCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P8CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P8ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rg1P8icoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg1P6CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P8ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P9CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1P9ScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg1P2ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P9icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P9ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1P-CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_Rg1RlScoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg1P-ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_Rg1PyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P-icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P-ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg1P_CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_Rg1P2icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1P_ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1P_icoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1P_ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_Rg1RlScoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg1QACcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_Rg1PyicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QAScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QAicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Rg1QAycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_Rg1P2ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QBCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QBScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1QBicoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc" incoming="_Rg1P1ycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QBycoEeSLVrU2ifxtpw" target="_Rg1ROicoEeSLVrU2ifxtpw" source="_Rg1RHScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QCCcoEeSLVrU2ifxtpw" target="_Rg1Q_CcoEeSLVrU2ifxtpw" source="_Rg1RVScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QCScoEeSLVrU2ifxtpw" target="_Rg1Q_ycoEeSLVrU2ifxtpw" source="_Rg1RUScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QCicoEeSLVrU2ifxtpw" target="_Rg1Q-ScoEeSLVrU2ifxtpw" source="_Rg1ROicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1QCycoEeSLVrU2ifxtpw" target="_Rg1QDCcoEeSLVrU2ifxtpw" source="_Rg1RFCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:LoopNode" xmi:id="_Rg1QDCcoEeSLVrU2ifxtpw" name="Loop(ForStatement@67fae0fc)" incoming="_Rg1QCycoEeSLVrU2ifxtpw" bodyOutput="_Rg1QOycoEeSLVrU2ifxtpw _Rg1QPicoEeSLVrU2ifxtpw _Rg1QQScoEeSLVrU2ifxtpw _Rg1QvycoEeSLVrU2ifxtpw _Rg1QzicoEeSLVrU2ifxtpw _Rg1Q2ycoEeSLVrU2ifxtpw" bodyPart="_Rg1QNScoEeSLVrU2ifxtpw _Rg1QNycoEeSLVrU2ifxtpw _Rg1QuCcoEeSLVrU2ifxtpw _Rg1QwicoEeSLVrU2ifxtpw _Rg1QxycoEeSLVrU2ifxtpw _Rg1Q0ScoEeSLVrU2ifxtpw _Rg1Q1icoEeSLVrU2ifxtpw" decider="_Rg1QMicoEeSLVrU2ifxtpw" isTestedFirst="true" test="_Rg1QKycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QDScoEeSLVrU2ifxtpw" target="_Rg1QJScoEeSLVrU2ifxtpw" source="_Rg1Q3icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QDicoEeSLVrU2ifxtpw" target="_Rg1QJicoEeSLVrU2ifxtpw" source="_Rg1Q4ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QDycoEeSLVrU2ifxtpw" target="_Rg1QJycoEeSLVrU2ifxtpw" source="_Rg1Q5CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QECcoEeSLVrU2ifxtpw" target="_Rg1QKCcoEeSLVrU2ifxtpw" source="_Rg1Q5ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QEScoEeSLVrU2ifxtpw" target="_Rg1QKScoEeSLVrU2ifxtpw" source="_Rg1Q6icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QEicoEeSLVrU2ifxtpw" target="_Rg1QKicoEeSLVrU2ifxtpw" source="_Rg1Q7ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QEycoEeSLVrU2ifxtpw" target="_Rg1QLCcoEeSLVrU2ifxtpw" source="_Rg1QKScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QFCcoEeSLVrU2ifxtpw" target="_Rg1QLycoEeSLVrU2ifxtpw" source="_Rg1QKicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QFScoEeSLVrU2ifxtpw" target="_Rg1QNicoEeSLVrU2ifxtpw" source="_Rg1Q5ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1QFicoEeSLVrU2ifxtpw" target="_Rg1QNycoEeSLVrU2ifxtpw" source="_Rg1QNScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QFycoEeSLVrU2ifxtpw" target="_Rg1QaycoEeSLVrU2ifxtpw" source="_Rg1QNicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QGCcoEeSLVrU2ifxtpw" target="_Rg1QlCcoEeSLVrU2ifxtpw" source="_Rg1QNicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QGScoEeSLVrU2ifxtpw" target="_Rg1QnycoEeSLVrU2ifxtpw" source="_Rg1QNicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QGicoEeSLVrU2ifxtpw" target="_Rg1QuScoEeSLVrU2ifxtpw" source="_Rg1QKCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QGycoEeSLVrU2ifxtpw" target="_Rg1QvCcoEeSLVrU2ifxtpw" source="_Rg1QwycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QHCcoEeSLVrU2ifxtpw" target="_Rg1QyCcoEeSLVrU2ifxtpw" source="_Rg1QKScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QHScoEeSLVrU2ifxtpw" target="_Rg1QyycoEeSLVrU2ifxtpw" source="_Rg1Q0icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QHicoEeSLVrU2ifxtpw" target="_Rg1Q2CcoEeSLVrU2ifxtpw" source="_Rg1QKicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QHycoEeSLVrU2ifxtpw" target="_Rg1QYScoEeSLVrU2ifxtpw" source="_Rg1QJycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QICcoEeSLVrU2ifxtpw" target="_Rg1QiycoEeSLVrU2ifxtpw" source="_Rg1QJicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QIScoEeSLVrU2ifxtpw" target="_Rg1QlicoEeSLVrU2ifxtpw" source="_Rg1QJScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QIicoEeSLVrU2ifxtpw" target="_Rg1QoicoEeSLVrU2ifxtpw" source="_Rg1QJScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QIycoEeSLVrU2ifxtpw" target="_Rg1QqicoEeSLVrU2ifxtpw" source="_Rg1QJicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QJCcoEeSLVrU2ifxtpw" target="_Rg1QsicoEeSLVrU2ifxtpw" source="_Rg1QJycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1QJScoEeSLVrU2ifxtpw" name="Fork(ForStatement@67fae0fc.loopVariable(expected))" incoming="_Rg1QDScoEeSLVrU2ifxtpw" outgoing="_Rg1QIScoEeSLVrU2ifxtpw _Rg1QIicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1QJicoEeSLVrU2ifxtpw" name="Fork(ForStatement@67fae0fc.loopVariable(list))" incoming="_Rg1QDicoEeSLVrU2ifxtpw" outgoing="_Rg1QICcoEeSLVrU2ifxtpw _Rg1QIycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1QJycoEeSLVrU2ifxtpw" name="Fork(ForStatement@67fae0fc.loopVariable(label))" incoming="_Rg1QDycoEeSLVrU2ifxtpw" outgoing="_Rg1QHycoEeSLVrU2ifxtpw _Rg1QJCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1QKCcoEeSLVrU2ifxtpw" name="Fork(ForStatement@67fae0fc.loopVariable(i))" incoming="_Rg1QECcoEeSLVrU2ifxtpw" outgoing="_Rg1QGicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1QKScoEeSLVrU2ifxtpw" name="Fork(ForStatement@67fae0fc.loopVariable(counter))" incoming="_Rg1QEScoEeSLVrU2ifxtpw" outgoing="_Rg1QEycoEeSLVrU2ifxtpw _Rg1QHCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1QKicoEeSLVrU2ifxtpw" name="Fork(ForStatement@67fae0fc.loopVariable(upper))" incoming="_Rg1QEicoEeSLVrU2ifxtpw" outgoing="_Rg1QFCcoEeSLVrU2ifxtpw _Rg1QHicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QKycoEeSLVrU2ifxtpw" name="Call(&lt;=)">
              <argument xmi:id="_Rg1QLCcoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_Rg1QEycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QLScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QLicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rg1QLycoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_Rg1QFCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QMCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QMScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1QMicoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QMycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QNCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1QNScoEeSLVrU2ifxtpw" name="Values(ForStatement@67fae0fc)" outgoing="_Rg1QFicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ForkNode" xmi:id="_Rg1QNicoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_Rg1QFScoEeSLVrU2ifxtpw" outgoing="_Rg1QFycoEeSLVrU2ifxtpw _Rg1QGCcoEeSLVrU2ifxtpw _Rg1QGScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1QNycoEeSLVrU2ifxtpw" name="Body(ForStatement@67fae0fc)" incoming="_Rg1QFicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QOCcoEeSLVrU2ifxtpw" target="_Rg1QOycoEeSLVrU2ifxtpw" source="_Rg1QpScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QOScoEeSLVrU2ifxtpw" target="_Rg1QPicoEeSLVrU2ifxtpw" source="_Rg1QrScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QOicoEeSLVrU2ifxtpw" target="_Rg1QQScoEeSLVrU2ifxtpw" source="_Rg1QtScoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_Rg1QOycoEeSLVrU2ifxtpw" name="expected" incoming="_Rg1QOCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QPCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QPScoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_Rg1QPicoEeSLVrU2ifxtpw" name="list" incoming="_Rg1QOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QPycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QQCcoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_Rg1QQScoEeSLVrU2ifxtpw" name="label" incoming="_Rg1QOicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QQicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QQycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1QRCcoEeSLVrU2ifxtpw" name="ExpressionStatement@36f6d905">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QRScoEeSLVrU2ifxtpw" target="_Rg1QSicoEeSLVrU2ifxtpw" source="_Rg1QhycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QRicoEeSLVrU2ifxtpw" target="_Rg1QTScoEeSLVrU2ifxtpw" source="_Rg1QkScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QRycoEeSLVrU2ifxtpw" target="_Rg1QUCcoEeSLVrU2ifxtpw" source="_Rg1QnCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1QSCcoEeSLVrU2ifxtpw" target="_Rg1QSScoEeSLVrU2ifxtpw" source="_Rg1QUycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QSScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_Rg1QSCcoEeSLVrU2ifxtpw" behavior="_Rg0q9icoEeSLVrU2ifxtpw">
                  <argument xmi:id="_Rg1QSicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_Rg1QRScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QSycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QTCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_Rg1QTScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_Rg1QRicoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QTicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QTycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_Rg1QUCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_Rg1QRycoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QUScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QUicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1QUycoEeSLVrU2ifxtpw" name="Tuple@79b02b1f" outgoing="_Rg1QSCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QVCcoEeSLVrU2ifxtpw" target="_Rg1QZCcoEeSLVrU2ifxtpw" source="_Rg1QXCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QVScoEeSLVrU2ifxtpw" target="_Rg1QcicoEeSLVrU2ifxtpw" source="_Rg1QZycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QVicoEeSLVrU2ifxtpw" target="_Rg1QdScoEeSLVrU2ifxtpw" source="_Rg1QbicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QVycoEeSLVrU2ifxtpw" target="_Rg1QgScoEeSLVrU2ifxtpw" source="_Rg1QeCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QWCcoEeSLVrU2ifxtpw" target="_Rg1QhCcoEeSLVrU2ifxtpw" source="_Rg1QfCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QWScoEeSLVrU2ifxtpw" target="_Rg1QjicoEeSLVrU2ifxtpw" source="_Rg1QlCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QWicoEeSLVrU2ifxtpw" target="_Rg1QmScoEeSLVrU2ifxtpw" source="_Rg1QnycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1QWycoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;)">
                    <result xmi:id="_Rg1QXCcoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;).result" outgoing="_Rg1QVCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QXScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QXicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Rg1QXycoEeSLVrU2ifxtpw" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QYCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_Rg1QYScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg1QHycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QYicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QYycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_Rg1QZCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg1QVCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QZScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QZicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg1QZycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg1QVScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QaCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QaScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QaicoEeSLVrU2ifxtpw" name="Call(ToString)">
                    <argument xmi:id="_Rg1QaycoEeSLVrU2ifxtpw" name="Call(ToString).argument(x)" incoming="_Rg1QFycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QbCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QbScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg1QbicoEeSLVrU2ifxtpw" name="Call(ToString).result(result)" outgoing="_Rg1QVicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QbycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QcCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QcScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_Rg1QcicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg1QVScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QcycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QdCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_Rg1QdScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg1QVicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QdicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QdycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg1QeCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg1QVycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QeScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QeicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1QeycoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;)">
                    <result xmi:id="_Rg1QfCcoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;).result" outgoing="_Rg1QWCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QfScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QficoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Rg1QfycoEeSLVrU2ifxtpw" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QgCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_Rg1QgScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Rg1QVycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QgicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QgycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_Rg1QhCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Rg1QWCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QhScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QhicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg1QhycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Rg1QRScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QiCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QiScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QiicoEeSLVrU2ifxtpw" name="Call(At)">
                    <argument xmi:id="_Rg1QiycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_Rg1QICcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QjCcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QjScoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_Rg1QjicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_Rg1QWScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QjycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QkCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg1QkScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_Rg1QRicoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QkicoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QkycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Rg1QlCcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_Rg1QGCcoEeSLVrU2ifxtpw" outgoing="_Rg1QWScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QlScoEeSLVrU2ifxtpw" name="Call(At)">
                    <argument xmi:id="_Rg1QlicoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_Rg1QIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QlycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QmCcoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_Rg1QmScoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_Rg1QWicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QmicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QmycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Rg1QnCcoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_Rg1QRycoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QnScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QnicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Rg1QnycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_Rg1QGScoEeSLVrU2ifxtpw" outgoing="_Rg1QWicoEeSLVrU2ifxtpw"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1QoCcoEeSLVrU2ifxtpw" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QoScoEeSLVrU2ifxtpw" target="_Rg1QpScoEeSLVrU2ifxtpw" source="_Rg1QoicoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_Rg1QoicoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).input" incoming="_Rg1QIicoEeSLVrU2ifxtpw" outgoing="_Rg1QoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QoycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QpCcoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Rg1QpScoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).output" incoming="_Rg1QoScoEeSLVrU2ifxtpw" outgoing="_Rg1QOCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QpicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QpycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1QqCcoEeSLVrU2ifxtpw" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QqScoEeSLVrU2ifxtpw" target="_Rg1QrScoEeSLVrU2ifxtpw" source="_Rg1QqicoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_Rg1QqicoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).input" incoming="_Rg1QIycoEeSLVrU2ifxtpw" outgoing="_Rg1QqScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QqycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QrCcoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Rg1QrScoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).output" incoming="_Rg1QqScoEeSLVrU2ifxtpw" outgoing="_Rg1QOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QricoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QrycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1QsCcoEeSLVrU2ifxtpw" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1QsScoEeSLVrU2ifxtpw" target="_Rg1QtScoEeSLVrU2ifxtpw" source="_Rg1QsicoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_Rg1QsicoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).input" incoming="_Rg1QJCcoEeSLVrU2ifxtpw" outgoing="_Rg1QsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QsycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QtCcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Rg1QtScoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).output" incoming="_Rg1QsScoEeSLVrU2ifxtpw" outgoing="_Rg1QOicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QticoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QtycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QuCcoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_Rg1QuScoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_Rg1QGicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QuicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QuycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rg1QvCcoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_Rg1QGycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QvScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QvicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1QvycoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QwCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QwScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1QwicoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_Rg1QwycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg1QGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QxCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QxScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg1QxicoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1QxycoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_Rg1QyCcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_Rg1QHCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QyScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QyicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rg1QyycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_Rg1QHScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QzCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1QzScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1QzicoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1QzycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q0CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1Q0ScoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_Rg1Q0icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg1QHScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q0ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q1CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q1ScoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1Q1icoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1Q1ycoEeSLVrU2ifxtpw" target="_Rg1Q2ycoEeSLVrU2ifxtpw" source="_Rg1Q2CcoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_Rg1Q2CcoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).input" incoming="_Rg1QHicoEeSLVrU2ifxtpw" outgoing="_Rg1Q1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q2ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q2icoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_Rg1Q2ycoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).output" incoming="_Rg1Q1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q3CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q3ScoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <loopVariable xmi:id="_Rg1Q3icoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariable(expected)" outgoing="_Rg1QDScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q3ycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q4CcoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_Rg1Q4ScoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariable(list)" outgoing="_Rg1QDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q4icoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q4ycoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_Rg1Q5CcoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariable(label)" outgoing="_Rg1QDycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q5ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q5icoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_Rg1Q5ycoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariable(i)" outgoing="_Rg1QECcoEeSLVrU2ifxtpw _Rg1QFScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q6CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q6ScoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_Rg1Q6icoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariable(counter)" outgoing="_Rg1QEScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q6ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q7CcoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_Rg1Q7ScoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariable(upper)" outgoing="_Rg1QEicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q7icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q7ycoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_Rg1Q8CcoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariableInput(expected)" incoming="_Rg1PyycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q8ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q8icoEeSLVrU2ifxtpw" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Rg1Q8ycoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariableInput(list)" incoming="_Rg1PzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q9CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q9ScoEeSLVrU2ifxtpw" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Rg1Q9icoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariableInput(label)" incoming="_Rg1PzScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q9ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q-CcoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Rg1Q-ScoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariableInput(i)" incoming="_Rg1QCicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q-icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q-ycoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Rg1Q_CcoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariableInput(counter)" incoming="_Rg1QCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1Q_ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1Q_icoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Rg1Q_ycoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.loopVariableInput(upper)" incoming="_Rg1QCScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RACcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RAScoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <result xmi:id="_Rg1RAicoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RAycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RBCcoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_Rg1RBScoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RBicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RBycoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_Rg1RCCcoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RCScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RCicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <result xmi:id="_Rg1RCycoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RDCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RDScoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_Rg1RDicoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RDycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RECcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <result xmi:id="_Rg1REScoEeSLVrU2ifxtpw" name="ForStatement@67fae0fc.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1REicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1REycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1RFCcoEeSLVrU2ifxtpw" name="LoopVariables(ForStatement@67fae0fc)" outgoing="_Rg1QCycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RFScoEeSLVrU2ifxtpw" target="_Rg1RIicoEeSLVrU2ifxtpw" source="_Rg1RMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RFicoEeSLVrU2ifxtpw" target="_Rg1RJScoEeSLVrU2ifxtpw" source="_Rg1RNycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1RFycoEeSLVrU2ifxtpw" target="_Rg1RIScoEeSLVrU2ifxtpw" source="_Rg1RKycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RGCcoEeSLVrU2ifxtpw" target="_Rg1RPCcoEeSLVrU2ifxtpw" source="_Rg1RKCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RGScoEeSLVrU2ifxtpw" target="_Rg1RPycoEeSLVrU2ifxtpw" source="_Rg1ROicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RGicoEeSLVrU2ifxtpw" target="_Rg1RSycoEeSLVrU2ifxtpw" source="_Rg1RQicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RGycoEeSLVrU2ifxtpw" target="_Rg1RTicoEeSLVrU2ifxtpw" source="_Rg1RRicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1RHCcoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_Rg1RHScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg1QBycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RHicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RHycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg1RICcoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1RIScoEeSLVrU2ifxtpw" name="Call(Min)" incoming="_Rg1RFycoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg1RIicoEeSLVrU2ifxtpw" name="Call(Min).argument(x)" incoming="_Rg1RFScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RIycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RJCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rg1RJScoEeSLVrU2ifxtpw" name="Call(Min).argument(y)" incoming="_Rg1RFicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RJicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RJycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1RKCcoEeSLVrU2ifxtpw" name="Call(Min).result(result)" outgoing="_Rg1RGCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RKScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RKicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1RKycoEeSLVrU2ifxtpw" name="Tuple@1122199d" outgoing="_Rg1RFycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1RLCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_Rg1RlScoEeSLVrU2ifxtpw">
                <argument xmi:id="_Rg1RLScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_Rg1PzicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RLicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RLycoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_Rg1RMCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_Rg1RFScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RMScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RMicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1RMycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_Rg1RlScoEeSLVrU2ifxtpw">
                <argument xmi:id="_Rg1RNCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_Rg1PzycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RNScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RNicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_Rg1RNycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_Rg1RFicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1ROCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1ROScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1ROicoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_Rg1QBycoEeSLVrU2ifxtpw" outgoing="_Rg1QCicoEeSLVrU2ifxtpw _Rg1RGScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1ROycoEeSLVrU2ifxtpw" name="Call(-)">
              <argument xmi:id="_Rg1RPCcoEeSLVrU2ifxtpw" name="Call(-).argument(x)" incoming="_Rg1RGCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RPScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RPicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rg1RPycoEeSLVrU2ifxtpw" name="Call(-).argument(y)" incoming="_Rg1RGScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RQCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RQScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1RQicoEeSLVrU2ifxtpw" name="Call(-).result(result)" outgoing="_Rg1RGicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RQycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RRCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1RRScoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_Rg1RRicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg1RGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RRycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RSCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg1RSScoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1RSicoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_Rg1RSycoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_Rg1RGicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RTCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RTScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Rg1RTicoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_Rg1RGycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RTycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RUCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1RUScoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_Rg1QCScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RUicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RUycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1RVCcoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_Rg1RVScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg1QCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RVicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RVycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Rg1RWCcoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg1P0CcoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_Rg1PxScoEeSLVrU2ifxtpw" parameter="_Rg1PvCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg1P0ScoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_Rg1PxScoEeSLVrU2ifxtpw" outgoing="_Rg1PyCcoEeSLVrU2ifxtpw _Rg1PzScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg1P0icoEeSLVrU2ifxtpw" name="Input(list)" outgoing="_Rg1PxicoEeSLVrU2ifxtpw" parameter="_Rg1PvycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg1P0ycoEeSLVrU2ifxtpw" name="Fork(list)" incoming="_Rg1PxicoEeSLVrU2ifxtpw" outgoing="_Rg1PyScoEeSLVrU2ifxtpw _Rg1PzicoEeSLVrU2ifxtpw _Rg1PzCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg1P1CcoEeSLVrU2ifxtpw" name="Input(expected)" outgoing="_Rg1PxycoEeSLVrU2ifxtpw" parameter="_Rg1PwicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg1P1ScoEeSLVrU2ifxtpw" name="Fork(expected)" incoming="_Rg1PxycoEeSLVrU2ifxtpw" outgoing="_Rg1PyicoEeSLVrU2ifxtpw _Rg1PzycoEeSLVrU2ifxtpw _Rg1PyycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg1RWScoEeSLVrU2ifxtpw" name="Write" node="_Rg1RZCcoEeSLVrU2ifxtpw _Rg1RZScoEeSLVrU2ifxtpw _Rg1RZicoEeSLVrU2ifxtpw" group="_Rg1RZicoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_Rg1RWicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_Rg1RWycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Rg1RXCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Rg1RXScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_Rg1RXicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_Rg1RXycoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RYCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RYScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RYicoEeSLVrU2ifxtpw" target="_Rg1RZScoEeSLVrU2ifxtpw" source="_Rg1RZCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RYycoEeSLVrU2ifxtpw" target="_Rg1RbScoEeSLVrU2ifxtpw" source="_Rg1RZScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_Rg1RZicoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1RZycoEeSLVrU2ifxtpw" name="ExpressionStatement@58eb1aec">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RaCcoEeSLVrU2ifxtpw" target="_Rg1ReicoEeSLVrU2ifxtpw" source="_Rg1RhycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1RaScoEeSLVrU2ifxtpw" target="_Rg1RaicoEeSLVrU2ifxtpw" source="_Rg1ReycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_Rg1RaicoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_Rg1RaScoEeSLVrU2ifxtpw" mode="parallel" inputElement="_Rg1ReicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RaycoEeSLVrU2ifxtpw" target="_Rg1RcScoEeSLVrU2ifxtpw" source="_Rg1RbScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RbCcoEeSLVrU2ifxtpw" target="_Rg1RdycoEeSLVrU2ifxtpw" source="_Rg1ReicoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_Rg1RbScoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_Rg1RYycoEeSLVrU2ifxtpw" outgoing="_Rg1RaycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RbicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RbycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Rg1RcCcoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_Rg1RcScoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_Rg1RaycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RcicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RcycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1RdCcoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RdScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RdicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_Rg1RdycoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_Rg1RbCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1ReCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1ReScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_Rg1ReicoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_Rg1RaCcoEeSLVrU2ifxtpw" outgoing="_Rg1RbCcoEeSLVrU2ifxtpw" regionAsInput="_Rg1RaicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1ReycoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_Rg1RaScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RfCcoEeSLVrU2ifxtpw" target="_Rg1RgScoEeSLVrU2ifxtpw" source="_Rg1RjCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RfScoEeSLVrU2ifxtpw" target="_Rg1RlCcoEeSLVrU2ifxtpw" source="_Rg1RkCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1RficoEeSLVrU2ifxtpw" target="_Rg1RgCcoEeSLVrU2ifxtpw" source="_Rg1RiicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RfycoEeSLVrU2ifxtpw" target="_Rg1RhCcoEeSLVrU2ifxtpw" source="_Rg1RlCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1RgCcoEeSLVrU2ifxtpw" name="Call(At)" incoming="_Rg1RficoEeSLVrU2ifxtpw">
              <argument xmi:id="_Rg1RgScoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_Rg1RfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RgicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RgycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_Rg1RhCcoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_Rg1RfycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RhScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RhicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Rg1RhycoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_Rg1RaCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RiCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RiScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1RiicoEeSLVrU2ifxtpw" name="Tuple@69e94b3" outgoing="_Rg1RficoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_Rg1RiycoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_Rg1RjCcoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_Rg1RfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RjScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RjicoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Rg1RjycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_Rg1RkCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_Rg1RfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RkScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RkicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Rg1RkycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Rg1RlCcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_Rg1RfScoEeSLVrU2ifxtpw" outgoing="_Rg1RfycoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg1RZCcoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_Rg1RYicoEeSLVrU2ifxtpw" parameter="_Rg1RXycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg1RZScoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_Rg1RYicoEeSLVrU2ifxtpw" outgoing="_Rg1RYycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg1RlScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$size__any__" node="_Rg1RoCcoEeSLVrU2ifxtpw _Rg1RoScoEeSLVrU2ifxtpw _Rg1RoicoEeSLVrU2ifxtpw _Rg1RoycoEeSLVrU2ifxtpw _Rg1RpCcoEeSLVrU2ifxtpw" group="_Rg1RpCcoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_Rg1RlicoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RlycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RmCcoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Rg1RmScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RmicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RmycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RnCcoEeSLVrU2ifxtpw" target="_Rg1RoScoEeSLVrU2ifxtpw" source="_Rg1RoCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_Rg1RnScoEeSLVrU2ifxtpw" target="_Rg1RoycoEeSLVrU2ifxtpw" source="_Rg1RpScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RnicoEeSLVrU2ifxtpw" target="_Rg1RqycoEeSLVrU2ifxtpw" source="_Rg1RoScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RnycoEeSLVrU2ifxtpw" target="_Rg1RoicoEeSLVrU2ifxtpw" source="_Rg1RpycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_Rg1RpCcoEeSLVrU2ifxtpw" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Rg1RpScoEeSLVrU2ifxtpw" name="ReturnStatement@22536490" outgoing="_Rg1RnScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Rg1RpicoEeSLVrU2ifxtpw" target="_Rg1RpycoEeSLVrU2ifxtpw" source="_Rg1RricoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_Rg1RpycoEeSLVrU2ifxtpw" name="ReturnStatement@22536490.output" incoming="_Rg1RpicoEeSLVrU2ifxtpw" outgoing="_Rg1RnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RqCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RqScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Rg1RqicoEeSLVrU2ifxtpw" name="Call(Size)">
            <argument xmi:id="_Rg1RqycoEeSLVrU2ifxtpw" name="Call(Size).argument(seq)" incoming="_Rg1RnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RrCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RrScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Rg1RricoEeSLVrU2ifxtpw" name="Call(Size).result()" outgoing="_Rg1RpicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rg1RrycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1RsCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg1RoCcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Rg1RnCcoEeSLVrU2ifxtpw" parameter="_Rg1RlicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Rg1RoScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Rg1RnCcoEeSLVrU2ifxtpw" outgoing="_Rg1RnicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Rg1RoicoEeSLVrU2ifxtpw" name="Return" incoming="_Rg1RnycoEeSLVrU2ifxtpw" parameter="_Rg1RmScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_Rg1RoycoEeSLVrU2ifxtpw" name="Final" incoming="_Rg1RnScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Rg1RsScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Rg1RsicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Rg1RsycoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Rg1RtCcoEeSLVrU2ifxtpw" client="_Rg1RlScoEeSLVrU2ifxtpw" supplier="_Rg1RsScoEeSLVrU2ifxtpw"/>
    <profileApplication xmi:id="_Rg1RtScoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_Rg1RticoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_Rg1RtycoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0o8ycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Rg1RuCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0o7ycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Rg12YCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0qsycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Rg12YScoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0EBicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_Rg12YicoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0ECicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_Rg12YycoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0CgicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Rg12ZCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0qvScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Rg12ZScoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0EvScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Rg12ZicoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0DRicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Rg12ZycoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0qxCcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Rg12aCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0CficoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_Rg12aScoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0DSicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_Rg2dcCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0EuScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_Rg2dcScoEeSLVrU2ifxtpw" base_BehavioralFeature="_Rg0qyycoEeSLVrU2ifxtpw"/>
</xmi:XMI>

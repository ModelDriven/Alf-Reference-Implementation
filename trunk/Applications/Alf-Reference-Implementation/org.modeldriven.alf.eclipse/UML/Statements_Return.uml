<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SWSQoCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SWSQoScoEeSLVrU2ifxtpw" name="Statements_Return" classifierBehavior="_SWSQqicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_SWSQoicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SWSQoycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SWSQpCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SWSQpScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SWSQpicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SWSQpycoEeSLVrU2ifxtpw" name="Statements_Return$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQqCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQqScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SWSQqicoEeSLVrU2ifxtpw" name="Statements_Return$classifierBehavior$1" visibility="private" isActive="true" node="_SWSQqycoEeSLVrU2ifxtpw" group="_SWSQqycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SWSQqycoEeSLVrU2ifxtpw" name="Body(Statements_Return$classifierBehavior$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQrCcoEeSLVrU2ifxtpw" target="_SWSQ8CcoEeSLVrU2ifxtpw" source="_SWSQ4ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQrScoEeSLVrU2ifxtpw" target="_SWSQ6CcoEeSLVrU2ifxtpw" source="_SWSQuycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQricoEeSLVrU2ifxtpw" target="_SWSRCScoEeSLVrU2ifxtpw" source="_SWSQ4icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQrycoEeSLVrU2ifxtpw" target="_SWSRAScoEeSLVrU2ifxtpw" source="_SWSQ6CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQsCcoEeSLVrU2ifxtpw" target="_SWSRIicoEeSLVrU2ifxtpw" source="_SWSQ4ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQsScoEeSLVrU2ifxtpw" target="_SWSRGicoEeSLVrU2ifxtpw" source="_SWSRAScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQsicoEeSLVrU2ifxtpw" target="_SWSROycoEeSLVrU2ifxtpw" source="_SWSQ5CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQsycoEeSLVrU2ifxtpw" target="_SWSRMycoEeSLVrU2ifxtpw" source="_SWSRGicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQtCcoEeSLVrU2ifxtpw" target="_SWSRVCcoEeSLVrU2ifxtpw" source="_SWSQ5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQtScoEeSLVrU2ifxtpw" target="_SWSRTCcoEeSLVrU2ifxtpw" source="_SWSRMycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQticoEeSLVrU2ifxtpw" target="_SWS3xCcoEeSLVrU2ifxtpw" source="_SWSQ5icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQtycoEeSLVrU2ifxtpw" target="_SWS3vCcoEeSLVrU2ifxtpw" source="_SWSRTCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQuCcoEeSLVrU2ifxtpw" target="_SWS33ScoEeSLVrU2ifxtpw" source="_SWSQ5ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQuScoEeSLVrU2ifxtpw" target="_SWS31ScoEeSLVrU2ifxtpw" source="_SWS3vCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQuicoEeSLVrU2ifxtpw" target="_SWS37icoEeSLVrU2ifxtpw" source="_SWS31ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSQuycoEeSLVrU2ifxtpw" name="ExpressionStatement@3b5ecea8" outgoing="_SWSQrScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQvCcoEeSLVrU2ifxtpw" target="_SWSQ4ScoEeSLVrU2ifxtpw" source="_SWSQxScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQvScoEeSLVrU2ifxtpw" target="_SWSQ4icoEeSLVrU2ifxtpw" source="_SWSQyCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQvicoEeSLVrU2ifxtpw" target="_SWSQ4ycoEeSLVrU2ifxtpw" source="_SWSQyycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQvycoEeSLVrU2ifxtpw" target="_SWSQ5CcoEeSLVrU2ifxtpw" source="_SWSQzicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQwCcoEeSLVrU2ifxtpw" target="_SWSQ5ScoEeSLVrU2ifxtpw" source="_SWSQ0ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQwScoEeSLVrU2ifxtpw" target="_SWSQ5icoEeSLVrU2ifxtpw" source="_SWSQ1CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQwicoEeSLVrU2ifxtpw" target="_SWSQ5ycoEeSLVrU2ifxtpw" source="_SWSQ1ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQwycoEeSLVrU2ifxtpw" target="_SWSQ2icoEeSLVrU2ifxtpw" source="_SWSQ3icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SWSQxCcoEeSLVrU2ifxtpw" name="Call(test)" operation="_SWS5dCcoEeSLVrU2ifxtpw">
              <result xmi:id="_SWSQxScoEeSLVrU2ifxtpw" name="Call(test).result(a)" outgoing="_SWSQvCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQxicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQxycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SWSQyCcoEeSLVrU2ifxtpw" name="Call(test).result(b)" outgoing="_SWSQvScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQyScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQyicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SWSQyycoEeSLVrU2ifxtpw" name="Call(test).result(c)" outgoing="_SWSQvicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQzCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQzScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SWSQzicoEeSLVrU2ifxtpw" name="Call(test).result(x)" outgoing="_SWSQvycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQzycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ0CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SWSQ0ScoEeSLVrU2ifxtpw" name="Call(test).result(y)" outgoing="_SWSQwCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ0icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ0ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SWSQ1CcoEeSLVrU2ifxtpw" name="Call(test).result(z)" outgoing="_SWSQwScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ1ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ1icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SWSQ1ycoEeSLVrU2ifxtpw" name="Call(test).result(n)" outgoing="_SWSQwicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ2CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ2ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_SWSQ2icoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_SWSQwycoEeSLVrU2ifxtpw" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ2ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ3CcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SWSQ3ScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SWSQ3icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SWSQwycoEeSLVrU2ifxtpw" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ3ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ4CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SWSQ4ScoEeSLVrU2ifxtpw" name="Fork(a)@450893fb" incoming="_SWSQvCcoEeSLVrU2ifxtpw" outgoing="_SWSQrCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWSQ4icoEeSLVrU2ifxtpw" name="Fork(b)@5b80c9eb" incoming="_SWSQvScoEeSLVrU2ifxtpw" outgoing="_SWSQricoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWSQ4ycoEeSLVrU2ifxtpw" name="Fork(c)@6448923b" incoming="_SWSQvicoEeSLVrU2ifxtpw" outgoing="_SWSQsCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWSQ5CcoEeSLVrU2ifxtpw" name="Fork(x)@587892ec" incoming="_SWSQvycoEeSLVrU2ifxtpw" outgoing="_SWSQsicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWSQ5ScoEeSLVrU2ifxtpw" name="Fork(y)@53f5f154" incoming="_SWSQwCcoEeSLVrU2ifxtpw" outgoing="_SWSQtCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWSQ5icoEeSLVrU2ifxtpw" name="Fork(z)@37b6ecdc" incoming="_SWSQwScoEeSLVrU2ifxtpw" outgoing="_SWSQticoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWSQ5ycoEeSLVrU2ifxtpw" name="Fork(n)@4a787c17" incoming="_SWSQwicoEeSLVrU2ifxtpw" outgoing="_SWSQuCcoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSQ6CcoEeSLVrU2ifxtpw" name="ExpressionStatement@5ca796a0" incoming="_SWSQrScoEeSLVrU2ifxtpw" outgoing="_SWSQrycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQ6ScoEeSLVrU2ifxtpw" target="_SWSQ7ScoEeSLVrU2ifxtpw" source="_SWSQ-CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSQ6icoEeSLVrU2ifxtpw" target="_SWSQ8ycoEeSLVrU2ifxtpw" source="_SWSQ_ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWSQ6ycoEeSLVrU2ifxtpw" target="_SWSQ7CcoEeSLVrU2ifxtpw" source="_SWSQ9icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWSQ7CcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SWSQ6ycoEeSLVrU2ifxtpw" behavior="_SWS6ricoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWSQ7ScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SWSQ6ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ7icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ7ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSQ8CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SWSQrCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ8ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ8icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSQ8ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SWSQ6icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ9CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ9ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSQ9icoEeSLVrU2ifxtpw" name="Tuple@5f250e37" outgoing="_SWSQ6ycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWSQ9ycoEeSLVrU2ifxtpw" name="Value(&quot;a&quot;)">
                <result xmi:id="_SWSQ-CcoEeSLVrU2ifxtpw" name="Value(&quot;a&quot;).result" outgoing="_SWSQ6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ-ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ-icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWSQ-ycoEeSLVrU2ifxtpw" value="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWSQ_CcoEeSLVrU2ifxtpw" name="Value(4)">
                <result xmi:id="_SWSQ_ScoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_SWSQ6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSQ_icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSQ_ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWSRACcoEeSLVrU2ifxtpw" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSRAScoEeSLVrU2ifxtpw" name="ExpressionStatement@260e2ed8" incoming="_SWSQrycoEeSLVrU2ifxtpw" outgoing="_SWSQsScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSRAicoEeSLVrU2ifxtpw" target="_SWSRBicoEeSLVrU2ifxtpw" source="_SWSREScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSRAycoEeSLVrU2ifxtpw" target="_SWSRDCcoEeSLVrU2ifxtpw" source="_SWSRFicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWSRBCcoEeSLVrU2ifxtpw" target="_SWSRBScoEeSLVrU2ifxtpw" source="_SWSRDycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWSRBScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SWSRBCcoEeSLVrU2ifxtpw" behavior="_SWS6ricoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWSRBicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SWSRAicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRBycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRCCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSRCScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SWSQricoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRCicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRCycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSRDCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SWSRAycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRDScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRDicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSRDycoEeSLVrU2ifxtpw" name="Tuple@3dc0f39c" outgoing="_SWSRBCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWSRECcoEeSLVrU2ifxtpw" name="Value(&quot;b&quot;)">
                <result xmi:id="_SWSREScoEeSLVrU2ifxtpw" name="Value(&quot;b&quot;).result" outgoing="_SWSRAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSREicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSREycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWSRFCcoEeSLVrU2ifxtpw" value="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWSRFScoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_SWSRFicoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SWSRAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRFycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRGCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWSRGScoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSRGicoEeSLVrU2ifxtpw" name="ExpressionStatement@a7a547b" incoming="_SWSQsScoEeSLVrU2ifxtpw" outgoing="_SWSQsycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSRGycoEeSLVrU2ifxtpw" target="_SWSRHycoEeSLVrU2ifxtpw" source="_SWSRKicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSRHCcoEeSLVrU2ifxtpw" target="_SWSRJScoEeSLVrU2ifxtpw" source="_SWSRLycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWSRHScoEeSLVrU2ifxtpw" target="_SWSRHicoEeSLVrU2ifxtpw" source="_SWSRKCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWSRHicoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SWSRHScoEeSLVrU2ifxtpw" behavior="_SWS6ricoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWSRHycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SWSRGycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRICcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRIScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSRIicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SWSQsCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRIycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRJCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSRJScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SWSRHCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRJicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRJycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSRKCcoEeSLVrU2ifxtpw" name="Tuple@6abb7d54" outgoing="_SWSRHScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWSRKScoEeSLVrU2ifxtpw" name="Value(&quot;c&quot;)">
                <result xmi:id="_SWSRKicoEeSLVrU2ifxtpw" name="Value(&quot;c&quot;).result" outgoing="_SWSRGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRKycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRLCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWSRLScoEeSLVrU2ifxtpw" value="c">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWSRLicoEeSLVrU2ifxtpw" name="Value(&quot;xx&quot;)">
                <result xmi:id="_SWSRLycoEeSLVrU2ifxtpw" name="Value(&quot;xx&quot;).result" outgoing="_SWSRHCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRMCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRMScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWSRMicoEeSLVrU2ifxtpw" value="xx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSRMycoEeSLVrU2ifxtpw" name="ExpressionStatement@1a074150" incoming="_SWSQsycoEeSLVrU2ifxtpw" outgoing="_SWSQtScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSRNCcoEeSLVrU2ifxtpw" target="_SWSROCcoEeSLVrU2ifxtpw" source="_SWSRQycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSRNScoEeSLVrU2ifxtpw" target="_SWSRPicoEeSLVrU2ifxtpw" source="_SWSRSCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWSRNicoEeSLVrU2ifxtpw" target="_SWSRNycoEeSLVrU2ifxtpw" source="_SWSRQScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWSRNycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SWSRNicoEeSLVrU2ifxtpw" behavior="_SWS6ricoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWSROCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SWSRNCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSROScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSROicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSROycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SWSQsicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRPCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRPScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSRPicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SWSRNScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRPycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRQCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSRQScoEeSLVrU2ifxtpw" name="Tuple@5d03f1d3" outgoing="_SWSRNicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWSRQicoEeSLVrU2ifxtpw" name="Value(&quot;x&quot;)">
                <result xmi:id="_SWSRQycoEeSLVrU2ifxtpw" name="Value(&quot;x&quot;).result" outgoing="_SWSRNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRRCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRRScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWSRRicoEeSLVrU2ifxtpw" value="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWSRRycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SWSRSCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SWSRNScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRSScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRSicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWSRSycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWSRTCcoEeSLVrU2ifxtpw" name="ExpressionStatement@604e7125" incoming="_SWSQtScoEeSLVrU2ifxtpw" outgoing="_SWSQtycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSRTScoEeSLVrU2ifxtpw" target="_SWSRUScoEeSLVrU2ifxtpw" source="_SWS3sycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWSRTicoEeSLVrU2ifxtpw" target="_SWSRVycoEeSLVrU2ifxtpw" source="_SWS3uCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWSRTycoEeSLVrU2ifxtpw" target="_SWSRUCcoEeSLVrU2ifxtpw" source="_SWS3sScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWSRUCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SWSRTycoEeSLVrU2ifxtpw" behavior="_SWS6ricoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWSRUScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SWSRTScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRUicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRUycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSRVCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SWSQtCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRVScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWSRVicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWSRVycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SWSRTicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWSRWCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS3sCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS3sScoEeSLVrU2ifxtpw" name="Tuple@3119b3d8" outgoing="_SWSRTycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS3sicoEeSLVrU2ifxtpw" name="Value(&quot;y&quot;)">
                <result xmi:id="_SWS3sycoEeSLVrU2ifxtpw" name="Value(&quot;y&quot;).result" outgoing="_SWSRTScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS3tCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS3tScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWS3ticoEeSLVrU2ifxtpw" value="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS3tycoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_SWS3uCcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SWSRTicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS3uScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS3uicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS3uycoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS3vCcoEeSLVrU2ifxtpw" name="ExpressionStatement@306028f6" incoming="_SWSQtycoEeSLVrU2ifxtpw" outgoing="_SWSQuScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS3vScoEeSLVrU2ifxtpw" target="_SWS3wScoEeSLVrU2ifxtpw" source="_SWS3zCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS3vicoEeSLVrU2ifxtpw" target="_SWS3xycoEeSLVrU2ifxtpw" source="_SWS30ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWS3vycoEeSLVrU2ifxtpw" target="_SWS3wCcoEeSLVrU2ifxtpw" source="_SWS3yicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS3wCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SWS3vycoEeSLVrU2ifxtpw" behavior="_SWS6ricoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWS3wScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SWS3vScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS3wicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS3wycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWS3xCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SWSQticoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS3xScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS3xicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWS3xycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SWS3vicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS3yCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS3yScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS3yicoEeSLVrU2ifxtpw" name="Tuple@7350843d" outgoing="_SWS3vycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS3yycoEeSLVrU2ifxtpw" name="Value(&quot;z&quot;)">
                <result xmi:id="_SWS3zCcoEeSLVrU2ifxtpw" name="Value(&quot;z&quot;).result" outgoing="_SWS3vScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS3zScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS3zicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWS3zycoEeSLVrU2ifxtpw" value="z">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS30CcoEeSLVrU2ifxtpw" name="Value(3)">
                <result xmi:id="_SWS30ScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_SWS3vicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS30icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS30ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS31CcoEeSLVrU2ifxtpw" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS31ScoEeSLVrU2ifxtpw" name="ExpressionStatement@5562c96c" incoming="_SWSQuScoEeSLVrU2ifxtpw" outgoing="_SWSQuicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS31icoEeSLVrU2ifxtpw" target="_SWS32icoEeSLVrU2ifxtpw" source="_SWS35ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS31ycoEeSLVrU2ifxtpw" target="_SWS34CcoEeSLVrU2ifxtpw" source="_SWS36icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWS32CcoEeSLVrU2ifxtpw" target="_SWS32ScoEeSLVrU2ifxtpw" source="_SWS34ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS32ScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SWS32CcoEeSLVrU2ifxtpw" behavior="_SWS6ricoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWS32icoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SWS31icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS32ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS33CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWS33ScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SWSQuCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS33icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS33ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWS34CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SWS31ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS34ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS34icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS34ycoEeSLVrU2ifxtpw" name="Tuple@7ac1210" outgoing="_SWS32CcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS35CcoEeSLVrU2ifxtpw" name="Value(&quot;n&quot;)">
                <result xmi:id="_SWS35ScoEeSLVrU2ifxtpw" name="Value(&quot;n&quot;).result" outgoing="_SWS31icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS35icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS35ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWS36CcoEeSLVrU2ifxtpw" value="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS36ScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SWS36icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SWS31ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS36ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS37CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS37ScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS37icoEeSLVrU2ifxtpw" name="ExpressionStatement@36e1d274" incoming="_SWSQuicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS37ycoEeSLVrU2ifxtpw" target="_SWS38icoEeSLVrU2ifxtpw" source="_SWS3-icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWS38CcoEeSLVrU2ifxtpw" target="_SWS38ScoEeSLVrU2ifxtpw" source="_SWS3-CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS38ScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SWS38CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWS38icoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SWS37ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS38ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS39CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SWS39ScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS39icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS39ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS3-CcoEeSLVrU2ifxtpw" name="Tuple@a0df7ae" outgoing="_SWS38CcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS3-ScoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_SWS3-icoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_SWS37ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS3-ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS3_CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWS3_ScoEeSLVrU2ifxtpw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SWS3_icoEeSLVrU2ifxtpw" name="test$method$1" specification="_SWS5dCcoEeSLVrU2ifxtpw" node="_SWS4IycoEeSLVrU2ifxtpw _SWS4JCcoEeSLVrU2ifxtpw _SWS4JScoEeSLVrU2ifxtpw _SWS4JicoEeSLVrU2ifxtpw _SWS4JycoEeSLVrU2ifxtpw _SWS4KCcoEeSLVrU2ifxtpw _SWS4KScoEeSLVrU2ifxtpw _SWS4KicoEeSLVrU2ifxtpw _SWS4KycoEeSLVrU2ifxtpw" group="_SWS4KycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SWS3_ycoEeSLVrU2ifxtpw" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4ACcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4AScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS4AicoEeSLVrU2ifxtpw" name="b" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4AycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4BCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS4BScoEeSLVrU2ifxtpw" name="c" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4BicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4BycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS4CCcoEeSLVrU2ifxtpw" name="x" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4CScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4CicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS4CycoEeSLVrU2ifxtpw" name="y" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4DCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4DScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS4DicoEeSLVrU2ifxtpw" name="z" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4DycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4ECcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS4EScoEeSLVrU2ifxtpw" name="n" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4EicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4EycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4FCcoEeSLVrU2ifxtpw" target="_SWS4KicoEeSLVrU2ifxtpw" source="_SWS4licoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4FScoEeSLVrU2ifxtpw" target="_SWS4IycoEeSLVrU2ifxtpw" source="_SWS4nicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4FicoEeSLVrU2ifxtpw" target="_SWS4JCcoEeSLVrU2ifxtpw" source="_SWS4oScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4FycoEeSLVrU2ifxtpw" target="_SWS4JScoEeSLVrU2ifxtpw" source="_SWS4pCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4GCcoEeSLVrU2ifxtpw" target="_SWS4JicoEeSLVrU2ifxtpw" source="_SWS4pycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4GScoEeSLVrU2ifxtpw" target="_SWS4JycoEeSLVrU2ifxtpw" source="_SWS4qicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4GicoEeSLVrU2ifxtpw" target="_SWS4KCcoEeSLVrU2ifxtpw" source="_SWS4rScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4GycoEeSLVrU2ifxtpw" target="_SWS4KScoEeSLVrU2ifxtpw" source="_SWS4sCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4HCcoEeSLVrU2ifxtpw" target="_SWS4IycoEeSLVrU2ifxtpw" source="_SWS4QicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4HScoEeSLVrU2ifxtpw" target="_SWS4JCcoEeSLVrU2ifxtpw" source="_SWS4RScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4HicoEeSLVrU2ifxtpw" target="_SWS4JScoEeSLVrU2ifxtpw" source="_SWS4SCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4HycoEeSLVrU2ifxtpw" target="_SWS4JicoEeSLVrU2ifxtpw" source="_SWS4SycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4ICcoEeSLVrU2ifxtpw" target="_SWS4JycoEeSLVrU2ifxtpw" source="_SWS4TicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4IScoEeSLVrU2ifxtpw" target="_SWS4KCcoEeSLVrU2ifxtpw" source="_SWS4UScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4IicoEeSLVrU2ifxtpw" target="_SWS4KScoEeSLVrU2ifxtpw" source="_SWS4VCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SWS4KycoEeSLVrU2ifxtpw" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4LCcoEeSLVrU2ifxtpw" target="_SWS4XycoEeSLVrU2ifxtpw" source="_SWS4VycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4LScoEeSLVrU2ifxtpw" target="_SWS4ZycoEeSLVrU2ifxtpw" source="_SWS4XycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4LicoEeSLVrU2ifxtpw" target="_SWS4bycoEeSLVrU2ifxtpw" source="_SWS4ZycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4LycoEeSLVrU2ifxtpw" target="_SWS4fycoEeSLVrU2ifxtpw" source="_SWS4cScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4MCcoEeSLVrU2ifxtpw" target="_SWS4eCcoEeSLVrU2ifxtpw" source="_SWS4bycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4MScoEeSLVrU2ifxtpw" target="_SWS4jScoEeSLVrU2ifxtpw" source="_SWS4eCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4MicoEeSLVrU2ifxtpw" target="_SWS4tScoEeSLVrU2ifxtpw" source="_SWS4WScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4MycoEeSLVrU2ifxtpw" target="_SWS4vScoEeSLVrU2ifxtpw" source="_SWS4YScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4NCcoEeSLVrU2ifxtpw" target="_SWS4xScoEeSLVrU2ifxtpw" source="_SWS4aScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4NScoEeSLVrU2ifxtpw" target="_SWS4zScoEeSLVrU2ifxtpw" source="_SWS4iycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4NicoEeSLVrU2ifxtpw" target="_SWS41ScoEeSLVrU2ifxtpw" source="_SWS4jCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4NycoEeSLVrU2ifxtpw" target="_SWS43ScoEeSLVrU2ifxtpw" source="_SWS4eicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4OCcoEeSLVrU2ifxtpw" target="_SWS45ScoEeSLVrU2ifxtpw" source="_SWS4jycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4OScoEeSLVrU2ifxtpw" target="_SWS4licoEeSLVrU2ifxtpw" source="_SWS4jScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4OicoEeSLVrU2ifxtpw" target="_SWS46ycoEeSLVrU2ifxtpw" source="_SWS4licoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4OycoEeSLVrU2ifxtpw" target="_SWS4QicoEeSLVrU2ifxtpw" source="_SWS4WScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4PCcoEeSLVrU2ifxtpw" target="_SWS4RScoEeSLVrU2ifxtpw" source="_SWS4YScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4PScoEeSLVrU2ifxtpw" target="_SWS4SCcoEeSLVrU2ifxtpw" source="_SWS4aScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4PicoEeSLVrU2ifxtpw" target="_SWS4SycoEeSLVrU2ifxtpw" source="_SWS4iycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4PycoEeSLVrU2ifxtpw" target="_SWS4TicoEeSLVrU2ifxtpw" source="_SWS4jCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4QCcoEeSLVrU2ifxtpw" target="_SWS4UScoEeSLVrU2ifxtpw" source="_SWS4eicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4QScoEeSLVrU2ifxtpw" target="_SWS4VCcoEeSLVrU2ifxtpw" source="_SWS47ScoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SWS4QicoEeSLVrU2ifxtpw" name="Output(a)" incoming="_SWS4OycoEeSLVrU2ifxtpw" outgoing="_SWS4HCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4QycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4RCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SWS4RScoEeSLVrU2ifxtpw" name="Output(b)" incoming="_SWS4PCcoEeSLVrU2ifxtpw" outgoing="_SWS4HScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4RicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4RycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SWS4SCcoEeSLVrU2ifxtpw" name="Output(c)" incoming="_SWS4PScoEeSLVrU2ifxtpw" outgoing="_SWS4HicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4SScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4SicoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SWS4SycoEeSLVrU2ifxtpw" name="Output(x)" incoming="_SWS4PicoEeSLVrU2ifxtpw" outgoing="_SWS4HycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4TCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4TScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SWS4TicoEeSLVrU2ifxtpw" name="Output(y)" incoming="_SWS4PycoEeSLVrU2ifxtpw" outgoing="_SWS4ICcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4TycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4UCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SWS4UScoEeSLVrU2ifxtpw" name="Output(z)" incoming="_SWS4QCcoEeSLVrU2ifxtpw" outgoing="_SWS4IScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4UicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4UycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SWS4VCcoEeSLVrU2ifxtpw" name="Output(n)" incoming="_SWS4QScoEeSLVrU2ifxtpw" outgoing="_SWS4IicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4VScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4VicoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4VycoEeSLVrU2ifxtpw" name="ExpressionStatement@407746dd" outgoing="_SWS4LCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4WCcoEeSLVrU2ifxtpw" target="_SWS4WScoEeSLVrU2ifxtpw" source="_SWS4XCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS4WScoEeSLVrU2ifxtpw" name="Fork(a)@66df5ef4" incoming="_SWS4WCcoEeSLVrU2ifxtpw" outgoing="_SWS4MicoEeSLVrU2ifxtpw _SWS4OycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4WicoEeSLVrU2ifxtpw" name="RightHandSide@52d319ef">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS4WycoEeSLVrU2ifxtpw" name="Call(test1)" behavior="_SWS5jycoEeSLVrU2ifxtpw">
                <result xmi:id="_SWS4XCcoEeSLVrU2ifxtpw" name="Call(test1).result()" outgoing="_SWS4WCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4XScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4XicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4XycoEeSLVrU2ifxtpw" name="ExpressionStatement@1dd14358" incoming="_SWS4LCcoEeSLVrU2ifxtpw" outgoing="_SWS4LScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4YCcoEeSLVrU2ifxtpw" target="_SWS4YScoEeSLVrU2ifxtpw" source="_SWS4ZCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS4YScoEeSLVrU2ifxtpw" name="Fork(b)@f22db52" incoming="_SWS4YCcoEeSLVrU2ifxtpw" outgoing="_SWS4MycoEeSLVrU2ifxtpw _SWS4PCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4YicoEeSLVrU2ifxtpw" name="RightHandSide@396cec41">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS4YycoEeSLVrU2ifxtpw" name="Call(test2)" behavior="_SWS5sCcoEeSLVrU2ifxtpw">
                <result xmi:id="_SWS4ZCcoEeSLVrU2ifxtpw" name="Call(test2).result()" outgoing="_SWS4YCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4ZScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4ZicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4ZycoEeSLVrU2ifxtpw" name="ExpressionStatement@653d6332" incoming="_SWS4LScoEeSLVrU2ifxtpw" outgoing="_SWS4LicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4aCcoEeSLVrU2ifxtpw" target="_SWS4aScoEeSLVrU2ifxtpw" source="_SWS4bCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS4aScoEeSLVrU2ifxtpw" name="Fork(c)@45970cbb" incoming="_SWS4aCcoEeSLVrU2ifxtpw" outgoing="_SWS4NCcoEeSLVrU2ifxtpw _SWS4PScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4aicoEeSLVrU2ifxtpw" name="RightHandSide@3fc4ecae">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS4aycoEeSLVrU2ifxtpw" name="Call(test3)" behavior="_SWS59icoEeSLVrU2ifxtpw">
                <result xmi:id="_SWS4bCcoEeSLVrU2ifxtpw" name="Call(test3).result()" outgoing="_SWS4aCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4bScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4bicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4bycoEeSLVrU2ifxtpw" name="ExpressionStatement@11ac6a51" incoming="_SWS4LicoEeSLVrU2ifxtpw" outgoing="_SWS4MCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4cCcoEeSLVrU2ifxtpw" target="_SWS4cScoEeSLVrU2ifxtpw" source="_SWS4dCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS4cScoEeSLVrU2ifxtpw" name="Fork(x)@207959f4" incoming="_SWS4cCcoEeSLVrU2ifxtpw" outgoing="_SWS4LycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4cicoEeSLVrU2ifxtpw" name="RightHandSide@7f00b2d3">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS4cycoEeSLVrU2ifxtpw" name="Value(0)">
                <result xmi:id="_SWS4dCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SWS4cCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4dScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4dicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS4dycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4eCcoEeSLVrU2ifxtpw" name="ExpressionStatement@83c577f" incoming="_SWS4MCcoEeSLVrU2ifxtpw" outgoing="_SWS4MScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4eScoEeSLVrU2ifxtpw" target="_SWS4eicoEeSLVrU2ifxtpw" source="_SWS4iCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS4eicoEeSLVrU2ifxtpw" name="Fork(z)@11985738" incoming="_SWS4eScoEeSLVrU2ifxtpw" outgoing="_SWS4NycoEeSLVrU2ifxtpw _SWS4QCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4eycoEeSLVrU2ifxtpw" name="RightHandSide@2886268e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4fCcoEeSLVrU2ifxtpw" target="_SWS4iycoEeSLVrU2ifxtpw" source="_SWS4gicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4fScoEeSLVrU2ifxtpw" target="_SWS4jCcoEeSLVrU2ifxtpw" source="_SWS4hScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS4ficoEeSLVrU2ifxtpw" name="Call(test4)" behavior="_SWS6GicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SWS4fycoEeSLVrU2ifxtpw" name="Call(test4).argument(x)" incoming="_SWS4LycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4gCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4gScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SWS4gicoEeSLVrU2ifxtpw" name="Call(test4).result(x)" outgoing="_SWS4fCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4gycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4hCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SWS4hScoEeSLVrU2ifxtpw" name="Call(test4).result(y)" outgoing="_SWS4fScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4hicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4hycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SWS4iCcoEeSLVrU2ifxtpw" name="Call(test4).result()" outgoing="_SWS4eScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4iScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4iicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SWS4iycoEeSLVrU2ifxtpw" name="Fork(x)@49fbc6e9" incoming="_SWS4fCcoEeSLVrU2ifxtpw" outgoing="_SWS4NScoEeSLVrU2ifxtpw _SWS4PicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SWS4jCcoEeSLVrU2ifxtpw" name="Fork(y)@30c010f1" incoming="_SWS4fScoEeSLVrU2ifxtpw" outgoing="_SWS4NicoEeSLVrU2ifxtpw _SWS4PycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4jScoEeSLVrU2ifxtpw" name="ExpressionStatement@38fde3f6" incoming="_SWS4MScoEeSLVrU2ifxtpw" outgoing="_SWS4OScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4jicoEeSLVrU2ifxtpw" target="_SWS4jycoEeSLVrU2ifxtpw" source="_SWS4kicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS4jycoEeSLVrU2ifxtpw" name="Fork(n)@755a0ed" incoming="_SWS4jicoEeSLVrU2ifxtpw" outgoing="_SWS4OCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4kCcoEeSLVrU2ifxtpw" name="RightHandSide@6b82b5e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS4kScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SWS4kicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SWS4jicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4kycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4lCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS4lScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4licoEeSLVrU2ifxtpw" name="ReturnStatement@5918aae8" incoming="_SWS4OScoEeSLVrU2ifxtpw" outgoing="_SWS4FCcoEeSLVrU2ifxtpw _SWS4OicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4lycoEeSLVrU2ifxtpw" target="_SWS4nicoEeSLVrU2ifxtpw" source="_SWS4uCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4mCcoEeSLVrU2ifxtpw" target="_SWS4oScoEeSLVrU2ifxtpw" source="_SWS4wCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4mScoEeSLVrU2ifxtpw" target="_SWS4pCcoEeSLVrU2ifxtpw" source="_SWS4yCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4micoEeSLVrU2ifxtpw" target="_SWS4pycoEeSLVrU2ifxtpw" source="_SWS40CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4mycoEeSLVrU2ifxtpw" target="_SWS4qicoEeSLVrU2ifxtpw" source="_SWS42CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4nCcoEeSLVrU2ifxtpw" target="_SWS4rScoEeSLVrU2ifxtpw" source="_SWS44CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4nScoEeSLVrU2ifxtpw" target="_SWS4sCcoEeSLVrU2ifxtpw" source="_SWS46CcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SWS4nicoEeSLVrU2ifxtpw" name="ReturnStatement@5918aae8.output" incoming="_SWS4lycoEeSLVrU2ifxtpw" outgoing="_SWS4FScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4nycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4oCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_SWS4oScoEeSLVrU2ifxtpw" name="ReturnStatement@5918aae8.output" incoming="_SWS4mCcoEeSLVrU2ifxtpw" outgoing="_SWS4FicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4oicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4oycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_SWS4pCcoEeSLVrU2ifxtpw" name="ReturnStatement@5918aae8.output" incoming="_SWS4mScoEeSLVrU2ifxtpw" outgoing="_SWS4FycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4pScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4picoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_SWS4pycoEeSLVrU2ifxtpw" name="ReturnStatement@5918aae8.output" incoming="_SWS4micoEeSLVrU2ifxtpw" outgoing="_SWS4GCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4qCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4qScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_SWS4qicoEeSLVrU2ifxtpw" name="ReturnStatement@5918aae8.output" incoming="_SWS4mycoEeSLVrU2ifxtpw" outgoing="_SWS4GScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4qycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4rCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_SWS4rScoEeSLVrU2ifxtpw" name="ReturnStatement@5918aae8.output" incoming="_SWS4nCcoEeSLVrU2ifxtpw" outgoing="_SWS4GicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4ricoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4rycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_SWS4sCcoEeSLVrU2ifxtpw" name="ReturnStatement@5918aae8.output" incoming="_SWS4nScoEeSLVrU2ifxtpw" outgoing="_SWS4GycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4sScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4sicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4sycoEeSLVrU2ifxtpw" name="Passthru(Fork(a)@66df5ef4)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4tCcoEeSLVrU2ifxtpw" target="_SWS4uCcoEeSLVrU2ifxtpw" source="_SWS4tScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS4tScoEeSLVrU2ifxtpw" name="Passthru(Fork(a)@66df5ef4).input" incoming="_SWS4MicoEeSLVrU2ifxtpw" outgoing="_SWS4tCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4ticoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4tycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS4uCcoEeSLVrU2ifxtpw" name="Passthru(Fork(a)@66df5ef4).output" incoming="_SWS4tCcoEeSLVrU2ifxtpw" outgoing="_SWS4lycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4uScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4uicoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4uycoEeSLVrU2ifxtpw" name="Passthru(Fork(b)@f22db52)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4vCcoEeSLVrU2ifxtpw" target="_SWS4wCcoEeSLVrU2ifxtpw" source="_SWS4vScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS4vScoEeSLVrU2ifxtpw" name="Passthru(Fork(b)@f22db52).input" incoming="_SWS4MycoEeSLVrU2ifxtpw" outgoing="_SWS4vCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4vicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4vycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS4wCcoEeSLVrU2ifxtpw" name="Passthru(Fork(b)@f22db52).output" incoming="_SWS4vCcoEeSLVrU2ifxtpw" outgoing="_SWS4mCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4wScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4wicoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4wycoEeSLVrU2ifxtpw" name="Passthru(Fork(c)@45970cbb)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4xCcoEeSLVrU2ifxtpw" target="_SWS4yCcoEeSLVrU2ifxtpw" source="_SWS4xScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS4xScoEeSLVrU2ifxtpw" name="Passthru(Fork(c)@45970cbb).input" incoming="_SWS4NCcoEeSLVrU2ifxtpw" outgoing="_SWS4xCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4xicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4xycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS4yCcoEeSLVrU2ifxtpw" name="Passthru(Fork(c)@45970cbb).output" incoming="_SWS4xCcoEeSLVrU2ifxtpw" outgoing="_SWS4mScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4yScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4yicoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS4yycoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@49fbc6e9)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4zCcoEeSLVrU2ifxtpw" target="_SWS40CcoEeSLVrU2ifxtpw" source="_SWS4zScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS4zScoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@49fbc6e9).input" incoming="_SWS4NScoEeSLVrU2ifxtpw" outgoing="_SWS4zCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS4zicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS4zycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS40CcoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@49fbc6e9).output" incoming="_SWS4zCcoEeSLVrU2ifxtpw" outgoing="_SWS4micoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS40ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS40icoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS40ycoEeSLVrU2ifxtpw" name="Passthru(Fork(y)@30c010f1)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS41CcoEeSLVrU2ifxtpw" target="_SWS42CcoEeSLVrU2ifxtpw" source="_SWS41ScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS41ScoEeSLVrU2ifxtpw" name="Passthru(Fork(y)@30c010f1).input" incoming="_SWS4NicoEeSLVrU2ifxtpw" outgoing="_SWS41CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS41icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS41ycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS42CcoEeSLVrU2ifxtpw" name="Passthru(Fork(y)@30c010f1).output" incoming="_SWS41CcoEeSLVrU2ifxtpw" outgoing="_SWS4mycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS42ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS42icoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS42ycoEeSLVrU2ifxtpw" name="Passthru(Fork(z)@11985738)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS43CcoEeSLVrU2ifxtpw" target="_SWS44CcoEeSLVrU2ifxtpw" source="_SWS43ScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS43ScoEeSLVrU2ifxtpw" name="Passthru(Fork(z)@11985738).input" incoming="_SWS4NycoEeSLVrU2ifxtpw" outgoing="_SWS43CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS43icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS43ycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS44CcoEeSLVrU2ifxtpw" name="Passthru(Fork(z)@11985738).output" incoming="_SWS43CcoEeSLVrU2ifxtpw" outgoing="_SWS4nCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS44ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS44icoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS44ycoEeSLVrU2ifxtpw" name="Passthru(Fork(n)@755a0ed)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS45CcoEeSLVrU2ifxtpw" target="_SWS46CcoEeSLVrU2ifxtpw" source="_SWS45ScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS45ScoEeSLVrU2ifxtpw" name="Passthru(Fork(n)@755a0ed).input" incoming="_SWS4OCcoEeSLVrU2ifxtpw" outgoing="_SWS45CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS45icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS45ycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS46CcoEeSLVrU2ifxtpw" name="Passthru(Fork(n)@755a0ed).output" incoming="_SWS45CcoEeSLVrU2ifxtpw" outgoing="_SWS4nScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS46ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS46icoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS46ycoEeSLVrU2ifxtpw" name="ExpressionStatement@56e6c4ff" incoming="_SWS4OicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS47CcoEeSLVrU2ifxtpw" target="_SWS47ScoEeSLVrU2ifxtpw" source="_SWS48CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS47ScoEeSLVrU2ifxtpw" name="Fork(n)@371dac13" incoming="_SWS47CcoEeSLVrU2ifxtpw" outgoing="_SWS4QScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS47icoEeSLVrU2ifxtpw" name="RightHandSide@7d0c2fa9">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS47ycoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_SWS48CcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SWS47CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS48ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS48icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS48ycoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS4IycoEeSLVrU2ifxtpw" name="Output(a)" incoming="_SWS4FScoEeSLVrU2ifxtpw _SWS4HCcoEeSLVrU2ifxtpw" parameter="_SWS3_ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS4JCcoEeSLVrU2ifxtpw" name="Output(b)" incoming="_SWS4FicoEeSLVrU2ifxtpw _SWS4HScoEeSLVrU2ifxtpw" parameter="_SWS4AicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS4JScoEeSLVrU2ifxtpw" name="Output(c)" incoming="_SWS4FycoEeSLVrU2ifxtpw _SWS4HicoEeSLVrU2ifxtpw" parameter="_SWS4BScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS4JicoEeSLVrU2ifxtpw" name="Output(x)" incoming="_SWS4GCcoEeSLVrU2ifxtpw _SWS4HycoEeSLVrU2ifxtpw" parameter="_SWS4CCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS4JycoEeSLVrU2ifxtpw" name="Output(y)" incoming="_SWS4GScoEeSLVrU2ifxtpw _SWS4ICcoEeSLVrU2ifxtpw" parameter="_SWS4CycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS4KCcoEeSLVrU2ifxtpw" name="Output(z)" incoming="_SWS4GicoEeSLVrU2ifxtpw _SWS4IScoEeSLVrU2ifxtpw" parameter="_SWS4DicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS4KScoEeSLVrU2ifxtpw" name="Output(n)" incoming="_SWS4GycoEeSLVrU2ifxtpw _SWS4IicoEeSLVrU2ifxtpw" parameter="_SWS4EScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SWS4KicoEeSLVrU2ifxtpw" name="Final" incoming="_SWS4FCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SWS49CcoEeSLVrU2ifxtpw" name="Statements_Return$method$1" specification="_SWS5iicoEeSLVrU2ifxtpw" node="_SWS4-ScoEeSLVrU2ifxtpw _SWS4-icoEeSLVrU2ifxtpw" group="_SWS4-icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SWS49ScoEeSLVrU2ifxtpw" name="" type="_SWSQoScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS49icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS49ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4-CcoEeSLVrU2ifxtpw" target="_SWS4-ScoEeSLVrU2ifxtpw" source="_SWS5CycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SWS4-icoEeSLVrU2ifxtpw" name="Body(Statements_Return$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4-ycoEeSLVrU2ifxtpw" target="_SWS5CycoEeSLVrU2ifxtpw" source="_SWS5CCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4_CcoEeSLVrU2ifxtpw" target="_SWS5DScoEeSLVrU2ifxtpw" source="_SWS5CycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS4_ScoEeSLVrU2ifxtpw" target="_SWS5BicoEeSLVrU2ifxtpw" source="_SWS5DCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4_icoEeSLVrU2ifxtpw" target="_SWS5EScoEeSLVrU2ifxtpw" source="_SWS5CycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS4_ycoEeSLVrU2ifxtpw" target="_SWS5GCcoEeSLVrU2ifxtpw" source="_SWS5FCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5ACcoEeSLVrU2ifxtpw" target="_SWS5JCcoEeSLVrU2ifxtpw" source="_SWS5GycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5AScoEeSLVrU2ifxtpw" target="_SWS5KicoEeSLVrU2ifxtpw" source="_SWS5HycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5AicoEeSLVrU2ifxtpw" target="_SWS5LicoEeSLVrU2ifxtpw" source="_SWS5LScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5AycoEeSLVrU2ifxtpw" target="_SWS5LicoEeSLVrU2ifxtpw" source="_SWS5JycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5BCcoEeSLVrU2ifxtpw" target="_SWS5DCcoEeSLVrU2ifxtpw" source="_SWS5LicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS5BScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5BicoEeSLVrU2ifxtpw" name="Body" incoming="_SWS4_ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SWS5BycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SWS5CCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SWS4-ycoEeSLVrU2ifxtpw" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5CScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5CicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SWS5CycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SWS4-ycoEeSLVrU2ifxtpw" outgoing="_SWS4-CcoEeSLVrU2ifxtpw _SWS4_CcoEeSLVrU2ifxtpw _SWS4_icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SWS5DCcoEeSLVrU2ifxtpw" name="Call(Statements_Return$initialization$1)" incoming="_SWS5BCcoEeSLVrU2ifxtpw" outgoing="_SWS4_ScoEeSLVrU2ifxtpw" operation="_SWS5cycoEeSLVrU2ifxtpw">
            <target xmi:id="_SWS5DScoEeSLVrU2ifxtpw" name="Call(Statements_Return$initialization$1).target" incoming="_SWS4_CcoEeSLVrU2ifxtpw" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5DicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5DycoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SWS5ECcoEeSLVrU2ifxtpw" name="Read(Statements_Return$initializationFlag$1)" structuralFeature="_SWSQpycoEeSLVrU2ifxtpw">
            <object xmi:id="_SWS5EScoEeSLVrU2ifxtpw" name="Read(Statements_Return$initializationFlag$1).object" incoming="_SWS4_icoEeSLVrU2ifxtpw" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5EicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5EycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SWS5FCcoEeSLVrU2ifxtpw" name="Read(Statements_Return$initializationFlag$1).result" outgoing="_SWS4_ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5FScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5FicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS5FycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SWS5GCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SWS4_ycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5GScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5GicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SWS5GycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SWS5ACcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5HCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5HScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS5HicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SWS5HycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SWS5AScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5ICcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5IScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SWS5IicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SWS5IycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SWS5JCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SWS5ACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5JScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5JicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SWS5JycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SWS5AycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5KCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5KScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SWS5KicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SWS5AScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5KycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5LCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SWS5LScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SWS5AicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SWS5LicoEeSLVrU2ifxtpw" name="Decision(Test(Statements_Return$initializationFlag$1))" incoming="_SWS5AicoEeSLVrU2ifxtpw _SWS5AycoEeSLVrU2ifxtpw" outgoing="_SWS5BCcoEeSLVrU2ifxtpw" decisionInputFlow="_SWS5AycoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS4-ScoEeSLVrU2ifxtpw" name="Return" incoming="_SWS4-CcoEeSLVrU2ifxtpw" parameter="_SWS49ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SWS5LycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SWS5jicoEeSLVrU2ifxtpw" node="_SWS5MCcoEeSLVrU2ifxtpw" group="_SWS5MCcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SWS5MCcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SWS5MScoEeSLVrU2ifxtpw" name="Statements_Return$initialization$1" specification="_SWS5cycoEeSLVrU2ifxtpw" node="_SWS5MicoEeSLVrU2ifxtpw" group="_SWS5MicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SWS5MicoEeSLVrU2ifxtpw" name="Body(Statements_Return$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5MycoEeSLVrU2ifxtpw" target="_SWS5QScoEeSLVrU2ifxtpw" source="_SWS5PicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5NCcoEeSLVrU2ifxtpw" target="_SWS5SycoEeSLVrU2ifxtpw" source="_SWS5QScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5NScoEeSLVrU2ifxtpw" target="_SWS5VScoEeSLVrU2ifxtpw" source="_SWS5QScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5NicoEeSLVrU2ifxtpw" target="_SWS5XCcoEeSLVrU2ifxtpw" source="_SWS5WCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5NycoEeSLVrU2ifxtpw" target="_SWS5aCcoEeSLVrU2ifxtpw" source="_SWS5XycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5OCcoEeSLVrU2ifxtpw" target="_SWS5bicoEeSLVrU2ifxtpw" source="_SWS5YycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5OScoEeSLVrU2ifxtpw" target="_SWS5cicoEeSLVrU2ifxtpw" source="_SWS5cScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5OicoEeSLVrU2ifxtpw" target="_SWS5cicoEeSLVrU2ifxtpw" source="_SWS5aycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5OycoEeSLVrU2ifxtpw" target="_SWS5QicoEeSLVrU2ifxtpw" source="_SWS5cicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS5PCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SWS5PScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SWS5PicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SWS5MycoEeSLVrU2ifxtpw" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5PycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5QCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SWS5QScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SWS5MycoEeSLVrU2ifxtpw" outgoing="_SWS5NCcoEeSLVrU2ifxtpw _SWS5NScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5QicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SWS5OycoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5QycoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5RCcoEeSLVrU2ifxtpw" target="_SWS5UScoEeSLVrU2ifxtpw" source="_SWS5RicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS5RScoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SWS5RicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SWS5RCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5RycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5SCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SWS5SScoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SWS5SicoEeSLVrU2ifxtpw" name="Write(Statements_Return$initializationFlag$1)" structuralFeature="_SWSQpycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SWS5SycoEeSLVrU2ifxtpw" name="Write(Statements_Return$initializationFlag$1).object" incoming="_SWS5NCcoEeSLVrU2ifxtpw" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5TCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5TScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SWS5TicoEeSLVrU2ifxtpw" name="Write(Statements_Return$initializationFlag$1).result" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5TycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5UCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_SWS5UScoEeSLVrU2ifxtpw" name="Write(Statements_Return$initializationFlag$1).value" incoming="_SWS5RCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5UicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5UycoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SWS5VCcoEeSLVrU2ifxtpw" name="Read(Statements_Return$initializationFlag$1)" structuralFeature="_SWSQpycoEeSLVrU2ifxtpw">
            <object xmi:id="_SWS5VScoEeSLVrU2ifxtpw" name="Read(Statements_Return$initializationFlag$1).object" incoming="_SWS5NScoEeSLVrU2ifxtpw" type="_SWSQoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5VicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5VycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SWS5WCcoEeSLVrU2ifxtpw" name="Read(Statements_Return$initializationFlag$1).result" outgoing="_SWS5NicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5WScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5WicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS5WycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SWS5XCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SWS5NicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5XScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5XicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SWS5XycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SWS5NycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5YCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5YScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS5YicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SWS5YycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SWS5OCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5ZCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5ZScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SWS5ZicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SWS5ZycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SWS5aCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SWS5NycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5aScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5aicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SWS5aycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SWS5OicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5bCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5bScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SWS5bicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SWS5OCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5bycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5cCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SWS5cScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SWS5OScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SWS5cicoEeSLVrU2ifxtpw" name="Decision(Test(Statements_Return$initializationFlag$1))" incoming="_SWS5OScoEeSLVrU2ifxtpw _SWS5OicoEeSLVrU2ifxtpw" outgoing="_SWS5OycoEeSLVrU2ifxtpw" decisionInputFlow="_SWS5OicoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SWS5cycoEeSLVrU2ifxtpw" name="Statements_Return$initialization$1" visibility="protected" method="_SWS5MScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SWS5dCcoEeSLVrU2ifxtpw" name="test" visibility="public" method="_SWS3_icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SWS5dScoEeSLVrU2ifxtpw" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5dicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5dycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS5eCcoEeSLVrU2ifxtpw" name="b" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5eScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5eicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS5eycoEeSLVrU2ifxtpw" name="c" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5fCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5fScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS5ficoEeSLVrU2ifxtpw" name="x" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5fycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5gCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS5gScoEeSLVrU2ifxtpw" name="y" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5gicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5gycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS5hCcoEeSLVrU2ifxtpw" name="z" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5hScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5hicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS5hycoEeSLVrU2ifxtpw" name="n" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5iCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5iScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SWS5iicoEeSLVrU2ifxtpw" name="Statements_Return" visibility="package" method="_SWS49CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SWS5iycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SWSQoScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5jCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5jScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SWS5jicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SWS5LycoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_SWS5jycoEeSLVrU2ifxtpw" name="test1" node="_SWS5lScoEeSLVrU2ifxtpw _SWS5licoEeSLVrU2ifxtpw _SWS5lycoEeSLVrU2ifxtpw" group="_SWS5lycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SWS5kCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5kScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5kicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5kycoEeSLVrU2ifxtpw" target="_SWS5licoEeSLVrU2ifxtpw" source="_SWS5oycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5lCcoEeSLVrU2ifxtpw" target="_SWS5lScoEeSLVrU2ifxtpw" source="_SWS5pScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SWS5lycoEeSLVrU2ifxtpw" name="Body(test1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5mCcoEeSLVrU2ifxtpw" target="_SWS5qicoEeSLVrU2ifxtpw" source="_SWS5nCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5mScoEeSLVrU2ifxtpw" target="_SWS5oycoEeSLVrU2ifxtpw" source="_SWS5micoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5micoEeSLVrU2ifxtpw" name="ExpressionStatement@3d4f3fd6" outgoing="_SWS5mScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5mycoEeSLVrU2ifxtpw" target="_SWS5nCcoEeSLVrU2ifxtpw" source="_SWS5nycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS5nCcoEeSLVrU2ifxtpw" name="Fork(item)@79804ed1" incoming="_SWS5mycoEeSLVrU2ifxtpw" outgoing="_SWS5mCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5nScoEeSLVrU2ifxtpw" name="RightHandSide@56b6b9a8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS5nicoEeSLVrU2ifxtpw" name="Value(4)">
                <result xmi:id="_SWS5nycoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_SWS5mycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5oCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5oScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS5oicoEeSLVrU2ifxtpw" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5oycoEeSLVrU2ifxtpw" name="ReturnStatement@7edc2035" incoming="_SWS5mScoEeSLVrU2ifxtpw" outgoing="_SWS5kycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5pCcoEeSLVrU2ifxtpw" target="_SWS5pScoEeSLVrU2ifxtpw" source="_SWS5rScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SWS5pScoEeSLVrU2ifxtpw" name="ReturnStatement@7edc2035.output" incoming="_SWS5pCcoEeSLVrU2ifxtpw" outgoing="_SWS5lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5picoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5pycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5qCcoEeSLVrU2ifxtpw" name="Passthru(Fork(item)@79804ed1)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5qScoEeSLVrU2ifxtpw" target="_SWS5rScoEeSLVrU2ifxtpw" source="_SWS5qicoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS5qicoEeSLVrU2ifxtpw" name="Passthru(Fork(item)@79804ed1).input" incoming="_SWS5mCcoEeSLVrU2ifxtpw" outgoing="_SWS5qScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5qycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5rCcoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS5rScoEeSLVrU2ifxtpw" name="Passthru(Fork(item)@79804ed1).output" incoming="_SWS5qScoEeSLVrU2ifxtpw" outgoing="_SWS5pCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5ricoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5rycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS5lScoEeSLVrU2ifxtpw" name="Return" incoming="_SWS5lCcoEeSLVrU2ifxtpw" parameter="_SWS5kCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SWS5licoEeSLVrU2ifxtpw" name="Final" incoming="_SWS5kycoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_SWS5sCcoEeSLVrU2ifxtpw" name="test2" node="_SWS5ticoEeSLVrU2ifxtpw _SWS5tycoEeSLVrU2ifxtpw _SWS5uCcoEeSLVrU2ifxtpw" group="_SWS5uCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SWS5sScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5sicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5sycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5tCcoEeSLVrU2ifxtpw" target="_SWS5tycoEeSLVrU2ifxtpw" source="_SWS55ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5tScoEeSLVrU2ifxtpw" target="_SWS5ticoEeSLVrU2ifxtpw" source="_SWS56CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SWS5uCcoEeSLVrU2ifxtpw" name="Body(test2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5uScoEeSLVrU2ifxtpw" target="_SWS5xicoEeSLVrU2ifxtpw" source="_SWS5vScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5uicoEeSLVrU2ifxtpw" target="_SWS57CcoEeSLVrU2ifxtpw" source="_SWS5yCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5uycoEeSLVrU2ifxtpw" target="_SWS59ScoEeSLVrU2ifxtpw" source="_SWS5vycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5vCcoEeSLVrU2ifxtpw" target="_SWS55ScoEeSLVrU2ifxtpw" source="_SWS5xicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5vScoEeSLVrU2ifxtpw" name="ExpressionStatement@1d59c373" outgoing="_SWS5uScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5vicoEeSLVrU2ifxtpw" target="_SWS5vycoEeSLVrU2ifxtpw" source="_SWS5wicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS5vycoEeSLVrU2ifxtpw" name="Fork(index)@16f28bac" incoming="_SWS5vicoEeSLVrU2ifxtpw" outgoing="_SWS5uycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5wCcoEeSLVrU2ifxtpw" name="RightHandSide@dafd4f9">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS5wScoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_SWS5wicoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SWS5vicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5wycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5xCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS5xScoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5xicoEeSLVrU2ifxtpw" name="ExpressionStatement@137bdf85" incoming="_SWS5uScoEeSLVrU2ifxtpw" outgoing="_SWS5vCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5xycoEeSLVrU2ifxtpw" target="_SWS5yCcoEeSLVrU2ifxtpw" source="_SWS50CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS5yCcoEeSLVrU2ifxtpw" name="Fork(list)@6ee120c3" incoming="_SWS5xycoEeSLVrU2ifxtpw" outgoing="_SWS5uicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5yScoEeSLVrU2ifxtpw" name="RightHandSide@298f9ec1">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS5yicoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@298f9ec1">
                <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5yycoEeSLVrU2ifxtpw" target="_SWS52ScoEeSLVrU2ifxtpw" source="_SWS50ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5zCcoEeSLVrU2ifxtpw" target="_SWS53ycoEeSLVrU2ifxtpw" source="_SWS52ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5zScoEeSLVrU2ifxtpw" target="_SWS50CcoEeSLVrU2ifxtpw" source="_SWS51ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5zicoEeSLVrU2ifxtpw" target="_SWS50CcoEeSLVrU2ifxtpw" source="_SWS52ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5zycoEeSLVrU2ifxtpw" target="_SWS50CcoEeSLVrU2ifxtpw" source="_SWS54ScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SWS50CcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@298f9ec1.output" incoming="_SWS5zScoEeSLVrU2ifxtpw _SWS5zicoEeSLVrU2ifxtpw _SWS5zycoEeSLVrU2ifxtpw" outgoing="_SWS5xycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS50ScoEeSLVrU2ifxtpw" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS50icoEeSLVrU2ifxtpw" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS50ycoEeSLVrU2ifxtpw" name="SequenceExpressionList@28005e9#1" outgoing="_SWS5yycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS51CcoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_SWS51ScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SWS5zScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS51icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS51ycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SWS52CcoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS52ScoEeSLVrU2ifxtpw" name="SequenceExpressionList@28005e9#2" incoming="_SWS5yycoEeSLVrU2ifxtpw" outgoing="_SWS5zCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS52icoEeSLVrU2ifxtpw" name="Value(2)">
                    <result xmi:id="_SWS52ycoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SWS5zicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS53CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS53ScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SWS53icoEeSLVrU2ifxtpw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS53ycoEeSLVrU2ifxtpw" name="SequenceExpressionList@28005e9#3" incoming="_SWS5zCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS54CcoEeSLVrU2ifxtpw" name="Value(3)">
                    <result xmi:id="_SWS54ScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_SWS5zycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS54icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS54ycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SWS55CcoEeSLVrU2ifxtpw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS55ScoEeSLVrU2ifxtpw" name="ReturnStatement@49325bb8" incoming="_SWS5vCcoEeSLVrU2ifxtpw" outgoing="_SWS5tCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS55icoEeSLVrU2ifxtpw" target="_SWS57ycoEeSLVrU2ifxtpw" source="_SWS59ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS55ycoEeSLVrU2ifxtpw" target="_SWS56CcoEeSLVrU2ifxtpw" source="_SWS58icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SWS56CcoEeSLVrU2ifxtpw" name="ReturnStatement@49325bb8.output" incoming="_SWS55ycoEeSLVrU2ifxtpw" outgoing="_SWS5tScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS56ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS56icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS56ycoEeSLVrU2ifxtpw" name="Call(At)">
              <argument xmi:id="_SWS57CcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SWS5uicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS57ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS57icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SWS57ycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SWS55icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS58CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS58ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SWS58icoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SWS55ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS58ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS59CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS59ScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SWS5uycoEeSLVrU2ifxtpw" outgoing="_SWS55icoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS5ticoEeSLVrU2ifxtpw" name="Return" incoming="_SWS5tScoEeSLVrU2ifxtpw" parameter="_SWS5sScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SWS5tycoEeSLVrU2ifxtpw" name="Final" incoming="_SWS5tCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_SWS59icoEeSLVrU2ifxtpw" name="test3" node="_SWS5_CcoEeSLVrU2ifxtpw _SWS5_ScoEeSLVrU2ifxtpw _SWS5_icoEeSLVrU2ifxtpw" group="_SWS5_icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SWS59ycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS5-CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS5-ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SWS5-icoEeSLVrU2ifxtpw" target="_SWS5_ScoEeSLVrU2ifxtpw" source="_SWS6CycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5-ycoEeSLVrU2ifxtpw" target="_SWS5_CcoEeSLVrU2ifxtpw" source="_SWS6DScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SWS5_icoEeSLVrU2ifxtpw" name="Body(test3)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS5_ycoEeSLVrU2ifxtpw" target="_SWS6EScoEeSLVrU2ifxtpw" source="_SWS6BCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6ACcoEeSLVrU2ifxtpw" target="_SWS6FCcoEeSLVrU2ifxtpw" source="_SWS6BCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS6AScoEeSLVrU2ifxtpw" target="_SWS6CycoEeSLVrU2ifxtpw" source="_SWS6AicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6AicoEeSLVrU2ifxtpw" name="ExpressionStatement@bdde1f8" outgoing="_SWS6AScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6AycoEeSLVrU2ifxtpw" target="_SWS6BCcoEeSLVrU2ifxtpw" source="_SWS6BycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS6BCcoEeSLVrU2ifxtpw" name="Fork(s)@49ff83ef" incoming="_SWS6AycoEeSLVrU2ifxtpw" outgoing="_SWS5_ycoEeSLVrU2ifxtpw _SWS6ACcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6BScoEeSLVrU2ifxtpw" name="RightHandSide@262ee5dd">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS6BicoEeSLVrU2ifxtpw" name="Value(&quot;x&quot;)">
                <result xmi:id="_SWS6BycoEeSLVrU2ifxtpw" name="Value(&quot;x&quot;).result" outgoing="_SWS6AycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6CCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6CScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWS6CicoEeSLVrU2ifxtpw" value="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6CycoEeSLVrU2ifxtpw" name="ReturnStatement@31c67409" incoming="_SWS6AScoEeSLVrU2ifxtpw" outgoing="_SWS5-icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6DCcoEeSLVrU2ifxtpw" target="_SWS6DScoEeSLVrU2ifxtpw" source="_SWS6FycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SWS6DScoEeSLVrU2ifxtpw" name="ReturnStatement@31c67409.output" incoming="_SWS6DCcoEeSLVrU2ifxtpw" outgoing="_SWS5-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6DicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6DycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS6ECcoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_SWS6EScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SWS5_ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6EicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6EycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SWS6FCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SWS6ACcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6FScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6FicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SWS6FycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SWS6DCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6GCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6GScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS5_CcoEeSLVrU2ifxtpw" name="Return" incoming="_SWS5-ycoEeSLVrU2ifxtpw" parameter="_SWS59ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SWS5_ScoEeSLVrU2ifxtpw" name="Final" incoming="_SWS5-icoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_SWS6GicoEeSLVrU2ifxtpw" name="test4" node="_SWS6LicoEeSLVrU2ifxtpw _SWS6LycoEeSLVrU2ifxtpw _SWS6MCcoEeSLVrU2ifxtpw _SWS6MScoEeSLVrU2ifxtpw _SWS6MicoEeSLVrU2ifxtpw _SWS6MycoEeSLVrU2ifxtpw _SWS6NCcoEeSLVrU2ifxtpw" group="_SWS6NCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SWS6GycoEeSLVrU2ifxtpw" name="x" visibility="package" direction="inout">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6HCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6HScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS6HicoEeSLVrU2ifxtpw" name="y" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6HycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6ICcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SWS6IScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6IicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6IycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6JCcoEeSLVrU2ifxtpw" target="_SWS6LycoEeSLVrU2ifxtpw" source="_SWS6LicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6JScoEeSLVrU2ifxtpw" target="_SWS6VCcoEeSLVrU2ifxtpw" source="_SWS6LycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6JicoEeSLVrU2ifxtpw" target="_SWS6aCcoEeSLVrU2ifxtpw" source="_SWS6LycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SWS6JycoEeSLVrU2ifxtpw" target="_SWS6MycoEeSLVrU2ifxtpw" source="_SWS6cScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6KCcoEeSLVrU2ifxtpw" target="_SWS6MicoEeSLVrU2ifxtpw" source="_SWS6dScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6KScoEeSLVrU2ifxtpw" target="_SWS6MCcoEeSLVrU2ifxtpw" source="_SWS6eCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6KicoEeSLVrU2ifxtpw" target="_SWS6MScoEeSLVrU2ifxtpw" source="_SWS6eycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6KycoEeSLVrU2ifxtpw" target="_SWS6oicoEeSLVrU2ifxtpw" source="_SWS6LycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6LCcoEeSLVrU2ifxtpw" target="_SWS6MCcoEeSLVrU2ifxtpw" source="_SWS6OicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6LScoEeSLVrU2ifxtpw" target="_SWS6MScoEeSLVrU2ifxtpw" source="_SWS6PScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SWS6NCcoEeSLVrU2ifxtpw" name="Body(test4)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6NScoEeSLVrU2ifxtpw" target="_SWS6rScoEeSLVrU2ifxtpw" source="_SWS6qicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6NicoEeSLVrU2ifxtpw" target="_SWS6jScoEeSLVrU2ifxtpw" source="_SWS6QicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS6NycoEeSLVrU2ifxtpw" target="_SWS6SScoEeSLVrU2ifxtpw" source="_SWS6QCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6OCcoEeSLVrU2ifxtpw" target="_SWS6OicoEeSLVrU2ifxtpw" source="_SWS6rScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6OScoEeSLVrU2ifxtpw" target="_SWS6PScoEeSLVrU2ifxtpw" source="_SWS6QicoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SWS6OicoEeSLVrU2ifxtpw" name="Output(x)" incoming="_SWS6OCcoEeSLVrU2ifxtpw" outgoing="_SWS6LCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6OycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6PCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SWS6PScoEeSLVrU2ifxtpw" name="Output(y)" incoming="_SWS6OScoEeSLVrU2ifxtpw" outgoing="_SWS6LScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6PicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6PycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6QCcoEeSLVrU2ifxtpw" name="ExpressionStatement@78093252" outgoing="_SWS6NycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6QScoEeSLVrU2ifxtpw" target="_SWS6QicoEeSLVrU2ifxtpw" source="_SWS6RScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS6QicoEeSLVrU2ifxtpw" name="Fork(y)@3149adfc" incoming="_SWS6QScoEeSLVrU2ifxtpw" outgoing="_SWS6NicoEeSLVrU2ifxtpw _SWS6OScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6QycoEeSLVrU2ifxtpw" name="RightHandSide@5c3d94ab">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS6RCcoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_SWS6RScoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SWS6QScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6RicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6RycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS6SCcoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_SWS6SScoEeSLVrU2ifxtpw" name="IfStatement@6e6b46a1" incoming="_SWS6NycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6SicoEeSLVrU2ifxtpw" target="_SWS6WicoEeSLVrU2ifxtpw" source="_SWS6TycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6SycoEeSLVrU2ifxtpw" target="_SWS6hScoEeSLVrU2ifxtpw" source="_SWS6XycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWS6TCcoEeSLVrU2ifxtpw" target="_SWS6cScoEeSLVrU2ifxtpw" source="_SWS6XScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6TScoEeSLVrU2ifxtpw" target="_SWS6lScoEeSLVrU2ifxtpw" source="_SWS6XycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS6TicoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SWS6TycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SWS6SicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6UCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6UScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SWS6UicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SWS6UycoEeSLVrU2ifxtpw" name="Test(==)">
              <first xmi:id="_SWS6VCcoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SWS6JScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6VScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6VicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SWS6VycoEeSLVrU2ifxtpw" name="Test(==).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6WCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6WScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SWS6WicoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SWS6SicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6WycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6XCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6XScoEeSLVrU2ifxtpw" name="ExpressionStatement@19642d05" outgoing="_SWS6TCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6XicoEeSLVrU2ifxtpw" target="_SWS6XycoEeSLVrU2ifxtpw" source="_SWS6bicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SWS6XycoEeSLVrU2ifxtpw" name="Fork(x)@2fefbef6" incoming="_SWS6XicoEeSLVrU2ifxtpw" outgoing="_SWS6SycoEeSLVrU2ifxtpw _SWS6TScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6YCcoEeSLVrU2ifxtpw" name="RightHandSide@24e22110">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6YScoEeSLVrU2ifxtpw" target="_SWS6aycoEeSLVrU2ifxtpw" source="_SWS6YycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS6YicoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SWS6YycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SWS6YScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6ZCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6ZScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SWS6ZicoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS6ZycoEeSLVrU2ifxtpw" name="Call(+)">
                  <argument xmi:id="_SWS6aCcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SWS6JicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6aScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6aicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SWS6aycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SWS6YScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6bCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6bScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SWS6bicoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_SWS6XicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6bycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6cCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6cScoEeSLVrU2ifxtpw" name="ReturnStatement@142ef90b" incoming="_SWS6TCcoEeSLVrU2ifxtpw" outgoing="_SWS6JycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6cicoEeSLVrU2ifxtpw" target="_SWS6dScoEeSLVrU2ifxtpw" source="_SWS6fycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6cycoEeSLVrU2ifxtpw" target="_SWS6eCcoEeSLVrU2ifxtpw" source="_SWS6iCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6dCcoEeSLVrU2ifxtpw" target="_SWS6eycoEeSLVrU2ifxtpw" source="_SWS6kCcoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_SWS6dScoEeSLVrU2ifxtpw" name="ReturnStatement@142ef90b.output" incoming="_SWS6cicoEeSLVrU2ifxtpw" outgoing="_SWS6KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6dicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6dycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_SWS6eCcoEeSLVrU2ifxtpw" name="ReturnStatement@142ef90b.output" incoming="_SWS6cycoEeSLVrU2ifxtpw" outgoing="_SWS6KScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6eScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6eicoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_SWS6eycoEeSLVrU2ifxtpw" name="ReturnStatement@142ef90b.output" incoming="_SWS6dCcoEeSLVrU2ifxtpw" outgoing="_SWS6KicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6fCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6fScoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS6ficoEeSLVrU2ifxtpw" name="Value(3)">
                <result xmi:id="_SWS6fycoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_SWS6cicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6gCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6gScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS6gicoEeSLVrU2ifxtpw" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6gycoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@2fefbef6)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6hCcoEeSLVrU2ifxtpw" target="_SWS6iCcoEeSLVrU2ifxtpw" source="_SWS6hScoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SWS6hScoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@2fefbef6).input" incoming="_SWS6SycoEeSLVrU2ifxtpw" outgoing="_SWS6hCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6hicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6hycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SWS6iCcoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@2fefbef6).output" incoming="_SWS6hCcoEeSLVrU2ifxtpw" outgoing="_SWS6cycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6iScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6iicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6iycoEeSLVrU2ifxtpw" name="Passthru(Fork(y)@3149adfc)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6jCcoEeSLVrU2ifxtpw" target="_SWS6kCcoEeSLVrU2ifxtpw" source="_SWS6jScoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SWS6jScoEeSLVrU2ifxtpw" name="Passthru(Fork(y)@3149adfc).input" incoming="_SWS6NicoEeSLVrU2ifxtpw" outgoing="_SWS6jCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6jicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6jycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SWS6kCcoEeSLVrU2ifxtpw" name="Passthru(Fork(y)@3149adfc).output" incoming="_SWS6jCcoEeSLVrU2ifxtpw" outgoing="_SWS6dCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6kScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6kicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6kycoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@2fefbef6)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6lCcoEeSLVrU2ifxtpw" target="_SWS6mCcoEeSLVrU2ifxtpw" source="_SWS6lScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS6lScoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@2fefbef6).input" incoming="_SWS6TScoEeSLVrU2ifxtpw" outgoing="_SWS6lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6licoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6lycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS6mCcoEeSLVrU2ifxtpw" name="Passthru(Fork(x)@2fefbef6).output" incoming="_SWS6lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6mScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6micoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS6mycoEeSLVrU2ifxtpw" name="Value(true)">
              <result xmi:id="_SWS6nCcoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6nScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6nicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SWS6nycoEeSLVrU2ifxtpw" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS6oCcoEeSLVrU2ifxtpw" name="Passthru(Fork(x))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6oScoEeSLVrU2ifxtpw" target="_SWS6pScoEeSLVrU2ifxtpw" source="_SWS6oicoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SWS6oicoEeSLVrU2ifxtpw" name="Passthru(Fork(x)).input" incoming="_SWS6KycoEeSLVrU2ifxtpw" outgoing="_SWS6oScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6oycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6pCcoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SWS6pScoEeSLVrU2ifxtpw" name="Passthru(Fork(x)).output" incoming="_SWS6oScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6picoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6pycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_SWS6qCcoEeSLVrU2ifxtpw" body="_SWS6XScoEeSLVrU2ifxtpw _SWS6cScoEeSLVrU2ifxtpw _SWS6kycoEeSLVrU2ifxtpw" bodyOutput="_SWS6mCcoEeSLVrU2ifxtpw" decider="_SWS6VycoEeSLVrU2ifxtpw" successorClause="_SWS6qScoEeSLVrU2ifxtpw" test="_SWS6TicoEeSLVrU2ifxtpw _SWS6UycoEeSLVrU2ifxtpw"/>
            <clause xmi:id="_SWS6qScoEeSLVrU2ifxtpw" body="_SWS6oCcoEeSLVrU2ifxtpw" bodyOutput="_SWS6pScoEeSLVrU2ifxtpw" decider="_SWS6nCcoEeSLVrU2ifxtpw" predecessorClause="_SWS6qCcoEeSLVrU2ifxtpw" test="_SWS6mycoEeSLVrU2ifxtpw"/>
            <result xmi:id="_SWS6qicoEeSLVrU2ifxtpw" name="IfStatement@6e6b46a1.result(x)" outgoing="_SWS6NScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6qycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6rCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SWS6rScoEeSLVrU2ifxtpw" name="Fork(x)" incoming="_SWS6NScoEeSLVrU2ifxtpw" outgoing="_SWS6OCcoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS6LicoEeSLVrU2ifxtpw" name="Input(x)" outgoing="_SWS6JCcoEeSLVrU2ifxtpw" parameter="_SWS6GycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SWS6LycoEeSLVrU2ifxtpw" name="Fork(x)" incoming="_SWS6JCcoEeSLVrU2ifxtpw" outgoing="_SWS6JScoEeSLVrU2ifxtpw _SWS6JicoEeSLVrU2ifxtpw _SWS6KycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS6MCcoEeSLVrU2ifxtpw" name="Output(x)" incoming="_SWS6KScoEeSLVrU2ifxtpw _SWS6LCcoEeSLVrU2ifxtpw" parameter="_SWS6GycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS6MScoEeSLVrU2ifxtpw" name="Output(y)" incoming="_SWS6KicoEeSLVrU2ifxtpw _SWS6LScoEeSLVrU2ifxtpw" parameter="_SWS6HicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS6MicoEeSLVrU2ifxtpw" name="Return" incoming="_SWS6KCcoEeSLVrU2ifxtpw" parameter="_SWS6IScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SWS6MycoEeSLVrU2ifxtpw" name="Final" incoming="_SWS6JycoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SWS6ricoEeSLVrU2ifxtpw" name="AssertEqual" node="_SWS6xycoEeSLVrU2ifxtpw _SWS6yCcoEeSLVrU2ifxtpw _SWS6yScoEeSLVrU2ifxtpw _SWS6yicoEeSLVrU2ifxtpw _SWS6yycoEeSLVrU2ifxtpw _SWS6zCcoEeSLVrU2ifxtpw _SWS6zScoEeSLVrU2ifxtpw" group="_SWS6zScoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SWS6rycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SWS6sCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SWS6sScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SWS6sicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SWS6sycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SWS6tCcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6tScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6ticoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SWS6tycoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6uCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6uScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SWS6uicoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6uycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6vCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6vScoEeSLVrU2ifxtpw" target="_SWS6yCcoEeSLVrU2ifxtpw" source="_SWS6xycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6vicoEeSLVrU2ifxtpw" target="_SWS6yicoEeSLVrU2ifxtpw" source="_SWS6yScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6vycoEeSLVrU2ifxtpw" target="_SWS6zCcoEeSLVrU2ifxtpw" source="_SWS6yycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6wCcoEeSLVrU2ifxtpw" target="_SWS68icoEeSLVrU2ifxtpw" source="_SWS6yicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6wScoEeSLVrU2ifxtpw" target="_SWS6-icoEeSLVrU2ifxtpw" source="_SWS6zCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6wicoEeSLVrU2ifxtpw" target="_SWS7MScoEeSLVrU2ifxtpw" source="_SWS6yCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6wycoEeSLVrU2ifxtpw" target="_SWS7VycoEeSLVrU2ifxtpw" source="_SWS6zCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6xCcoEeSLVrU2ifxtpw" target="_SWS7dScoEeSLVrU2ifxtpw" source="_SWS6zCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6xScoEeSLVrU2ifxtpw" target="_SWS7mycoEeSLVrU2ifxtpw" source="_SWS6zCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6xicoEeSLVrU2ifxtpw" target="_SWS7uycoEeSLVrU2ifxtpw" source="_SWS6zCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SWS6zScoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SWS6zicoEeSLVrU2ifxtpw" name="IfStatement@5f3b5381">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS6zycoEeSLVrU2ifxtpw" target="_SWS66ScoEeSLVrU2ifxtpw" source="_SWS68icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS60CcoEeSLVrU2ifxtpw" target="_SWS69CcoEeSLVrU2ifxtpw" source="_SWS68icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS60ScoEeSLVrU2ifxtpw" target="_SWS67ycoEeSLVrU2ifxtpw" source="_SWS6-icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS60icoEeSLVrU2ifxtpw" target="_SWS6_CcoEeSLVrU2ifxtpw" source="_SWS6-icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS60ycoEeSLVrU2ifxtpw" target="_SWS7AycoEeSLVrU2ifxtpw" source="_SWS69ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS61CcoEeSLVrU2ifxtpw" target="_SWS7BCcoEeSLVrU2ifxtpw" source="_SWS6_ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS61ScoEeSLVrU2ifxtpw" target="_SWS7BicoEeSLVrU2ifxtpw" source="_SWS7AycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS61icoEeSLVrU2ifxtpw" target="_SWS7DScoEeSLVrU2ifxtpw" source="_SWS7BCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS61ycoEeSLVrU2ifxtpw" target="_SWS7EycoEeSLVrU2ifxtpw" source="_SWS7BCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS62CcoEeSLVrU2ifxtpw" target="_SWS66CcoEeSLVrU2ifxtpw" source="_SWS7EycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS62ScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS62icoEeSLVrU2ifxtpw" target="_SWS7BScoEeSLVrU2ifxtpw" source="_SWS7EycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS62ycoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS63CcoEeSLVrU2ifxtpw" target="_SWS7FCcoEeSLVrU2ifxtpw" source="_SWS7AicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS63ScoEeSLVrU2ifxtpw" target="_SWS7FCcoEeSLVrU2ifxtpw" source="_SWS7AycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS63icoEeSLVrU2ifxtpw" target="_SWS7EycoEeSLVrU2ifxtpw" source="_SWS7FCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS63ycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS64CcoEeSLVrU2ifxtpw" target="_SWS7DCcoEeSLVrU2ifxtpw" source="_SWS7FCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS64ScoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS64icoEeSLVrU2ifxtpw" target="_SWS7FScoEeSLVrU2ifxtpw" source="_SWS67CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS64ycoEeSLVrU2ifxtpw" target="_SWS7FScoEeSLVrU2ifxtpw" source="_SWS7CScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS65CcoEeSLVrU2ifxtpw" target="_SWS7FScoEeSLVrU2ifxtpw" source="_SWS7ECcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS65ScoEeSLVrU2ifxtpw" target="_SWS7FycoEeSLVrU2ifxtpw" source="_SWS7FScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS65icoEeSLVrU2ifxtpw" target="_SWS7RicoEeSLVrU2ifxtpw" source="_SWS7HScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS65ycoEeSLVrU2ifxtpw" target="_SWS7wicoEeSLVrU2ifxtpw" source="_SWS7RicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SWS66CcoEeSLVrU2ifxtpw" name="Test(==)" incoming="_SWS62CcoEeSLVrU2ifxtpw">
            <first xmi:id="_SWS66ScoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SWS6zycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS66icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS66ycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SWS67CcoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SWS64icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS67ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS67icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SWS67ycoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SWS60ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS68CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS68ScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SWS68icoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_SWS6wCcoEeSLVrU2ifxtpw" outgoing="_SWS6zycoEeSLVrU2ifxtpw _SWS60CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS68ycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SWS69CcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SWS60CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS69ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS69icoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SWS69ycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SWS60ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6-CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6-ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SWS6-icoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_SWS6wScoEeSLVrU2ifxtpw" outgoing="_SWS60ScoEeSLVrU2ifxtpw _SWS60icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS6-ycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SWS6_CcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SWS60icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS6_ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS6_icoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SWS6_ycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SWS61CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7ACcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7AScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SWS7AicoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_SWS63CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SWS7AycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SWS60ycoEeSLVrU2ifxtpw" outgoing="_SWS61ScoEeSLVrU2ifxtpw _SWS63ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SWS7BCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SWS61CcoEeSLVrU2ifxtpw" outgoing="_SWS61icoEeSLVrU2ifxtpw _SWS61ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7BScoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_SWS62icoEeSLVrU2ifxtpw">
            <argument xmi:id="_SWS7BicoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SWS61ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7BycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7CCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SWS7CScoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_SWS64ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7CicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7CycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7DCcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_SWS64CcoEeSLVrU2ifxtpw">
            <argument xmi:id="_SWS7DScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SWS61icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7DicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7DycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SWS7ECcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_SWS65CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7EScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7EicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_SWS7EycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SWS61ycoEeSLVrU2ifxtpw _SWS63icoEeSLVrU2ifxtpw" outgoing="_SWS62CcoEeSLVrU2ifxtpw _SWS62icoEeSLVrU2ifxtpw" decisionInputFlow="_SWS61ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SWS7FCcoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SWS63CcoEeSLVrU2ifxtpw _SWS63ScoEeSLVrU2ifxtpw" outgoing="_SWS63icoEeSLVrU2ifxtpw _SWS64CcoEeSLVrU2ifxtpw" decisionInputFlow="_SWS63ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SWS7FScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_SWS64icoEeSLVrU2ifxtpw _SWS64ycoEeSLVrU2ifxtpw _SWS65CcoEeSLVrU2ifxtpw" outgoing="_SWS65ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7FicoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_SWS7FycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SWS65ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7GCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7GScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SWS7GicoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7GycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7HCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7HScoEeSLVrU2ifxtpw" name="ExpressionStatement@6a75f149" outgoing="_SWS65icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7HicoEeSLVrU2ifxtpw" target="_SWS7IScoEeSLVrU2ifxtpw" source="_SWS7QycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7HycoEeSLVrU2ifxtpw" target="_SWS7ICcoEeSLVrU2ifxtpw" source="_SWS7JCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7ICcoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SWS7HycoEeSLVrU2ifxtpw" behavior="_SWS72ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWS7IScoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SWS7HicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7IicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7IycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7JCcoEeSLVrU2ifxtpw" name="Tuple@60999348" outgoing="_SWS7HycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7JScoEeSLVrU2ifxtpw" target="_SWS7LicoEeSLVrU2ifxtpw" source="_SWS7KScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7JicoEeSLVrU2ifxtpw" target="_SWS7PScoEeSLVrU2ifxtpw" source="_SWS7NCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7JycoEeSLVrU2ifxtpw" target="_SWS7QCcoEeSLVrU2ifxtpw" source="_SWS7OCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS7KCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SWS7KScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_SWS7JScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7KicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7KycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWS7LCcoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7LScoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SWS7LicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SWS7JScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7LycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7MCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SWS7MScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SWS6wicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7MicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7MycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SWS7NCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SWS7JicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7NScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7NicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS7NycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_SWS7OCcoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_SWS7JycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7OScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7OicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWS7OycoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7PCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SWS7PScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SWS7JicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7PicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7PycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SWS7QCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SWS7JycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7QScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7QicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SWS7QycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SWS7HicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7RCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7RScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7RicoEeSLVrU2ifxtpw" name="ExpressionStatement@2a8fb928" incoming="_SWS65icoEeSLVrU2ifxtpw" outgoing="_SWS65ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7RycoEeSLVrU2ifxtpw" target="_SWS7SicoEeSLVrU2ifxtpw" source="_SWS7wScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7SCcoEeSLVrU2ifxtpw" target="_SWS7SScoEeSLVrU2ifxtpw" source="_SWS7TScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7SScoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SWS7SCcoEeSLVrU2ifxtpw" behavior="_SWS72ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWS7SicoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SWS7RycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7SycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7TCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7TScoEeSLVrU2ifxtpw" name="Tuple@32c8f4be" outgoing="_SWS7SCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7TicoEeSLVrU2ifxtpw" target="_SWS7wCcoEeSLVrU2ifxtpw" source="_SWS7vycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7TycoEeSLVrU2ifxtpw" target="_SWS7wCcoEeSLVrU2ifxtpw" source="_SWS7WicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7UCcoEeSLVrU2ifxtpw" target="_SWS7XScoEeSLVrU2ifxtpw" source="_SWS7wCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS7UScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7UicoEeSLVrU2ifxtpw" target="_SWS7ZycoEeSLVrU2ifxtpw" source="_SWS7wCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS7UycoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7VCcoEeSLVrU2ifxtpw" target="_SWS7wScoEeSLVrU2ifxtpw" source="_SWS7XycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7VScoEeSLVrU2ifxtpw" target="_SWS7wScoEeSLVrU2ifxtpw" source="_SWS7cScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7VicoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_SWS7VycoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_SWS6wycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7WCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7WScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SWS7WicoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_SWS7TycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7WycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7XCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7XScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@8a9206d.operand2" incoming="_SWS7UCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7XicoEeSLVrU2ifxtpw" target="_SWS7XycoEeSLVrU2ifxtpw" source="_SWS7YycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SWS7XycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@8a9206d.operand2.result" incoming="_SWS7XicoEeSLVrU2ifxtpw" outgoing="_SWS7VCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7YCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7YScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS7YicoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_SWS7YycoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_SWS7XicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7ZCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7ZScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SWS7ZicoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7ZycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@8a9206d.operand3" incoming="_SWS7UicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7aCcoEeSLVrU2ifxtpw" target="_SWS7vScoEeSLVrU2ifxtpw" source="_SWS7vCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7aScoEeSLVrU2ifxtpw" target="_SWS7vScoEeSLVrU2ifxtpw" source="_SWS7eCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7aicoEeSLVrU2ifxtpw" target="_SWS7eycoEeSLVrU2ifxtpw" source="_SWS7vScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS7aycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7bCcoEeSLVrU2ifxtpw" target="_SWS7ticoEeSLVrU2ifxtpw" source="_SWS7vScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS7bScoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7bicoEeSLVrU2ifxtpw" target="_SWS7vicoEeSLVrU2ifxtpw" source="_SWS7gScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7bycoEeSLVrU2ifxtpw" target="_SWS7vicoEeSLVrU2ifxtpw" source="_SWS7uCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7cCcoEeSLVrU2ifxtpw" target="_SWS7cScoEeSLVrU2ifxtpw" source="_SWS7vicoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SWS7cScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@8a9206d.operand3.result" incoming="_SWS7cCcoEeSLVrU2ifxtpw" outgoing="_SWS7VScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7cicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7cycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SWS7dCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_SWS7dScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_SWS6xCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7dicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7dycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SWS7eCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_SWS7aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7eScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7eicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7eycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@69fd7485.operand2" incoming="_SWS7aicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7fCcoEeSLVrU2ifxtpw" target="_SWS7nicoEeSLVrU2ifxtpw" source="_SWS7hScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7fScoEeSLVrU2ifxtpw" target="_SWS7oScoEeSLVrU2ifxtpw" source="_SWS7nCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7ficoEeSLVrU2ifxtpw" target="_SWS7rScoEeSLVrU2ifxtpw" source="_SWS7pCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7fycoEeSLVrU2ifxtpw" target="_SWS7sCcoEeSLVrU2ifxtpw" source="_SWS7qCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7gCcoEeSLVrU2ifxtpw" target="_SWS7gScoEeSLVrU2ifxtpw" source="_SWS7sycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SWS7gScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@69fd7485.operand2.result" incoming="_SWS7gCcoEeSLVrU2ifxtpw" outgoing="_SWS7bicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7gicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7gycoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS7hCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SWS7hScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_SWS7fCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7hicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7hycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SWS7iCcoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_SWS7iScoEeSLVrU2ifxtpw" name="CastExpression@cbfe37e" mode="parallel" outputElement="_SWS7nCcoEeSLVrU2ifxtpw" inputElement="_SWS7mycoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7iicoEeSLVrU2ifxtpw" target="_SWS7kycoEeSLVrU2ifxtpw" source="_SWS7mScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7iycoEeSLVrU2ifxtpw" target="_SWS7micoEeSLVrU2ifxtpw" source="_SWS7mScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7jCcoEeSLVrU2ifxtpw" target="_SWS7micoEeSLVrU2ifxtpw" source="_SWS7licoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7jScoEeSLVrU2ifxtpw" target="_SWS7kScoEeSLVrU2ifxtpw" source="_SWS7micoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_SWS7jicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7jycoEeSLVrU2ifxtpw" target="_SWS7mScoEeSLVrU2ifxtpw" source="_SWS7mycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7kCcoEeSLVrU2ifxtpw" target="_SWS7nCcoEeSLVrU2ifxtpw" source="_SWS7kScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_SWS7kScoEeSLVrU2ifxtpw" name="Merge(CastExpression@cbfe37e.operand)" incoming="_SWS7jScoEeSLVrU2ifxtpw" outgoing="_SWS7kCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SWS7kicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_SWS7kycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_SWS7iicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7lCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7lScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SWS7licoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_SWS7jCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7lycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7mCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SWS7mScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_SWS7jycoEeSLVrU2ifxtpw" outgoing="_SWS7iicoEeSLVrU2ifxtpw _SWS7iycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_SWS7micoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_SWS7iycoEeSLVrU2ifxtpw _SWS7jCcoEeSLVrU2ifxtpw" outgoing="_SWS7jScoEeSLVrU2ifxtpw" decisionInputFlow="_SWS7jCcoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SWS7mycoEeSLVrU2ifxtpw" name="CastExpression@cbfe37e.inputElement" incoming="_SWS6xScoEeSLVrU2ifxtpw" outgoing="_SWS7jycoEeSLVrU2ifxtpw" regionAsInput="_SWS7iScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SWS7nCcoEeSLVrU2ifxtpw" name="CastExpression@cbfe37e.outputElement" incoming="_SWS7kCcoEeSLVrU2ifxtpw" outgoing="_SWS7fScoEeSLVrU2ifxtpw" regionAsOutput="_SWS7iScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7nScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SWS7nicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SWS7fCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7nycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7oCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SWS7oScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SWS7fScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7oicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7oycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SWS7pCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SWS7ficoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7pScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7picoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS7pycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SWS7qCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_SWS7fycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7qScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7qicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SWS7qycoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7rCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SWS7rScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SWS7ficoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7ricoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7rycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SWS7sCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SWS7fycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7sScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7sicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SWS7sycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SWS7gCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7tCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7tScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7ticoEeSLVrU2ifxtpw" name="ConditionalTestExpression@69fd7485.operand3" incoming="_SWS7bCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7tycoEeSLVrU2ifxtpw" target="_SWS7uCcoEeSLVrU2ifxtpw" source="_SWS7uycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SWS7uCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@69fd7485.operand3.result" incoming="_SWS7tycoEeSLVrU2ifxtpw" outgoing="_SWS7bycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7uScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7uicoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_SWS7uycoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_SWS6xicoEeSLVrU2ifxtpw" outgoing="_SWS7tycoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SWS7vCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@69fd7485)" outgoing="_SWS7aCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SWS7vScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@69fd7485)" incoming="_SWS7aCcoEeSLVrU2ifxtpw _SWS7aScoEeSLVrU2ifxtpw" outgoing="_SWS7aicoEeSLVrU2ifxtpw _SWS7bCcoEeSLVrU2ifxtpw" decisionInputFlow="_SWS7aScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SWS7vicoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@69fd7485.result)" incoming="_SWS7bicoEeSLVrU2ifxtpw _SWS7bycoEeSLVrU2ifxtpw" outgoing="_SWS7cCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SWS7vycoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@8a9206d)" outgoing="_SWS7TicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SWS7wCcoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@8a9206d)" incoming="_SWS7TicoEeSLVrU2ifxtpw _SWS7TycoEeSLVrU2ifxtpw" outgoing="_SWS7UCcoEeSLVrU2ifxtpw _SWS7UicoEeSLVrU2ifxtpw" decisionInputFlow="_SWS7TycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SWS7wScoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@8a9206d.result)" incoming="_SWS7VCcoEeSLVrU2ifxtpw _SWS7VScoEeSLVrU2ifxtpw" outgoing="_SWS7RycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7wicoEeSLVrU2ifxtpw" name="ExpressionStatement@78b0122d" incoming="_SWS65ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7wycoEeSLVrU2ifxtpw" target="_SWS7xicoEeSLVrU2ifxtpw" source="_SWS7zicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7xCcoEeSLVrU2ifxtpw" target="_SWS7xScoEeSLVrU2ifxtpw" source="_SWS7zCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS7xScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SWS7xCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWS7xicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SWS7wycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7xycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7yCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SWS7yScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7yicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7yycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7zCcoEeSLVrU2ifxtpw" name="Tuple@e7c37d1" outgoing="_SWS7xCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS7zScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_SWS7zicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_SWS7wycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7zycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS70CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SWS70ScoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS70icoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SWS70ycoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS71CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS71ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SWS71icoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_SWS71ycoEeSLVrU2ifxtpw" body="_SWS7HScoEeSLVrU2ifxtpw _SWS7RicoEeSLVrU2ifxtpw _SWS7wicoEeSLVrU2ifxtpw" decider="_SWS7GicoEeSLVrU2ifxtpw" successorClause="_SWS72CcoEeSLVrU2ifxtpw" test="_SWS66CcoEeSLVrU2ifxtpw _SWS68ycoEeSLVrU2ifxtpw _SWS6-ycoEeSLVrU2ifxtpw _SWS7BScoEeSLVrU2ifxtpw _SWS7DCcoEeSLVrU2ifxtpw _SWS7FicoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_SWS72CcoEeSLVrU2ifxtpw" decider="_SWS70ycoEeSLVrU2ifxtpw" predecessorClause="_SWS71ycoEeSLVrU2ifxtpw" test="_SWS70icoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS6xycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SWS6vScoEeSLVrU2ifxtpw" parameter="_SWS6tCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SWS6yCcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SWS6vScoEeSLVrU2ifxtpw" outgoing="_SWS6wicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS6yScoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_SWS6vicoEeSLVrU2ifxtpw" parameter="_SWS6tycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SWS6yicoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_SWS6vicoEeSLVrU2ifxtpw" outgoing="_SWS6wCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS6yycoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_SWS6vycoEeSLVrU2ifxtpw" parameter="_SWS6uicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SWS6zCcoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_SWS6vycoEeSLVrU2ifxtpw" outgoing="_SWS6wScoEeSLVrU2ifxtpw _SWS6wycoEeSLVrU2ifxtpw _SWS6xCcoEeSLVrU2ifxtpw _SWS6xScoEeSLVrU2ifxtpw _SWS6xicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SWS72ScoEeSLVrU2ifxtpw" name="Write" node="_SWS75CcoEeSLVrU2ifxtpw _SWS75ScoEeSLVrU2ifxtpw _SWS75icoEeSLVrU2ifxtpw" group="_SWS75icoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SWS72icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SWS72ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SWS73CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SWS73ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SWS73icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SWS73ycoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS74CcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS74ScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS74icoEeSLVrU2ifxtpw" target="_SWS75ScoEeSLVrU2ifxtpw" source="_SWS75CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS74ycoEeSLVrU2ifxtpw" target="_SWS77ScoEeSLVrU2ifxtpw" source="_SWS75ScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SWS75icoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS75ycoEeSLVrU2ifxtpw" name="ExpressionStatement@725b397d">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS76CcoEeSLVrU2ifxtpw" target="_SWS7-icoEeSLVrU2ifxtpw" source="_SWS8BycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SWS76ScoEeSLVrU2ifxtpw" target="_SWS76icoEeSLVrU2ifxtpw" source="_SWS7-ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SWS76icoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_SWS76ScoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SWS7-icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS76ycoEeSLVrU2ifxtpw" target="_SWS78ScoEeSLVrU2ifxtpw" source="_SWS77ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS77CcoEeSLVrU2ifxtpw" target="_SWS79ycoEeSLVrU2ifxtpw" source="_SWS7-icoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_SWS77ScoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_SWS74ycoEeSLVrU2ifxtpw" outgoing="_SWS76ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS77icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS77ycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SWS78CcoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_SWS78ScoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_SWS76ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS78icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS78ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SWS79CcoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS79ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS79icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SWS79ycoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_SWS77CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS7-CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS7-ScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SWS7-icoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_SWS76CcoEeSLVrU2ifxtpw" outgoing="_SWS77CcoEeSLVrU2ifxtpw" regionAsInput="_SWS76icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS7-ycoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_SWS76ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7_CcoEeSLVrU2ifxtpw" target="_SWS8AScoEeSLVrU2ifxtpw" source="_SWS8DCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7_ScoEeSLVrU2ifxtpw" target="_SWS8FCcoEeSLVrU2ifxtpw" source="_SWS8ECcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SWS7_icoEeSLVrU2ifxtpw" target="_SWS8ACcoEeSLVrU2ifxtpw" source="_SWS8CicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SWS7_ycoEeSLVrU2ifxtpw" target="_SWS8BCcoEeSLVrU2ifxtpw" source="_SWS8FCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SWS8ACcoEeSLVrU2ifxtpw" name="Call(At)" incoming="_SWS7_icoEeSLVrU2ifxtpw">
              <argument xmi:id="_SWS8AScoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SWS7_CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS8AicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS8AycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SWS8BCcoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SWS7_ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS8BScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS8BicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SWS8BycoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SWS76CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS8CCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS8CScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SWS8CicoEeSLVrU2ifxtpw" name="Tuple@6ace4f35" outgoing="_SWS7_icoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_SWS8CycoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_SWS8DCcoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_SWS7_CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS8DScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS8DicoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SWS8DycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SWS8ECcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SWS7_ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SWS8EScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SWS8EicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SWS8EycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SWS8FCcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SWS7_ScoEeSLVrU2ifxtpw" outgoing="_SWS7_ycoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SWS75CcoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_SWS74icoEeSLVrU2ifxtpw" parameter="_SWS73ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SWS75ScoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_SWS74icoEeSLVrU2ifxtpw" outgoing="_SWS74ycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <profileApplication xmi:id="_SWS8FScoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_SWS8FicoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_SWTewCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SWS5iicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SWTewScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SWS5jicoEeSLVrU2ifxtpw"/>
</xmi:XMI>

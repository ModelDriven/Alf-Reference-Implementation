<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SikZICcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SikZIScoEeSLVrU2ifxtpw" name="Units_Map" classifierBehavior="_SikZLScoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_SikZIicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SikZIycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SikZJCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SikZJScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SikZJicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SikZJycoEeSLVrU2ifxtpw" name="Units_Map$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZKCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZKScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_SikZKicoEeSLVrU2ifxtpw" name="listeners" visibility="public" type="_SilCficoEeSLVrU2ifxtpw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZKycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZLCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SikZLScoEeSLVrU2ifxtpw" name="Units_Map$classifierBehavior$1" visibility="private" isActive="true" node="_SikZLicoEeSLVrU2ifxtpw" group="_SikZLicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SikZLicoEeSLVrU2ifxtpw" name="Body(Units_Map$classifierBehavior$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZLycoEeSLVrU2ifxtpw" target="_SikZXicoEeSLVrU2ifxtpw" source="_SikZQCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SikZMCcoEeSLVrU2ifxtpw" target="_SikZQScoEeSLVrU2ifxtpw" source="_SikZMicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SikZMScoEeSLVrU2ifxtpw" target="_SikZZCcoEeSLVrU2ifxtpw" source="_SikZQScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SikZMicoEeSLVrU2ifxtpw" name="ExpressionStatement@63fe262c" outgoing="_SikZMCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZMycoEeSLVrU2ifxtpw" target="_SikZQCcoEeSLVrU2ifxtpw" source="_SikZNicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZNCcoEeSLVrU2ifxtpw" target="_SikZOScoEeSLVrU2ifxtpw" source="_SikZPScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SikZNScoEeSLVrU2ifxtpw" name="Call(test)" operation="_SilBZycoEeSLVrU2ifxtpw">
              <result xmi:id="_SikZNicoEeSLVrU2ifxtpw" name="Call(test).result(listener)" outgoing="_SikZMycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZNycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZOCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_SikZOScoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_SikZNCcoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZOicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZOycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SikZPCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SikZPScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SikZNCcoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZPicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZPycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SikZQCcoEeSLVrU2ifxtpw" name="Fork(listener)@232cde6e" incoming="_SikZMycoEeSLVrU2ifxtpw" outgoing="_SikZLycoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SikZQScoEeSLVrU2ifxtpw" name="ExpressionStatement@1fe36267" incoming="_SikZMCcoEeSLVrU2ifxtpw" outgoing="_SikZMScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZQicoEeSLVrU2ifxtpw" target="_SikZRycoEeSLVrU2ifxtpw" source="_SikZUycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZQycoEeSLVrU2ifxtpw" target="_SikZSicoEeSLVrU2ifxtpw" source="_SikZWycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZRCcoEeSLVrU2ifxtpw" target="_SikZTScoEeSLVrU2ifxtpw" source="_SikZYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SikZRScoEeSLVrU2ifxtpw" target="_SikZRicoEeSLVrU2ifxtpw" source="_SikZUCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SikZRicoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SikZRScoEeSLVrU2ifxtpw" behavior="_Sim5iScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SikZRycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SikZQicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZSCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZSScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SikZSicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SikZQycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZSycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZTCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SikZTScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SikZRCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZTicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZTycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SikZUCcoEeSLVrU2ifxtpw" name="Tuple@66d87b7d" outgoing="_SikZRScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZUScoEeSLVrU2ifxtpw" target="_SikZWCcoEeSLVrU2ifxtpw" source="_SikZXicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SikZUicoEeSLVrU2ifxtpw" name="Value(&quot;listener.notifications&quot;)">
                <result xmi:id="_SikZUycoEeSLVrU2ifxtpw" name="Value(&quot;listener.notifications&quot;).result" outgoing="_SikZQicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZVCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZVScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SikZVicoEeSLVrU2ifxtpw" value="listener.notifications">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SikZVycoEeSLVrU2ifxtpw" name="Read(notifications)" structuralFeature="_SilBdycoEeSLVrU2ifxtpw">
                <object xmi:id="_SikZWCcoEeSLVrU2ifxtpw" name="Read(notifications).object" incoming="_SikZUScoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZWScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZWicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SikZWycoEeSLVrU2ifxtpw" name="Read(notifications).result" outgoing="_SikZQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZXCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZXScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SikZXicoEeSLVrU2ifxtpw" name="Fork(Fork(listener)@232cde6e)" incoming="_SikZLycoEeSLVrU2ifxtpw" outgoing="_SikZUScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SikZXycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SikZYCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SikZRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZYScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZYicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SikZYycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SikZZCcoEeSLVrU2ifxtpw" name="ExpressionStatement@22c9be5f" incoming="_SikZMScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZZScoEeSLVrU2ifxtpw" target="_SikZaCcoEeSLVrU2ifxtpw" source="_SikZcCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SikZZicoEeSLVrU2ifxtpw" target="_SikZZycoEeSLVrU2ifxtpw" source="_SikZbicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SikZZycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SikZZicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SikZaCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SikZZScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZaScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZaicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SikZaycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZbCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZbScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SikZbicoEeSLVrU2ifxtpw" name="Tuple@952cf6e" outgoing="_SikZZicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SikZbycoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_SikZcCcoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_SikZZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZcScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZcicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SikZcycoEeSLVrU2ifxtpw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SikZdCcoEeSLVrU2ifxtpw" name="register$method$1" specification="_SilBYCcoEeSLVrU2ifxtpw" node="_SikZfycoEeSLVrU2ifxtpw _SikZgCcoEeSLVrU2ifxtpw _SikZgScoEeSLVrU2ifxtpw _SikZgicoEeSLVrU2ifxtpw _SikZgycoEeSLVrU2ifxtpw" group="_SikZgycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SikZdScoEeSLVrU2ifxtpw" name="listener" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZdicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZdycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SikZeCcoEeSLVrU2ifxtpw" name="id">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SikZeScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SikZeicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZeycoEeSLVrU2ifxtpw" target="_SikZgCcoEeSLVrU2ifxtpw" source="_SikZfycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZfCcoEeSLVrU2ifxtpw" target="_SikZgicoEeSLVrU2ifxtpw" source="_SikZgScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZfScoEeSLVrU2ifxtpw" target="_SilANicoEeSLVrU2ifxtpw" source="_SikZgicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SikZficoEeSLVrU2ifxtpw" target="_SilAOScoEeSLVrU2ifxtpw" source="_SikZgCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SikZgycoEeSLVrU2ifxtpw" name="Body(register$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAMCcoEeSLVrU2ifxtpw" name="BlockStatement@5b1430e9">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAMScoEeSLVrU2ifxtpw" name="ExpressionStatement@a973fb6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAMicoEeSLVrU2ifxtpw" target="_SilAPycoEeSLVrU2ifxtpw" source="_SilASicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAMycoEeSLVrU2ifxtpw" target="_SilATScoEeSLVrU2ifxtpw" source="_SilAQycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilANCcoEeSLVrU2ifxtpw" target="_SilARycoEeSLVrU2ifxtpw" source="_SilATScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SilANScoEeSLVrU2ifxtpw" name="Call(put)" operation="_SilCuCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SilANicoEeSLVrU2ifxtpw" name="Call(put).argument(key)" incoming="_SikZfScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilANycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAOCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SilAOScoEeSLVrU2ifxtpw" name="Call(put).argument(value)" incoming="_SikZficoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAOicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAOycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SilAPCcoEeSLVrU2ifxtpw" name="Call(put).result(null)" type="_SilBcCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAPScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAPicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SilAPycoEeSLVrU2ifxtpw" name="Call(put).target" incoming="_SilAMicoEeSLVrU2ifxtpw" type="_SilCficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAQCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAQScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SilAQicoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_SilAQycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilAMycoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilARCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilARScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilARicoEeSLVrU2ifxtpw" name="Read(listeners)" structuralFeature="_SikZKicoEeSLVrU2ifxtpw">
                <object xmi:id="_SilARycoEeSLVrU2ifxtpw" name="Read(listeners).object" incoming="_SilANCcoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilASCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilASScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilASicoEeSLVrU2ifxtpw" name="Read(listeners).result" outgoing="_SilAMicoEeSLVrU2ifxtpw" type="_SilCficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilASycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilATCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilATScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilAMycoEeSLVrU2ifxtpw" outgoing="_SilANCcoEeSLVrU2ifxtpw"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SikZfycoEeSLVrU2ifxtpw" name="Input(listener)" outgoing="_SikZeycoEeSLVrU2ifxtpw" parameter="_SikZdScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SikZgCcoEeSLVrU2ifxtpw" name="Fork(listener)" incoming="_SikZeycoEeSLVrU2ifxtpw" outgoing="_SikZficoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SikZgScoEeSLVrU2ifxtpw" name="Input(id)" outgoing="_SikZfCcoEeSLVrU2ifxtpw" parameter="_SikZeCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SikZgicoEeSLVrU2ifxtpw" name="Fork(id)" incoming="_SikZfCcoEeSLVrU2ifxtpw" outgoing="_SikZfScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilATicoEeSLVrU2ifxtpw" name="test$method$1" specification="_SilBZycoEeSLVrU2ifxtpw" node="_SilAUycoEeSLVrU2ifxtpw _SilAVCcoEeSLVrU2ifxtpw" group="_SilAVCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilATycoEeSLVrU2ifxtpw" name="listener" type="_SilBcCcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAUCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAUScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAUicoEeSLVrU2ifxtpw" target="_SilAUycoEeSLVrU2ifxtpw" source="_SilAWycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilAVCcoEeSLVrU2ifxtpw" name="Body(test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAVScoEeSLVrU2ifxtpw" target="_SilAficoEeSLVrU2ifxtpw" source="_SilAYCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilAVicoEeSLVrU2ifxtpw" target="_SilAeScoEeSLVrU2ifxtpw" source="_SilAXicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilAVycoEeSLVrU2ifxtpw" target="_SilAkScoEeSLVrU2ifxtpw" source="_SilAeScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAWCcoEeSLVrU2ifxtpw" target="_SilAuCcoEeSLVrU2ifxtpw" source="_SilAkycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilAWScoEeSLVrU2ifxtpw" target="_SilAticoEeSLVrU2ifxtpw" source="_SilAkScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAWicoEeSLVrU2ifxtpw" target="_SilAWycoEeSLVrU2ifxtpw" source="_SilAkycoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SilAWycoEeSLVrU2ifxtpw" name="Output(listener)" incoming="_SilAWicoEeSLVrU2ifxtpw" outgoing="_SilAUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAXCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAXScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAXicoEeSLVrU2ifxtpw" name="ExpressionStatement@764cf769" outgoing="_SilAVicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAXycoEeSLVrU2ifxtpw" target="_SilAYCcoEeSLVrU2ifxtpw" source="_SilAaScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SilAYCcoEeSLVrU2ifxtpw" name="Fork(listener)@4ff47012" incoming="_SilAXycoEeSLVrU2ifxtpw" outgoing="_SilAVScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAYScoEeSLVrU2ifxtpw" name="RightHandSide@38e9d6c0">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAYicoEeSLVrU2ifxtpw" target="_SilAbCcoEeSLVrU2ifxtpw" source="_SilAcCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAYycoEeSLVrU2ifxtpw" target="_SilAZicoEeSLVrU2ifxtpw" source="_SilAdScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SilAZCcoEeSLVrU2ifxtpw" target="_SilAZScoEeSLVrU2ifxtpw" source="_SilAcycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SilAZScoEeSLVrU2ifxtpw" name="Call(Listener)" incoming="_SilAZCcoEeSLVrU2ifxtpw" operation="_SilCdScoEeSLVrU2ifxtpw">
                <argument xmi:id="_SilAZicoEeSLVrU2ifxtpw" name="Call(Listener).argument(name)" incoming="_SilAYycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAZycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAaCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SilAaScoEeSLVrU2ifxtpw" name="Call(Listener).result()" outgoing="_SilAXycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAaicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAaycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SilAbCcoEeSLVrU2ifxtpw" name="Call(Listener).target" incoming="_SilAYicoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAbScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAbicoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SilAbycoEeSLVrU2ifxtpw" name="Create(Listener)" classifier="_SilBcCcoEeSLVrU2ifxtpw">
                <result xmi:id="_SilAcCcoEeSLVrU2ifxtpw" name="Create(Listener).result" outgoing="_SilAYicoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAcScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAcicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAcycoEeSLVrU2ifxtpw" name="Tuple@72333aa2" outgoing="_SilAZCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilAdCcoEeSLVrU2ifxtpw" name="Value(&quot;Listener&quot;)">
                  <result xmi:id="_SilAdScoEeSLVrU2ifxtpw" name="Value(&quot;Listener&quot;).result" outgoing="_SilAYycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAdicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAdycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SilAeCcoEeSLVrU2ifxtpw" value="Listener">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAeScoEeSLVrU2ifxtpw" name="ExpressionStatement@5289b17a" incoming="_SilAVicoEeSLVrU2ifxtpw" outgoing="_SilAVycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAeicoEeSLVrU2ifxtpw" target="_SilAgScoEeSLVrU2ifxtpw" source="_SilAiScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilAeycoEeSLVrU2ifxtpw" target="_SilAfScoEeSLVrU2ifxtpw" source="_SilAhycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAfCcoEeSLVrU2ifxtpw" target="_SilAhCcoEeSLVrU2ifxtpw" source="_SilAjicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SilAfScoEeSLVrU2ifxtpw" name="Call(register)" incoming="_SilAeycoEeSLVrU2ifxtpw" operation="_SilBYCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SilAficoEeSLVrU2ifxtpw" name="Call(register).argument(listener)" incoming="_SilAVScoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAfycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAgCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SilAgScoEeSLVrU2ifxtpw" name="Call(register).argument(id)" incoming="_SilAeicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAgicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAgycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <target xmi:id="_SilAhCcoEeSLVrU2ifxtpw" name="Call(register).target" incoming="_SilAfCcoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAhScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAhicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAhycoEeSLVrU2ifxtpw" name="Tuple@72b48b36" outgoing="_SilAeycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilAiCcoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SilAiScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SilAeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAiicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAiycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SilAjCcoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SilAjScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SilAjicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilAfCcoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAjycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAkCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAkScoEeSLVrU2ifxtpw" name="ExpressionStatement@467c1521" incoming="_SilAVycoEeSLVrU2ifxtpw" outgoing="_SilAWScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAkicoEeSLVrU2ifxtpw" target="_SilAkycoEeSLVrU2ifxtpw" source="_SilAnicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SilAkycoEeSLVrU2ifxtpw" name="Fork(listener)@160150d9" incoming="_SilAkicoEeSLVrU2ifxtpw" outgoing="_SilAWCcoEeSLVrU2ifxtpw _SilAWicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAlCcoEeSLVrU2ifxtpw" name="RightHandSide@3062e1d8">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAlScoEeSLVrU2ifxtpw" target="_SilAmycoEeSLVrU2ifxtpw" source="_SilApicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SilAlicoEeSLVrU2ifxtpw" target="_SilAmicoEeSLVrU2ifxtpw" source="_SilApCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAlycoEeSLVrU2ifxtpw" target="_SilAoScoEeSLVrU2ifxtpw" source="_SilAsicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAmCcoEeSLVrU2ifxtpw" target="_SilAtScoEeSLVrU2ifxtpw" source="_SilAqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAmScoEeSLVrU2ifxtpw" target="_SilArycoEeSLVrU2ifxtpw" source="_SilAtScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SilAmicoEeSLVrU2ifxtpw" name="Call(get)" incoming="_SilAlicoEeSLVrU2ifxtpw" operation="_SilClCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SilAmycoEeSLVrU2ifxtpw" name="Call(get).argument(key)" incoming="_SilAlScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAnCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAnScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SilAnicoEeSLVrU2ifxtpw" name="Call(get).result(null)" outgoing="_SilAkicoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAnycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAoCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SilAoScoEeSLVrU2ifxtpw" name="Call(get).target" incoming="_SilAlycoEeSLVrU2ifxtpw" type="_SilCficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAoicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAoycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilApCcoEeSLVrU2ifxtpw" name="Tuple@12bdc49c" outgoing="_SilAlicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilApScoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SilApicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SilAlScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilApycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAqCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SilAqScoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SilAqicoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_SilAqycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilAmCcoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilArCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilArScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilAricoEeSLVrU2ifxtpw" name="Read(listeners)" structuralFeature="_SikZKicoEeSLVrU2ifxtpw">
                <object xmi:id="_SilArycoEeSLVrU2ifxtpw" name="Read(listeners).object" incoming="_SilAmScoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAsCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAsScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilAsicoEeSLVrU2ifxtpw" name="Read(listeners).result" outgoing="_SilAlycoEeSLVrU2ifxtpw" type="_SilCficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAsycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAtCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilAtScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilAmCcoEeSLVrU2ifxtpw" outgoing="_SilAmScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAticoEeSLVrU2ifxtpw" name="ExpressionStatement@da1c402" incoming="_SilAWScoEeSLVrU2ifxtpw">
            <node xmi:type="uml:CallOperationAction" xmi:id="_SilAtycoEeSLVrU2ifxtpw" name="Call(notify)" operation="_SilCfCcoEeSLVrU2ifxtpw">
              <target xmi:id="_SilAuCcoEeSLVrU2ifxtpw" name="Call(notify).target" incoming="_SilAWCcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAuScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAuicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilAUycoEeSLVrU2ifxtpw" name="Output(listener)" incoming="_SilAUicoEeSLVrU2ifxtpw" parameter="_SilATycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilAuycoEeSLVrU2ifxtpw" name="Units_Map$method$1" specification="_SilBaycoEeSLVrU2ifxtpw" node="_SilAwCcoEeSLVrU2ifxtpw _SilAwScoEeSLVrU2ifxtpw" group="_SilAwScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilAvCcoEeSLVrU2ifxtpw" name="" type="_SikZIScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilAvScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilAvicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAvycoEeSLVrU2ifxtpw" target="_SilAwCcoEeSLVrU2ifxtpw" source="_SilA0icoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilAwScoEeSLVrU2ifxtpw" name="Body(Units_Map$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAwicoEeSLVrU2ifxtpw" target="_SilA0icoEeSLVrU2ifxtpw" source="_SilAzycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAwycoEeSLVrU2ifxtpw" target="_SilA1CcoEeSLVrU2ifxtpw" source="_SilA0icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilAxCcoEeSLVrU2ifxtpw" target="_SilAzScoEeSLVrU2ifxtpw" source="_SilA0ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAxScoEeSLVrU2ifxtpw" target="_SilA2CcoEeSLVrU2ifxtpw" source="_SilA0icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAxicoEeSLVrU2ifxtpw" target="_SilA3ycoEeSLVrU2ifxtpw" source="_SilA2ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAxycoEeSLVrU2ifxtpw" target="_SilA6ycoEeSLVrU2ifxtpw" source="_SilA4icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAyCcoEeSLVrU2ifxtpw" target="_SilA8ScoEeSLVrU2ifxtpw" source="_SilA5icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilAyScoEeSLVrU2ifxtpw" target="_SilA9ScoEeSLVrU2ifxtpw" source="_SilA9CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilAyicoEeSLVrU2ifxtpw" target="_SilA9ScoEeSLVrU2ifxtpw" source="_SilA7icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilAyycoEeSLVrU2ifxtpw" target="_SilA0ycoEeSLVrU2ifxtpw" source="_SilA9ScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilAzCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilAzScoEeSLVrU2ifxtpw" name="Body" incoming="_SilAxCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SilAzicoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SilAzycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilAwicoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA0CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA0ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SilA0icoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilAwicoEeSLVrU2ifxtpw" outgoing="_SilAvycoEeSLVrU2ifxtpw _SilAwycoEeSLVrU2ifxtpw _SilAxScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SilA0ycoEeSLVrU2ifxtpw" name="Call(Units_Map$initialization$1)" incoming="_SilAyycoEeSLVrU2ifxtpw" outgoing="_SilAxCcoEeSLVrU2ifxtpw" operation="_SilBXycoEeSLVrU2ifxtpw">
            <target xmi:id="_SilA1CcoEeSLVrU2ifxtpw" name="Call(Units_Map$initialization$1).target" incoming="_SilAwycoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA1ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA1icoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilA1ycoEeSLVrU2ifxtpw" name="Read(Units_Map$initializationFlag$1)" structuralFeature="_SikZJycoEeSLVrU2ifxtpw">
            <object xmi:id="_SilA2CcoEeSLVrU2ifxtpw" name="Read(Units_Map$initializationFlag$1).object" incoming="_SilAxScoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA2ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA2icoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SilA2ycoEeSLVrU2ifxtpw" name="Read(Units_Map$initializationFlag$1).result" outgoing="_SilAxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA3CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA3ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilA3icoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SilA3ycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SilAxicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA4CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA4ScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SilA4icoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SilAxycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA4ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA5CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilA5ScoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SilA5icoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SilAyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA5ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA6CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SilA6ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SilA6icoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SilA6ycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SilAxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA7CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA7ScoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SilA7icoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SilAyicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA7ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA8CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SilA8ScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SilAyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilA8icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilA8ycoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SilA9CcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SilAyScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SilA9ScoEeSLVrU2ifxtpw" name="Decision(Test(Units_Map$initializationFlag$1))" incoming="_SilAyScoEeSLVrU2ifxtpw _SilAyicoEeSLVrU2ifxtpw" outgoing="_SilAyycoEeSLVrU2ifxtpw" decisionInputFlow="_SilAyicoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilAwCcoEeSLVrU2ifxtpw" name="Return" incoming="_SilAvycoEeSLVrU2ifxtpw" parameter="_SilAvCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilA9icoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SilBbycoEeSLVrU2ifxtpw" node="_SilA9ycoEeSLVrU2ifxtpw" group="_SilA9ycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SilA9ycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilA-CcoEeSLVrU2ifxtpw" name="Units_Map$initialization$1" specification="_SilBXycoEeSLVrU2ifxtpw" node="_SilA-ScoEeSLVrU2ifxtpw" group="_SilA-ScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SilA-ScoEeSLVrU2ifxtpw" name="Body(Units_Map$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilA-icoEeSLVrU2ifxtpw" target="_SilBCScoEeSLVrU2ifxtpw" source="_SilBBicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilA-ycoEeSLVrU2ifxtpw" target="_SilBJicoEeSLVrU2ifxtpw" source="_SilBCScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilA_CcoEeSLVrU2ifxtpw" target="_SilBNycoEeSLVrU2ifxtpw" source="_SilBCScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilA_ScoEeSLVrU2ifxtpw" target="_SilBQScoEeSLVrU2ifxtpw" source="_SilBCScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilA_icoEeSLVrU2ifxtpw" target="_SilBSCcoEeSLVrU2ifxtpw" source="_SilBRCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilA_ycoEeSLVrU2ifxtpw" target="_SilBVCcoEeSLVrU2ifxtpw" source="_SilBSycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBACcoEeSLVrU2ifxtpw" target="_SilBWicoEeSLVrU2ifxtpw" source="_SilBTycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilBAScoEeSLVrU2ifxtpw" target="_SilBXicoEeSLVrU2ifxtpw" source="_SilBXScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBAicoEeSLVrU2ifxtpw" target="_SilBXicoEeSLVrU2ifxtpw" source="_SilBVycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilBAycoEeSLVrU2ifxtpw" target="_SilBCicoEeSLVrU2ifxtpw" source="_SilBXicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilBBCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SilBBScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SilBBicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilA-icoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBBycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBCCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SilBCScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilA-icoEeSLVrU2ifxtpw" outgoing="_SilA-ycoEeSLVrU2ifxtpw _SilA_CcoEeSLVrU2ifxtpw _SilA_ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBCicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SilBAycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilBCycoEeSLVrU2ifxtpw" target="_SilBLycoEeSLVrU2ifxtpw" source="_SilBDCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBDCcoEeSLVrU2ifxtpw" name="Initialize(listeners)" outgoing="_SilBCycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBDScoEeSLVrU2ifxtpw" target="_SilBGCcoEeSLVrU2ifxtpw" source="_SilBHCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBDicoEeSLVrU2ifxtpw" target="_SilBEicoEeSLVrU2ifxtpw" source="_SilBIScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SilBDycoEeSLVrU2ifxtpw" target="_SilBEScoEeSLVrU2ifxtpw" source="_SilBHycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBECcoEeSLVrU2ifxtpw" target="_SilBLCcoEeSLVrU2ifxtpw" source="_SilBFScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SilBEScoEeSLVrU2ifxtpw" name="Call(Map)" incoming="_SilBDycoEeSLVrU2ifxtpw" operation="_SiloHScoEeSLVrU2ifxtpw">
                <argument xmi:id="_SilBEicoEeSLVrU2ifxtpw" name="Call(Map).argument(entries)" incoming="_SilBDicoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBEycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBFCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SilBFScoEeSLVrU2ifxtpw" name="Call(Map).result()" outgoing="_SilBECcoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBFicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBFycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SilBGCcoEeSLVrU2ifxtpw" name="Call(Map).target" incoming="_SilBDScoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBGScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBGicoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SilBGycoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$Map__PrimitiveTypes$Integer_Units_Map$Listener__)" classifier="_SilC_icoEeSLVrU2ifxtpw">
                <result xmi:id="_SilBHCcoEeSLVrU2ifxtpw" name="Create($$Alf$Library$CollectionClasses$Impl$Map__PrimitiveTypes$Integer_Units_Map$Listener__).result" outgoing="_SilBDScoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBHScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBHicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBHycoEeSLVrU2ifxtpw" name="Tuple@15c4d1b2" outgoing="_SilBDycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilBICcoEeSLVrU2ifxtpw" name="Value(null)">
                  <result xmi:id="_SilBIScoEeSLVrU2ifxtpw" name="Value(null).result" outgoing="_SilBDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBIicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBIycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_SilBJCcoEeSLVrU2ifxtpw"/>
                </node>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilBJScoEeSLVrU2ifxtpw" name="Write(listeners)" structuralFeature="_SikZKicoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SilBJicoEeSLVrU2ifxtpw" name="Write(listeners).object" incoming="_SilA-ycoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBJycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBKCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilBKScoEeSLVrU2ifxtpw" name="Write(listeners).result" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBKicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBKycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_SilBLCcoEeSLVrU2ifxtpw" name="Write(listeners).value" incoming="_SilBECcoEeSLVrU2ifxtpw" type="_SilCficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBLScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBLicoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBLycoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SilBCycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBMCcoEeSLVrU2ifxtpw" target="_SilBPScoEeSLVrU2ifxtpw" source="_SilBMicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilBMScoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SilBMicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SilBMCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBMycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBNCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SilBNScoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilBNicoEeSLVrU2ifxtpw" name="Write(Units_Map$initializationFlag$1)" structuralFeature="_SikZJycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SilBNycoEeSLVrU2ifxtpw" name="Write(Units_Map$initializationFlag$1).object" incoming="_SilA_CcoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBOCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBOScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilBOicoEeSLVrU2ifxtpw" name="Write(Units_Map$initializationFlag$1).result" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBOycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBPCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_SilBPScoEeSLVrU2ifxtpw" name="Write(Units_Map$initializationFlag$1).value" incoming="_SilBMCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBPicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBPycoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilBQCcoEeSLVrU2ifxtpw" name="Read(Units_Map$initializationFlag$1)" structuralFeature="_SikZJycoEeSLVrU2ifxtpw">
            <object xmi:id="_SilBQScoEeSLVrU2ifxtpw" name="Read(Units_Map$initializationFlag$1).object" incoming="_SilA_ScoEeSLVrU2ifxtpw" type="_SikZIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBQicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBQycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SilBRCcoEeSLVrU2ifxtpw" name="Read(Units_Map$initializationFlag$1).result" outgoing="_SilA_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBRScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBRicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilBRycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SilBSCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SilA_icoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBSScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBSicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SilBSycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SilA_ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBTCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBTScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilBTicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SilBTycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SilBACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBUCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBUScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SilBUicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SilBUycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SilBVCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SilA_ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBVScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBVicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SilBVycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SilBAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBWCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBWScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SilBWicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SilBACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBWycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBXCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SilBXScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SilBAScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SilBXicoEeSLVrU2ifxtpw" name="Decision(Test(Units_Map$initializationFlag$1))" incoming="_SilBAScoEeSLVrU2ifxtpw _SilBAicoEeSLVrU2ifxtpw" outgoing="_SilBAycoEeSLVrU2ifxtpw" decisionInputFlow="_SilBAicoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SilBXycoEeSLVrU2ifxtpw" name="Units_Map$initialization$1" visibility="protected" method="_SilA-CcoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SilBYCcoEeSLVrU2ifxtpw" name="register" visibility="public" method="_SikZdCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilBYScoEeSLVrU2ifxtpw" name="listener" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBYicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBYycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilBZCcoEeSLVrU2ifxtpw" name="id" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBZScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBZicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilBZycoEeSLVrU2ifxtpw" name="test" visibility="public" method="_SilATicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilBaCcoEeSLVrU2ifxtpw" name="listener" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBaScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBaicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilBaycoEeSLVrU2ifxtpw" name="Units_Map" visibility="package" method="_SilAuycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilBbCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SikZIScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBbScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBbicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilBbycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SilA9icoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SilBcCcoEeSLVrU2ifxtpw" name="Listener">
        <ownedAttribute xmi:id="_SilBcScoEeSLVrU2ifxtpw" name="Listener$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBcicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBcycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SilBdCcoEeSLVrU2ifxtpw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBdScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBdicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SilBdycoEeSLVrU2ifxtpw" name="notifications" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBeCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBeScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilBeicoEeSLVrU2ifxtpw" name="Listener$method$1" specification="_SilCdScoEeSLVrU2ifxtpw" node="_SilBhCcoEeSLVrU2ifxtpw _SilBhScoEeSLVrU2ifxtpw _SilBhicoEeSLVrU2ifxtpw _SilBhycoEeSLVrU2ifxtpw" group="_SilBhycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SilBeycoEeSLVrU2ifxtpw" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBfCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBfScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SilBficoEeSLVrU2ifxtpw" name="" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBfycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBgCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBgScoEeSLVrU2ifxtpw" target="_SilBhScoEeSLVrU2ifxtpw" source="_SilBhCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBgicoEeSLVrU2ifxtpw" target="_SilBpScoEeSLVrU2ifxtpw" source="_SilBhScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBgycoEeSLVrU2ifxtpw" target="_SilBhicoEeSLVrU2ifxtpw" source="_SilBuicoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SilBhycoEeSLVrU2ifxtpw" name="Body(Listener$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBiCcoEeSLVrU2ifxtpw" target="_SilBuicoEeSLVrU2ifxtpw" source="_SilBtycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBiScoEeSLVrU2ifxtpw" target="_SilBvCcoEeSLVrU2ifxtpw" source="_SilBuicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilBiicoEeSLVrU2ifxtpw" target="_SilBkycoEeSLVrU2ifxtpw" source="_SilBuycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBiycoEeSLVrU2ifxtpw" target="_SilBwCcoEeSLVrU2ifxtpw" source="_SilBuicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBjCcoEeSLVrU2ifxtpw" target="_SilBxycoEeSLVrU2ifxtpw" source="_SilBwycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBjScoEeSLVrU2ifxtpw" target="_SilB0ycoEeSLVrU2ifxtpw" source="_SilByicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBjicoEeSLVrU2ifxtpw" target="_SilB2ScoEeSLVrU2ifxtpw" source="_SilBzicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilBjycoEeSLVrU2ifxtpw" target="_SilB3ScoEeSLVrU2ifxtpw" source="_SilB3CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBkCcoEeSLVrU2ifxtpw" target="_SilB3ScoEeSLVrU2ifxtpw" source="_SilB1icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilBkScoEeSLVrU2ifxtpw" target="_SilBuycoEeSLVrU2ifxtpw" source="_SilB3ScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilBkicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBkycoEeSLVrU2ifxtpw" name="Body" incoming="_SilBiicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBlCcoEeSLVrU2ifxtpw" name="ExpressionStatement@53465e1a">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBlScoEeSLVrU2ifxtpw" target="_SilBnycoEeSLVrU2ifxtpw" source="_SilBmycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBlicoEeSLVrU2ifxtpw" target="_SilBqCcoEeSLVrU2ifxtpw" source="_SilBpScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBlycoEeSLVrU2ifxtpw" target="_SilBrCcoEeSLVrU2ifxtpw" source="_SilBoicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SilBmCcoEeSLVrU2ifxtpw" target="_SilBmScoEeSLVrU2ifxtpw" source="_SilBtScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBmScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@30cc27ac)" incoming="_SilBmCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_SilBmicoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_SilBmycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilBlScoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBnCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBnScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SilBnicoEeSLVrU2ifxtpw" name="Clear(name)" structuralFeature="_SilBdCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SilBnycoEeSLVrU2ifxtpw" name="Clear(name).object" incoming="_SilBlScoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBoCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBoScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilBoicoEeSLVrU2ifxtpw" name="Clear(name).result" outgoing="_SilBlycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBoycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBpCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SilBpScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@30cc27ac)" incoming="_SilBgicoEeSLVrU2ifxtpw" outgoing="_SilBlicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBpicoEeSLVrU2ifxtpw" name="WriteAll(Listener::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilBpycoEeSLVrU2ifxtpw" target="_SilBsicoEeSLVrU2ifxtpw" source="_SilBqCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SilBqCcoEeSLVrU2ifxtpw" name="WriteAll(Listener::name).input(Listener::name)" incoming="_SilBlicoEeSLVrU2ifxtpw" outgoing="_SilBpycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBqScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBqicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilBqycoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_SilBdCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_SilBrCcoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_SilBlycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBrScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBricoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SilBrycoEeSLVrU2ifxtpw" name="Write(name).result" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBsCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBsScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_SilBsicoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_SilBpycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBsycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBtCcoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilBtScoEeSLVrU2ifxtpw" name="RightHandSide@537ef973" outgoing="_SilBmCcoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SilBticoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SilBtycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilBiCcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBuCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBuScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SilBuicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilBiCcoEeSLVrU2ifxtpw" outgoing="_SilBgycoEeSLVrU2ifxtpw _SilBiScoEeSLVrU2ifxtpw _SilBiycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SilBuycoEeSLVrU2ifxtpw" name="Call(Listener$initialization$1)" incoming="_SilBkScoEeSLVrU2ifxtpw" outgoing="_SilBiicoEeSLVrU2ifxtpw" operation="_SilCdCcoEeSLVrU2ifxtpw">
              <target xmi:id="_SilBvCcoEeSLVrU2ifxtpw" name="Call(Listener$initialization$1).target" incoming="_SilBiScoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBvScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBvicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilBvycoEeSLVrU2ifxtpw" name="Read(Listener$initializationFlag$1)" structuralFeature="_SilBcScoEeSLVrU2ifxtpw">
              <object xmi:id="_SilBwCcoEeSLVrU2ifxtpw" name="Read(Listener$initializationFlag$1).object" incoming="_SilBiycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBwScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBwicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SilBwycoEeSLVrU2ifxtpw" name="Read(Listener$initializationFlag$1).result" outgoing="_SilBjCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBxCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBxScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilBxicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SilBxycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SilBjCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilByCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilByScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilByicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SilBjScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilByycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilBzCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilBzScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SilBzicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SilBjicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilBzycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB0CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SilB0ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SilB0icoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SilB0ycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SilBjScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB1CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB1ScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SilB1icoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SilBkCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB1ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB2CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SilB2ScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SilBjicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB2icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB2ycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SilB3CcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SilBjycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SilB3ScoEeSLVrU2ifxtpw" name="Decision(Test(Listener$initializationFlag$1))" incoming="_SilBjycoEeSLVrU2ifxtpw _SilBkCcoEeSLVrU2ifxtpw" outgoing="_SilBkScoEeSLVrU2ifxtpw" decisionInputFlow="_SilBkCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilBhCcoEeSLVrU2ifxtpw" name="Input(name)" outgoing="_SilBgScoEeSLVrU2ifxtpw" parameter="_SilBeycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SilBhScoEeSLVrU2ifxtpw" name="Fork(name)" incoming="_SilBgScoEeSLVrU2ifxtpw" outgoing="_SilBgicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilBhicoEeSLVrU2ifxtpw" name="Return" incoming="_SilBgycoEeSLVrU2ifxtpw" parameter="_SilBficoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilB3icoEeSLVrU2ifxtpw" name="notify$method$1" specification="_SilCfCcoEeSLVrU2ifxtpw" node="_SilB3ycoEeSLVrU2ifxtpw" group="_SilB3ycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SilB3ycoEeSLVrU2ifxtpw" name="Body(notify$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilB4CcoEeSLVrU2ifxtpw" name="ExpressionStatement@3b5247d7">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB4ScoEeSLVrU2ifxtpw" target="_SilB7icoEeSLVrU2ifxtpw" source="_SilB9ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB4icoEeSLVrU2ifxtpw" target="_SilCBCcoEeSLVrU2ifxtpw" source="_SilB-icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB4ycoEeSLVrU2ifxtpw" target="_SilB_icoEeSLVrU2ifxtpw" source="_SilCBCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB5CcoEeSLVrU2ifxtpw" target="_SilCBicoEeSLVrU2ifxtpw" source="_SilCBCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB5ScoEeSLVrU2ifxtpw" target="_SilCDycoEeSLVrU2ifxtpw" source="_SilCDCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB5icoEeSLVrU2ifxtpw" target="_SilCEycoEeSLVrU2ifxtpw" source="_SilCCScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB5ycoEeSLVrU2ifxtpw" target="_SilCDCcoEeSLVrU2ifxtpw" source="_SilB8ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB6CcoEeSLVrU2ifxtpw" target="_SilCHCcoEeSLVrU2ifxtpw" source="_SilCAScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilB6ScoEeSLVrU2ifxtpw" target="_SilB6ycoEeSLVrU2ifxtpw" source="_SilCHCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilB6icoEeSLVrU2ifxtpw" name="Call(+)">
                <argument xmi:id="_SilB6ycoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SilB6ScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB7CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB7ScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SilB7icoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SilB4ScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB7ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB8CcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SilB8ScoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_SilB5ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB8icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB8ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilB9CcoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SilB9ScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SilB4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB9icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB9ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SilB-CcoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SilB-ScoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_SilB-icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilB4icoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB-ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilB_CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilB_ScoEeSLVrU2ifxtpw" name="Read(notifications)" structuralFeature="_SilBdycoEeSLVrU2ifxtpw">
                <object xmi:id="_SilB_icoEeSLVrU2ifxtpw" name="Read(notifications).object" incoming="_SilB4ycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilB_ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCACcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilCAScoEeSLVrU2ifxtpw" name="Read(notifications).result" outgoing="_SilB6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCAicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCAycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilCBCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilB4icoEeSLVrU2ifxtpw" outgoing="_SilB4ycoEeSLVrU2ifxtpw _SilB5CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SilCBScoEeSLVrU2ifxtpw" name="Clear(notifications)" structuralFeature="_SilBdycoEeSLVrU2ifxtpw">
                <object xmi:id="_SilCBicoEeSLVrU2ifxtpw" name="Clear(notifications).object" incoming="_SilB5CcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCBycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCCCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilCCScoEeSLVrU2ifxtpw" name="Clear(notifications).result" outgoing="_SilB5icoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCCicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCCycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilCDCcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@cb196dc)" incoming="_SilB5ycoEeSLVrU2ifxtpw" outgoing="_SilB5ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilCDScoEeSLVrU2ifxtpw" name="WriteAll(Listener::notifications)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCDicoEeSLVrU2ifxtpw" target="_SilCGScoEeSLVrU2ifxtpw" source="_SilCDycoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SilCDycoEeSLVrU2ifxtpw" name="WriteAll(Listener::notifications).input(Listener::notifications)" incoming="_SilB5ScoEeSLVrU2ifxtpw" outgoing="_SilCDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCECcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCEScoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilCEicoEeSLVrU2ifxtpw" name="Write(notifications)" structuralFeature="_SilBdycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SilCEycoEeSLVrU2ifxtpw" name="Write(notifications).object" incoming="_SilB5icoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCFCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCFScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilCFicoEeSLVrU2ifxtpw" name="Write(notifications).result" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCFycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCGCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SilCGScoEeSLVrU2ifxtpw" name="Write(notifications).value" incoming="_SilCDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCGicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCGycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilCHCcoEeSLVrU2ifxtpw" name="Fork(Read(notifications).result)" incoming="_SilB6CcoEeSLVrU2ifxtpw" outgoing="_SilB6ScoEeSLVrU2ifxtpw"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilCHScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SilCfScoEeSLVrU2ifxtpw" node="_SilCHicoEeSLVrU2ifxtpw" group="_SilCHicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SilCHicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilCHycoEeSLVrU2ifxtpw" name="Listener$initialization$1" specification="_SilCdCcoEeSLVrU2ifxtpw" node="_SilCICcoEeSLVrU2ifxtpw" group="_SilCICcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SilCICcoEeSLVrU2ifxtpw" name="Body(Listener$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCIScoEeSLVrU2ifxtpw" target="_SilCMCcoEeSLVrU2ifxtpw" source="_SilCLScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCIicoEeSLVrU2ifxtpw" target="_SilCOycoEeSLVrU2ifxtpw" source="_SilCMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCIycoEeSLVrU2ifxtpw" target="_SilCTCcoEeSLVrU2ifxtpw" source="_SilCMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCJCcoEeSLVrU2ifxtpw" target="_SilCVicoEeSLVrU2ifxtpw" source="_SilCMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCJScoEeSLVrU2ifxtpw" target="_SilCXScoEeSLVrU2ifxtpw" source="_SilCWScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCJicoEeSLVrU2ifxtpw" target="_SilCaScoEeSLVrU2ifxtpw" source="_SilCYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCJycoEeSLVrU2ifxtpw" target="_SilCbycoEeSLVrU2ifxtpw" source="_SilCZCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilCKCcoEeSLVrU2ifxtpw" target="_SilCcycoEeSLVrU2ifxtpw" source="_SilCcicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCKScoEeSLVrU2ifxtpw" target="_SilCcycoEeSLVrU2ifxtpw" source="_SilCbCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilCKicoEeSLVrU2ifxtpw" target="_SilCMScoEeSLVrU2ifxtpw" source="_SilCcycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilCKycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SilCLCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SilCLScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilCIScoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCLicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCLycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SilCMCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilCIScoEeSLVrU2ifxtpw" outgoing="_SilCIicoEeSLVrU2ifxtpw _SilCIycoEeSLVrU2ifxtpw _SilCJCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilCMScoEeSLVrU2ifxtpw" name="Initialization" incoming="_SilCKicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SilCMicoEeSLVrU2ifxtpw" target="_SilCRCcoEeSLVrU2ifxtpw" source="_SilCMycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilCMycoEeSLVrU2ifxtpw" name="Initialize(notifications)" outgoing="_SilCMicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCNCcoEeSLVrU2ifxtpw" target="_SilCQScoEeSLVrU2ifxtpw" source="_SilCNicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilCNScoEeSLVrU2ifxtpw" name="Value(0)">
                  <result xmi:id="_SilCNicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SilCNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCNycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCOCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SilCOScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilCOicoEeSLVrU2ifxtpw" name="Write(notifications)" structuralFeature="_SilBdycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SilCOycoEeSLVrU2ifxtpw" name="Write(notifications).object" incoming="_SilCIicoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCPCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCPScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilCPicoEeSLVrU2ifxtpw" name="Write(notifications).result" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCPycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCQCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SilCQScoEeSLVrU2ifxtpw" name="Write(notifications).value" incoming="_SilCNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCQicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCQycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilCRCcoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SilCMicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilCRScoEeSLVrU2ifxtpw" target="_SilCUicoEeSLVrU2ifxtpw" source="_SilCRycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilCRicoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SilCRycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SilCRScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCSCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCSScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SilCSicoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilCSycoEeSLVrU2ifxtpw" name="Write(Listener$initializationFlag$1)" structuralFeature="_SilBcScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SilCTCcoEeSLVrU2ifxtpw" name="Write(Listener$initializationFlag$1).object" incoming="_SilCIycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCTScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCTicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilCTycoEeSLVrU2ifxtpw" name="Write(Listener$initializationFlag$1).result" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCUCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCUScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SilCUicoEeSLVrU2ifxtpw" name="Write(Listener$initializationFlag$1).value" incoming="_SilCRScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCUycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCVCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilCVScoEeSLVrU2ifxtpw" name="Read(Listener$initializationFlag$1)" structuralFeature="_SilBcScoEeSLVrU2ifxtpw">
              <object xmi:id="_SilCVicoEeSLVrU2ifxtpw" name="Read(Listener$initializationFlag$1).object" incoming="_SilCJCcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCVycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCWCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SilCWScoEeSLVrU2ifxtpw" name="Read(Listener$initializationFlag$1).result" outgoing="_SilCJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCWicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCWycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilCXCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SilCXScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SilCJScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCXicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCXycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilCYCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SilCJicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCYScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCYicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilCYycoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SilCZCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SilCJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCZScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCZicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SilCZycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SilCaCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SilCaScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SilCJicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCaicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCaycoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SilCbCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SilCKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCbScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCbicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SilCbycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SilCJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCcCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCcScoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SilCcicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SilCKCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SilCcycoEeSLVrU2ifxtpw" name="Decision(Test(Listener$initializationFlag$1))" incoming="_SilCKCcoEeSLVrU2ifxtpw _SilCKScoEeSLVrU2ifxtpw" outgoing="_SilCKicoEeSLVrU2ifxtpw" decisionInputFlow="_SilCKScoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SilCdCcoEeSLVrU2ifxtpw" name="Listener$initialization$1" visibility="protected" method="_SilCHycoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SilCdScoEeSLVrU2ifxtpw" name="Listener" visibility="public" method="_SilBeicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SilCdicoEeSLVrU2ifxtpw" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCdycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCeCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SilCeScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCeicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCeycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SilCfCcoEeSLVrU2ifxtpw" name="notify" visibility="public" method="_SilB3icoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SilCfScoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SilCHScoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SilCficoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Map__PrimitiveTypes$Integer_Units_Map$Listener__" isAbstract="true">
      <ownedComment xmi:id="_SilCfycoEeSLVrU2ifxtpw" annotatedElement="_SilCficoEeSLVrU2ifxtpw">
        <body>Dictionary of key and value pairs called &quot;entries&quot;. Concrete unordered, unique (by
              key) collection. </body>
      </ownedComment>
      <ownedOperation xmi:id="_SilCgCcoEeSLVrU2ifxtpw" name="Map" isAbstract="true">
        <ownedComment xmi:id="_SilCgScoEeSLVrU2ifxtpw" annotatedElement="_SilCgCcoEeSLVrU2ifxtpw">
          <body>Construct a map and add the given entries. No two entries may have the same key.
                pre: entries->isUnique(key) post: result.toSequence()->asSet() =
                sequence->asSet() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCgicoEeSLVrU2ifxtpw" name="entries" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCgycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilChCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilChScoEeSLVrU2ifxtpw" type="_SilC9ScoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SilChicoEeSLVrU2ifxtpw" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_SilChycoEeSLVrU2ifxtpw" annotatedElement="_SilChicoEeSLVrU2ifxtpw">
          <body>Destroy this map. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCiCcoEeSLVrU2ifxtpw" name="clear" isAbstract="true">
        <ownedComment xmi:id="_SilCiScoEeSLVrU2ifxtpw" annotatedElement="_SilCiCcoEeSLVrU2ifxtpw">
          <body>Remove all entries in this map. post: self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCiicoEeSLVrU2ifxtpw" name="entries" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilCiycoEeSLVrU2ifxtpw" annotatedElement="_SilCiicoEeSLVrU2ifxtpw">
          <body>Return a set of copies of the entries in this map. post:
                result.equals(self.toSequence()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCjCcoEeSLVrU2ifxtpw" type="_SilC4icoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCjScoEeSLVrU2ifxtpw" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilCjicoEeSLVrU2ifxtpw" annotatedElement="_SilCjScoEeSLVrU2ifxtpw">
          <body>Returns true if this map contains none of the given entries. post: result =
                self.toSequence()->excludesAll(entries) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCjycoEeSLVrU2ifxtpw" name="entries" type="_SilC7icoEeSLVrU2ifxtpw">
          <ownedComment xmi:id="_SilCkCcoEeSLVrU2ifxtpw" annotatedElement="_SilCjycoEeSLVrU2ifxtpw">
            <body>Entries to be tested for containment.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCkScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCkicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilCkycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilClCcoEeSLVrU2ifxtpw" name="get" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilClScoEeSLVrU2ifxtpw" annotatedElement="_SilClCcoEeSLVrU2ifxtpw">
          <body>Returns the value associated with the given key, or nothing if there is no entry
                in this map with its key equal to key. pre:
                self.keys().toSequence()->includes(key) post: result =
                self.toSequence()->select(e | e.key = key).value e </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilClicoEeSLVrU2ifxtpw" name="key" effect="create">
          <ownedComment xmi:id="_SilClycoEeSLVrU2ifxtpw" annotatedElement="_SilClicoEeSLVrU2ifxtpw">
            <body>The key for which the value is desired.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilCmCcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SilCmScoEeSLVrU2ifxtpw" annotatedElement="_SilCmCcoEeSLVrU2ifxtpw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCmicoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCmycoEeSLVrU2ifxtpw" name="keys" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilCnCcoEeSLVrU2ifxtpw" annotatedElement="_SilCmycoEeSLVrU2ifxtpw">
          <body>Return a set of copies of the keys in this map. post:
                result.equals(self.toSequence().key) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCnScoEeSLVrU2ifxtpw" type="_SilC5icoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCnicoEeSLVrU2ifxtpw" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilCnycoEeSLVrU2ifxtpw" annotatedElement="_SilCnicoEeSLVrU2ifxtpw">
          <body>Returns true if this map contains all of the given entries. post: result =
                self.entries().includesAll(entries) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCoCcoEeSLVrU2ifxtpw" name="entries" type="_SilC7icoEeSLVrU2ifxtpw">
          <ownedComment xmi:id="_SilCoScoEeSLVrU2ifxtpw" annotatedElement="_SilCoCcoEeSLVrU2ifxtpw">
            <body>The entries to be tested for containment.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCoicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCoycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilCpCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCpScoEeSLVrU2ifxtpw" name="includesKey" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilCpicoEeSLVrU2ifxtpw" annotatedElement="_SilCpScoEeSLVrU2ifxtpw">
          <body>Return true if this map contains an entry with its key equal to the given key
                post: result = self.keys().includes(key) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCpycoEeSLVrU2ifxtpw" name="key" effect="create">
          <ownedComment xmi:id="_SilCqCcoEeSLVrU2ifxtpw" annotatedElement="_SilCpycoEeSLVrU2ifxtpw">
            <body>A key to be searched for in this map.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilCqScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SilCqicoEeSLVrU2ifxtpw" annotatedElement="_SilCqScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCqycoEeSLVrU2ifxtpw" name="includesValue" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilCrCcoEeSLVrU2ifxtpw" annotatedElement="_SilCqycoEeSLVrU2ifxtpw">
          <body>Return true if an entry in this map has its value equal to value. post: result =
                self.toSequence()->exists(e | e.value = value ) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCrScoEeSLVrU2ifxtpw" name="value" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_SilCricoEeSLVrU2ifxtpw" annotatedElement="_SilCrScoEeSLVrU2ifxtpw">
            <body>A value to be found in the map.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCrycoEeSLVrU2ifxtpw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilCsCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCsScoEeSLVrU2ifxtpw" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilCsicoEeSLVrU2ifxtpw" annotatedElement="_SilCsScoEeSLVrU2ifxtpw">
          <body>Return true if this map contains no entries. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCsycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SilCtCcoEeSLVrU2ifxtpw" annotatedElement="_SilCsycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCtScoEeSLVrU2ifxtpw" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilCticoEeSLVrU2ifxtpw" annotatedElement="_SilCtScoEeSLVrU2ifxtpw">
          <body>Return true if this map contains at least one entry. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCtycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCuCcoEeSLVrU2ifxtpw" name="put" isAbstract="true">
        <ownedComment xmi:id="_SilCuScoEeSLVrU2ifxtpw" annotatedElement="_SilCuCcoEeSLVrU2ifxtpw">
          <body>Associate a value with a key, creating a new entry if necessary. Return the
                previously associated value, or nothing if this is a new entry. post: result =
                self@pre.get(key) and self.toSequence().key->asSet() =
                self@pre.toSequence().key->asSet()->including(key) and
                self.toSequence()->isUnique(key) and
                self.keys().toSequence()->forAll(k | self.get(k) = if e.key = key then value
                else self@pre.get(k)) ey = key then value else self@pre.get(k)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCuicoEeSLVrU2ifxtpw" name="key" effect="create">
          <ownedComment xmi:id="_SilCuycoEeSLVrU2ifxtpw" annotatedElement="_SilCuicoEeSLVrU2ifxtpw">
            <body>Key with which the value is to be associated.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilCvCcoEeSLVrU2ifxtpw" name="value" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_SilCvScoEeSLVrU2ifxtpw" annotatedElement="_SilCvCcoEeSLVrU2ifxtpw">
            <body>Value to be associated with the key.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCvicoEeSLVrU2ifxtpw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilCvycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCwCcoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCwScoEeSLVrU2ifxtpw" name="putAll" isAbstract="true">
        <ownedComment xmi:id="_SilCwicoEeSLVrU2ifxtpw" annotatedElement="_SilCwScoEeSLVrU2ifxtpw">
          <body>Add all the given entries to this map. Any entry with a key already present in
                this map replaces the previous entry in this map. No two of the given entries may
                have the same key. pre: entries->isUnique(key) post:
                self.toSequence().key->asSet() =
                self@pre.toSequence().key->asSet()->union(entries->asSet()) and
                self.toSequence()->isUnique(key) and
                self.keys().toSequence()->forAll(k | self.get(k) = if
                entries.key->includes(k) then entries->select(key=k) else
                self@pre.get(k))       else self@pre.get(k))      </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCwycoEeSLVrU2ifxtpw" name="entries" type="_SilC7icoEeSLVrU2ifxtpw">
          <ownedComment xmi:id="_SilCxCcoEeSLVrU2ifxtpw" annotatedElement="_SilCwycoEeSLVrU2ifxtpw">
            <body>The entries to be added.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCxScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilCxicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCxycoEeSLVrU2ifxtpw" name="remove" isAbstract="true">
        <ownedComment xmi:id="_SilCyCcoEeSLVrU2ifxtpw" annotatedElement="_SilCxycoEeSLVrU2ifxtpw">
          <body>Remove any association of a value to the given key. Return the value previously
                associated with the key, or nothing if there was no previous entry for the key pre:
                self.includesKey(key) post: result = self@pre.get(key) and      
                self.toSequence()->isUnique(key) and self.toSequence()->asSet() =
                self@pre.toSequence()->reject(e | e.key = key)->asSet()
                ey)->asSet() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilCyScoEeSLVrU2ifxtpw" name="key" effect="create">
          <ownedComment xmi:id="_SilCyicoEeSLVrU2ifxtpw" annotatedElement="_SilCyScoEeSLVrU2ifxtpw">
            <body>The key that defines the entry to remove.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilCyycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SilCzCcoEeSLVrU2ifxtpw" annotatedElement="_SilCyycoEeSLVrU2ifxtpw">
            <body>The value previously associated to key, if there was an entry with its key
                  equal to key</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilCzScoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilCzicoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_SilCzycoEeSLVrU2ifxtpw" annotatedElement="_SilCzicoEeSLVrU2ifxtpw">
          <body>Remove all associations of a value to any of the given keys. post:
                self.toSequence()->isUnique(key) and self.toSequence()->asSet() =
                self@pre.toSequence()->reject(e |
                keys->includes(e.key))->asSet() ->asSet() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilC0CcoEeSLVrU2ifxtpw" name="keys">
          <ownedComment xmi:id="_SilC0ScoEeSLVrU2ifxtpw" annotatedElement="_SilC0CcoEeSLVrU2ifxtpw">
            <body>The keys all of whose entries are to be removed.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilC0icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilC0ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilC1CcoEeSLVrU2ifxtpw" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilC1ScoEeSLVrU2ifxtpw" annotatedElement="_SilC1CcoEeSLVrU2ifxtpw">
          <body>Returns the number of entries in this map. post: result =
                self.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilC1icoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SilC1ycoEeSLVrU2ifxtpw" annotatedElement="_SilC1icoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilC2CcoEeSLVrU2ifxtpw" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilC2ScoEeSLVrU2ifxtpw" annotatedElement="_SilC2CcoEeSLVrU2ifxtpw">
          <body>Return a sequence (UML ordered, non-unique collection) containing copies all
                entries in this map. The order is arbitrary. (The requirements on the returned
                sequence from this operation are specified implicitly by the required behavior of
                the mutating operations of the Map class.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilC2icoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_SilC2ycoEeSLVrU2ifxtpw" annotatedElement="_SilC2icoEeSLVrU2ifxtpw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilC3CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilC3ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilC3icoEeSLVrU2ifxtpw" name="values" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SilC3ycoEeSLVrU2ifxtpw" annotatedElement="_SilC3icoEeSLVrU2ifxtpw _SilCmycoEeSLVrU2ifxtpw">
          <body>Return a bag of copies of the values in this map. (A bag is returned, since a
                single value may be associated with more than one entry in the map.) post:
                result.equals(self.toSequence().value) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SilC4CcoEeSLVrU2ifxtpw" type="_SilC6icoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SilC4ScoEeSLVrU2ifxtpw" annotatedElement="_SilC4CcoEeSLVrU2ifxtpw"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SilC4icoEeSLVrU2ifxtpw" name="Set&lt;Entry>">
        <ownedComment xmi:id="_SilC4ycoEeSLVrU2ifxtpw" annotatedElement="_SilC4icoEeSLVrU2ifxtpw">
          <body>A Set of type Set&lt;Map.Entry> for the purpose of returning a set
                view of entries in a map</body>
        </ownedComment>
        <templateBinding xmi:id="_SilC5CcoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_SilC5ScoEeSLVrU2ifxtpw" actual="_SilC7icoEeSLVrU2ifxtpw">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SilC5icoEeSLVrU2ifxtpw" name="Set&lt;Key>">
        <ownedComment xmi:id="_SilC5ycoEeSLVrU2ifxtpw" annotatedElement="_SilC5icoEeSLVrU2ifxtpw">
          <body>A Set of type Set&lt;T->Key> for the purpose of returning a set view of keys in a map</body>
        </ownedComment>
        <templateBinding xmi:id="_SilC6CcoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_SilC6ScoEeSLVrU2ifxtpw">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SilC6icoEeSLVrU2ifxtpw" name="Bag&lt;Value>">
        <ownedComment xmi:id="_SilC6ycoEeSLVrU2ifxtpw" annotatedElement="_SilC6icoEeSLVrU2ifxtpw _SilC5icoEeSLVrU2ifxtpw">
          <body>A List of type &lt;T->Value> for the purpose of returning a list view of values n a map</body>
        </ownedComment>
        <templateBinding xmi:id="_SilC7CcoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_SilC7ScoEeSLVrU2ifxtpw" actual="_SilBcCcoEeSLVrU2ifxtpw">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:DataType" xmi:id="_SilC7icoEeSLVrU2ifxtpw" name="Entry">
        <ownedComment xmi:id="_SilC7ycoEeSLVrU2ifxtpw" annotatedElement="_SilC7icoEeSLVrU2ifxtpw">
          <body>An association of value to key. Note that entries are data values that are
                always passed by copy. Changing an entry returned outside of a map will NOT effect
                the association within the map. </body>
        </ownedComment>
        <ownedTemplateSignature xmi:type="uml:RedefinableTemplateSignature" xmi:id="_SilC8CcoEeSLVrU2ifxtpw">
          <extendedSignature href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Map-ownedTemplateSignature"/>
        </ownedTemplateSignature>
        <ownedAttribute xmi:id="_SilC8ScoEeSLVrU2ifxtpw" name="key">
          <ownedComment xmi:id="_SilC8icoEeSLVrU2ifxtpw" annotatedElement="_SilC8ScoEeSLVrU2ifxtpw">
            <body>The key for this association, used for lookup</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SilC8ycoEeSLVrU2ifxtpw" name="value" type="_SilBcCcoEeSLVrU2ifxtpw">
          <ownedComment xmi:id="_SilC9CcoEeSLVrU2ifxtpw" annotatedElement="_SilC8ycoEeSLVrU2ifxtpw">
            <body>An optional value for this association</body>
          </ownedComment>
        </ownedAttribute>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SilC9ScoEeSLVrU2ifxtpw" name="Map&lt;Key,Value>">
        <templateBinding xmi:id="_SilC9icoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_SilC9ycoEeSLVrU2ifxtpw">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Map-ownedTemplateSignature-ownedParameter-1"/>
          </parameterSubstitution>
          <parameterSubstitution xmi:id="_SilC-CcoEeSLVrU2ifxtpw" actual="_SilBcCcoEeSLVrU2ifxtpw">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Map-ownedTemplateSignature-ownedParameter-2"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Map-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SilC-ScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SilC-icoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SilC-ycoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Map-ownedTemplateSignature-ownedParameter-1"/>
        </parameterSubstitution>
        <parameterSubstitution xmi:id="_SilC_CcoEeSLVrU2ifxtpw" actual="_SilBcCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Map-ownedTemplateSignature-ownedParameter-2"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Map-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SilC_ScoEeSLVrU2ifxtpw" client="_SilCficoEeSLVrU2ifxtpw" supplier="_SilC-ScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_SilC_icoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Impl$Map__PrimitiveTypes$Integer_Units_Map$Listener__">
      <generalization xmi:id="_SilC_ycoEeSLVrU2ifxtpw">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#MapImpl"/>
      </generalization>
      <generalization xmi:id="_SilDACcoEeSLVrU2ifxtpw" general="_SilCficoEeSLVrU2ifxtpw"/>
      <ownedAttribute xmi:id="_SilDAScoEeSLVrU2ifxtpw" name="Map$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDAicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDAycoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilDBCcoEeSLVrU2ifxtpw" name="Map$method$1" specification="_SiloHScoEeSLVrU2ifxtpw" node="_SilDDicoEeSLVrU2ifxtpw _SilDDycoEeSLVrU2ifxtpw _SilDECcoEeSLVrU2ifxtpw _SilDEScoEeSLVrU2ifxtpw" group="_SilDEScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilDBScoEeSLVrU2ifxtpw" name="entries" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDBicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDBycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilDCCcoEeSLVrU2ifxtpw" name="" type="_SilC_icoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDCScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDCicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDCycoEeSLVrU2ifxtpw" target="_SilDDycoEeSLVrU2ifxtpw" source="_SilDDicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDDCcoEeSLVrU2ifxtpw" target="_SilDECcoEeSLVrU2ifxtpw" source="_SilDIycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDDScoEeSLVrU2ifxtpw" target="_SilDMScoEeSLVrU2ifxtpw" source="_SilDDycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilDEScoEeSLVrU2ifxtpw" name="Body(Map$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDEicoEeSLVrU2ifxtpw" target="_SilDIycoEeSLVrU2ifxtpw" source="_SilDICcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDEycoEeSLVrU2ifxtpw" target="_SilDOCcoEeSLVrU2ifxtpw" source="_SilDIycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilDFCcoEeSLVrU2ifxtpw" target="_SilDHicoEeSLVrU2ifxtpw" source="_SilDNycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilDFScoEeSLVrU2ifxtpw" target="_SilDNycoEeSLVrU2ifxtpw" source="_SilDJCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDFicoEeSLVrU2ifxtpw" target="_SilDPCcoEeSLVrU2ifxtpw" source="_SilDIycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDFycoEeSLVrU2ifxtpw" target="_SilDQycoEeSLVrU2ifxtpw" source="_SilDPycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDGCcoEeSLVrU2ifxtpw" target="_SilDTycoEeSLVrU2ifxtpw" source="_SilDRicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDGScoEeSLVrU2ifxtpw" target="_SilDVScoEeSLVrU2ifxtpw" source="_SilDSicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilDGicoEeSLVrU2ifxtpw" target="_SilDWScoEeSLVrU2ifxtpw" source="_SilDWCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDGycoEeSLVrU2ifxtpw" target="_SilDWScoEeSLVrU2ifxtpw" source="_SilDUicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilDHCcoEeSLVrU2ifxtpw" target="_SilDJCcoEeSLVrU2ifxtpw" source="_SilDWScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilDHScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDHicoEeSLVrU2ifxtpw" name="Body" incoming="_SilDFCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SilDHycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SilDICcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilDEicoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDIScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDIicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SilDIycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilDEicoEeSLVrU2ifxtpw" outgoing="_SilDDCcoEeSLVrU2ifxtpw _SilDEycoEeSLVrU2ifxtpw _SilDFicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDJCcoEeSLVrU2ifxtpw" name="Super" incoming="_SilDHCcoEeSLVrU2ifxtpw" outgoing="_SilDFScoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDJScoEeSLVrU2ifxtpw" name="ExpressionStatement@22c5157">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDJicoEeSLVrU2ifxtpw" target="_SilDKScoEeSLVrU2ifxtpw" source="_SilDNCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SilDJycoEeSLVrU2ifxtpw" target="_SilDKCcoEeSLVrU2ifxtpw" source="_SilDLycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilDKCcoEeSLVrU2ifxtpw" name="Call(MapImpl$method$1)" incoming="_SilDJycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SilDKScoEeSLVrU2ifxtpw" name="Call(MapImpl$method$1).argument(entries)" incoming="_SilDJicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDKicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDKycoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SilDLCcoEeSLVrU2ifxtpw" name="Call(MapImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#MapImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDLScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDLicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-MapImplmethod1"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDLycoEeSLVrU2ifxtpw" name="Tuple@2b650d20" outgoing="_SilDJycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilDMCcoEeSLVrU2ifxtpw" name="Call(ToEntryImpls)" behavior="_SiloficoEeSLVrU2ifxtpw">
                  <argument xmi:id="_SilDMScoEeSLVrU2ifxtpw" name="Call(ToEntryImpls).argument(entries)" incoming="_SilDDScoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDMicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDMycoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <result xmi:id="_SilDNCcoEeSLVrU2ifxtpw" name="Call(ToEntryImpls).result()" outgoing="_SilDJicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDNScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDNicoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SilDNycoEeSLVrU2ifxtpw" name="Call(Map$initialization$1)" incoming="_SilDFScoEeSLVrU2ifxtpw" outgoing="_SilDFCcoEeSLVrU2ifxtpw" operation="_SiloHCcoEeSLVrU2ifxtpw">
            <target xmi:id="_SilDOCcoEeSLVrU2ifxtpw" name="Call(Map$initialization$1).target" incoming="_SilDEycoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDOScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDOicoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilDOycoEeSLVrU2ifxtpw" name="Read(Map$initializationFlag$1)" structuralFeature="_SilDAScoEeSLVrU2ifxtpw">
            <object xmi:id="_SilDPCcoEeSLVrU2ifxtpw" name="Read(Map$initializationFlag$1).object" incoming="_SilDFicoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDPScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDPicoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SilDPycoEeSLVrU2ifxtpw" name="Read(Map$initializationFlag$1).result" outgoing="_SilDFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDQCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDQScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilDQicoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SilDQycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SilDFycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDRCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDRScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SilDRicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SilDGCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDRycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDSCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilDSScoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SilDSicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SilDGScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDSycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDTCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SilDTScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SilDTicoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SilDTycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SilDGCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDUCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDUScoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SilDUicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SilDGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDUycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDVCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SilDVScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SilDGScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDVicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDVycoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SilDWCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SilDGicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SilDWScoEeSLVrU2ifxtpw" name="Decision(Test(Map$initializationFlag$1))" incoming="_SilDGicoEeSLVrU2ifxtpw _SilDGycoEeSLVrU2ifxtpw" outgoing="_SilDHCcoEeSLVrU2ifxtpw" decisionInputFlow="_SilDGycoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilDDicoEeSLVrU2ifxtpw" name="Input(entries)" outgoing="_SilDCycoEeSLVrU2ifxtpw" parameter="_SilDBScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilDDycoEeSLVrU2ifxtpw" name="Fork(entries)" incoming="_SilDCycoEeSLVrU2ifxtpw" outgoing="_SilDDScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilDECcoEeSLVrU2ifxtpw" name="Return" incoming="_SilDDCcoEeSLVrU2ifxtpw" parameter="_SilDCCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilDWicoEeSLVrU2ifxtpw" name="destroy$method$2" specification="_SiloJCcoEeSLVrU2ifxtpw" node="_SilDWycoEeSLVrU2ifxtpw" group="_SilDWycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SilDWycoEeSLVrU2ifxtpw" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilDXCcoEeSLVrU2ifxtpw" name="entries$method$1" specification="_SiloJScoEeSLVrU2ifxtpw" node="_SilDYicoEeSLVrU2ifxtpw _SilDYycoEeSLVrU2ifxtpw _SilDZCcoEeSLVrU2ifxtpw" group="_SilDZCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilDXScoEeSLVrU2ifxtpw" name="" type="_SimO-CcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDXicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDXycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilDYCcoEeSLVrU2ifxtpw" target="_SilDYycoEeSLVrU2ifxtpw" source="_SilDZScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDYScoEeSLVrU2ifxtpw" target="_SilDYicoEeSLVrU2ifxtpw" source="_SilDaicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilDZCcoEeSLVrU2ifxtpw" name="Body(entries$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDZScoEeSLVrU2ifxtpw" name="ReturnStatement@4ef59130" outgoing="_SilDYCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDZicoEeSLVrU2ifxtpw" target="_SilDdCcoEeSLVrU2ifxtpw" source="_SilDeCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDZycoEeSLVrU2ifxtpw" target="_SilDbicoEeSLVrU2ifxtpw" source="_SilDgicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilDaCcoEeSLVrU2ifxtpw" target="_SilDbScoEeSLVrU2ifxtpw" source="_SilDeycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDaScoEeSLVrU2ifxtpw" target="_SilDaicoEeSLVrU2ifxtpw" source="_SilDcScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilDaicoEeSLVrU2ifxtpw" name="ReturnStatement@4ef59130.output" incoming="_SilDaScoEeSLVrU2ifxtpw" outgoing="_SilDYScoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDaycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDbCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SilDbScoEeSLVrU2ifxtpw" name="Call(Set)" incoming="_SilDaCcoEeSLVrU2ifxtpw" operation="_Silr-CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SilDbicoEeSLVrU2ifxtpw" name="Call(Set).argument(seq)" incoming="_SilDZycoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDbycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDcCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilDcScoEeSLVrU2ifxtpw" name="Call(Set).result()" outgoing="_SilDaScoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDcicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDcycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_SilDdCcoEeSLVrU2ifxtpw" name="Call(Set).target" incoming="_SilDZicoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDdScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDdicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:CreateObjectAction" xmi:id="_SilDdycoEeSLVrU2ifxtpw" name="Create($$Impl$Set__Alf$Library$CollectionClasses$$$Map__Impl$Map$Key_Impl$Map$Value__$Entry__)" classifier="_SilpVicoEeSLVrU2ifxtpw">
              <result xmi:id="_SilDeCcoEeSLVrU2ifxtpw" name="Create($$Set__Alf$Library$CollectionClasses$$$Map__Impl$Map$Key_Impl$Map$Value__$Entry__).result" outgoing="_SilDZicoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDeScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDeicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDeycoEeSLVrU2ifxtpw" name="Tuple@24303d56" outgoing="_SilDaCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDfCcoEeSLVrU2ifxtpw" target="_SilDfycoEeSLVrU2ifxtpw" source="_SilDhycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SilDfScoEeSLVrU2ifxtpw" target="_SilDficoEeSLVrU2ifxtpw" source="_SilDhScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilDficoEeSLVrU2ifxtpw" name="Call(ToEntries)" incoming="_SilDfScoEeSLVrU2ifxtpw" behavior="_Silo1ScoEeSLVrU2ifxtpw">
                <argument xmi:id="_SilDfycoEeSLVrU2ifxtpw" name="Call(ToEntries).argument(entryImpls)" incoming="_SilDfCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDgCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDgScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SilDgicoEeSLVrU2ifxtpw" name="Call(ToEntries).result()" outgoing="_SilDZycoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDgycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDhCcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDhScoEeSLVrU2ifxtpw" name="Tuple@7b344353" outgoing="_SilDfScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilDhicoEeSLVrU2ifxtpw" name="Call(entriesImpl$method$1)">
                  <result xmi:id="_SilDhycoEeSLVrU2ifxtpw" name="Call(entriesImpl$method$1).result()" outgoing="_SilDfCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDiCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDiScoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-entriesImplmethod1"/>
                </node>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilDYicoEeSLVrU2ifxtpw" name="Return" incoming="_SilDYScoEeSLVrU2ifxtpw" parameter="_SilDXScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilDYycoEeSLVrU2ifxtpw" name="Final" incoming="_SilDYCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilDiicoEeSLVrU2ifxtpw" name="clear$method$1" specification="_SiloKScoEeSLVrU2ifxtpw" node="_SilDiycoEeSLVrU2ifxtpw" group="_SilDiycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SilDiycoEeSLVrU2ifxtpw" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDjCcoEeSLVrU2ifxtpw" name="ExpressionStatement@4cb45fee">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilDjScoEeSLVrU2ifxtpw" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilDjicoEeSLVrU2ifxtpw" name="excludesAll$method$1" specification="_SiloKicoEeSLVrU2ifxtpw" node="_SilDmCcoEeSLVrU2ifxtpw _SilDmScoEeSLVrU2ifxtpw _SilDmicoEeSLVrU2ifxtpw _SilDmycoEeSLVrU2ifxtpw _SilDnCcoEeSLVrU2ifxtpw" group="_SilDnCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilDjycoEeSLVrU2ifxtpw" name="entries" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDkCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDkScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilDkicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDkycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDlCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDlScoEeSLVrU2ifxtpw" target="_SilDmScoEeSLVrU2ifxtpw" source="_SilDmCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilDlicoEeSLVrU2ifxtpw" target="_SilDmycoEeSLVrU2ifxtpw" source="_SilDnScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDlycoEeSLVrU2ifxtpw" target="_SilDmicoEeSLVrU2ifxtpw" source="_SilDoScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilDnCcoEeSLVrU2ifxtpw" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDnScoEeSLVrU2ifxtpw" name="ReturnStatement@6c8b1edd" outgoing="_SilDlicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDnicoEeSLVrU2ifxtpw" target="_SilDpScoEeSLVrU2ifxtpw" source="_SilDrScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilDnycoEeSLVrU2ifxtpw" target="_SilDpCcoEeSLVrU2ifxtpw" source="_SilDqycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDoCcoEeSLVrU2ifxtpw" target="_SilDoScoEeSLVrU2ifxtpw" source="_SilDqCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilDoScoEeSLVrU2ifxtpw" name="ReturnStatement@6c8b1edd.output" incoming="_SilDoCcoEeSLVrU2ifxtpw" outgoing="_SilDlycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDoicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDoycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilDpCcoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1)" incoming="_SilDnycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SilDpScoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).argument(entries)" incoming="_SilDnicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDpicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDpycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilDqCcoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).result()" outgoing="_SilDoCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDqScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDqicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-excludesAllImplmethod1"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDqycoEeSLVrU2ifxtpw" name="Tuple@45aee222" outgoing="_SilDnycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilDrCcoEeSLVrU2ifxtpw" name="Value(null)">
                <result xmi:id="_SilDrScoEeSLVrU2ifxtpw" name="Value(null).result" outgoing="_SilDnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDricoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDrycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_SilDsCcoEeSLVrU2ifxtpw"/>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilDmCcoEeSLVrU2ifxtpw" name="Input(entries)" outgoing="_SilDlScoEeSLVrU2ifxtpw" parameter="_SilDjycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilDmScoEeSLVrU2ifxtpw" name="Fork(entries)" incoming="_SilDlScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilDmicoEeSLVrU2ifxtpw" name="Return" incoming="_SilDlycoEeSLVrU2ifxtpw" parameter="_SilDkicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilDmycoEeSLVrU2ifxtpw" name="Final" incoming="_SilDlicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilDsScoEeSLVrU2ifxtpw" name="get$method$1" specification="_SiloMScoEeSLVrU2ifxtpw" node="_SilDvCcoEeSLVrU2ifxtpw _SilDvScoEeSLVrU2ifxtpw _SilDvicoEeSLVrU2ifxtpw _SilDvycoEeSLVrU2ifxtpw _SilDwCcoEeSLVrU2ifxtpw" group="_SilDwCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilDsicoEeSLVrU2ifxtpw" name="key">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDsycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDtCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilDtScoEeSLVrU2ifxtpw" name="" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDticoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDtycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDuCcoEeSLVrU2ifxtpw" target="_SilDvScoEeSLVrU2ifxtpw" source="_SilDvCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilDuScoEeSLVrU2ifxtpw" target="_SilDvycoEeSLVrU2ifxtpw" source="_SilDwScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDuicoEeSLVrU2ifxtpw" target="_SilDyCcoEeSLVrU2ifxtpw" source="_SilDvScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDuycoEeSLVrU2ifxtpw" target="_SilDvicoEeSLVrU2ifxtpw" source="_SilDxCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilDwCcoEeSLVrU2ifxtpw" name="Body(get$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilDwScoEeSLVrU2ifxtpw" name="ReturnStatement@5bcb8d05" outgoing="_SilDuScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDwicoEeSLVrU2ifxtpw" target="_SilD4CcoEeSLVrU2ifxtpw" source="_SilDyycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDwycoEeSLVrU2ifxtpw" target="_SilDxCcoEeSLVrU2ifxtpw" source="_SilD4ScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilDxCcoEeSLVrU2ifxtpw" name="ReturnStatement@5bcb8d05.output" incoming="_SilDwycoEeSLVrU2ifxtpw" outgoing="_SilDuycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDxScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDxicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilDxycoEeSLVrU2ifxtpw" name="Call(getImpl$method$1)">
              <argument xmi:id="_SilDyCcoEeSLVrU2ifxtpw" name="Call(getImpl$method$1).argument(key)" incoming="_SilDuicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDyScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDyicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilDyycoEeSLVrU2ifxtpw" name="Call(getImpl$method$1).result()" outgoing="_SilDwicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilDzCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilDzScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-getImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_SilDzicoEeSLVrU2ifxtpw" name="CastExpression@2d43fc61" mode="parallel" outputElement="_SilD4ScoEeSLVrU2ifxtpw" inputElement="_SilD4CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilDzycoEeSLVrU2ifxtpw" target="_SilD2CcoEeSLVrU2ifxtpw" source="_SilD3icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD0CcoEeSLVrU2ifxtpw" target="_SilD3ycoEeSLVrU2ifxtpw" source="_SilD3icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD0ScoEeSLVrU2ifxtpw" target="_SilD3ycoEeSLVrU2ifxtpw" source="_SilD2ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD0icoEeSLVrU2ifxtpw" target="_SilD1icoEeSLVrU2ifxtpw" source="_SilD3ycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilD0ycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD1CcoEeSLVrU2ifxtpw" target="_SilD3icoEeSLVrU2ifxtpw" source="_SilD4CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD1ScoEeSLVrU2ifxtpw" target="_SilD4ScoEeSLVrU2ifxtpw" source="_SilD1icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SilD1icoEeSLVrU2ifxtpw" name="Merge(CastExpression@2d43fc61.operand)" incoming="_SilD0icoEeSLVrU2ifxtpw" outgoing="_SilD1ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SilD1ycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value)" classifier="_SilBcCcoEeSLVrU2ifxtpw">
                <object xmi:id="_SilD2CcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).object" incoming="_SilDzycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilD2ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilD2icoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilD2ycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).result" outgoing="_SilD0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilD3CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilD3ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilD3icoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(Value).object)" incoming="_SilD1CcoEeSLVrU2ifxtpw" outgoing="_SilDzycoEeSLVrU2ifxtpw _SilD0CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SilD3ycoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(Value).result)" incoming="_SilD0CcoEeSLVrU2ifxtpw _SilD0ScoEeSLVrU2ifxtpw" outgoing="_SilD0icoEeSLVrU2ifxtpw" decisionInputFlow="_SilD0ScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilD4CcoEeSLVrU2ifxtpw" name="CastExpression@2d43fc61.inputElement" incoming="_SilDwicoEeSLVrU2ifxtpw" outgoing="_SilD1CcoEeSLVrU2ifxtpw" regionAsInput="_SilDzicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilD4ScoEeSLVrU2ifxtpw" name="CastExpression@2d43fc61.outputElement" incoming="_SilD1ScoEeSLVrU2ifxtpw" outgoing="_SilDwycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" regionAsOutput="_SilDzicoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilDvCcoEeSLVrU2ifxtpw" name="Input(key)" outgoing="_SilDuCcoEeSLVrU2ifxtpw" parameter="_SilDsicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilDvScoEeSLVrU2ifxtpw" name="Fork(key)" incoming="_SilDuCcoEeSLVrU2ifxtpw" outgoing="_SilDuicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilDvicoEeSLVrU2ifxtpw" name="Return" incoming="_SilDuycoEeSLVrU2ifxtpw" parameter="_SilDtScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilDvycoEeSLVrU2ifxtpw" name="Final" incoming="_SilDuScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilD4icoEeSLVrU2ifxtpw" name="includesAll$method$1" specification="_SiloOCcoEeSLVrU2ifxtpw" node="_SilD7ScoEeSLVrU2ifxtpw _SilD7icoEeSLVrU2ifxtpw _SilD7ycoEeSLVrU2ifxtpw _SilD8CcoEeSLVrU2ifxtpw _SilD8ScoEeSLVrU2ifxtpw" group="_SilD8ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilD4ycoEeSLVrU2ifxtpw" name="entries" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilD5CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilD5ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilD5icoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilD5ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilD6CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD6ScoEeSLVrU2ifxtpw" target="_SilD7icoEeSLVrU2ifxtpw" source="_SilD7ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilD6icoEeSLVrU2ifxtpw" target="_SilD8CcoEeSLVrU2ifxtpw" source="_SilD8icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD6ycoEeSLVrU2ifxtpw" target="_SilEAicoEeSLVrU2ifxtpw" source="_SilD7icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD7CcoEeSLVrU2ifxtpw" target="_SilD7ycoEeSLVrU2ifxtpw" source="_SilD9icoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilD8ScoEeSLVrU2ifxtpw" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilD8icoEeSLVrU2ifxtpw" name="ReturnStatement@57d182e8" outgoing="_SilD6icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD8ycoEeSLVrU2ifxtpw" target="_SilD-icoEeSLVrU2ifxtpw" source="_SilEBScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilD9CcoEeSLVrU2ifxtpw" target="_SilD-ScoEeSLVrU2ifxtpw" source="_SilEACcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilD9ScoEeSLVrU2ifxtpw" target="_SilD9icoEeSLVrU2ifxtpw" source="_SilD_ScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilD9icoEeSLVrU2ifxtpw" name="ReturnStatement@57d182e8.output" incoming="_SilD9ScoEeSLVrU2ifxtpw" outgoing="_SilD7CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilD9ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilD-CcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilD-ScoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1)" incoming="_SilD9CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SilD-icoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).argument(entries)" incoming="_SilD8ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilD-ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilD_CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilD_ScoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).result()" outgoing="_SilD9ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilD_icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilD_ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-includesAllImplmethod1"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilEACcoEeSLVrU2ifxtpw" name="Tuple@18879c56" outgoing="_SilD9CcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilEAScoEeSLVrU2ifxtpw" name="Call(ToEntryImpls)" behavior="_SiloficoEeSLVrU2ifxtpw">
                <argument xmi:id="_SilEAicoEeSLVrU2ifxtpw" name="Call(ToEntryImpls).argument(entries)" incoming="_SilD6ycoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEAycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEBCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SilEBScoEeSLVrU2ifxtpw" name="Call(ToEntryImpls).result()" outgoing="_SilD8ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEBicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEBycoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilD7ScoEeSLVrU2ifxtpw" name="Input(entries)" outgoing="_SilD6ScoEeSLVrU2ifxtpw" parameter="_SilD4ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilD7icoEeSLVrU2ifxtpw" name="Fork(entries)" incoming="_SilD6ScoEeSLVrU2ifxtpw" outgoing="_SilD6ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilD7ycoEeSLVrU2ifxtpw" name="Return" incoming="_SilD7CcoEeSLVrU2ifxtpw" parameter="_SilD5icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilD8CcoEeSLVrU2ifxtpw" name="Final" incoming="_SilD6icoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilECCcoEeSLVrU2ifxtpw" name="includesKey$method$1" specification="_SiloPycoEeSLVrU2ifxtpw" node="_SilEEycoEeSLVrU2ifxtpw _SilEFCcoEeSLVrU2ifxtpw _SilEFScoEeSLVrU2ifxtpw _SilEFicoEeSLVrU2ifxtpw _SilEFycoEeSLVrU2ifxtpw" group="_SilEFycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilECScoEeSLVrU2ifxtpw" name="key">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilECicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilECycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilEDCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEDScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEDicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEDycoEeSLVrU2ifxtpw" target="_SilEFCcoEeSLVrU2ifxtpw" source="_SilEEycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilEECcoEeSLVrU2ifxtpw" target="_SilEFicoEeSLVrU2ifxtpw" source="_SilEGCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEEScoEeSLVrU2ifxtpw" target="_SilEHicoEeSLVrU2ifxtpw" source="_SilEFCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEEicoEeSLVrU2ifxtpw" target="_SilEFScoEeSLVrU2ifxtpw" source="_SilEGicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilEFycoEeSLVrU2ifxtpw" name="Body(includesKey$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilEGCcoEeSLVrU2ifxtpw" name="ReturnStatement@6ec7ae94" outgoing="_SilEECcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEGScoEeSLVrU2ifxtpw" target="_SilEGicoEeSLVrU2ifxtpw" source="_SilEIScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilEGicoEeSLVrU2ifxtpw" name="ReturnStatement@6ec7ae94.output" incoming="_SilEGScoEeSLVrU2ifxtpw" outgoing="_SilEEicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEGycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEHCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilEHScoEeSLVrU2ifxtpw" name="Call(includesKeyImpl$method$1)">
              <argument xmi:id="_SilEHicoEeSLVrU2ifxtpw" name="Call(includesKeyImpl$method$1).argument(key)" incoming="_SilEEScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEHycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEICcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilEIScoEeSLVrU2ifxtpw" name="Call(includesKeyImpl$method$1).result()" outgoing="_SilEGScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEIicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEIycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-includesKeyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilEEycoEeSLVrU2ifxtpw" name="Input(key)" outgoing="_SilEDycoEeSLVrU2ifxtpw" parameter="_SilECScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilEFCcoEeSLVrU2ifxtpw" name="Fork(key)" incoming="_SilEDycoEeSLVrU2ifxtpw" outgoing="_SilEEScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilEFScoEeSLVrU2ifxtpw" name="Return" incoming="_SilEEicoEeSLVrU2ifxtpw" parameter="_SilEDCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilEFicoEeSLVrU2ifxtpw" name="Final" incoming="_SilEECcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilEJCcoEeSLVrU2ifxtpw" name="includesValue$method$1" specification="_SiloRicoEeSLVrU2ifxtpw" node="_SilELycoEeSLVrU2ifxtpw _SilEMCcoEeSLVrU2ifxtpw _SilEMScoEeSLVrU2ifxtpw _SilEMicoEeSLVrU2ifxtpw _SilEMycoEeSLVrU2ifxtpw" group="_SilEMycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilEJScoEeSLVrU2ifxtpw" name="value" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEJicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEJycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilEKCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEKScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEKicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEKycoEeSLVrU2ifxtpw" target="_SilEMCcoEeSLVrU2ifxtpw" source="_SilELycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilELCcoEeSLVrU2ifxtpw" target="_SilEMicoEeSLVrU2ifxtpw" source="_SilENCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilELScoEeSLVrU2ifxtpw" target="_SilEOicoEeSLVrU2ifxtpw" source="_SilEMCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilELicoEeSLVrU2ifxtpw" target="_SilEMScoEeSLVrU2ifxtpw" source="_SilENicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilEMycoEeSLVrU2ifxtpw" name="Body(includesValue$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilENCcoEeSLVrU2ifxtpw" name="ReturnStatement@69207d43" outgoing="_SilELCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilENScoEeSLVrU2ifxtpw" target="_SilENicoEeSLVrU2ifxtpw" source="_SilEPScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilENicoEeSLVrU2ifxtpw" name="ReturnStatement@69207d43.output" incoming="_SilENScoEeSLVrU2ifxtpw" outgoing="_SilELicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilENycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEOCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilEOScoEeSLVrU2ifxtpw" name="Call(includesValueImpl$method$1)">
              <argument xmi:id="_SilEOicoEeSLVrU2ifxtpw" name="Call(includesValueImpl$method$1).argument(value)" incoming="_SilELScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEOycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEPCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilEPScoEeSLVrU2ifxtpw" name="Call(includesValueImpl$method$1).result()" outgoing="_SilENScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEPicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEPycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-includesValueImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilELycoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_SilEKycoEeSLVrU2ifxtpw" parameter="_SilEJScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilEMCcoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_SilEKycoEeSLVrU2ifxtpw" outgoing="_SilELScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilEMScoEeSLVrU2ifxtpw" name="Return" incoming="_SilELicoEeSLVrU2ifxtpw" parameter="_SilEKCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilEMicoEeSLVrU2ifxtpw" name="Final" incoming="_SilELCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilEQCcoEeSLVrU2ifxtpw" name="isEmpty$method$1" specification="_SiloTScoEeSLVrU2ifxtpw" node="_SilERicoEeSLVrU2ifxtpw _SilERycoEeSLVrU2ifxtpw _SilESCcoEeSLVrU2ifxtpw" group="_SilESCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilEQScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEQicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEQycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilERCcoEeSLVrU2ifxtpw" target="_SilERycoEeSLVrU2ifxtpw" source="_SilESScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilERScoEeSLVrU2ifxtpw" target="_SilERicoEeSLVrU2ifxtpw" source="_SilESycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilESCcoEeSLVrU2ifxtpw" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilESScoEeSLVrU2ifxtpw" name="ReturnStatement@9b981da" outgoing="_SilERCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilESicoEeSLVrU2ifxtpw" target="_SilESycoEeSLVrU2ifxtpw" source="_SilETycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilESycoEeSLVrU2ifxtpw" name="ReturnStatement@9b981da.output" incoming="_SilESicoEeSLVrU2ifxtpw" outgoing="_SilERScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilETCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilETScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilETicoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_SilETycoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1).result()" outgoing="_SilESicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEUCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEUScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-isEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilERicoEeSLVrU2ifxtpw" name="Return" incoming="_SilERScoEeSLVrU2ifxtpw" parameter="_SilEQScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilERycoEeSLVrU2ifxtpw" name="Final" incoming="_SilERCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilEUicoEeSLVrU2ifxtpw" name="keys$method$1" specification="_SiloUScoEeSLVrU2ifxtpw" node="_SilEWCcoEeSLVrU2ifxtpw _SilEWScoEeSLVrU2ifxtpw _SilEWicoEeSLVrU2ifxtpw" group="_SilEWicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilEUycoEeSLVrU2ifxtpw" name="" type="_Sim1vycoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEVCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEVScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilEVicoEeSLVrU2ifxtpw" target="_SilEWScoEeSLVrU2ifxtpw" source="_SilEWycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEVycoEeSLVrU2ifxtpw" target="_SilEWCcoEeSLVrU2ifxtpw" source="_SilEYCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilEWicoEeSLVrU2ifxtpw" name="Body(keys$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilEWycoEeSLVrU2ifxtpw" name="ReturnStatement@782831bc" outgoing="_SilEVicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEXCcoEeSLVrU2ifxtpw" target="_SilEaicoEeSLVrU2ifxtpw" source="_SilEbicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEXScoEeSLVrU2ifxtpw" target="_SilEZCcoEeSLVrU2ifxtpw" source="_SilEiicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilEXicoEeSLVrU2ifxtpw" target="_SilEYycoEeSLVrU2ifxtpw" source="_SilEcScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEXycoEeSLVrU2ifxtpw" target="_SilEYCcoEeSLVrU2ifxtpw" source="_SilEZycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilEYCcoEeSLVrU2ifxtpw" name="ReturnStatement@782831bc.output" incoming="_SilEXycoEeSLVrU2ifxtpw" outgoing="_SilEVycoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEYScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEYicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SilEYycoEeSLVrU2ifxtpw" name="Call(Set)" incoming="_SilEXicoEeSLVrU2ifxtpw" operation="_Sim4_icoEeSLVrU2ifxtpw">
              <argument xmi:id="_SilEZCcoEeSLVrU2ifxtpw" name="Call(Set).argument(seq)" incoming="_SilEXScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEZScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEZicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilEZycoEeSLVrU2ifxtpw" name="Call(Set).result()" outgoing="_SilEXycoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEaCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEaScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_SilEaicoEeSLVrU2ifxtpw" name="Call(Set).target" incoming="_SilEXCcoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEaycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEbCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:CreateObjectAction" xmi:id="_SilEbScoEeSLVrU2ifxtpw" name="Create($$Impl$Set__Impl$Map$Key__)" classifier="_Sim2XCcoEeSLVrU2ifxtpw">
              <result xmi:id="_SilEbicoEeSLVrU2ifxtpw" name="Create($$Set__Impl$Map$Key__).result" outgoing="_SilEXCcoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEbycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEcCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilEcScoEeSLVrU2ifxtpw" name="Tuple@601daf0f" outgoing="_SilEXicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEcicoEeSLVrU2ifxtpw" target="_SilEiScoEeSLVrU2ifxtpw" source="_SilEdCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilEcycoEeSLVrU2ifxtpw" name="Call(keysImpl$method$1)">
                <result xmi:id="_SilEdCcoEeSLVrU2ifxtpw" name="Call(keysImpl$method$1).result()" outgoing="_SilEcicoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEdScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEdicoEeSLVrU2ifxtpw" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-keysImplmethod1"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SilEdycoEeSLVrU2ifxtpw" name="CastExpression@4748c8a0" mode="parallel" outputElement="_SilEiicoEeSLVrU2ifxtpw" inputElement="_SilEiScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEeCcoEeSLVrU2ifxtpw" target="_SilEgScoEeSLVrU2ifxtpw" source="_SilEhycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEeScoEeSLVrU2ifxtpw" target="_SilEiCcoEeSLVrU2ifxtpw" source="_SilEhycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEeicoEeSLVrU2ifxtpw" target="_SilEiCcoEeSLVrU2ifxtpw" source="_SilEhCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEeycoEeSLVrU2ifxtpw" target="_SilEfycoEeSLVrU2ifxtpw" source="_SilEiCcoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilEfCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEfScoEeSLVrU2ifxtpw" target="_SilEhycoEeSLVrU2ifxtpw" source="_SilEiScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEficoEeSLVrU2ifxtpw" target="_SilEiicoEeSLVrU2ifxtpw" source="_SilEfycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SilEfycoEeSLVrU2ifxtpw" name="Merge(CastExpression@4748c8a0.operand)" incoming="_SilEeycoEeSLVrU2ifxtpw" outgoing="_SilEficoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SilEgCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Key)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_SilEgScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Key).object" incoming="_SilEeCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEgicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEgycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilEhCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Key).result" outgoing="_SilEeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEhScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEhicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SilEhycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(Key).object)" incoming="_SilEfScoEeSLVrU2ifxtpw" outgoing="_SilEeCcoEeSLVrU2ifxtpw _SilEeScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SilEiCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(Key).result)" incoming="_SilEeScoEeSLVrU2ifxtpw _SilEeicoEeSLVrU2ifxtpw" outgoing="_SilEeycoEeSLVrU2ifxtpw" decisionInputFlow="_SilEeicoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SilEiScoEeSLVrU2ifxtpw" name="CastExpression@4748c8a0.inputElement" incoming="_SilEcicoEeSLVrU2ifxtpw" outgoing="_SilEfScoEeSLVrU2ifxtpw" regionAsInput="_SilEdycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SilEiicoEeSLVrU2ifxtpw" name="CastExpression@4748c8a0.outputElement" incoming="_SilEficoEeSLVrU2ifxtpw" outgoing="_SilEXScoEeSLVrU2ifxtpw" regionAsOutput="_SilEdycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilEWCcoEeSLVrU2ifxtpw" name="Return" incoming="_SilEVycoEeSLVrU2ifxtpw" parameter="_SilEUycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilEWScoEeSLVrU2ifxtpw" name="Final" incoming="_SilEVicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilEiycoEeSLVrU2ifxtpw" name="notEmpty$method$1" specification="_SiloVScoEeSLVrU2ifxtpw" node="_SilEkScoEeSLVrU2ifxtpw _SilEkicoEeSLVrU2ifxtpw _SilEkycoEeSLVrU2ifxtpw" group="_SilEkycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilEjCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEjScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEjicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilEjycoEeSLVrU2ifxtpw" target="_SilEkicoEeSLVrU2ifxtpw" source="_SilElCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEkCcoEeSLVrU2ifxtpw" target="_SilEkScoEeSLVrU2ifxtpw" source="_SilElicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilEkycoEeSLVrU2ifxtpw" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilElCcoEeSLVrU2ifxtpw" name="ReturnStatement@10cf1fcf" outgoing="_SilEjycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilElScoEeSLVrU2ifxtpw" target="_SilElicoEeSLVrU2ifxtpw" source="_SilEmicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilElicoEeSLVrU2ifxtpw" name="ReturnStatement@10cf1fcf.output" incoming="_SilElScoEeSLVrU2ifxtpw" outgoing="_SilEkCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilElycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEmCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilEmScoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_SilEmicoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1).result()" outgoing="_SilElScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEmycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEnCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-notEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilEkScoEeSLVrU2ifxtpw" name="Return" incoming="_SilEkCcoEeSLVrU2ifxtpw" parameter="_SilEjCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilEkicoEeSLVrU2ifxtpw" name="Final" incoming="_SilEjycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilEnScoEeSLVrU2ifxtpw" name="put$method$1" specification="_SiloWScoEeSLVrU2ifxtpw" node="_SilErScoEeSLVrU2ifxtpw _SilEricoEeSLVrU2ifxtpw _SilErycoEeSLVrU2ifxtpw _SilEsCcoEeSLVrU2ifxtpw _SilEsScoEeSLVrU2ifxtpw _SilEsicoEeSLVrU2ifxtpw _SilEsycoEeSLVrU2ifxtpw" group="_SilEsycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilEnicoEeSLVrU2ifxtpw" name="key">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEnycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEoCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilEoScoEeSLVrU2ifxtpw" name="value" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEoicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEoycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilEpCcoEeSLVrU2ifxtpw" name="" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEpScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEpicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEpycoEeSLVrU2ifxtpw" target="_SilEricoEeSLVrU2ifxtpw" source="_SilErScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEqCcoEeSLVrU2ifxtpw" target="_SilEsCcoEeSLVrU2ifxtpw" source="_SilErycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilEqScoEeSLVrU2ifxtpw" target="_SilEsicoEeSLVrU2ifxtpw" source="_SilEtCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEqicoEeSLVrU2ifxtpw" target="_SilEuycoEeSLVrU2ifxtpw" source="_SilEricoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEqycoEeSLVrU2ifxtpw" target="_SilEvicoEeSLVrU2ifxtpw" source="_SilEsCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilErCcoEeSLVrU2ifxtpw" target="_SilEsScoEeSLVrU2ifxtpw" source="_SilEtycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilEsycoEeSLVrU2ifxtpw" name="Body(put$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilEtCcoEeSLVrU2ifxtpw" name="ReturnStatement@2ef8ee5f" outgoing="_SilEqScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEtScoEeSLVrU2ifxtpw" target="_SilE1icoEeSLVrU2ifxtpw" source="_SilEwScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEticoEeSLVrU2ifxtpw" target="_SilEtycoEeSLVrU2ifxtpw" source="_SilE1ycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilEtycoEeSLVrU2ifxtpw" name="ReturnStatement@2ef8ee5f.output" incoming="_SilEticoEeSLVrU2ifxtpw" outgoing="_SilErCcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEuCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEuScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilEuicoEeSLVrU2ifxtpw" name="Call(putImpl$method$1)">
              <argument xmi:id="_SilEuycoEeSLVrU2ifxtpw" name="Call(putImpl$method$1).argument(key)" incoming="_SilEqicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEvCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEvScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SilEvicoEeSLVrU2ifxtpw" name="Call(putImpl$method$1).argument(value)" incoming="_SilEqycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEvycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEwCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilEwScoEeSLVrU2ifxtpw" name="Call(putImpl$method$1).result()" outgoing="_SilEtScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEwicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilEwycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-putImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_SilExCcoEeSLVrU2ifxtpw" name="CastExpression@7cef5bbe" mode="parallel" outputElement="_SilE1ycoEeSLVrU2ifxtpw" inputElement="_SilE1icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilExScoEeSLVrU2ifxtpw" target="_SilEzicoEeSLVrU2ifxtpw" source="_SilE1CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilExicoEeSLVrU2ifxtpw" target="_SilE1ScoEeSLVrU2ifxtpw" source="_SilE1CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilExycoEeSLVrU2ifxtpw" target="_SilE1ScoEeSLVrU2ifxtpw" source="_SilE0ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEyCcoEeSLVrU2ifxtpw" target="_SilEzCcoEeSLVrU2ifxtpw" source="_SilE1ScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilEyScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEyicoEeSLVrU2ifxtpw" target="_SilE1CcoEeSLVrU2ifxtpw" source="_SilE1icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilEyycoEeSLVrU2ifxtpw" target="_SilE1ycoEeSLVrU2ifxtpw" source="_SilEzCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SilEzCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@7cef5bbe.operand)" incoming="_SilEyCcoEeSLVrU2ifxtpw" outgoing="_SilEyycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SilEzScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value)" classifier="_SilBcCcoEeSLVrU2ifxtpw">
                <object xmi:id="_SilEzicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).object" incoming="_SilExScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilEzycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilE0CcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilE0ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).result" outgoing="_SilExycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilE0icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilE0ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilE1CcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(Value).object)" incoming="_SilEyicoEeSLVrU2ifxtpw" outgoing="_SilExScoEeSLVrU2ifxtpw _SilExicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SilE1ScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(Value).result)" incoming="_SilExicoEeSLVrU2ifxtpw _SilExycoEeSLVrU2ifxtpw" outgoing="_SilEyCcoEeSLVrU2ifxtpw" decisionInputFlow="_SilExycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilE1icoEeSLVrU2ifxtpw" name="CastExpression@7cef5bbe.inputElement" incoming="_SilEtScoEeSLVrU2ifxtpw" outgoing="_SilEyicoEeSLVrU2ifxtpw" regionAsInput="_SilExCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilE1ycoEeSLVrU2ifxtpw" name="CastExpression@7cef5bbe.outputElement" incoming="_SilEyycoEeSLVrU2ifxtpw" outgoing="_SilEticoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" regionAsOutput="_SilExCcoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilErScoEeSLVrU2ifxtpw" name="Input(key)" outgoing="_SilEpycoEeSLVrU2ifxtpw" parameter="_SilEnicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilEricoEeSLVrU2ifxtpw" name="Fork(key)" incoming="_SilEpycoEeSLVrU2ifxtpw" outgoing="_SilEqicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilErycoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_SilEqCcoEeSLVrU2ifxtpw" parameter="_SilEoScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilEsCcoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_SilEqCcoEeSLVrU2ifxtpw" outgoing="_SilEqycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilEsScoEeSLVrU2ifxtpw" name="Return" incoming="_SilErCcoEeSLVrU2ifxtpw" parameter="_SilEpCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilEsicoEeSLVrU2ifxtpw" name="Final" incoming="_SilEqScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilE2CcoEeSLVrU2ifxtpw" name="putAll$method$1" specification="_SiloYycoEeSLVrU2ifxtpw" node="_SilE3icoEeSLVrU2ifxtpw _SilE3ycoEeSLVrU2ifxtpw _SilE4CcoEeSLVrU2ifxtpw" group="_SilE4CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilE2ScoEeSLVrU2ifxtpw" name="entries" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilE2icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilE2ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilE3CcoEeSLVrU2ifxtpw" target="_SilE3ycoEeSLVrU2ifxtpw" source="_SilE3icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilE3ScoEeSLVrU2ifxtpw" target="_SilE6icoEeSLVrU2ifxtpw" source="_SilE3ycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilE4CcoEeSLVrU2ifxtpw" name="Body(putAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilE4ScoEeSLVrU2ifxtpw" name="ExpressionStatement@295f918a">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilE4icoEeSLVrU2ifxtpw" target="_SilE5ScoEeSLVrU2ifxtpw" source="_SilE7ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilE4ycoEeSLVrU2ifxtpw" target="_SilE5CcoEeSLVrU2ifxtpw" source="_SilE6CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilE5CcoEeSLVrU2ifxtpw" name="Call(putAllImpl$method$1)" incoming="_SilE4ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SilE5ScoEeSLVrU2ifxtpw" name="Call(putAllImpl$method$1).argument(entries)" incoming="_SilE4icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilE5icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilE5ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-putAllImplmethod1"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilE6CcoEeSLVrU2ifxtpw" name="Tuple@4ae23d66" outgoing="_SilE4ycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilE6ScoEeSLVrU2ifxtpw" name="Call(ToEntryImpls)" behavior="_SiloficoEeSLVrU2ifxtpw">
                <argument xmi:id="_SilE6icoEeSLVrU2ifxtpw" name="Call(ToEntryImpls).argument(entries)" incoming="_SilE3ScoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilE6ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilE7CcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SilE7ScoEeSLVrU2ifxtpw" name="Call(ToEntryImpls).result()" outgoing="_SilE4icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilE7icoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilE7ycoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilE3icoEeSLVrU2ifxtpw" name="Input(entries)" outgoing="_SilE3CcoEeSLVrU2ifxtpw" parameter="_SilE2ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilE3ycoEeSLVrU2ifxtpw" name="Fork(entries)" incoming="_SilE3CcoEeSLVrU2ifxtpw" outgoing="_SilE3ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilE8CcoEeSLVrU2ifxtpw" name="remove$method$1" specification="_SiloZycoEeSLVrU2ifxtpw" node="_SilE-ycoEeSLVrU2ifxtpw _SilE_CcoEeSLVrU2ifxtpw _SilE_ScoEeSLVrU2ifxtpw _SilE_icoEeSLVrU2ifxtpw _SilE_ycoEeSLVrU2ifxtpw" group="_SilE_ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilE8ScoEeSLVrU2ifxtpw" name="key">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilE8icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilE8ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilE9CcoEeSLVrU2ifxtpw" name="" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilE9ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilE9icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilE9ycoEeSLVrU2ifxtpw" target="_SilE_CcoEeSLVrU2ifxtpw" source="_SilE-ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilE-CcoEeSLVrU2ifxtpw" target="_SilE_icoEeSLVrU2ifxtpw" source="_SilFACcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilE-ScoEeSLVrU2ifxtpw" target="_SilnRScoEeSLVrU2ifxtpw" source="_SilE_CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilE-icoEeSLVrU2ifxtpw" target="_SilE_ScoEeSLVrU2ifxtpw" source="_SilnQScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilE_ycoEeSLVrU2ifxtpw" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilFACcoEeSLVrU2ifxtpw" name="ReturnStatement@23b5810f" outgoing="_SilE-CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilFAScoEeSLVrU2ifxtpw" target="_SilnXScoEeSLVrU2ifxtpw" source="_SilnSCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnQCcoEeSLVrU2ifxtpw" target="_SilnQScoEeSLVrU2ifxtpw" source="_SilnXicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilnQScoEeSLVrU2ifxtpw" name="ReturnStatement@23b5810f.output" incoming="_SilnQCcoEeSLVrU2ifxtpw" outgoing="_SilE-icoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnQicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnQycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilnRCcoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1)">
              <argument xmi:id="_SilnRScoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).argument(key)" incoming="_SilE-ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnRicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnRycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilnSCcoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).result()" outgoing="_SilFAScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnSScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnSicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-removeImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_SilnSycoEeSLVrU2ifxtpw" name="CastExpression@4eb15265" mode="parallel" outputElement="_SilnXicoEeSLVrU2ifxtpw" inputElement="_SilnXScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnTCcoEeSLVrU2ifxtpw" target="_SilnVScoEeSLVrU2ifxtpw" source="_SilnWycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnTScoEeSLVrU2ifxtpw" target="_SilnXCcoEeSLVrU2ifxtpw" source="_SilnWycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnTicoEeSLVrU2ifxtpw" target="_SilnXCcoEeSLVrU2ifxtpw" source="_SilnWCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnTycoEeSLVrU2ifxtpw" target="_SilnUycoEeSLVrU2ifxtpw" source="_SilnXCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilnUCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnUScoEeSLVrU2ifxtpw" target="_SilnWycoEeSLVrU2ifxtpw" source="_SilnXScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnUicoEeSLVrU2ifxtpw" target="_SilnXicoEeSLVrU2ifxtpw" source="_SilnUycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SilnUycoEeSLVrU2ifxtpw" name="Merge(CastExpression@4eb15265.operand)" incoming="_SilnTycoEeSLVrU2ifxtpw" outgoing="_SilnUicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SilnVCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value)" classifier="_SilBcCcoEeSLVrU2ifxtpw">
                <object xmi:id="_SilnVScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).object" incoming="_SilnTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnVicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnVycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilnWCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).result" outgoing="_SilnTicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnWScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnWicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilnWycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(Value).object)" incoming="_SilnUScoEeSLVrU2ifxtpw" outgoing="_SilnTCcoEeSLVrU2ifxtpw _SilnTScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SilnXCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(Value).result)" incoming="_SilnTScoEeSLVrU2ifxtpw _SilnTicoEeSLVrU2ifxtpw" outgoing="_SilnTycoEeSLVrU2ifxtpw" decisionInputFlow="_SilnTicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilnXScoEeSLVrU2ifxtpw" name="CastExpression@4eb15265.inputElement" incoming="_SilFAScoEeSLVrU2ifxtpw" outgoing="_SilnUScoEeSLVrU2ifxtpw" regionAsInput="_SilnSycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilnXicoEeSLVrU2ifxtpw" name="CastExpression@4eb15265.outputElement" incoming="_SilnUicoEeSLVrU2ifxtpw" outgoing="_SilnQCcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" regionAsOutput="_SilnSycoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilE-ycoEeSLVrU2ifxtpw" name="Input(key)" outgoing="_SilE9ycoEeSLVrU2ifxtpw" parameter="_SilE8ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilE_CcoEeSLVrU2ifxtpw" name="Fork(key)" incoming="_SilE9ycoEeSLVrU2ifxtpw" outgoing="_SilE-ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilE_ScoEeSLVrU2ifxtpw" name="Return" incoming="_SilE-icoEeSLVrU2ifxtpw" parameter="_SilE9CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilE_icoEeSLVrU2ifxtpw" name="Final" incoming="_SilE-CcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilnXycoEeSLVrU2ifxtpw" name="removeAll$method$1" specification="_SilobicoEeSLVrU2ifxtpw" node="_SilnZScoEeSLVrU2ifxtpw _SilnZicoEeSLVrU2ifxtpw _SilnZycoEeSLVrU2ifxtpw" group="_SilnZycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilnYCcoEeSLVrU2ifxtpw" name="keys">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnYScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnYicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnYycoEeSLVrU2ifxtpw" target="_SilnZicoEeSLVrU2ifxtpw" source="_SilnZScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnZCcoEeSLVrU2ifxtpw" target="_SilnaicoEeSLVrU2ifxtpw" source="_SilnZicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilnZycoEeSLVrU2ifxtpw" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilnaCcoEeSLVrU2ifxtpw" name="ExpressionStatement@26456721">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilnaScoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_SilnaicoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).argument(keys)" incoming="_SilnZCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnaycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnbCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-removeAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilnZScoEeSLVrU2ifxtpw" name="Input(keys)" outgoing="_SilnYycoEeSLVrU2ifxtpw" parameter="_SilnYCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilnZicoEeSLVrU2ifxtpw" name="Fork(keys)" incoming="_SilnYycoEeSLVrU2ifxtpw" outgoing="_SilnZCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilnbScoEeSLVrU2ifxtpw" name="size$method$1" specification="_SilocicoEeSLVrU2ifxtpw" node="_SilncycoEeSLVrU2ifxtpw _SilndCcoEeSLVrU2ifxtpw _SilndScoEeSLVrU2ifxtpw" group="_SilndScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilnbicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnbycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilncCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilncScoEeSLVrU2ifxtpw" target="_SilndCcoEeSLVrU2ifxtpw" source="_SilndicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilncicoEeSLVrU2ifxtpw" target="_SilncycoEeSLVrU2ifxtpw" source="_SilneCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilndScoEeSLVrU2ifxtpw" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilndicoEeSLVrU2ifxtpw" name="ReturnStatement@59fc982f" outgoing="_SilncScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilndycoEeSLVrU2ifxtpw" target="_SilneCcoEeSLVrU2ifxtpw" source="_SilnfCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilneCcoEeSLVrU2ifxtpw" name="ReturnStatement@59fc982f.output" incoming="_SilndycoEeSLVrU2ifxtpw" outgoing="_SilncicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilneScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilneicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilneycoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1)">
              <result xmi:id="_SilnfCcoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1).result()" outgoing="_SilndycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnfScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnficoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-sizeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilncycoEeSLVrU2ifxtpw" name="Return" incoming="_SilncicoEeSLVrU2ifxtpw" parameter="_SilnbicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilndCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilncScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilnfycoEeSLVrU2ifxtpw" name="toSequence$method$1" specification="_SilodicoEeSLVrU2ifxtpw" node="_SilnhScoEeSLVrU2ifxtpw _SilnhicoEeSLVrU2ifxtpw _SilnhycoEeSLVrU2ifxtpw" group="_SilnhycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilngCcoEeSLVrU2ifxtpw" name="" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilngScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilngicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilngycoEeSLVrU2ifxtpw" target="_SilnhicoEeSLVrU2ifxtpw" source="_SilniCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnhCcoEeSLVrU2ifxtpw" target="_SilnhScoEeSLVrU2ifxtpw" source="_SilnjCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilnhycoEeSLVrU2ifxtpw" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilniCcoEeSLVrU2ifxtpw" name="ReturnStatement@7a1efaf4" outgoing="_SilngycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilniScoEeSLVrU2ifxtpw" target="_SilnkCcoEeSLVrU2ifxtpw" source="_SilnmCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilniicoEeSLVrU2ifxtpw" target="_SilnjycoEeSLVrU2ifxtpw" source="_SilnlicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilniycoEeSLVrU2ifxtpw" target="_SilnjCcoEeSLVrU2ifxtpw" source="_SilnkycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilnjCcoEeSLVrU2ifxtpw" name="ReturnStatement@7a1efaf4.output" incoming="_SilniycoEeSLVrU2ifxtpw" outgoing="_SilnhCcoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnjScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnjicoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilnjycoEeSLVrU2ifxtpw" name="Call(ToEntries)" incoming="_SilniicoEeSLVrU2ifxtpw" behavior="_Silo1ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SilnkCcoEeSLVrU2ifxtpw" name="Call(ToEntries).argument(entryImpls)" incoming="_SilniScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnkScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnkicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilnkycoEeSLVrU2ifxtpw" name="Call(ToEntries).result()" outgoing="_SilniycoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnlCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnlScoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilnlicoEeSLVrU2ifxtpw" name="Tuple@eb4d977" outgoing="_SilniicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilnlycoEeSLVrU2ifxtpw" name="Call(entriesImpl$method$1)">
                <result xmi:id="_SilnmCcoEeSLVrU2ifxtpw" name="Call(entriesImpl$method$1).result()" outgoing="_SilniScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnmScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnmicoEeSLVrU2ifxtpw" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-entriesImplmethod1"/>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilnhScoEeSLVrU2ifxtpw" name="Return" incoming="_SilnhCcoEeSLVrU2ifxtpw" parameter="_SilngCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilnhicoEeSLVrU2ifxtpw" name="Final" incoming="_SilngycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilnmycoEeSLVrU2ifxtpw" name="values$method$1" specification="_SiloeicoEeSLVrU2ifxtpw" node="_SilnoScoEeSLVrU2ifxtpw _SilnoicoEeSLVrU2ifxtpw _SilnoycoEeSLVrU2ifxtpw" group="_SilnoycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilnnCcoEeSLVrU2ifxtpw" name="" type="_SimSQicoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnnScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnnicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilnnycoEeSLVrU2ifxtpw" target="_SilnoicoEeSLVrU2ifxtpw" source="_SilnpCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnoCcoEeSLVrU2ifxtpw" target="_SilnoScoEeSLVrU2ifxtpw" source="_SilnqScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilnoycoEeSLVrU2ifxtpw" name="Body(values$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilnpCcoEeSLVrU2ifxtpw" name="ReturnStatement@504b9ec5" outgoing="_SilnnycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnpScoEeSLVrU2ifxtpw" target="_SilnsycoEeSLVrU2ifxtpw" source="_SilntycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnpicoEeSLVrU2ifxtpw" target="_SilnrScoEeSLVrU2ifxtpw" source="_Siln0ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilnpycoEeSLVrU2ifxtpw" target="_SilnrCcoEeSLVrU2ifxtpw" source="_SilnuicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnqCcoEeSLVrU2ifxtpw" target="_SilnqScoEeSLVrU2ifxtpw" source="_SilnsCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilnqScoEeSLVrU2ifxtpw" name="ReturnStatement@504b9ec5.output" incoming="_SilnqCcoEeSLVrU2ifxtpw" outgoing="_SilnoCcoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnqicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnqycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SilnrCcoEeSLVrU2ifxtpw" name="Call(Bag)" incoming="_SilnpycoEeSLVrU2ifxtpw" operation="_SimRwScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SilnrScoEeSLVrU2ifxtpw" name="Call(Bag).argument(seq)" incoming="_SilnpicoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnricoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnrycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilnsCcoEeSLVrU2ifxtpw" name="Call(Bag).result()" outgoing="_SilnqCcoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnsScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnsicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_SilnsycoEeSLVrU2ifxtpw" name="Call(Bag).target" incoming="_SilnpScoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilntCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilntScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:CreateObjectAction" xmi:id="_SilnticoEeSLVrU2ifxtpw" name="Create($$Impl$Bag__Impl$Map$Value__)" classifier="_SimPJycoEeSLVrU2ifxtpw">
              <result xmi:id="_SilntycoEeSLVrU2ifxtpw" name="Create($$Bag__Impl$Map$Value__).result" outgoing="_SilnpScoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnuCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnuScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilnuicoEeSLVrU2ifxtpw" name="Tuple@6a962b36" outgoing="_SilnpycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnuycoEeSLVrU2ifxtpw" target="_Siln0icoEeSLVrU2ifxtpw" source="_SilnvScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilnvCcoEeSLVrU2ifxtpw" name="Call(valuesImpl$method$1)">
                <result xmi:id="_SilnvScoEeSLVrU2ifxtpw" name="Call(valuesImpl$method$1).result()" outgoing="_SilnuycoEeSLVrU2ifxtpw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnvicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnvycoEeSLVrU2ifxtpw" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-valuesImplmethod1"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SilnwCcoEeSLVrU2ifxtpw" name="CastExpression@593e9bf1" mode="parallel" outputElement="_Siln0ycoEeSLVrU2ifxtpw" inputElement="_Siln0icoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnwScoEeSLVrU2ifxtpw" target="_SilnyicoEeSLVrU2ifxtpw" source="_Siln0CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnwicoEeSLVrU2ifxtpw" target="_Siln0ScoEeSLVrU2ifxtpw" source="_Siln0CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnwycoEeSLVrU2ifxtpw" target="_Siln0ScoEeSLVrU2ifxtpw" source="_SilnzScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnxCcoEeSLVrU2ifxtpw" target="_SilnyCcoEeSLVrU2ifxtpw" source="_Siln0ScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilnxScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnxicoEeSLVrU2ifxtpw" target="_Siln0CcoEeSLVrU2ifxtpw" source="_Siln0icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilnxycoEeSLVrU2ifxtpw" target="_Siln0ycoEeSLVrU2ifxtpw" source="_SilnyCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SilnyCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@593e9bf1.operand)" incoming="_SilnxCcoEeSLVrU2ifxtpw" outgoing="_SilnxycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SilnyScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value)" classifier="_SilBcCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SilnyicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).object" incoming="_SilnwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnyycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnzCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilnzScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).result" outgoing="_SilnwycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilnzicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilnzycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Siln0CcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(Value).object)" incoming="_SilnxicoEeSLVrU2ifxtpw" outgoing="_SilnwScoEeSLVrU2ifxtpw _SilnwicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_Siln0ScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(Value).result)" incoming="_SilnwicoEeSLVrU2ifxtpw _SilnwycoEeSLVrU2ifxtpw" outgoing="_SilnxCcoEeSLVrU2ifxtpw" decisionInputFlow="_SilnwycoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Siln0icoEeSLVrU2ifxtpw" name="CastExpression@593e9bf1.inputElement" incoming="_SilnuycoEeSLVrU2ifxtpw" outgoing="_SilnxicoEeSLVrU2ifxtpw" regionAsInput="_SilnwCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Siln0ycoEeSLVrU2ifxtpw" name="CastExpression@593e9bf1.outputElement" incoming="_SilnxycoEeSLVrU2ifxtpw" outgoing="_SilnpicoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" regionAsOutput="_SilnwCcoEeSLVrU2ifxtpw"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilnoScoEeSLVrU2ifxtpw" name="Return" incoming="_SilnoCcoEeSLVrU2ifxtpw" parameter="_SilnnCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilnoicoEeSLVrU2ifxtpw" name="Final" incoming="_SilnnycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Siln1CcoEeSLVrU2ifxtpw" name="Map$initialization$1" specification="_SiloHCcoEeSLVrU2ifxtpw" node="_Siln1ScoEeSLVrU2ifxtpw" group="_Siln1ScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_Siln1ScoEeSLVrU2ifxtpw" name="Body(Map$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln1icoEeSLVrU2ifxtpw" target="_Siln5ScoEeSLVrU2ifxtpw" source="_Siln4icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln1ycoEeSLVrU2ifxtpw" target="_Siln6ScoEeSLVrU2ifxtpw" source="_Siln5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln2CcoEeSLVrU2ifxtpw" target="_Siln9CcoEeSLVrU2ifxtpw" source="_Siln5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln2ScoEeSLVrU2ifxtpw" target="_Siln_icoEeSLVrU2ifxtpw" source="_Siln5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln2icoEeSLVrU2ifxtpw" target="_SiloBScoEeSLVrU2ifxtpw" source="_SiloAScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln2ycoEeSLVrU2ifxtpw" target="_SiloEScoEeSLVrU2ifxtpw" source="_SiloCCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln3CcoEeSLVrU2ifxtpw" target="_SiloFycoEeSLVrU2ifxtpw" source="_SiloDCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Siln3ScoEeSLVrU2ifxtpw" target="_SiloGycoEeSLVrU2ifxtpw" source="_SiloGicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln3icoEeSLVrU2ifxtpw" target="_SiloGycoEeSLVrU2ifxtpw" source="_SiloFCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Siln3ycoEeSLVrU2ifxtpw" target="_Siln5icoEeSLVrU2ifxtpw" source="_SiloGycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Siln4CcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Siln4ScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_Siln4icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Siln1icoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siln4ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siln5CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Siln5ScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Siln1icoEeSLVrU2ifxtpw" outgoing="_Siln1ycoEeSLVrU2ifxtpw _Siln2CcoEeSLVrU2ifxtpw _Siln2ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siln5icoEeSLVrU2ifxtpw" name="Initialization" incoming="_Siln3ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_Siln5ycoEeSLVrU2ifxtpw" target="_Siln7CcoEeSLVrU2ifxtpw" source="_Siln6CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Siln6CcoEeSLVrU2ifxtpw" name="Call(MapImpl$initialization$1)" outgoing="_Siln5ycoEeSLVrU2ifxtpw">
              <operation href="Libraries/CollectionClassesImpl.library.uml#MapImpl-MapImplinitialization1.1"/>
              <target xmi:id="_Siln6ScoEeSLVrU2ifxtpw" name="Call(MapImpl$initialization$1).target" incoming="_Siln1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#MapImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siln6icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siln6ycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siln7CcoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_Siln5ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siln7ScoEeSLVrU2ifxtpw" target="_Siln-icoEeSLVrU2ifxtpw" source="_Siln7ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Siln7icoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_Siln7ycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Siln7ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siln8CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siln8ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Siln8icoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Siln8ycoEeSLVrU2ifxtpw" name="Write(Map$initializationFlag$1)" structuralFeature="_SilDAScoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_Siln9CcoEeSLVrU2ifxtpw" name="Write(Map$initializationFlag$1).object" incoming="_Siln2CcoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siln9ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siln9icoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Siln9ycoEeSLVrU2ifxtpw" name="Write(Map$initializationFlag$1).result" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siln-CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siln-ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_Siln-icoEeSLVrU2ifxtpw" name="Write(Map$initializationFlag$1).value" incoming="_Siln7ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siln-ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siln_CcoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Siln_ScoEeSLVrU2ifxtpw" name="Read(Map$initializationFlag$1)" structuralFeature="_SilDAScoEeSLVrU2ifxtpw">
            <object xmi:id="_Siln_icoEeSLVrU2ifxtpw" name="Read(Map$initializationFlag$1).object" incoming="_Siln2ScoEeSLVrU2ifxtpw" type="_SilC_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siln_ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloACcoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SiloAScoEeSLVrU2ifxtpw" name="Read(Map$initializationFlag$1).result" outgoing="_Siln2icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloAicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloAycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiloBCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SiloBScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Siln2icoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloBicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloBycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SiloCCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Siln2ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloCScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloCicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiloCycoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SiloDCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Siln3CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloDScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloDicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SiloDycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SiloECcoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SiloEScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Siln2ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloEicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloEycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SiloFCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Siln3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloFScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloFicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SiloFycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Siln3CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloGCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloGScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SiloGicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Siln3ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SiloGycoEeSLVrU2ifxtpw" name="Decision(Test(Map$initializationFlag$1))" incoming="_Siln3ScoEeSLVrU2ifxtpw _Siln3icoEeSLVrU2ifxtpw" outgoing="_Siln3ycoEeSLVrU2ifxtpw" decisionInputFlow="_Siln3icoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SiloHCcoEeSLVrU2ifxtpw" name="Map$initialization$1" visibility="protected" method="_Siln1CcoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SiloHScoEeSLVrU2ifxtpw" name="Map" visibility="public" method="_SilDBCcoEeSLVrU2ifxtpw" redefinedOperation="_SilCgCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloHicoEeSLVrU2ifxtpw" name="entries" visibility="package" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloHycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloICcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloIScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilC_icoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloIicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloIycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloJCcoEeSLVrU2ifxtpw" name="destroy" visibility="public" method="_SilDWicoEeSLVrU2ifxtpw">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#MapImpl-destroy"/>
        <redefinedOperation href="#_SilChicoEeSLVrU2ifxtpw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloJScoEeSLVrU2ifxtpw" name="entries" visibility="public" method="_SilDXCcoEeSLVrU2ifxtpw" redefinedOperation="_SilCiicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloJicoEeSLVrU2ifxtpw" name="" visibility="package" type="_SimO-CcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloJycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloKCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloKScoEeSLVrU2ifxtpw" name="clear" visibility="public" method="_SilDiicoEeSLVrU2ifxtpw" redefinedOperation="_SilCiCcoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SiloKicoEeSLVrU2ifxtpw" name="excludesAll" visibility="public" method="_SilDjicoEeSLVrU2ifxtpw" redefinedOperation="_SilCjScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloKycoEeSLVrU2ifxtpw" name="entries" visibility="package" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloLCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloLScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloLicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloLycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloMCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloMScoEeSLVrU2ifxtpw" name="get" visibility="public" method="_SilDsScoEeSLVrU2ifxtpw" redefinedOperation="_SilClCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloMicoEeSLVrU2ifxtpw" name="key" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloMycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloNCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloNScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloNicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloNycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloOCcoEeSLVrU2ifxtpw" name="includesAll" visibility="public" method="_SilD4icoEeSLVrU2ifxtpw" redefinedOperation="_SilCnicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloOScoEeSLVrU2ifxtpw" name="entries" visibility="package" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloOicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloOycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloPCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloPScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloPicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloPycoEeSLVrU2ifxtpw" name="includesKey" visibility="public" method="_SilECCcoEeSLVrU2ifxtpw" redefinedOperation="_SilCpScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloQCcoEeSLVrU2ifxtpw" name="key" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloQScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloQicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloQycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloRCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloRScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloRicoEeSLVrU2ifxtpw" name="includesValue" visibility="public" method="_SilEJCcoEeSLVrU2ifxtpw" redefinedOperation="_SilCqycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloRycoEeSLVrU2ifxtpw" name="value" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloSCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloSScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloSicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloSycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloTCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloTScoEeSLVrU2ifxtpw" name="isEmpty" visibility="public" method="_SilEQCcoEeSLVrU2ifxtpw" redefinedOperation="_SilCsScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloTicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloTycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloUCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloUScoEeSLVrU2ifxtpw" name="keys" visibility="public" method="_SilEUicoEeSLVrU2ifxtpw" redefinedOperation="_SilCmycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloUicoEeSLVrU2ifxtpw" name="" visibility="package" type="_Sim1vycoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloUycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloVCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloVScoEeSLVrU2ifxtpw" name="notEmpty" visibility="public" method="_SilEiycoEeSLVrU2ifxtpw" redefinedOperation="_SilCtScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloVicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloVycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloWCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloWScoEeSLVrU2ifxtpw" name="put" visibility="public" method="_SilEnScoEeSLVrU2ifxtpw" redefinedOperation="_SilCuCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloWicoEeSLVrU2ifxtpw" name="key" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloWycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloXCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloXScoEeSLVrU2ifxtpw" name="value" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloXicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloXycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloYCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloYScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloYicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloYycoEeSLVrU2ifxtpw" name="putAll" visibility="public" method="_SilE2CcoEeSLVrU2ifxtpw" redefinedOperation="_SilCwScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloZCcoEeSLVrU2ifxtpw" name="entries" visibility="package" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloZScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloZicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloZycoEeSLVrU2ifxtpw" name="remove" visibility="public" method="_SilE8CcoEeSLVrU2ifxtpw" redefinedOperation="_SilCxycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloaCcoEeSLVrU2ifxtpw" name="key" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloaScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloaicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SiloaycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilobCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilobScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilobicoEeSLVrU2ifxtpw" name="removeAll" visibility="public" method="_SilnXycoEeSLVrU2ifxtpw" redefinedOperation="_SilCzicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilobycoEeSLVrU2ifxtpw" name="keys" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilocCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilocScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilocicoEeSLVrU2ifxtpw" name="size" visibility="public" method="_SilnbScoEeSLVrU2ifxtpw" redefinedOperation="_SilC1CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilocycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilodCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilodScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilodicoEeSLVrU2ifxtpw" name="toSequence" visibility="public" method="_SilnfycoEeSLVrU2ifxtpw" redefinedOperation="_SilC2CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilodycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloeCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloeScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SiloeicoEeSLVrU2ifxtpw" name="values" visibility="public" method="_SilnmycoEeSLVrU2ifxtpw" redefinedOperation="_SilC3icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SiloeycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SimSQicoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilofCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilofScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_SiloficoEeSLVrU2ifxtpw" name="ToEntryImpls" visibility="private" node="_SiloiScoEeSLVrU2ifxtpw _SiloiicoEeSLVrU2ifxtpw _SiloiycoEeSLVrU2ifxtpw _SilojCcoEeSLVrU2ifxtpw _SilojScoEeSLVrU2ifxtpw" group="_SilojScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilofycoEeSLVrU2ifxtpw" name="entries" visibility="package" type="_SilC7icoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilogCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilogScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilogicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilogycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilohCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilohScoEeSLVrU2ifxtpw" target="_SiloiicoEeSLVrU2ifxtpw" source="_SiloiScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilohicoEeSLVrU2ifxtpw" target="_SilojCcoEeSLVrU2ifxtpw" source="_SilojicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilohycoEeSLVrU2ifxtpw" target="_Silo0ycoEeSLVrU2ifxtpw" source="_SiloiicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SiloiCcoEeSLVrU2ifxtpw" target="_SiloiycoEeSLVrU2ifxtpw" source="_SilokCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilojScoEeSLVrU2ifxtpw" name="Body(ToEntryImpls)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilojicoEeSLVrU2ifxtpw" name="ReturnStatement@51c557cd" outgoing="_SilohicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilojycoEeSLVrU2ifxtpw" target="_SilokCcoEeSLVrU2ifxtpw" source="_Silo1CcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilokCcoEeSLVrU2ifxtpw" name="ReturnStatement@51c557cd.output" incoming="_SilojycoEeSLVrU2ifxtpw" outgoing="_SiloiCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilokScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilokicoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_SilokycoEeSLVrU2ifxtpw" name="CollectOrIterateExpression@43934618" mode="parallel" outputElement="_Silo1CcoEeSLVrU2ifxtpw" inputElement="_Silo0ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilolCcoEeSLVrU2ifxtpw" target="_SilooScoEeSLVrU2ifxtpw" source="_SiloxycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilolScoEeSLVrU2ifxtpw" target="_SilopCcoEeSLVrU2ifxtpw" source="_SilozycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilolicoEeSLVrU2ifxtpw" target="_SiloyicoEeSLVrU2ifxtpw" source="_SilomycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilolycoEeSLVrU2ifxtpw" target="_Silo0icoEeSLVrU2ifxtpw" source="_SilomycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SilomCcoEeSLVrU2ifxtpw" target="_SilonCcoEeSLVrU2ifxtpw" source="_SilowCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilomScoEeSLVrU2ifxtpw" target="_SilomycoEeSLVrU2ifxtpw" source="_Silo0ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilomicoEeSLVrU2ifxtpw" target="_Silo1CcoEeSLVrU2ifxtpw" source="_SilouicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SilomycoEeSLVrU2ifxtpw" name="Fork(e)" incoming="_SilomScoEeSLVrU2ifxtpw" outgoing="_SilolicoEeSLVrU2ifxtpw _SilolycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilonCcoEeSLVrU2ifxtpw" name="Create(CollectionClassesImpl::MapImpl::EntryImpl)" incoming="_SilomCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilonScoEeSLVrU2ifxtpw" target="_SilosycoEeSLVrU2ifxtpw" source="_SilooScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilonicoEeSLVrU2ifxtpw" target="_SilorScoEeSLVrU2ifxtpw" source="_SiloqCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilonycoEeSLVrU2ifxtpw" target="_SilovScoEeSLVrU2ifxtpw" source="_SilopCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilooCcoEeSLVrU2ifxtpw" target="_SilotycoEeSLVrU2ifxtpw" source="_SilosCcoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SilooScoEeSLVrU2ifxtpw" name="Create(CollectionClassesImpl::MapImpl::EntryImpl).input(CollectionClassesImpl::MapImpl::EntryImpl::key)" incoming="_SilolCcoEeSLVrU2ifxtpw" outgoing="_SilonScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilooicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilooycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeInput xmi:id="_SilopCcoEeSLVrU2ifxtpw" name="Create(CollectionClassesImpl::MapImpl::EntryImpl).input(CollectionClassesImpl::MapImpl::EntryImpl::value)" incoming="_SilolScoEeSLVrU2ifxtpw" outgoing="_SilonycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilopScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilopicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilopycoEeSLVrU2ifxtpw" name="Value(EntryImpl)">
                  <result xmi:id="_SiloqCcoEeSLVrU2ifxtpw" name="Value(EntryImpl).result" outgoing="_SilonicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloqScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloqicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_SiloqycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <instance href="Libraries/Alf.library.uml#_0cFufIXREeK2vJIz2pvpWw"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilorCcoEeSLVrU2ifxtpw" name="Write(key)" isReplaceAll="true">
                  <object xmi:id="_SilorScoEeSLVrU2ifxtpw" name="Write(key).object" incoming="_SilonicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloricoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilorycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <structuralFeature xmi:type="uml:Property" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl-key"/>
                  <result xmi:id="_SilosCcoEeSLVrU2ifxtpw" name="Write(key).result" outgoing="_SilooCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilosScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilosicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SilosycoEeSLVrU2ifxtpw" name="Write(key).value" incoming="_SilonScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilotCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilotScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SiloticoEeSLVrU2ifxtpw" name="Write(value)" isReplaceAll="true">
                  <object xmi:id="_SilotycoEeSLVrU2ifxtpw" name="Write(value).object" incoming="_SilooCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilouCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilouScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <structuralFeature xmi:type="uml:Property" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl-value"/>
                  <result xmi:id="_SilouicoEeSLVrU2ifxtpw" name="Write(value).result" outgoing="_SilomicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilouycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilovCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SilovScoEeSLVrU2ifxtpw" name="Write(value).value" incoming="_SilonycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilovicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilovycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilowCcoEeSLVrU2ifxtpw" name="Tuple@523a37ea" outgoing="_SilomCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilowScoEeSLVrU2ifxtpw" target="_SiloxCcoEeSLVrU2ifxtpw" source="_SiloyicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilowicoEeSLVrU2ifxtpw" target="_SilozCcoEeSLVrU2ifxtpw" source="_Silo0icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilowycoEeSLVrU2ifxtpw" name="Read(key)" structuralFeature="_SilC8ScoEeSLVrU2ifxtpw">
                  <object xmi:id="_SiloxCcoEeSLVrU2ifxtpw" name="Read(key).object" incoming="_SilowScoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloxScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloxicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SiloxycoEeSLVrU2ifxtpw" name="Read(key).result" outgoing="_SilolCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiloyCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiloyScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SiloyicoEeSLVrU2ifxtpw" name="Fork(Fork(e))" incoming="_SilolicoEeSLVrU2ifxtpw" outgoing="_SilowScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SiloyycoEeSLVrU2ifxtpw" name="Read(value)" structuralFeature="_SilC8ycoEeSLVrU2ifxtpw">
                  <object xmi:id="_SilozCcoEeSLVrU2ifxtpw" name="Read(value).object" incoming="_SilowicoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilozScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilozicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilozycoEeSLVrU2ifxtpw" name="Read(value).result" outgoing="_SilolScoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silo0CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silo0ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Silo0icoEeSLVrU2ifxtpw" name="Fork(Fork(e))" incoming="_SilolycoEeSLVrU2ifxtpw" outgoing="_SilowicoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_Silo0ycoEeSLVrU2ifxtpw" name="CollectOrIterateExpression@43934618.inputElement" incoming="_SilohycoEeSLVrU2ifxtpw" outgoing="_SilomScoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" regionAsInput="_SilokycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_Silo1CcoEeSLVrU2ifxtpw" name="CollectOrIterateExpression@43934618.outputElement" incoming="_SilomicoEeSLVrU2ifxtpw" outgoing="_SilojycoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" regionAsOutput="_SilokycoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SiloiScoEeSLVrU2ifxtpw" name="Input(entries)" outgoing="_SilohScoEeSLVrU2ifxtpw" parameter="_SilofycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SiloiicoEeSLVrU2ifxtpw" name="Fork(entries)" incoming="_SilohScoEeSLVrU2ifxtpw" outgoing="_SilohycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SiloiycoEeSLVrU2ifxtpw" name="Return" incoming="_SiloiCcoEeSLVrU2ifxtpw" parameter="_SilogicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilojCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilohicoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_Silo1ScoEeSLVrU2ifxtpw" name="ToEntries" visibility="private" node="_Silo4CcoEeSLVrU2ifxtpw _Silo4ScoEeSLVrU2ifxtpw _Silo4icoEeSLVrU2ifxtpw _Silo4ycoEeSLVrU2ifxtpw _Silo5CcoEeSLVrU2ifxtpw" group="_Silo5CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Silo1icoEeSLVrU2ifxtpw" name="entryImpls" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silo1ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silo2CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Silo2ScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilC7icoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silo2icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silo2ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo3CcoEeSLVrU2ifxtpw" target="_Silo4ScoEeSLVrU2ifxtpw" source="_Silo4CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Silo3ScoEeSLVrU2ifxtpw" target="_Silo4ycoEeSLVrU2ifxtpw" source="_Silo5ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo3icoEeSLVrU2ifxtpw" target="_SilpVCcoEeSLVrU2ifxtpw" source="_Silo4ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo3ycoEeSLVrU2ifxtpw" target="_Silo4icoEeSLVrU2ifxtpw" source="_Silo5ycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Silo5CcoEeSLVrU2ifxtpw" name="Body(ToEntries)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Silo5ScoEeSLVrU2ifxtpw" name="ReturnStatement@15b65ae8" outgoing="_Silo3ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo5icoEeSLVrU2ifxtpw" target="_Silo5ycoEeSLVrU2ifxtpw" source="_SilpVScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Silo5ycoEeSLVrU2ifxtpw" name="ReturnStatement@15b65ae8.output" incoming="_Silo5icoEeSLVrU2ifxtpw" outgoing="_Silo3ycoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silo6CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silo6ScoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_Silo6icoEeSLVrU2ifxtpw" name="CollectOrIterateExpression@793552e8" mode="parallel" outputElement="_SilpVScoEeSLVrU2ifxtpw" inputElement="_SilpVCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo6ycoEeSLVrU2ifxtpw" target="_Silo-CcoEeSLVrU2ifxtpw" source="_SilpNycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo7CcoEeSLVrU2ifxtpw" target="_Silo-ycoEeSLVrU2ifxtpw" source="_SilpUycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo7ScoEeSLVrU2ifxtpw" target="_SilpIycoEeSLVrU2ifxtpw" source="_Silo8icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo7icoEeSLVrU2ifxtpw" target="_SilpPycoEeSLVrU2ifxtpw" source="_Silo8icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Silo7ycoEeSLVrU2ifxtpw" target="_Silo8ycoEeSLVrU2ifxtpw" source="_SilpFycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo8CcoEeSLVrU2ifxtpw" target="_Silo8icoEeSLVrU2ifxtpw" source="_SilpVCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo8ScoEeSLVrU2ifxtpw" target="_SilpVScoEeSLVrU2ifxtpw" source="_SilpEScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Silo8icoEeSLVrU2ifxtpw" name="Fork(e)" incoming="_Silo8CcoEeSLVrU2ifxtpw" outgoing="_Silo7ScoEeSLVrU2ifxtpw _Silo7icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Silo8ycoEeSLVrU2ifxtpw" name="Create(Alf::Library::CollectionClasses::$$Map__Impl$Map$Key_Impl$Map$Value__::Entry)" incoming="_Silo7ycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo9CcoEeSLVrU2ifxtpw" target="_SilpCicoEeSLVrU2ifxtpw" source="_Silo-CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo9ScoEeSLVrU2ifxtpw" target="_SilpBCcoEeSLVrU2ifxtpw" source="_Silo_ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo9icoEeSLVrU2ifxtpw" target="_SilpFCcoEeSLVrU2ifxtpw" source="_Silo-ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Silo9ycoEeSLVrU2ifxtpw" target="_SilpDicoEeSLVrU2ifxtpw" source="_SilpBycoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_Silo-CcoEeSLVrU2ifxtpw" name="Create(Alf::Library::CollectionClasses::$$Map__Impl$Map$Key_Impl$Map$Value__::Entry).input(Alf::Library::CollectionClasses::$$Map__Impl$Map$Key_Impl$Map$Value__::Entry::key)" incoming="_Silo6ycoEeSLVrU2ifxtpw" outgoing="_Silo9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silo-ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silo-icoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeInput xmi:id="_Silo-ycoEeSLVrU2ifxtpw" name="Create(Alf::Library::CollectionClasses::$$Map__Impl$Map$Key_Impl$Map$Value__::Entry).input(Alf::Library::CollectionClasses::$$Map__Impl$Map$Key_Impl$Map$Value__::Entry::value)" incoming="_Silo7CcoEeSLVrU2ifxtpw" outgoing="_Silo9icoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silo_CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silo_ScoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Silo_icoEeSLVrU2ifxtpw" name="Value(Entry)">
                  <result xmi:id="_Silo_ycoEeSLVrU2ifxtpw" name="Value(Entry).result" outgoing="_Silo9ScoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpACcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpAScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_SilpAicoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" instance="_Sim5iCcoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilpAycoEeSLVrU2ifxtpw" name="Write(key)" structuralFeature="_SilC8ScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SilpBCcoEeSLVrU2ifxtpw" name="Write(key).object" incoming="_Silo9ScoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpBScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpBicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilpBycoEeSLVrU2ifxtpw" name="Write(key).result" outgoing="_Silo9ycoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpCCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpCScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SilpCicoEeSLVrU2ifxtpw" name="Write(key).value" incoming="_Silo9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpCycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpDCcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilpDScoEeSLVrU2ifxtpw" name="Write(value)" structuralFeature="_SilC8ycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SilpDicoEeSLVrU2ifxtpw" name="Write(value).object" incoming="_Silo9ycoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpDycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpECcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SilpEScoEeSLVrU2ifxtpw" name="Write(value).result" outgoing="_Silo8ScoEeSLVrU2ifxtpw" type="_SilC7icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpEicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpEycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SilpFCcoEeSLVrU2ifxtpw" name="Write(value).value" incoming="_Silo9icoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpFScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpFicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilpFycoEeSLVrU2ifxtpw" name="Tuple@5fba69a7" outgoing="_Silo7ycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpGCcoEeSLVrU2ifxtpw" target="_SilpHScoEeSLVrU2ifxtpw" source="_SilpIycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpGScoEeSLVrU2ifxtpw" target="_SilpNicoEeSLVrU2ifxtpw" source="_SilpICcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpGicoEeSLVrU2ifxtpw" target="_SilpOScoEeSLVrU2ifxtpw" source="_SilpPycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpGycoEeSLVrU2ifxtpw" target="_SilpUicoEeSLVrU2ifxtpw" source="_SilpPCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilpHCcoEeSLVrU2ifxtpw" name="Read(key)">
                  <object xmi:id="_SilpHScoEeSLVrU2ifxtpw" name="Read(key).object" incoming="_SilpGCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpHicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpHycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <structuralFeature xmi:type="uml:Property" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl-key"/>
                  <result xmi:id="_SilpICcoEeSLVrU2ifxtpw" name="Read(key).result" outgoing="_SilpGScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpIScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpIicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SilpIycoEeSLVrU2ifxtpw" name="Fork(Fork(e))" incoming="_Silo7ScoEeSLVrU2ifxtpw" outgoing="_SilpGCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_SilpJCcoEeSLVrU2ifxtpw" name="CastExpression@33fe38cc" mode="parallel" outputElement="_SilpNycoEeSLVrU2ifxtpw" inputElement="_SilpNicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpJScoEeSLVrU2ifxtpw" target="_SilpLicoEeSLVrU2ifxtpw" source="_SilpNCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpJicoEeSLVrU2ifxtpw" target="_SilpNScoEeSLVrU2ifxtpw" source="_SilpNCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpJycoEeSLVrU2ifxtpw" target="_SilpNScoEeSLVrU2ifxtpw" source="_SilpMScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpKCcoEeSLVrU2ifxtpw" target="_SilpLCcoEeSLVrU2ifxtpw" source="_SilpNScoEeSLVrU2ifxtpw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilpKScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpKicoEeSLVrU2ifxtpw" target="_SilpNCcoEeSLVrU2ifxtpw" source="_SilpNicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpKycoEeSLVrU2ifxtpw" target="_SilpNycoEeSLVrU2ifxtpw" source="_SilpLCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_SilpLCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@33fe38cc.operand)" incoming="_SilpKCcoEeSLVrU2ifxtpw" outgoing="_SilpKycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SilpLScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Key)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <object xmi:id="_SilpLicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Key).object" incoming="_SilpJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpLycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpMCcoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SilpMScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Key).result" outgoing="_SilpJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpMicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpMycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SilpNCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(Key).object)" incoming="_SilpKicoEeSLVrU2ifxtpw" outgoing="_SilpJScoEeSLVrU2ifxtpw _SilpJicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_SilpNScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(Key).result)" incoming="_SilpJicoEeSLVrU2ifxtpw _SilpJycoEeSLVrU2ifxtpw" outgoing="_SilpKCcoEeSLVrU2ifxtpw" decisionInputFlow="_SilpJycoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_SilpNicoEeSLVrU2ifxtpw" name="CastExpression@33fe38cc.inputElement" incoming="_SilpGScoEeSLVrU2ifxtpw" outgoing="_SilpKicoEeSLVrU2ifxtpw" regionAsInput="_SilpJCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_SilpNycoEeSLVrU2ifxtpw" name="CastExpression@33fe38cc.outputElement" incoming="_SilpKycoEeSLVrU2ifxtpw" outgoing="_Silo6ycoEeSLVrU2ifxtpw" regionAsOutput="_SilpJCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilpOCcoEeSLVrU2ifxtpw" name="Read(value)">
                  <object xmi:id="_SilpOScoEeSLVrU2ifxtpw" name="Read(value).object" incoming="_SilpGicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpOicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpOycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <structuralFeature xmi:type="uml:Property" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl-value"/>
                  <result xmi:id="_SilpPCcoEeSLVrU2ifxtpw" name="Read(value).result" outgoing="_SilpGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpPScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpPicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SilpPycoEeSLVrU2ifxtpw" name="Fork(Fork(e))" incoming="_Silo7icoEeSLVrU2ifxtpw" outgoing="_SilpGicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_SilpQCcoEeSLVrU2ifxtpw" name="CastExpression@7742f3be" mode="parallel" outputElement="_SilpUycoEeSLVrU2ifxtpw" inputElement="_SilpUicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpQScoEeSLVrU2ifxtpw" target="_SilpSicoEeSLVrU2ifxtpw" source="_SilpUCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpQicoEeSLVrU2ifxtpw" target="_SilpUScoEeSLVrU2ifxtpw" source="_SilpUCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpQycoEeSLVrU2ifxtpw" target="_SilpUScoEeSLVrU2ifxtpw" source="_SilpTScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpRCcoEeSLVrU2ifxtpw" target="_SilpSCcoEeSLVrU2ifxtpw" source="_SilpUScoEeSLVrU2ifxtpw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilpRScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpRicoEeSLVrU2ifxtpw" target="_SilpUCcoEeSLVrU2ifxtpw" source="_SilpUicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpRycoEeSLVrU2ifxtpw" target="_SilpUycoEeSLVrU2ifxtpw" source="_SilpSCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_SilpSCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@7742f3be.operand)" incoming="_SilpRCcoEeSLVrU2ifxtpw" outgoing="_SilpRycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SilpSScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value)" classifier="_SilBcCcoEeSLVrU2ifxtpw">
                    <object xmi:id="_SilpSicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).object" incoming="_SilpQScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpSycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpTCcoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SilpTScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Value).result" outgoing="_SilpQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpTicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpTycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SilpUCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(Value).object)" incoming="_SilpRicoEeSLVrU2ifxtpw" outgoing="_SilpQScoEeSLVrU2ifxtpw _SilpQicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_SilpUScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(Value).result)" incoming="_SilpQicoEeSLVrU2ifxtpw _SilpQycoEeSLVrU2ifxtpw" outgoing="_SilpRCcoEeSLVrU2ifxtpw" decisionInputFlow="_SilpQycoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_SilpUicoEeSLVrU2ifxtpw" name="CastExpression@7742f3be.inputElement" incoming="_SilpGycoEeSLVrU2ifxtpw" outgoing="_SilpRicoEeSLVrU2ifxtpw" regionAsInput="_SilpQCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_SilpUycoEeSLVrU2ifxtpw" name="CastExpression@7742f3be.outputElement" incoming="_SilpRycoEeSLVrU2ifxtpw" outgoing="_Silo7CcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" regionAsOutput="_SilpQCcoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilpVCcoEeSLVrU2ifxtpw" name="CollectOrIterateExpression@793552e8.inputElement" incoming="_Silo3icoEeSLVrU2ifxtpw" outgoing="_Silo8CcoEeSLVrU2ifxtpw" regionAsInput="_Silo6icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilpVScoEeSLVrU2ifxtpw" name="CollectOrIterateExpression@793552e8.outputElement" incoming="_Silo8ScoEeSLVrU2ifxtpw" outgoing="_Silo5icoEeSLVrU2ifxtpw" regionAsOutput="_Silo6icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:DataType" href="Libraries/CollectionClassesImpl.library.uml#MapImpl-EntryImpl"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silo4CcoEeSLVrU2ifxtpw" name="Input(entryImpls)" outgoing="_Silo3CcoEeSLVrU2ifxtpw" parameter="_Silo1icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Silo4ScoEeSLVrU2ifxtpw" name="Fork(entryImpls)" incoming="_Silo3CcoEeSLVrU2ifxtpw" outgoing="_Silo3icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silo4icoEeSLVrU2ifxtpw" name="Return" incoming="_Silo3ycoEeSLVrU2ifxtpw" parameter="_Silo2ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Silo4ycoEeSLVrU2ifxtpw" name="Final" incoming="_Silo3ScoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SilpVicoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Impl$Set__Alf$Library$CollectionClasses$Impl$$$Map__Impl$Map$Key_Impl$Map$Value__$Entry__">
      <generalization xmi:id="_SilpVycoEeSLVrU2ifxtpw">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
      </generalization>
      <generalization xmi:id="_SilpWCcoEeSLVrU2ifxtpw" general="_SimO-CcoEeSLVrU2ifxtpw"/>
      <ownedAttribute xmi:id="_SilpWScoEeSLVrU2ifxtpw" name="Set$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpWicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpWycoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilpXCcoEeSLVrU2ifxtpw" name="Set$method$1" specification="_Silr-CcoEeSLVrU2ifxtpw" node="_SilpZicoEeSLVrU2ifxtpw _SilpZycoEeSLVrU2ifxtpw _SilpaCcoEeSLVrU2ifxtpw _SilpaScoEeSLVrU2ifxtpw" group="_SilpaScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilpXScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpXicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpXycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilpYCcoEeSLVrU2ifxtpw" name="" type="_SilpVicoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpYScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpYicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpYycoEeSLVrU2ifxtpw" target="_SilpZycoEeSLVrU2ifxtpw" source="_SilpZicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpZCcoEeSLVrU2ifxtpw" target="_SilpaCcoEeSLVrU2ifxtpw" source="_SilpeycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpZScoEeSLVrU2ifxtpw" target="_SilpfycoEeSLVrU2ifxtpw" source="_SilpZycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilpaScoEeSLVrU2ifxtpw" name="Body(Set$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpaicoEeSLVrU2ifxtpw" target="_SilpeycoEeSLVrU2ifxtpw" source="_SilpeCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpaycoEeSLVrU2ifxtpw" target="_SilphicoEeSLVrU2ifxtpw" source="_SilpeycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilpbCcoEeSLVrU2ifxtpw" target="_SilpdicoEeSLVrU2ifxtpw" source="_SilphScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilpbScoEeSLVrU2ifxtpw" target="_SilphScoEeSLVrU2ifxtpw" source="_SilpfCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpbicoEeSLVrU2ifxtpw" target="_SilpiicoEeSLVrU2ifxtpw" source="_SilpeycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpbycoEeSLVrU2ifxtpw" target="_SilpkScoEeSLVrU2ifxtpw" source="_SilpjScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpcCcoEeSLVrU2ifxtpw" target="_SilpnScoEeSLVrU2ifxtpw" source="_SilplCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpcScoEeSLVrU2ifxtpw" target="_SilpoycoEeSLVrU2ifxtpw" source="_SilpmCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilpcicoEeSLVrU2ifxtpw" target="_SilppycoEeSLVrU2ifxtpw" source="_SilppicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpcycoEeSLVrU2ifxtpw" target="_SilppycoEeSLVrU2ifxtpw" source="_SilpoCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilpdCcoEeSLVrU2ifxtpw" target="_SilpfCcoEeSLVrU2ifxtpw" source="_SilppycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilpdScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilpdicoEeSLVrU2ifxtpw" name="Body" incoming="_SilpbCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SilpdycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SilpeCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilpaicoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpeScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpeicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SilpeycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilpaicoEeSLVrU2ifxtpw" outgoing="_SilpZCcoEeSLVrU2ifxtpw _SilpaycoEeSLVrU2ifxtpw _SilpbicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilpfCcoEeSLVrU2ifxtpw" name="Super" incoming="_SilpdCcoEeSLVrU2ifxtpw" outgoing="_SilpbScoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilpfScoEeSLVrU2ifxtpw" name="ExpressionStatement@35a93ff1">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilpficoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1)">
                <argument xmi:id="_SilpfycoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1).argument(seq)" incoming="_SilpZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpgCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpgScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SilpgicoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpgycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilphCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#SetImpl-SetImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SilphScoEeSLVrU2ifxtpw" name="Call(Set$initialization$1)" incoming="_SilpbScoEeSLVrU2ifxtpw" outgoing="_SilpbCcoEeSLVrU2ifxtpw" operation="_Silr9ycoEeSLVrU2ifxtpw">
            <target xmi:id="_SilphicoEeSLVrU2ifxtpw" name="Call(Set$initialization$1).target" incoming="_SilpaycoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilphycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpiCcoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SilpiScoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1)" structuralFeature="_SilpWScoEeSLVrU2ifxtpw">
            <object xmi:id="_SilpiicoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).object" incoming="_SilpbicoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpiycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpjCcoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SilpjScoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).result" outgoing="_SilpbycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpjicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpjycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilpkCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SilpkScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SilpbycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpkicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpkycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SilplCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SilpcCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilplScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilplicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilplycoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SilpmCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SilpcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpmScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpmicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SilpmycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SilpnCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SilpnScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SilpcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpnicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpnycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SilpoCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SilpcycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpoScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpoicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SilpoycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SilpcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilppCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilppScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SilppicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SilpcicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SilppycoEeSLVrU2ifxtpw" name="Decision(Test(Set$initializationFlag$1))" incoming="_SilpcicoEeSLVrU2ifxtpw _SilpcycoEeSLVrU2ifxtpw" outgoing="_SilpdCcoEeSLVrU2ifxtpw" decisionInputFlow="_SilpcycoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilpZicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SilpYycoEeSLVrU2ifxtpw" parameter="_SilpXScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilpZycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SilpYycoEeSLVrU2ifxtpw" outgoing="_SilpZScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilpaCcoEeSLVrU2ifxtpw" name="Return" incoming="_SilpZCcoEeSLVrU2ifxtpw" parameter="_SilpYCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilpqCcoEeSLVrU2ifxtpw" name="destroy$method$2" specification="_Silr_ycoEeSLVrU2ifxtpw" node="_SilpqScoEeSLVrU2ifxtpw" group="_SilpqScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SilpqScoEeSLVrU2ifxtpw" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilpqicoEeSLVrU2ifxtpw" name="add$method$1" specification="_SilsACcoEeSLVrU2ifxtpw" node="_SilptScoEeSLVrU2ifxtpw _SilpticoEeSLVrU2ifxtpw _SilptycoEeSLVrU2ifxtpw _SilpuCcoEeSLVrU2ifxtpw _SilpuScoEeSLVrU2ifxtpw" group="_SilpuScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilpqycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilprCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilprScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilpricoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilprycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpsCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpsScoEeSLVrU2ifxtpw" target="_SilpticoEeSLVrU2ifxtpw" source="_SilptScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilpsicoEeSLVrU2ifxtpw" target="_SilpuCcoEeSLVrU2ifxtpw" source="_SilpuicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpsycoEeSLVrU2ifxtpw" target="_SilpwCcoEeSLVrU2ifxtpw" source="_SilpticoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilptCcoEeSLVrU2ifxtpw" target="_SilptycoEeSLVrU2ifxtpw" source="_SilpvCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilpuScoEeSLVrU2ifxtpw" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilpuicoEeSLVrU2ifxtpw" name="ReturnStatement@42845bde" outgoing="_SilpsicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpuycoEeSLVrU2ifxtpw" target="_SilpvCcoEeSLVrU2ifxtpw" source="_SilpwycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilpvCcoEeSLVrU2ifxtpw" name="ReturnStatement@42845bde.output" incoming="_SilpuycoEeSLVrU2ifxtpw" outgoing="_SilptCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpvScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpvicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilpvycoEeSLVrU2ifxtpw" name="Call(addImpl$method$1)">
              <argument xmi:id="_SilpwCcoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).argument(element)" incoming="_SilpsycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpwScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpwicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilpwycoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).result()" outgoing="_SilpuycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpxCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpxScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilptScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SilpsScoEeSLVrU2ifxtpw" parameter="_SilpqycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilpticoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SilpsScoEeSLVrU2ifxtpw" outgoing="_SilpsycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilptycoEeSLVrU2ifxtpw" name="Return" incoming="_SilptCcoEeSLVrU2ifxtpw" parameter="_SilpricoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilpuCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilpsicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilpxicoEeSLVrU2ifxtpw" name="addAll$method$1" specification="_SilsBycoEeSLVrU2ifxtpw" node="_Silp0ScoEeSLVrU2ifxtpw _Silp0icoEeSLVrU2ifxtpw _Silp0ycoEeSLVrU2ifxtpw _Silp1CcoEeSLVrU2ifxtpw _Silp1ScoEeSLVrU2ifxtpw" group="_Silp1ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilpxycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpyCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpyScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilpyicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilpyycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilpzCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpzScoEeSLVrU2ifxtpw" target="_Silp0icoEeSLVrU2ifxtpw" source="_Silp0ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilpzicoEeSLVrU2ifxtpw" target="_Silp1CcoEeSLVrU2ifxtpw" source="_Silp1icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilpzycoEeSLVrU2ifxtpw" target="_Silp3CcoEeSLVrU2ifxtpw" source="_Silp0icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silp0CcoEeSLVrU2ifxtpw" target="_Silp0ycoEeSLVrU2ifxtpw" source="_Silp2CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Silp1ScoEeSLVrU2ifxtpw" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Silp1icoEeSLVrU2ifxtpw" name="ReturnStatement@7170077" outgoing="_SilpzicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Silp1ycoEeSLVrU2ifxtpw" target="_Silp2CcoEeSLVrU2ifxtpw" source="_Silp3ycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Silp2CcoEeSLVrU2ifxtpw" name="ReturnStatement@7170077.output" incoming="_Silp1ycoEeSLVrU2ifxtpw" outgoing="_Silp0CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silp2ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silp2icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Silp2ycoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_Silp3CcoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).argument(seq)" incoming="_SilpzycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silp3ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silp3icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Silp3ycoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).result()" outgoing="_Silp1ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silp4CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silp4ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silp0ScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SilpzScoEeSLVrU2ifxtpw" parameter="_SilpxycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Silp0icoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SilpzScoEeSLVrU2ifxtpw" outgoing="_SilpzycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silp0ycoEeSLVrU2ifxtpw" name="Return" incoming="_Silp0CcoEeSLVrU2ifxtpw" parameter="_SilpyicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Silp1CcoEeSLVrU2ifxtpw" name="Final" incoming="_SilpzicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Silp4icoEeSLVrU2ifxtpw" name="clear$method$1" specification="_SilsDicoEeSLVrU2ifxtpw" node="_Silp4ycoEeSLVrU2ifxtpw" group="_Silp4ycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_Silp4ycoEeSLVrU2ifxtpw" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Silp5CcoEeSLVrU2ifxtpw" name="ExpressionStatement@44d737ca">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Silp5ScoEeSLVrU2ifxtpw" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Silp5icoEeSLVrU2ifxtpw" name="count$method$1" specification="_SilsDycoEeSLVrU2ifxtpw" node="_Silp8ScoEeSLVrU2ifxtpw _Silp8icoEeSLVrU2ifxtpw _Silp8ycoEeSLVrU2ifxtpw _Silp9CcoEeSLVrU2ifxtpw _Silp9ScoEeSLVrU2ifxtpw" group="_Silp9ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Silp5ycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silp6CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silp6ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Silp6icoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silp6ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silp7CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silp7ScoEeSLVrU2ifxtpw" target="_Silp8icoEeSLVrU2ifxtpw" source="_Silp8ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Silp7icoEeSLVrU2ifxtpw" target="_Silp9CcoEeSLVrU2ifxtpw" source="_Silp9icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silp7ycoEeSLVrU2ifxtpw" target="_Silp_CcoEeSLVrU2ifxtpw" source="_Silp8icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silp8CcoEeSLVrU2ifxtpw" target="_Silp8ycoEeSLVrU2ifxtpw" source="_Silp-CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Silp9ScoEeSLVrU2ifxtpw" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Silp9icoEeSLVrU2ifxtpw" name="ReturnStatement@3751834b" outgoing="_Silp7icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Silp9ycoEeSLVrU2ifxtpw" target="_Silp-CcoEeSLVrU2ifxtpw" source="_Silp_ycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Silp-CcoEeSLVrU2ifxtpw" name="ReturnStatement@3751834b.output" incoming="_Silp9ycoEeSLVrU2ifxtpw" outgoing="_Silp8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silp-ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silp-icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Silp-ycoEeSLVrU2ifxtpw" name="Call(countImpl$method$1)">
              <argument xmi:id="_Silp_CcoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).argument(element)" incoming="_Silp7ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silp_ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silp_icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Silp_ycoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).result()" outgoing="_Silp9ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqACcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqAScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silp8ScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Silp7ScoEeSLVrU2ifxtpw" parameter="_Silp5ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Silp8icoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Silp7ScoEeSLVrU2ifxtpw" outgoing="_Silp7ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silp8ycoEeSLVrU2ifxtpw" name="Return" incoming="_Silp8CcoEeSLVrU2ifxtpw" parameter="_Silp6icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Silp9CcoEeSLVrU2ifxtpw" name="Final" incoming="_Silp7icoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqAicoEeSLVrU2ifxtpw" name="equals$method$1" specification="_SilsFicoEeSLVrU2ifxtpw" node="_SilqDScoEeSLVrU2ifxtpw _SilqDicoEeSLVrU2ifxtpw _SilqDycoEeSLVrU2ifxtpw _SilqECcoEeSLVrU2ifxtpw _SilqEScoEeSLVrU2ifxtpw" group="_SilqEScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqAycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqBCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqBScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilqBicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqBycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqCCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqCScoEeSLVrU2ifxtpw" target="_SilqDicoEeSLVrU2ifxtpw" source="_SilqDScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilqCicoEeSLVrU2ifxtpw" target="_SilqECcoEeSLVrU2ifxtpw" source="_SilqEicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqCycoEeSLVrU2ifxtpw" target="_SilqGCcoEeSLVrU2ifxtpw" source="_SilqDicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqDCcoEeSLVrU2ifxtpw" target="_SilqDycoEeSLVrU2ifxtpw" source="_SilqFCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilqEScoEeSLVrU2ifxtpw" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilqEicoEeSLVrU2ifxtpw" name="ReturnStatement@1d00c794" outgoing="_SilqCicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqEycoEeSLVrU2ifxtpw" target="_SilqFCcoEeSLVrU2ifxtpw" source="_SilqGycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilqFCcoEeSLVrU2ifxtpw" name="ReturnStatement@1d00c794.output" incoming="_SilqEycoEeSLVrU2ifxtpw" outgoing="_SilqDCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqFScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqFicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilqFycoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_SilqGCcoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).argument(seq)" incoming="_SilqCycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqGScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqGicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilqGycoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).result()" outgoing="_SilqEycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqHCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqHScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqDScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SilqCScoEeSLVrU2ifxtpw" parameter="_SilqAycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilqDicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SilqCScoEeSLVrU2ifxtpw" outgoing="_SilqCycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqDycoEeSLVrU2ifxtpw" name="Return" incoming="_SilqDCcoEeSLVrU2ifxtpw" parameter="_SilqBicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilqECcoEeSLVrU2ifxtpw" name="Final" incoming="_SilqCicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqHicoEeSLVrU2ifxtpw" name="excludes$method$1" specification="_SilsHScoEeSLVrU2ifxtpw" node="_SilqKScoEeSLVrU2ifxtpw _SilqKicoEeSLVrU2ifxtpw _SilqKycoEeSLVrU2ifxtpw _SilqLCcoEeSLVrU2ifxtpw _SilqLScoEeSLVrU2ifxtpw" group="_SilqLScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqHycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqICcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqIScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilqIicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqIycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqJCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqJScoEeSLVrU2ifxtpw" target="_SilqKicoEeSLVrU2ifxtpw" source="_SilqKScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilqJicoEeSLVrU2ifxtpw" target="_SilqLCcoEeSLVrU2ifxtpw" source="_SilqLicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqJycoEeSLVrU2ifxtpw" target="_SilqNCcoEeSLVrU2ifxtpw" source="_SilqKicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqKCcoEeSLVrU2ifxtpw" target="_SilqKycoEeSLVrU2ifxtpw" source="_SilqMCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilqLScoEeSLVrU2ifxtpw" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilqLicoEeSLVrU2ifxtpw" name="ReturnStatement@1332fa84" outgoing="_SilqJicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqLycoEeSLVrU2ifxtpw" target="_SilqMCcoEeSLVrU2ifxtpw" source="_SilqNycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilqMCcoEeSLVrU2ifxtpw" name="ReturnStatement@1332fa84.output" incoming="_SilqLycoEeSLVrU2ifxtpw" outgoing="_SilqKCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqMScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqMicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilqMycoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_SilqNCcoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).argument(element)" incoming="_SilqJycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqNScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqNicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilqNycoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).result()" outgoing="_SilqLycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqOCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqOScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqKScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SilqJScoEeSLVrU2ifxtpw" parameter="_SilqHycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilqKicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SilqJScoEeSLVrU2ifxtpw" outgoing="_SilqJycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqKycoEeSLVrU2ifxtpw" name="Return" incoming="_SilqKCcoEeSLVrU2ifxtpw" parameter="_SilqIicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilqLCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilqJicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqOicoEeSLVrU2ifxtpw" name="excludesAll$method$1" specification="_SilsJCcoEeSLVrU2ifxtpw" node="_SilqRScoEeSLVrU2ifxtpw _SilqRicoEeSLVrU2ifxtpw _SilqRycoEeSLVrU2ifxtpw _SilqSCcoEeSLVrU2ifxtpw _SilqSScoEeSLVrU2ifxtpw" group="_SilqSScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqOycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqPCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqPScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilqPicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqPycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqQCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqQScoEeSLVrU2ifxtpw" target="_SilqRicoEeSLVrU2ifxtpw" source="_SilqRScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilqQicoEeSLVrU2ifxtpw" target="_SilqSCcoEeSLVrU2ifxtpw" source="_SilqSicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqQycoEeSLVrU2ifxtpw" target="_SilqUCcoEeSLVrU2ifxtpw" source="_SilqRicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqRCcoEeSLVrU2ifxtpw" target="_SilqRycoEeSLVrU2ifxtpw" source="_SilqTCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilqSScoEeSLVrU2ifxtpw" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilqSicoEeSLVrU2ifxtpw" name="ReturnStatement@5213fce3" outgoing="_SilqQicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqSycoEeSLVrU2ifxtpw" target="_SilqTCcoEeSLVrU2ifxtpw" source="_SilqUycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilqTCcoEeSLVrU2ifxtpw" name="ReturnStatement@5213fce3.output" incoming="_SilqSycoEeSLVrU2ifxtpw" outgoing="_SilqRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqTScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqTicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilqTycoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_SilqUCcoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_SilqQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqUScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqUicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilqUycoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).result()" outgoing="_SilqSycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqVCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqVScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqRScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SilqQScoEeSLVrU2ifxtpw" parameter="_SilqOycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilqRicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SilqQScoEeSLVrU2ifxtpw" outgoing="_SilqQycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqRycoEeSLVrU2ifxtpw" name="Return" incoming="_SilqRCcoEeSLVrU2ifxtpw" parameter="_SilqPicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilqSCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilqQicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqVicoEeSLVrU2ifxtpw" name="includes$method$1" specification="_SilsKycoEeSLVrU2ifxtpw" node="_SilqYScoEeSLVrU2ifxtpw _SilqYicoEeSLVrU2ifxtpw _SilqYycoEeSLVrU2ifxtpw _SilqZCcoEeSLVrU2ifxtpw _SilqZScoEeSLVrU2ifxtpw" group="_SilqZScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqVycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqWCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqWScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilqWicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqWycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqXCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqXScoEeSLVrU2ifxtpw" target="_SilqYicoEeSLVrU2ifxtpw" source="_SilqYScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilqXicoEeSLVrU2ifxtpw" target="_SilqZCcoEeSLVrU2ifxtpw" source="_SilqZicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqXycoEeSLVrU2ifxtpw" target="_SilqbCcoEeSLVrU2ifxtpw" source="_SilqYicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqYCcoEeSLVrU2ifxtpw" target="_SilqYycoEeSLVrU2ifxtpw" source="_SilqaCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilqZScoEeSLVrU2ifxtpw" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilqZicoEeSLVrU2ifxtpw" name="ReturnStatement@512327c" outgoing="_SilqXicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqZycoEeSLVrU2ifxtpw" target="_SilqaCcoEeSLVrU2ifxtpw" source="_SilqbycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilqaCcoEeSLVrU2ifxtpw" name="ReturnStatement@512327c.output" incoming="_SilqZycoEeSLVrU2ifxtpw" outgoing="_SilqYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqaScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqaicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilqaycoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1)">
              <argument xmi:id="_SilqbCcoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).argument(element)" incoming="_SilqXycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqbScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqbicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilqbycoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).result()" outgoing="_SilqZycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqcCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqcScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqYScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SilqXScoEeSLVrU2ifxtpw" parameter="_SilqVycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilqYicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SilqXScoEeSLVrU2ifxtpw" outgoing="_SilqXycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqYycoEeSLVrU2ifxtpw" name="Return" incoming="_SilqYCcoEeSLVrU2ifxtpw" parameter="_SilqWicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilqZCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilqXicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqcicoEeSLVrU2ifxtpw" name="includesAll$method$1" specification="_SilsMicoEeSLVrU2ifxtpw" node="_SilqfScoEeSLVrU2ifxtpw _SilqficoEeSLVrU2ifxtpw _SilqfycoEeSLVrU2ifxtpw _SilqgCcoEeSLVrU2ifxtpw _SilqgScoEeSLVrU2ifxtpw" group="_SilqgScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqcycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqdCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqdScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilqdicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqdycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqeCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqeScoEeSLVrU2ifxtpw" target="_SilqficoEeSLVrU2ifxtpw" source="_SilqfScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilqeicoEeSLVrU2ifxtpw" target="_SilqgCcoEeSLVrU2ifxtpw" source="_SilqgicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqeycoEeSLVrU2ifxtpw" target="_SilqiCcoEeSLVrU2ifxtpw" source="_SilqficoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqfCcoEeSLVrU2ifxtpw" target="_SilqfycoEeSLVrU2ifxtpw" source="_SilqhCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilqgScoEeSLVrU2ifxtpw" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilqgicoEeSLVrU2ifxtpw" name="ReturnStatement@2720d4a3" outgoing="_SilqeicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqgycoEeSLVrU2ifxtpw" target="_SilqhCcoEeSLVrU2ifxtpw" source="_SilqiycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilqhCcoEeSLVrU2ifxtpw" name="ReturnStatement@2720d4a3.output" incoming="_SilqgycoEeSLVrU2ifxtpw" outgoing="_SilqfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqhScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqhicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilqhycoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_SilqiCcoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_SilqeycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqiScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqiicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilqiycoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).result()" outgoing="_SilqgycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqjCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqjScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqfScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SilqeScoEeSLVrU2ifxtpw" parameter="_SilqcycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilqficoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SilqeScoEeSLVrU2ifxtpw" outgoing="_SilqeycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqfycoEeSLVrU2ifxtpw" name="Return" incoming="_SilqfCcoEeSLVrU2ifxtpw" parameter="_SilqdicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilqgCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilqeicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqjicoEeSLVrU2ifxtpw" name="isEmpty$method$1" specification="_SilsOScoEeSLVrU2ifxtpw" node="_SilqlCcoEeSLVrU2ifxtpw _SilqlScoEeSLVrU2ifxtpw _SilqlicoEeSLVrU2ifxtpw" group="_SilqlicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqjycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqkCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqkScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilqkicoEeSLVrU2ifxtpw" target="_SilqlScoEeSLVrU2ifxtpw" source="_SilqlycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqkycoEeSLVrU2ifxtpw" target="_SilqlCcoEeSLVrU2ifxtpw" source="_SilqmScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilqlicoEeSLVrU2ifxtpw" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilqlycoEeSLVrU2ifxtpw" name="ReturnStatement@3fec9e59" outgoing="_SilqkicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqmCcoEeSLVrU2ifxtpw" target="_SilqmScoEeSLVrU2ifxtpw" source="_SilqnScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilqmScoEeSLVrU2ifxtpw" name="ReturnStatement@3fec9e59.output" incoming="_SilqmCcoEeSLVrU2ifxtpw" outgoing="_SilqkycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqmicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqmycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilqnCcoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_SilqnScoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1).result()" outgoing="_SilqmCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqnicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqnycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqlCcoEeSLVrU2ifxtpw" name="Return" incoming="_SilqkycoEeSLVrU2ifxtpw" parameter="_SilqjycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilqlScoEeSLVrU2ifxtpw" name="Final" incoming="_SilqkicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqoCcoEeSLVrU2ifxtpw" name="notEmpty$method$1" specification="_SilsPScoEeSLVrU2ifxtpw" node="_SilqpicoEeSLVrU2ifxtpw _SilqpycoEeSLVrU2ifxtpw _SilqqCcoEeSLVrU2ifxtpw" group="_SilqqCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqoScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqoicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqoycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilqpCcoEeSLVrU2ifxtpw" target="_SilqpycoEeSLVrU2ifxtpw" source="_SilqqScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqpScoEeSLVrU2ifxtpw" target="_SilqpicoEeSLVrU2ifxtpw" source="_SilqqycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilqqCcoEeSLVrU2ifxtpw" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilqqScoEeSLVrU2ifxtpw" name="ReturnStatement@e1baffa" outgoing="_SilqpCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqqicoEeSLVrU2ifxtpw" target="_SilqqycoEeSLVrU2ifxtpw" source="_SilqrycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilqqycoEeSLVrU2ifxtpw" name="ReturnStatement@e1baffa.output" incoming="_SilqqicoEeSLVrU2ifxtpw" outgoing="_SilqpScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqrCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqrScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilqricoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_SilqrycoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1).result()" outgoing="_SilqqicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqsCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqsScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqpicoEeSLVrU2ifxtpw" name="Return" incoming="_SilqpScoEeSLVrU2ifxtpw" parameter="_SilqoScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilqpycoEeSLVrU2ifxtpw" name="Final" incoming="_SilqpCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqsicoEeSLVrU2ifxtpw" name="remove$method$1" specification="_SilsQScoEeSLVrU2ifxtpw" node="_SilqvScoEeSLVrU2ifxtpw _SilqvicoEeSLVrU2ifxtpw _SilqvycoEeSLVrU2ifxtpw _SilqwCcoEeSLVrU2ifxtpw _SilqwScoEeSLVrU2ifxtpw" group="_SilqwScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqsycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqtCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqtScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilqticoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqtycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilquCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilquScoEeSLVrU2ifxtpw" target="_SilqvicoEeSLVrU2ifxtpw" source="_SilqvScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilquicoEeSLVrU2ifxtpw" target="_SilqwCcoEeSLVrU2ifxtpw" source="_SilqwicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilquycoEeSLVrU2ifxtpw" target="_SilqyCcoEeSLVrU2ifxtpw" source="_SilqvicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqvCcoEeSLVrU2ifxtpw" target="_SilqvycoEeSLVrU2ifxtpw" source="_SilqxCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilqwScoEeSLVrU2ifxtpw" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilqwicoEeSLVrU2ifxtpw" name="ReturnStatement@49f115cc" outgoing="_SilquicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilqwycoEeSLVrU2ifxtpw" target="_SilqxCcoEeSLVrU2ifxtpw" source="_SilqyycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilqxCcoEeSLVrU2ifxtpw" name="ReturnStatement@49f115cc.output" incoming="_SilqwycoEeSLVrU2ifxtpw" outgoing="_SilqvCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqxScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqxicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilqxycoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1)">
              <argument xmi:id="_SilqyCcoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).argument(element)" incoming="_SilquycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqyScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqyicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilqyycoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).result()" outgoing="_SilqwycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilqzCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilqzScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqvScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SilquScoEeSLVrU2ifxtpw" parameter="_SilqsycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilqvicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SilquScoEeSLVrU2ifxtpw" outgoing="_SilquycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilqvycoEeSLVrU2ifxtpw" name="Return" incoming="_SilqvCcoEeSLVrU2ifxtpw" parameter="_SilqticoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilqwCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilquicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilqzicoEeSLVrU2ifxtpw" name="removeAll$method$1" specification="_SimOVScoEeSLVrU2ifxtpw" node="_Silq2ScoEeSLVrU2ifxtpw _Silq2icoEeSLVrU2ifxtpw _Silq2ycoEeSLVrU2ifxtpw _Silq3CcoEeSLVrU2ifxtpw _Silq3ScoEeSLVrU2ifxtpw" group="_Silq3ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilqzycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silq0CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silq0ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Silq0icoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silq0ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silq1CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silq1ScoEeSLVrU2ifxtpw" target="_Silq2icoEeSLVrU2ifxtpw" source="_Silq2ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Silq1icoEeSLVrU2ifxtpw" target="_Silq3CcoEeSLVrU2ifxtpw" source="_Silq3icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silq1ycoEeSLVrU2ifxtpw" target="_Silq5CcoEeSLVrU2ifxtpw" source="_Silq2icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silq2CcoEeSLVrU2ifxtpw" target="_Silq2ycoEeSLVrU2ifxtpw" source="_Silq4CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Silq3ScoEeSLVrU2ifxtpw" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Silq3icoEeSLVrU2ifxtpw" name="ReturnStatement@7e6b961c" outgoing="_Silq1icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Silq3ycoEeSLVrU2ifxtpw" target="_Silq4CcoEeSLVrU2ifxtpw" source="_Silq5ycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Silq4CcoEeSLVrU2ifxtpw" name="ReturnStatement@7e6b961c.output" incoming="_Silq3ycoEeSLVrU2ifxtpw" outgoing="_Silq2CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silq4ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silq4icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Silq4ycoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_Silq5CcoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_Silq1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silq5ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silq5icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Silq5ycoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).result()" outgoing="_Silq3ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silq6CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silq6ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silq2ScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Silq1ScoEeSLVrU2ifxtpw" parameter="_SilqzycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Silq2icoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Silq1ScoEeSLVrU2ifxtpw" outgoing="_Silq1ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silq2ycoEeSLVrU2ifxtpw" name="Return" incoming="_Silq2CcoEeSLVrU2ifxtpw" parameter="_Silq0icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Silq3CcoEeSLVrU2ifxtpw" name="Final" incoming="_Silq1icoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Silq6icoEeSLVrU2ifxtpw" name="removeOne$method$1" specification="_SimOXCcoEeSLVrU2ifxtpw" node="_Silq9ScoEeSLVrU2ifxtpw _Silq9icoEeSLVrU2ifxtpw _Silq9ycoEeSLVrU2ifxtpw _Silq-CcoEeSLVrU2ifxtpw _Silq-ScoEeSLVrU2ifxtpw" group="_Silq-ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Silq6ycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silq7CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silq7ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Silq7icoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silq7ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silq8CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silq8ScoEeSLVrU2ifxtpw" target="_Silq9icoEeSLVrU2ifxtpw" source="_Silq9ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Silq8icoEeSLVrU2ifxtpw" target="_Silq-CcoEeSLVrU2ifxtpw" source="_Silq-icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silq8ycoEeSLVrU2ifxtpw" target="_SilrACcoEeSLVrU2ifxtpw" source="_Silq9icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Silq9CcoEeSLVrU2ifxtpw" target="_Silq9ycoEeSLVrU2ifxtpw" source="_Silq_CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Silq-ScoEeSLVrU2ifxtpw" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Silq-icoEeSLVrU2ifxtpw" name="ReturnStatement@55167e58" outgoing="_Silq8icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Silq-ycoEeSLVrU2ifxtpw" target="_Silq_CcoEeSLVrU2ifxtpw" source="_SilrAycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Silq_CcoEeSLVrU2ifxtpw" name="ReturnStatement@55167e58.output" incoming="_Silq-ycoEeSLVrU2ifxtpw" outgoing="_Silq9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silq_ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silq_icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Silq_ycoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_SilrACcoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).argument(element)" incoming="_Silq8ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrAScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrAicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilrAycoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).result()" outgoing="_Silq-ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrBCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrBScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silq9ScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Silq8ScoEeSLVrU2ifxtpw" parameter="_Silq6ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Silq9icoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Silq8ScoEeSLVrU2ifxtpw" outgoing="_Silq8ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Silq9ycoEeSLVrU2ifxtpw" name="Return" incoming="_Silq9CcoEeSLVrU2ifxtpw" parameter="_Silq7icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Silq-CcoEeSLVrU2ifxtpw" name="Final" incoming="_Silq8icoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilrBicoEeSLVrU2ifxtpw" name="replace$method$1" specification="_SimOYycoEeSLVrU2ifxtpw" node="_SilrFicoEeSLVrU2ifxtpw _SilrFycoEeSLVrU2ifxtpw _SilrGCcoEeSLVrU2ifxtpw _SilrGScoEeSLVrU2ifxtpw _SilrGicoEeSLVrU2ifxtpw _SilrGycoEeSLVrU2ifxtpw _SilrHCcoEeSLVrU2ifxtpw" group="_SilrHCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilrBycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrCCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrCScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilrCicoEeSLVrU2ifxtpw" name="newElement">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrCycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrDCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilrDScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrDicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrDycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrECcoEeSLVrU2ifxtpw" target="_SilrFycoEeSLVrU2ifxtpw" source="_SilrFicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrEScoEeSLVrU2ifxtpw" target="_SilrGScoEeSLVrU2ifxtpw" source="_SilrGCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilrEicoEeSLVrU2ifxtpw" target="_SilrGycoEeSLVrU2ifxtpw" source="_SilrHScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrEycoEeSLVrU2ifxtpw" target="_SilrIycoEeSLVrU2ifxtpw" source="_SilrFycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrFCcoEeSLVrU2ifxtpw" target="_SilrJicoEeSLVrU2ifxtpw" source="_SilrGScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrFScoEeSLVrU2ifxtpw" target="_SilrGicoEeSLVrU2ifxtpw" source="_SilrHycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilrHCcoEeSLVrU2ifxtpw" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilrHScoEeSLVrU2ifxtpw" name="ReturnStatement@3bda6b61" outgoing="_SilrEicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrHicoEeSLVrU2ifxtpw" target="_SilrHycoEeSLVrU2ifxtpw" source="_SilrKScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilrHycoEeSLVrU2ifxtpw" name="ReturnStatement@3bda6b61.output" incoming="_SilrHicoEeSLVrU2ifxtpw" outgoing="_SilrFScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrICcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrIScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilrIicoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_SilrIycoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(element)" incoming="_SilrEycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrJCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrJScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SilrJicoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_SilrFCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrJycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrKCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilrKScoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).result()" outgoing="_SilrHicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrKicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrKycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrFicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SilrECcoEeSLVrU2ifxtpw" parameter="_SilrBycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilrFycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SilrECcoEeSLVrU2ifxtpw" outgoing="_SilrEycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrGCcoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_SilrEScoEeSLVrU2ifxtpw" parameter="_SilrCicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilrGScoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_SilrEScoEeSLVrU2ifxtpw" outgoing="_SilrFCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrGicoEeSLVrU2ifxtpw" name="Return" incoming="_SilrFScoEeSLVrU2ifxtpw" parameter="_SilrDScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilrGycoEeSLVrU2ifxtpw" name="Final" incoming="_SilrEicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilrLCcoEeSLVrU2ifxtpw" name="replaceOne$method$1" specification="_SimObScoEeSLVrU2ifxtpw" node="_SilrPCcoEeSLVrU2ifxtpw _SilrPScoEeSLVrU2ifxtpw _SilrPicoEeSLVrU2ifxtpw _SilrPycoEeSLVrU2ifxtpw _SilrQCcoEeSLVrU2ifxtpw _SilrQScoEeSLVrU2ifxtpw _SilrQicoEeSLVrU2ifxtpw" group="_SilrQicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilrLScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrLicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrLycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilrMCcoEeSLVrU2ifxtpw" name="newElement">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrMScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrMicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilrMycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrNCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrNScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrNicoEeSLVrU2ifxtpw" target="_SilrPScoEeSLVrU2ifxtpw" source="_SilrPCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrNycoEeSLVrU2ifxtpw" target="_SilrPycoEeSLVrU2ifxtpw" source="_SilrPicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilrOCcoEeSLVrU2ifxtpw" target="_SilrQScoEeSLVrU2ifxtpw" source="_SilrQycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrOScoEeSLVrU2ifxtpw" target="_SilrSScoEeSLVrU2ifxtpw" source="_SilrPScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrOicoEeSLVrU2ifxtpw" target="_SilrTCcoEeSLVrU2ifxtpw" source="_SilrPycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrOycoEeSLVrU2ifxtpw" target="_SilrQCcoEeSLVrU2ifxtpw" source="_SilrRScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilrQicoEeSLVrU2ifxtpw" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilrQycoEeSLVrU2ifxtpw" name="ReturnStatement@228d3cb6" outgoing="_SilrOCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrRCcoEeSLVrU2ifxtpw" target="_SilrRScoEeSLVrU2ifxtpw" source="_SilrTycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilrRScoEeSLVrU2ifxtpw" name="ReturnStatement@228d3cb6.output" incoming="_SilrRCcoEeSLVrU2ifxtpw" outgoing="_SilrOycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrRicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrRycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilrSCcoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_SilrSScoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_SilrOScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrSicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrSycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SilrTCcoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_SilrOicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrTScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrTicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SilrTycoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).result()" outgoing="_SilrRCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrUCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrUScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrPCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SilrNicoEeSLVrU2ifxtpw" parameter="_SilrLScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilrPScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SilrNicoEeSLVrU2ifxtpw" outgoing="_SilrOScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrPicoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_SilrNycoEeSLVrU2ifxtpw" parameter="_SilrMCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilrPycoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_SilrNycoEeSLVrU2ifxtpw" outgoing="_SilrOicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrQCcoEeSLVrU2ifxtpw" name="Return" incoming="_SilrOycoEeSLVrU2ifxtpw" parameter="_SilrMycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilrQScoEeSLVrU2ifxtpw" name="Final" incoming="_SilrOCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilrUicoEeSLVrU2ifxtpw" name="retainAll$method$1" specification="_SimOdycoEeSLVrU2ifxtpw" node="_SilrXScoEeSLVrU2ifxtpw _SilrXicoEeSLVrU2ifxtpw _SilrXycoEeSLVrU2ifxtpw _SilrYCcoEeSLVrU2ifxtpw _SilrYScoEeSLVrU2ifxtpw" group="_SilrYScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilrUycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrVCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrVScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilrVicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrVycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrWCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrWScoEeSLVrU2ifxtpw" target="_SilrXicoEeSLVrU2ifxtpw" source="_SilrXScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilrWicoEeSLVrU2ifxtpw" target="_SilrYCcoEeSLVrU2ifxtpw" source="_SilrYicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrWycoEeSLVrU2ifxtpw" target="_SilraCcoEeSLVrU2ifxtpw" source="_SilrXicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrXCcoEeSLVrU2ifxtpw" target="_SilrXycoEeSLVrU2ifxtpw" source="_SilrZCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilrYScoEeSLVrU2ifxtpw" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilrYicoEeSLVrU2ifxtpw" name="ReturnStatement@c266fa0" outgoing="_SilrWicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrYycoEeSLVrU2ifxtpw" target="_SilrZCcoEeSLVrU2ifxtpw" source="_SilraycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilrZCcoEeSLVrU2ifxtpw" name="ReturnStatement@c266fa0.output" incoming="_SilrYycoEeSLVrU2ifxtpw" outgoing="_SilrXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrZScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrZicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilrZycoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_SilraCcoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_SilrWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilraScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilraicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SilraycoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).result()" outgoing="_SilrYycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrbCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrbScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrXScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SilrWScoEeSLVrU2ifxtpw" parameter="_SilrUycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SilrXicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SilrWScoEeSLVrU2ifxtpw" outgoing="_SilrWycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrXycoEeSLVrU2ifxtpw" name="Return" incoming="_SilrXCcoEeSLVrU2ifxtpw" parameter="_SilrVicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilrYCcoEeSLVrU2ifxtpw" name="Final" incoming="_SilrWicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilrbicoEeSLVrU2ifxtpw" name="size$method$1" specification="_SimOficoEeSLVrU2ifxtpw" node="_SilrdCcoEeSLVrU2ifxtpw _SilrdScoEeSLVrU2ifxtpw _SilrdicoEeSLVrU2ifxtpw" group="_SilrdicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilrbycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrcCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrcScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilrcicoEeSLVrU2ifxtpw" target="_SilrdScoEeSLVrU2ifxtpw" source="_SilrdycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrcycoEeSLVrU2ifxtpw" target="_SilrdCcoEeSLVrU2ifxtpw" source="_SilreScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilrdicoEeSLVrU2ifxtpw" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilrdycoEeSLVrU2ifxtpw" name="ReturnStatement@727cfb78" outgoing="_SilrcicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilreCcoEeSLVrU2ifxtpw" target="_SilreScoEeSLVrU2ifxtpw" source="_SilrfScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilreScoEeSLVrU2ifxtpw" name="ReturnStatement@727cfb78.output" incoming="_SilreCcoEeSLVrU2ifxtpw" outgoing="_SilrcycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilreicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilreycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SilrfCcoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1)">
              <result xmi:id="_SilrfScoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1).result()" outgoing="_SilreCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrficoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrfycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrdCcoEeSLVrU2ifxtpw" name="Return" incoming="_SilrcycoEeSLVrU2ifxtpw" parameter="_SilrbycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilrdScoEeSLVrU2ifxtpw" name="Final" incoming="_SilrcicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilrgCcoEeSLVrU2ifxtpw" name="toSequence$method$1" specification="_SimOgicoEeSLVrU2ifxtpw" node="_SilrhicoEeSLVrU2ifxtpw _SilrhycoEeSLVrU2ifxtpw _SilriCcoEeSLVrU2ifxtpw" group="_SilriCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilrgScoEeSLVrU2ifxtpw" name="" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrgicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrgycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SilrhCcoEeSLVrU2ifxtpw" target="_SilrhycoEeSLVrU2ifxtpw" source="_SilriScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrhScoEeSLVrU2ifxtpw" target="_SilrhicoEeSLVrU2ifxtpw" source="_SilrjScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SilriCcoEeSLVrU2ifxtpw" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilriScoEeSLVrU2ifxtpw" name="ReturnStatement@6ad042d7" outgoing="_SilrhCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilriicoEeSLVrU2ifxtpw" target="_SilrlCcoEeSLVrU2ifxtpw" source="_SilrmCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilriycoEeSLVrU2ifxtpw" target="_SilrrScoEeSLVrU2ifxtpw" source="_SilrkScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrjCcoEeSLVrU2ifxtpw" target="_SilrjScoEeSLVrU2ifxtpw" source="_SilrricoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SilrjScoEeSLVrU2ifxtpw" name="ReturnStatement@6ad042d7.output" incoming="_SilrjCcoEeSLVrU2ifxtpw" outgoing="_SilrhScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrjicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrjycoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SilrkCcoEeSLVrU2ifxtpw" name="Call(getContent)">
              <result xmi:id="_SilrkScoEeSLVrU2ifxtpw" name="Call(getContent).result()" outgoing="_SilriycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrkicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrkycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <operation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-getContent"/>
              <target xmi:id="_SilrlCcoEeSLVrU2ifxtpw" name="Call(getContent).target" incoming="_SilriicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrlScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrlicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SilrlycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SilrmCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilriicoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrmScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrmicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_SilrmycoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5" mode="parallel" outputElement="_SilrricoEeSLVrU2ifxtpw" inputElement="_SilrrScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrnCcoEeSLVrU2ifxtpw" target="_SilrpScoEeSLVrU2ifxtpw" source="_SilrqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrnScoEeSLVrU2ifxtpw" target="_SilrrCcoEeSLVrU2ifxtpw" source="_SilrqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrnicoEeSLVrU2ifxtpw" target="_SilrrCcoEeSLVrU2ifxtpw" source="_SilrqCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrnycoEeSLVrU2ifxtpw" target="_SilroycoEeSLVrU2ifxtpw" source="_SilrrCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilroCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilroScoEeSLVrU2ifxtpw" target="_SilrqycoEeSLVrU2ifxtpw" source="_SilrrScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilroicoEeSLVrU2ifxtpw" target="_SilrricoEeSLVrU2ifxtpw" source="_SilroycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SilroycoEeSLVrU2ifxtpw" name="Merge(CastExpression@593fa6c5.operand)" incoming="_SilrnycoEeSLVrU2ifxtpw" outgoing="_SilroicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SilrpCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
                <object xmi:id="_SilrpScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_SilrnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrpicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrpycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SilrqCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_SilrnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrqScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrqicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SilrqycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_SilroScoEeSLVrU2ifxtpw" outgoing="_SilrnCcoEeSLVrU2ifxtpw _SilrnScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SilrrCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_SilrnScoEeSLVrU2ifxtpw _SilrnicoEeSLVrU2ifxtpw" outgoing="_SilrnycoEeSLVrU2ifxtpw" decisionInputFlow="_SilrnicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilrrScoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5.inputElement" incoming="_SilriycoEeSLVrU2ifxtpw" outgoing="_SilroScoEeSLVrU2ifxtpw" regionAsInput="_SilrmycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SilrricoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5.outputElement" incoming="_SilroicoEeSLVrU2ifxtpw" outgoing="_SilrjCcoEeSLVrU2ifxtpw" regionAsOutput="_SilrmycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SilrhicoEeSLVrU2ifxtpw" name="Return" incoming="_SilrhScoEeSLVrU2ifxtpw" parameter="_SilrgScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SilrhycoEeSLVrU2ifxtpw" name="Final" incoming="_SilrhCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SilrrycoEeSLVrU2ifxtpw" name="Set$initialization$1" specification="_Silr9ycoEeSLVrU2ifxtpw" node="_SilrsCcoEeSLVrU2ifxtpw" group="_SilrsCcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SilrsCcoEeSLVrU2ifxtpw" name="Body(Set$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrsScoEeSLVrU2ifxtpw" target="_SilrwCcoEeSLVrU2ifxtpw" source="_SilrvScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrsicoEeSLVrU2ifxtpw" target="_SilrxCcoEeSLVrU2ifxtpw" source="_SilrwCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrsycoEeSLVrU2ifxtpw" target="_SilrzycoEeSLVrU2ifxtpw" source="_SilrwCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrtCcoEeSLVrU2ifxtpw" target="_Silr2ScoEeSLVrU2ifxtpw" source="_SilrwCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrtScoEeSLVrU2ifxtpw" target="_Silr4CcoEeSLVrU2ifxtpw" source="_Silr3CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrticoEeSLVrU2ifxtpw" target="_Silr7CcoEeSLVrU2ifxtpw" source="_Silr4ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilrtycoEeSLVrU2ifxtpw" target="_Silr8icoEeSLVrU2ifxtpw" source="_Silr5ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilruCcoEeSLVrU2ifxtpw" target="_Silr9icoEeSLVrU2ifxtpw" source="_Silr9ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SilruScoEeSLVrU2ifxtpw" target="_Silr9icoEeSLVrU2ifxtpw" source="_Silr7ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SilruicoEeSLVrU2ifxtpw" target="_SilrwScoEeSLVrU2ifxtpw" source="_Silr9icoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SilruycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SilrvCcoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SilrvScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SilrsScoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrvicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrvycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SilrwCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SilrsScoEeSLVrU2ifxtpw" outgoing="_SilrsicoEeSLVrU2ifxtpw _SilrsycoEeSLVrU2ifxtpw _SilrtCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilrwScoEeSLVrU2ifxtpw" name="Initialization" incoming="_SilruicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SilrwicoEeSLVrU2ifxtpw" target="_SilrxycoEeSLVrU2ifxtpw" source="_SilrwycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SilrwycoEeSLVrU2ifxtpw" name="Call(SetImpl$initialization$1)" outgoing="_SilrwicoEeSLVrU2ifxtpw">
              <operation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-SetImplinitialization1.1"/>
              <target xmi:id="_SilrxCcoEeSLVrU2ifxtpw" name="Call(SetImpl$initialization$1).target" incoming="_SilrsicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilrxScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrxicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SilrxycoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SilrwicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SilryCcoEeSLVrU2ifxtpw" target="_Silr1ScoEeSLVrU2ifxtpw" source="_SilryicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SilryScoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SilryicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SilryCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilryycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilrzCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SilrzScoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SilrzicoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1)" structuralFeature="_SilpWScoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SilrzycoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).object" incoming="_SilrsycoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr0CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr0ScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Silr0icoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).result" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr0ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr1CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_Silr1ScoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).value" incoming="_SilryCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr1icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr1ycoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Silr2CcoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1)" structuralFeature="_SilpWScoEeSLVrU2ifxtpw">
            <object xmi:id="_Silr2ScoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).object" incoming="_SilrtCcoEeSLVrU2ifxtpw" type="_SilpVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr2icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr2ycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_Silr3CcoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).result" outgoing="_SilrtScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr3ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr3icoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Silr3ycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_Silr4CcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SilrtScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr4ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr4icoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Silr4ycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SilrticoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr5CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr5ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Silr5icoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_Silr5ycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SilrtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr6CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr6ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Silr6icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Silr6ycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_Silr7CcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SilrticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr7ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr7icoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_Silr7ycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SilruScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr8CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr8ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_Silr8icoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SilrtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr8ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr9CcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Silr9ScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SilruCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Silr9icoEeSLVrU2ifxtpw" name="Decision(Test(Set$initializationFlag$1))" incoming="_SilruCcoEeSLVrU2ifxtpw _SilruScoEeSLVrU2ifxtpw" outgoing="_SilruicoEeSLVrU2ifxtpw" decisionInputFlow="_SilruScoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_Silr9ycoEeSLVrU2ifxtpw" name="Set$initialization$1" visibility="protected" method="_SilrrycoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_Silr-CcoEeSLVrU2ifxtpw" name="Set" visibility="public" method="_SilpXCcoEeSLVrU2ifxtpw" redefinedOperation="_SimO-ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Silr-ScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr-icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr-ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Silr_CcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilpVicoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Silr_ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Silr_icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Silr_ycoEeSLVrU2ifxtpw" name="destroy" visibility="public" method="_SilpqCcoEeSLVrU2ifxtpw">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-destroy"/>
        <redefinedOperation href="#_SimPAicoEeSLVrU2ifxtpw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsACcoEeSLVrU2ifxtpw" name="add" visibility="public" method="_SilpqicoEeSLVrU2ifxtpw" redefinedOperation="_SimPBCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsAScoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsAicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsAycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilsBCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsBScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsBicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsBycoEeSLVrU2ifxtpw" name="addAll" visibility="public" method="_SilpxicoEeSLVrU2ifxtpw" redefinedOperation="_SimPCScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsCCcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsCScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsCicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilsCycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsDCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsDScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsDicoEeSLVrU2ifxtpw" name="clear" visibility="public" method="_Silp4icoEeSLVrU2ifxtpw" redefinedOperation="_SimOlScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SilsDycoEeSLVrU2ifxtpw" name="count" visibility="public" method="_Silp5icoEeSLVrU2ifxtpw" redefinedOperation="_SimPEScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsECcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsEScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsEicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilsEycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsFCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsFScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsFicoEeSLVrU2ifxtpw" name="equals" visibility="public" method="_SilqAicoEeSLVrU2ifxtpw" redefinedOperation="_SimPFicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsFycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsGCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsGScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilsGicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsGycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsHCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsHScoEeSLVrU2ifxtpw" name="excludes" visibility="public" method="_SilqHicoEeSLVrU2ifxtpw" redefinedOperation="_SimOpCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsHicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsHycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsICcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilsIScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsIicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsIycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsJCcoEeSLVrU2ifxtpw" name="excludesAll" visibility="public" method="_SilqOicoEeSLVrU2ifxtpw" redefinedOperation="_SimOqicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsJScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsJicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsJycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilsKCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsKScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsKicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsKycoEeSLVrU2ifxtpw" name="includes" visibility="public" method="_SilqVicoEeSLVrU2ifxtpw" redefinedOperation="_SimOsScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsLCcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsLScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsLicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilsLycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsMCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsMScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsMicoEeSLVrU2ifxtpw" name="includesAll" visibility="public" method="_SilqcicoEeSLVrU2ifxtpw" redefinedOperation="_SimOtycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsMycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsNCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsNScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SilsNicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsNycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsOCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsOScoEeSLVrU2ifxtpw" name="isEmpty" visibility="public" method="_SilqjicoEeSLVrU2ifxtpw" redefinedOperation="_SimOvicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsOicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsOycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsPCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsPScoEeSLVrU2ifxtpw" name="notEmpty" visibility="public" method="_SilqoCcoEeSLVrU2ifxtpw" redefinedOperation="_SimOwicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsPicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SilsPycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SilsQCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SilsQScoEeSLVrU2ifxtpw" name="remove" visibility="public" method="_SilqsicoEeSLVrU2ifxtpw" redefinedOperation="_SimOxScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SilsQicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOUCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOUScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOUicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOUycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOVCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOVScoEeSLVrU2ifxtpw" name="removeAll" visibility="public" method="_SilqzicoEeSLVrU2ifxtpw" redefinedOperation="_SimOyScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimOVicoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOVycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOWCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOWScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOWicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOWycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOXCcoEeSLVrU2ifxtpw" name="removeOne" visibility="public" method="_Silq6icoEeSLVrU2ifxtpw" redefinedOperation="_SimO0CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimOXScoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOXicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOXycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOYCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOYScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOYicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOYycoEeSLVrU2ifxtpw" name="replace" visibility="public" method="_SilrBicoEeSLVrU2ifxtpw" redefinedOperation="_SimO1ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimOZCcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOZScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOZicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOZycoEeSLVrU2ifxtpw" name="newElement" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOaCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOaScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOaicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOaycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimObCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimObScoEeSLVrU2ifxtpw" name="replaceOne" visibility="public" method="_SilrLCcoEeSLVrU2ifxtpw" redefinedOperation="_SimO3CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimObicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimObycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOcCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOcScoEeSLVrU2ifxtpw" name="newElement" visibility="package">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOcicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOcycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOdCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOdScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOdicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOdycoEeSLVrU2ifxtpw" name="retainAll" visibility="public" method="_SilrUicoEeSLVrU2ifxtpw" redefinedOperation="_SimO4ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimOeCcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOeScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOeicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOeycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOfCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOfScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOficoEeSLVrU2ifxtpw" name="size" visibility="public" method="_SilrbicoEeSLVrU2ifxtpw" redefinedOperation="_SimO6icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimOfycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOgCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOgScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOgicoEeSLVrU2ifxtpw" name="toSequence" visibility="public" method="_SilrgCcoEeSLVrU2ifxtpw" redefinedOperation="_SimO7icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimOgycoEeSLVrU2ifxtpw" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOhCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOhScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SimOhicoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Collection__Alf$Library$CollectionClasses$Impl$$$Map__Impl$Map$Key_Impl$Map$Value__$Entry__" isAbstract="true">
      <ownedComment xmi:id="_SimOhycoEeSLVrU2ifxtpw" annotatedElement="_SimOhicoEeSLVrU2ifxtpw">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_SimOiCcoEeSLVrU2ifxtpw" name="add" isAbstract="true">
        <ownedComment xmi:id="_SimOiScoEeSLVrU2ifxtpw" annotatedElement="_SimOiCcoEeSLVrU2ifxtpw">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOiicoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SimOiycoEeSLVrU2ifxtpw" annotatedElement="_SimOiicoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOjCcoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimOjScoEeSLVrU2ifxtpw" annotatedElement="_SimOjCcoEeSLVrU2ifxtpw">
            <body>Element to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOjicoEeSLVrU2ifxtpw" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_SimOjycoEeSLVrU2ifxtpw" annotatedElement="_SimOjicoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOkCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimOkScoEeSLVrU2ifxtpw" annotatedElement="_SimOkCcoEeSLVrU2ifxtpw">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOkicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOkycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOlCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOlScoEeSLVrU2ifxtpw" name="clear" isAbstract="true">
        <ownedComment xmi:id="_SimOlicoEeSLVrU2ifxtpw" annotatedElement="_SimOlScoEeSLVrU2ifxtpw">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOlycoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimOmCcoEeSLVrU2ifxtpw" annotatedElement="_SimOlycoEeSLVrU2ifxtpw">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOmScoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimOmicoEeSLVrU2ifxtpw" annotatedElement="_SimOmScoEeSLVrU2ifxtpw">
            <body>Element to be counted.</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOmycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SimOnCcoEeSLVrU2ifxtpw" annotatedElement="_SimOmycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOnScoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimOnicoEeSLVrU2ifxtpw" annotatedElement="_SimOnScoEeSLVrU2ifxtpw">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOnycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimOoCcoEeSLVrU2ifxtpw" annotatedElement="_SimOnycoEeSLVrU2ifxtpw">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOoScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOoicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOoycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOpCcoEeSLVrU2ifxtpw" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimOpScoEeSLVrU2ifxtpw" annotatedElement="_SimOpCcoEeSLVrU2ifxtpw">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOpicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimOpycoEeSLVrU2ifxtpw" annotatedElement="_SimOpicoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOqCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SimOqScoEeSLVrU2ifxtpw" annotatedElement="_SimOqCcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOqicoEeSLVrU2ifxtpw" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimOqycoEeSLVrU2ifxtpw" annotatedElement="_SimOqicoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOrCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimOrScoEeSLVrU2ifxtpw" annotatedElement="_SimOrCcoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOricoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOrycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOsCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOsScoEeSLVrU2ifxtpw" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimOsicoEeSLVrU2ifxtpw" annotatedElement="_SimOsScoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOsycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimOtCcoEeSLVrU2ifxtpw" annotatedElement="_SimOsycoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOtScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SimOticoEeSLVrU2ifxtpw" annotatedElement="_SimOtScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOtycoEeSLVrU2ifxtpw" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimOuCcoEeSLVrU2ifxtpw" annotatedElement="_SimOtycoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOuScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimOuicoEeSLVrU2ifxtpw" annotatedElement="_SimOuScoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOuycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOvCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOvScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOvicoEeSLVrU2ifxtpw" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimOvycoEeSLVrU2ifxtpw" annotatedElement="_SimOvicoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOwCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SimOwScoEeSLVrU2ifxtpw" annotatedElement="_SimOwCcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOwicoEeSLVrU2ifxtpw" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimOwycoEeSLVrU2ifxtpw" annotatedElement="_SimOwicoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOxCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOxScoEeSLVrU2ifxtpw" name="remove" isAbstract="true">
        <ownedComment xmi:id="_SimOxicoEeSLVrU2ifxtpw" annotatedElement="_SimOxScoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOxycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOyCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimOyScoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_SimOyicoEeSLVrU2ifxtpw" annotatedElement="_SimOyScoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimOyycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimOzCcoEeSLVrU2ifxtpw" annotatedElement="_SimOyycoEeSLVrU2ifxtpw">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimOzScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimOzicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimOzycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimO0CcoEeSLVrU2ifxtpw" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_SimO0ScoEeSLVrU2ifxtpw" annotatedElement="_SimO0CcoEeSLVrU2ifxtpw">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimO0icoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimO0ycoEeSLVrU2ifxtpw" annotatedElement="_SimO0icoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimO1CcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimO1ScoEeSLVrU2ifxtpw" name="replace" isAbstract="true">
        <ownedComment xmi:id="_SimO1icoEeSLVrU2ifxtpw" annotatedElement="_SimO1ScoEeSLVrU2ifxtpw">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimO1ycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimO2CcoEeSLVrU2ifxtpw" annotatedElement="_SimO1ycoEeSLVrU2ifxtpw">
            <body>Element to be replaced.</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimO2ScoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_SimO2icoEeSLVrU2ifxtpw" annotatedElement="_SimO2ScoEeSLVrU2ifxtpw">
            <body>Element to replace original element. </body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimO2ycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimO3CcoEeSLVrU2ifxtpw" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_SimO3ScoEeSLVrU2ifxtpw" annotatedElement="_SimO3CcoEeSLVrU2ifxtpw">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimO3icoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimO3ycoEeSLVrU2ifxtpw" annotatedElement="_SimO3icoEeSLVrU2ifxtpw">
            <body>Element to be replaced. </body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimO4CcoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_SimO4ScoEeSLVrU2ifxtpw" annotatedElement="_SimO4CcoEeSLVrU2ifxtpw">
            <body>Element to replace the original element. </body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimO4icoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimO4ycoEeSLVrU2ifxtpw" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_SimO5CcoEeSLVrU2ifxtpw" annotatedElement="_SimO4ycoEeSLVrU2ifxtpw">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimO5ScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimO5icoEeSLVrU2ifxtpw" annotatedElement="_SimO5ScoEeSLVrU2ifxtpw">
            <body>Elements to retain. </body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimO5ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimO6CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimO6ScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimO6icoEeSLVrU2ifxtpw" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimO6ycoEeSLVrU2ifxtpw" annotatedElement="_SimO6icoEeSLVrU2ifxtpw">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimO7CcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SimO7ScoEeSLVrU2ifxtpw" annotatedElement="_SimO7CcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimO7icoEeSLVrU2ifxtpw" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimO7ycoEeSLVrU2ifxtpw" annotatedElement="_SimO7icoEeSLVrU2ifxtpw">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimO8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_SimO8ScoEeSLVrU2ifxtpw" annotatedElement="_SimO8CcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimO8icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimO8ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SimO9CcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SimO9ScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SimO9icoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SimO9ycoEeSLVrU2ifxtpw" client="_SimOhicoEeSLVrU2ifxtpw" supplier="_SimO9CcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_SimO-CcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Set__Alf$Library$CollectionClasses$Impl$$$Map__Impl$Map$Key_Impl$Map$Value__$Entry__" isAbstract="true">
      <ownedComment xmi:id="_SimO-ScoEeSLVrU2ifxtpw" annotatedElement="_SimO-CcoEeSLVrU2ifxtpw">
        <body>A concrete unordered, unique collection. Does not support duplicate entries.
            </body>
      </ownedComment>
      <generalization xmi:id="_SimO-icoEeSLVrU2ifxtpw" general="_SimOhicoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SimO-ycoEeSLVrU2ifxtpw" name="Set" isAbstract="true">
        <ownedComment xmi:id="_SimO_CcoEeSLVrU2ifxtpw" annotatedElement="_SimO-ycoEeSLVrU2ifxtpw">
          <body>Construct a set and add all elements in the given sequence. post:
                result.toSequence()->asSet() = seq->asSet() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimO_ScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false" effect="create">
          <ownedComment xmi:id="_SimO_icoEeSLVrU2ifxtpw" annotatedElement="_SimO_ScoEeSLVrU2ifxtpw">
            <body>A sequence of elements of type &lt;T> to be added to the set</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimO_ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPACcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPAScoEeSLVrU2ifxtpw" type="_SimPHCcoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SimPAicoEeSLVrU2ifxtpw" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_SimPAycoEeSLVrU2ifxtpw" annotatedElement="_SimPAicoEeSLVrU2ifxtpw">
          <body>Destroy this set. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_SimPBCcoEeSLVrU2ifxtpw" name="add" isAbstract="true" redefinedOperation="_SimOiCcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_SimPBScoEeSLVrU2ifxtpw" annotatedElement="_SimPBCcoEeSLVrU2ifxtpw">
          <body>Insert the given element into this set. Return true if a new element is actually
                inserted. post: self.toSequence()->asSet()
                = self@pre.toSequence()->asSet()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimPBicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimPBycoEeSLVrU2ifxtpw" annotatedElement="_SimPBicoEeSLVrU2ifxtpw">
            <body>Element to be appended to this collection</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPCCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimPCScoEeSLVrU2ifxtpw" name="addAll" isAbstract="true" precondition="_SimPCycoEeSLVrU2ifxtpw" redefinedOperation="_SimOjicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_SimPCicoEeSLVrU2ifxtpw" annotatedElement="_SimPCScoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this set. Returns true if this
                collection increased in size. post: self.toSequence()->asSet() =
                self@pre.toSequence()->asSet()->union(seq->asSet()) </body>
        </ownedComment>
        <ownedRule xmi:id="_SimPCycoEeSLVrU2ifxtpw" constrainedElement="_SimPCScoEeSLVrU2ifxtpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_SimPDCcoEeSLVrU2ifxtpw">
            <language>OCL</language>
            <body>self.toSequence()->size()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_SimPDScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPDicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPDycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPECcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimPEScoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true" redefinedOperation="_SimOlycoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_SimPEicoEeSLVrU2ifxtpw" annotatedElement="_SimPEScoEeSLVrU2ifxtpw">
          <body>The number of elements in this set that match a specified element. post: result
                = if self@pre.includes(element) then 1 else 0 endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimPEycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_SimPFCcoEeSLVrU2ifxtpw" annotatedElement="_SimPEycoEeSLVrU2ifxtpw">
            <body>The element to be counted</body>
          </ownedComment>
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPFScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimPFicoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_SimOnScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_SimPFycoEeSLVrU2ifxtpw" annotatedElement="_SimPFicoEeSLVrU2ifxtpw">
          <body>Return true if the content of this set is equal to the given sequence considered
                as a set. post: result = (self@pre.toSequence()->asSet() =
                seq->asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimPGCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPGScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPGicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPGycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SimPHCcoEeSLVrU2ifxtpw" name="Set&lt;T>">
        <templateBinding xmi:id="_SimPHScoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_SimPHicoEeSLVrU2ifxtpw">
            <actual xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SimPHycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SimPICcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SimPIScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SimPIicoEeSLVrU2ifxtpw" client="_SimO-CcoEeSLVrU2ifxtpw" supplier="_SimPHycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_SimPIycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SimPJCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SimPJScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:DataType" href="Libraries/Alf.library.uml#_0CBBcoXREeK2vJIz2pvpWw"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b3EdYXREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b3EdIXREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SimPJicoEeSLVrU2ifxtpw" client="_SilpVicoEeSLVrU2ifxtpw" supplier="_SimPIycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_SimPJycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Impl$Bag__Units_Map$Listener__">
      <generalization xmi:id="_SimPKCcoEeSLVrU2ifxtpw">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#BagImpl"/>
      </generalization>
      <generalization xmi:id="_SimPKScoEeSLVrU2ifxtpw" general="_SimSQicoEeSLVrU2ifxtpw"/>
      <ownedAttribute xmi:id="_SimPKicoEeSLVrU2ifxtpw" name="Bag$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPKycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPLCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimPLScoEeSLVrU2ifxtpw" name="Bag$method$1" specification="_SimRwScoEeSLVrU2ifxtpw" node="_SimPNycoEeSLVrU2ifxtpw _SimPOCcoEeSLVrU2ifxtpw _SimPOScoEeSLVrU2ifxtpw _SimPOicoEeSLVrU2ifxtpw" group="_SimPOicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimPLicoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPLycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPMCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPMScoEeSLVrU2ifxtpw" name="" type="_SimPJycoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPMicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPMycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPNCcoEeSLVrU2ifxtpw" target="_SimPOCcoEeSLVrU2ifxtpw" source="_SimPNycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPNScoEeSLVrU2ifxtpw" target="_SimPOScoEeSLVrU2ifxtpw" source="_SimPTCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPNicoEeSLVrU2ifxtpw" target="_SimPUCcoEeSLVrU2ifxtpw" source="_SimPOCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimPOicoEeSLVrU2ifxtpw" name="Body(Bag$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPOycoEeSLVrU2ifxtpw" target="_SimPTCcoEeSLVrU2ifxtpw" source="_SimPSScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPPCcoEeSLVrU2ifxtpw" target="_SimPVycoEeSLVrU2ifxtpw" source="_SimPTCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SimPPScoEeSLVrU2ifxtpw" target="_SimPRycoEeSLVrU2ifxtpw" source="_SimPVicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SimPPicoEeSLVrU2ifxtpw" target="_SimPVicoEeSLVrU2ifxtpw" source="_SimPTScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPPycoEeSLVrU2ifxtpw" target="_SimPWycoEeSLVrU2ifxtpw" source="_SimPTCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPQCcoEeSLVrU2ifxtpw" target="_SimPYicoEeSLVrU2ifxtpw" source="_SimPXicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPQScoEeSLVrU2ifxtpw" target="_SimPbicoEeSLVrU2ifxtpw" source="_SimPZScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPQicoEeSLVrU2ifxtpw" target="_SimPdCcoEeSLVrU2ifxtpw" source="_SimPaScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SimPQycoEeSLVrU2ifxtpw" target="_SimPeCcoEeSLVrU2ifxtpw" source="_SimPdycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPRCcoEeSLVrU2ifxtpw" target="_SimPeCcoEeSLVrU2ifxtpw" source="_SimPcScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SimPRScoEeSLVrU2ifxtpw" target="_SimPTScoEeSLVrU2ifxtpw" source="_SimPeCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SimPRicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimPRycoEeSLVrU2ifxtpw" name="Body" incoming="_SimPPScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SimPSCcoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SimPSScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SimPOycoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPSicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPSycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SimPTCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SimPOycoEeSLVrU2ifxtpw" outgoing="_SimPNScoEeSLVrU2ifxtpw _SimPPCcoEeSLVrU2ifxtpw _SimPPycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimPTScoEeSLVrU2ifxtpw" name="Super" incoming="_SimPRScoEeSLVrU2ifxtpw" outgoing="_SimPPicoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimPTicoEeSLVrU2ifxtpw" name="ExpressionStatement@79fc08ce">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimPTycoEeSLVrU2ifxtpw" name="Call(BagImpl$method$1)">
                <argument xmi:id="_SimPUCcoEeSLVrU2ifxtpw" name="Call(BagImpl$method$1).argument(seq)" incoming="_SimPNicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPUScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPUicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SimPUycoEeSLVrU2ifxtpw" name="Call(BagImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#BagImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPVCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPVScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#BagImpl-BagImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SimPVicoEeSLVrU2ifxtpw" name="Call(Bag$initialization$1)" incoming="_SimPPicoEeSLVrU2ifxtpw" outgoing="_SimPPScoEeSLVrU2ifxtpw" operation="_SimRwCcoEeSLVrU2ifxtpw">
            <target xmi:id="_SimPVycoEeSLVrU2ifxtpw" name="Call(Bag$initialization$1).target" incoming="_SimPPCcoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPWCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPWScoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SimPWicoEeSLVrU2ifxtpw" name="Read(Bag$initializationFlag$1)" structuralFeature="_SimPKicoEeSLVrU2ifxtpw">
            <object xmi:id="_SimPWycoEeSLVrU2ifxtpw" name="Read(Bag$initializationFlag$1).object" incoming="_SimPPycoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPXCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPXScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SimPXicoEeSLVrU2ifxtpw" name="Read(Bag$initializationFlag$1).result" outgoing="_SimPQCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPXycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPYCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimPYScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SimPYicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SimPQCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPYycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPZCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SimPZScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SimPQScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPZicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPZycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SimPaCcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SimPaScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SimPQicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPaicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPaycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SimPbCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SimPbScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SimPbicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SimPQScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPbycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPcCcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SimPcScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SimPRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPcicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPcycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SimPdCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SimPQicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPdScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPdicoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SimPdycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SimPQycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SimPeCcoEeSLVrU2ifxtpw" name="Decision(Test(Bag$initializationFlag$1))" incoming="_SimPQycoEeSLVrU2ifxtpw _SimPRCcoEeSLVrU2ifxtpw" outgoing="_SimPRScoEeSLVrU2ifxtpw" decisionInputFlow="_SimPRCcoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimPNycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SimPNCcoEeSLVrU2ifxtpw" parameter="_SimPLicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimPOCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SimPNCcoEeSLVrU2ifxtpw" outgoing="_SimPNicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimPOScoEeSLVrU2ifxtpw" name="Return" incoming="_SimPNScoEeSLVrU2ifxtpw" parameter="_SimPMScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimPeScoEeSLVrU2ifxtpw" name="destroy$method$2" specification="_SimRyCcoEeSLVrU2ifxtpw" node="_SimPeicoEeSLVrU2ifxtpw" group="_SimPeicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SimPeicoEeSLVrU2ifxtpw" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimPeycoEeSLVrU2ifxtpw" name="add$method$1" specification="_SimRyScoEeSLVrU2ifxtpw" node="_SimPhicoEeSLVrU2ifxtpw _SimPhycoEeSLVrU2ifxtpw _SimPiCcoEeSLVrU2ifxtpw _SimPiScoEeSLVrU2ifxtpw _SimPiicoEeSLVrU2ifxtpw" group="_SimPiicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimPfCcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPfScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPficoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPfycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPgCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPgScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPgicoEeSLVrU2ifxtpw" target="_SimPhycoEeSLVrU2ifxtpw" source="_SimPhicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimPgycoEeSLVrU2ifxtpw" target="_SimPiScoEeSLVrU2ifxtpw" source="_SimPiycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPhCcoEeSLVrU2ifxtpw" target="_SimPkScoEeSLVrU2ifxtpw" source="_SimPhycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPhScoEeSLVrU2ifxtpw" target="_SimPiCcoEeSLVrU2ifxtpw" source="_SimPjScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimPiicoEeSLVrU2ifxtpw" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimPiycoEeSLVrU2ifxtpw" name="ReturnStatement@51617246" outgoing="_SimPgycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPjCcoEeSLVrU2ifxtpw" target="_SimPjScoEeSLVrU2ifxtpw" source="_SimPlCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimPjScoEeSLVrU2ifxtpw" name="ReturnStatement@51617246.output" incoming="_SimPjCcoEeSLVrU2ifxtpw" outgoing="_SimPhScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPjicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPjycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimPkCcoEeSLVrU2ifxtpw" name="Call(addImpl$method$1)">
              <argument xmi:id="_SimPkScoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).argument(element)" incoming="_SimPhCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPkicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPkycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SimPlCcoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).result()" outgoing="_SimPjCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPlScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPlicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimPhicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SimPgicoEeSLVrU2ifxtpw" parameter="_SimPfCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimPhycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SimPgicoEeSLVrU2ifxtpw" outgoing="_SimPhCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimPiCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimPhScoEeSLVrU2ifxtpw" parameter="_SimPfycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimPiScoEeSLVrU2ifxtpw" name="Final" incoming="_SimPgycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimPlycoEeSLVrU2ifxtpw" name="addAll$method$1" specification="_SimR0CcoEeSLVrU2ifxtpw" node="_SimPoicoEeSLVrU2ifxtpw _SimPoycoEeSLVrU2ifxtpw _SimPpCcoEeSLVrU2ifxtpw _SimPpScoEeSLVrU2ifxtpw _SimPpicoEeSLVrU2ifxtpw" group="_SimPpicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimPmCcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPmScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPmicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPmycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPnCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPnScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPnicoEeSLVrU2ifxtpw" target="_SimPoycoEeSLVrU2ifxtpw" source="_SimPoicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimPnycoEeSLVrU2ifxtpw" target="_SimPpScoEeSLVrU2ifxtpw" source="_SimPpycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPoCcoEeSLVrU2ifxtpw" target="_SimPrScoEeSLVrU2ifxtpw" source="_SimPoycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPoScoEeSLVrU2ifxtpw" target="_SimPpCcoEeSLVrU2ifxtpw" source="_SimPqScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimPpicoEeSLVrU2ifxtpw" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimPpycoEeSLVrU2ifxtpw" name="ReturnStatement@2304bddd" outgoing="_SimPnycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPqCcoEeSLVrU2ifxtpw" target="_SimPqScoEeSLVrU2ifxtpw" source="_SimPsCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimPqScoEeSLVrU2ifxtpw" name="ReturnStatement@2304bddd.output" incoming="_SimPqCcoEeSLVrU2ifxtpw" outgoing="_SimPoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPqicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPqycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimPrCcoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_SimPrScoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).argument(seq)" incoming="_SimPoCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPricoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPrycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SimPsCcoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).result()" outgoing="_SimPqCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPsScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPsicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimPoicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SimPnicoEeSLVrU2ifxtpw" parameter="_SimPmCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimPoycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SimPnicoEeSLVrU2ifxtpw" outgoing="_SimPoCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimPpCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimPoScoEeSLVrU2ifxtpw" parameter="_SimPmycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimPpScoEeSLVrU2ifxtpw" name="Final" incoming="_SimPnycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimPsycoEeSLVrU2ifxtpw" name="clear$method$1" specification="_SimR1ycoEeSLVrU2ifxtpw" node="_SimPtCcoEeSLVrU2ifxtpw" group="_SimPtCcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SimPtCcoEeSLVrU2ifxtpw" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimPtScoEeSLVrU2ifxtpw" name="ExpressionStatement@6d56bbcf">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimPticoEeSLVrU2ifxtpw" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimPtycoEeSLVrU2ifxtpw" name="count$method$1" specification="_SimR2CcoEeSLVrU2ifxtpw" node="_SimPwicoEeSLVrU2ifxtpw _SimPwycoEeSLVrU2ifxtpw _SimPxCcoEeSLVrU2ifxtpw _SimPxScoEeSLVrU2ifxtpw _SimPxicoEeSLVrU2ifxtpw" group="_SimPxicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimPuCcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPuScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPuicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimPuycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPvCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPvScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPvicoEeSLVrU2ifxtpw" target="_SimPwycoEeSLVrU2ifxtpw" source="_SimPwicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimPvycoEeSLVrU2ifxtpw" target="_SimPxScoEeSLVrU2ifxtpw" source="_SimPxycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPwCcoEeSLVrU2ifxtpw" target="_SimPzScoEeSLVrU2ifxtpw" source="_SimPwycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPwScoEeSLVrU2ifxtpw" target="_SimPxCcoEeSLVrU2ifxtpw" source="_SimPyScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimPxicoEeSLVrU2ifxtpw" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimPxycoEeSLVrU2ifxtpw" name="ReturnStatement@62897819" outgoing="_SimPvycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimPyCcoEeSLVrU2ifxtpw" target="_SimPyScoEeSLVrU2ifxtpw" source="_SimP0CcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimPyScoEeSLVrU2ifxtpw" name="ReturnStatement@62897819.output" incoming="_SimPyCcoEeSLVrU2ifxtpw" outgoing="_SimPwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPyicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPyycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimPzCcoEeSLVrU2ifxtpw" name="Call(countImpl$method$1)">
              <argument xmi:id="_SimPzScoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).argument(element)" incoming="_SimPwCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimPzicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimPzycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SimP0CcoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).result()" outgoing="_SimPyCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimP0ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimP0icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimPwicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SimPvicoEeSLVrU2ifxtpw" parameter="_SimPuCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimPwycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SimPvicoEeSLVrU2ifxtpw" outgoing="_SimPwCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimPxCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimPwScoEeSLVrU2ifxtpw" parameter="_SimPuycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimPxScoEeSLVrU2ifxtpw" name="Final" incoming="_SimPvycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimP0ycoEeSLVrU2ifxtpw" name="equals$method$1" specification="_SimR3ycoEeSLVrU2ifxtpw" node="_SimP3icoEeSLVrU2ifxtpw _SimP3ycoEeSLVrU2ifxtpw _SimP4CcoEeSLVrU2ifxtpw _SimP4ScoEeSLVrU2ifxtpw _SimP4icoEeSLVrU2ifxtpw" group="_SimP4icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimP1CcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimP1ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimP1icoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimP1ycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimP2CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimP2ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimP2icoEeSLVrU2ifxtpw" target="_SimP3ycoEeSLVrU2ifxtpw" source="_SimP3icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimP2ycoEeSLVrU2ifxtpw" target="_SimP4ScoEeSLVrU2ifxtpw" source="_SimP4ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimP3CcoEeSLVrU2ifxtpw" target="_SimP6ScoEeSLVrU2ifxtpw" source="_SimP3ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimP3ScoEeSLVrU2ifxtpw" target="_SimP4CcoEeSLVrU2ifxtpw" source="_SimP5ScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimP4icoEeSLVrU2ifxtpw" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimP4ycoEeSLVrU2ifxtpw" name="ReturnStatement@2bfd8364" outgoing="_SimP2ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimP5CcoEeSLVrU2ifxtpw" target="_SimP5ScoEeSLVrU2ifxtpw" source="_SimP7CcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimP5ScoEeSLVrU2ifxtpw" name="ReturnStatement@2bfd8364.output" incoming="_SimP5CcoEeSLVrU2ifxtpw" outgoing="_SimP3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimP5icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimP5ycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimP6CcoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_SimP6ScoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).argument(seq)" incoming="_SimP3CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimP6icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimP6ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SimP7CcoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).result()" outgoing="_SimP5CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimP7ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimP7icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimP3icoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SimP2icoEeSLVrU2ifxtpw" parameter="_SimP1CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimP3ycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SimP2icoEeSLVrU2ifxtpw" outgoing="_SimP3CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimP4CcoEeSLVrU2ifxtpw" name="Return" incoming="_SimP3ScoEeSLVrU2ifxtpw" parameter="_SimP1ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimP4ScoEeSLVrU2ifxtpw" name="Final" incoming="_SimP2ycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimP7ycoEeSLVrU2ifxtpw" name="excludes$method$1" specification="_SimR5icoEeSLVrU2ifxtpw" node="_SimP-icoEeSLVrU2ifxtpw _SimP-ycoEeSLVrU2ifxtpw _SimP_CcoEeSLVrU2ifxtpw _SimP_ScoEeSLVrU2ifxtpw _SimP_icoEeSLVrU2ifxtpw" group="_SimP_icoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimP8CcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimP8ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimP8icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimP8ycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimP9CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimP9ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimP9icoEeSLVrU2ifxtpw" target="_SimP-ycoEeSLVrU2ifxtpw" source="_SimP-icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimP9ycoEeSLVrU2ifxtpw" target="_SimP_ScoEeSLVrU2ifxtpw" source="_SimP_ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimP-CcoEeSLVrU2ifxtpw" target="_SimQBScoEeSLVrU2ifxtpw" source="_SimP-ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimP-ScoEeSLVrU2ifxtpw" target="_SimP_CcoEeSLVrU2ifxtpw" source="_SimQAScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimP_icoEeSLVrU2ifxtpw" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimP_ycoEeSLVrU2ifxtpw" name="ReturnStatement@20f8cf1b" outgoing="_SimP9ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQACcoEeSLVrU2ifxtpw" target="_SimQAScoEeSLVrU2ifxtpw" source="_SimQCCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQAScoEeSLVrU2ifxtpw" name="ReturnStatement@20f8cf1b.output" incoming="_SimQACcoEeSLVrU2ifxtpw" outgoing="_SimP-ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQAicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQAycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQBCcoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_SimQBScoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).argument(element)" incoming="_SimP-CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQBicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQBycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SimQCCcoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).result()" outgoing="_SimQACcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQCScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQCicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimP-icoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SimP9icoEeSLVrU2ifxtpw" parameter="_SimP8CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimP-ycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SimP9icoEeSLVrU2ifxtpw" outgoing="_SimP-CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimP_CcoEeSLVrU2ifxtpw" name="Return" incoming="_SimP-ScoEeSLVrU2ifxtpw" parameter="_SimP8ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimP_ScoEeSLVrU2ifxtpw" name="Final" incoming="_SimP9ycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQCycoEeSLVrU2ifxtpw" name="excludesAll$method$1" specification="_SimR7ScoEeSLVrU2ifxtpw" node="_SimQFicoEeSLVrU2ifxtpw _SimQFycoEeSLVrU2ifxtpw _SimQGCcoEeSLVrU2ifxtpw _SimQGScoEeSLVrU2ifxtpw _SimQGicoEeSLVrU2ifxtpw" group="_SimQGicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQDCcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQDScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQDicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimQDycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQECcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQEScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQEicoEeSLVrU2ifxtpw" target="_SimQFycoEeSLVrU2ifxtpw" source="_SimQFicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQEycoEeSLVrU2ifxtpw" target="_SimQGScoEeSLVrU2ifxtpw" source="_SimQGycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQFCcoEeSLVrU2ifxtpw" target="_SimQIScoEeSLVrU2ifxtpw" source="_SimQFycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQFScoEeSLVrU2ifxtpw" target="_SimQGCcoEeSLVrU2ifxtpw" source="_SimQHScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQGicoEeSLVrU2ifxtpw" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQGycoEeSLVrU2ifxtpw" name="ReturnStatement@3bf09665" outgoing="_SimQEycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQHCcoEeSLVrU2ifxtpw" target="_SimQHScoEeSLVrU2ifxtpw" source="_SimQJCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQHScoEeSLVrU2ifxtpw" name="ReturnStatement@3bf09665.output" incoming="_SimQHCcoEeSLVrU2ifxtpw" outgoing="_SimQFScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQHicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQHycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQICcoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_SimQIScoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_SimQFCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQIicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQIycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SimQJCcoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).result()" outgoing="_SimQHCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQJScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQJicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQFicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SimQEicoEeSLVrU2ifxtpw" parameter="_SimQDCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimQFycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SimQEicoEeSLVrU2ifxtpw" outgoing="_SimQFCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQGCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimQFScoEeSLVrU2ifxtpw" parameter="_SimQDycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQGScoEeSLVrU2ifxtpw" name="Final" incoming="_SimQEycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQJycoEeSLVrU2ifxtpw" name="includes$method$1" specification="_SimR9CcoEeSLVrU2ifxtpw" node="_SimQMicoEeSLVrU2ifxtpw _SimQMycoEeSLVrU2ifxtpw _SimQNCcoEeSLVrU2ifxtpw _SimQNScoEeSLVrU2ifxtpw _SimQNicoEeSLVrU2ifxtpw" group="_SimQNicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQKCcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQKScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQKicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimQKycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQLCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQLScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQLicoEeSLVrU2ifxtpw" target="_SimQMycoEeSLVrU2ifxtpw" source="_SimQMicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQLycoEeSLVrU2ifxtpw" target="_SimQNScoEeSLVrU2ifxtpw" source="_SimQNycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQMCcoEeSLVrU2ifxtpw" target="_SimQPScoEeSLVrU2ifxtpw" source="_SimQMycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQMScoEeSLVrU2ifxtpw" target="_SimQNCcoEeSLVrU2ifxtpw" source="_SimQOScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQNicoEeSLVrU2ifxtpw" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQNycoEeSLVrU2ifxtpw" name="ReturnStatement@1d0bc1d5" outgoing="_SimQLycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQOCcoEeSLVrU2ifxtpw" target="_SimQOScoEeSLVrU2ifxtpw" source="_SimQQCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQOScoEeSLVrU2ifxtpw" name="ReturnStatement@1d0bc1d5.output" incoming="_SimQOCcoEeSLVrU2ifxtpw" outgoing="_SimQMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQOicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQOycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQPCcoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1)">
              <argument xmi:id="_SimQPScoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).argument(element)" incoming="_SimQMCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQPicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQPycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SimQQCcoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).result()" outgoing="_SimQOCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQQScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQQicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQMicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SimQLicoEeSLVrU2ifxtpw" parameter="_SimQKCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimQMycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SimQLicoEeSLVrU2ifxtpw" outgoing="_SimQMCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQNCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimQMScoEeSLVrU2ifxtpw" parameter="_SimQKycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQNScoEeSLVrU2ifxtpw" name="Final" incoming="_SimQLycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQQycoEeSLVrU2ifxtpw" name="includesAll$method$1" specification="_SimR-ycoEeSLVrU2ifxtpw" node="_SimQTicoEeSLVrU2ifxtpw _SimQTycoEeSLVrU2ifxtpw _SimQUCcoEeSLVrU2ifxtpw _SimQUScoEeSLVrU2ifxtpw _SimQUicoEeSLVrU2ifxtpw" group="_SimQUicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQRCcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQRScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQRicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimQRycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQSCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQSScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQSicoEeSLVrU2ifxtpw" target="_SimQTycoEeSLVrU2ifxtpw" source="_SimQTicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQSycoEeSLVrU2ifxtpw" target="_SimQUScoEeSLVrU2ifxtpw" source="_SimQUycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQTCcoEeSLVrU2ifxtpw" target="_SimQWScoEeSLVrU2ifxtpw" source="_SimQTycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQTScoEeSLVrU2ifxtpw" target="_SimQUCcoEeSLVrU2ifxtpw" source="_SimQVScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQUicoEeSLVrU2ifxtpw" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQUycoEeSLVrU2ifxtpw" name="ReturnStatement@37e4320e" outgoing="_SimQSycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQVCcoEeSLVrU2ifxtpw" target="_SimQVScoEeSLVrU2ifxtpw" source="_SimQXCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQVScoEeSLVrU2ifxtpw" name="ReturnStatement@37e4320e.output" incoming="_SimQVCcoEeSLVrU2ifxtpw" outgoing="_SimQTScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQVicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQVycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQWCcoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_SimQWScoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_SimQTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQWicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQWycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SimQXCcoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).result()" outgoing="_SimQVCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQXScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQXicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQTicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SimQSicoEeSLVrU2ifxtpw" parameter="_SimQRCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimQTycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SimQSicoEeSLVrU2ifxtpw" outgoing="_SimQTCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQUCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimQTScoEeSLVrU2ifxtpw" parameter="_SimQRycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQUScoEeSLVrU2ifxtpw" name="Final" incoming="_SimQSycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQXycoEeSLVrU2ifxtpw" name="isEmpty$method$1" specification="_SimSAicoEeSLVrU2ifxtpw" node="_SimQZScoEeSLVrU2ifxtpw _SimQZicoEeSLVrU2ifxtpw _SimQZycoEeSLVrU2ifxtpw" group="_SimQZycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQYCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQYScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQYicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQYycoEeSLVrU2ifxtpw" target="_SimQZicoEeSLVrU2ifxtpw" source="_SimQaCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQZCcoEeSLVrU2ifxtpw" target="_SimQZScoEeSLVrU2ifxtpw" source="_SimQaicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQZycoEeSLVrU2ifxtpw" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQaCcoEeSLVrU2ifxtpw" name="ReturnStatement@6d130699" outgoing="_SimQYycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQaScoEeSLVrU2ifxtpw" target="_SimQaicoEeSLVrU2ifxtpw" source="_SimQbicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQaicoEeSLVrU2ifxtpw" name="ReturnStatement@6d130699.output" incoming="_SimQaScoEeSLVrU2ifxtpw" outgoing="_SimQZCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQaycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQbCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQbScoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_SimQbicoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1).result()" outgoing="_SimQaScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQbycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQcCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQZScoEeSLVrU2ifxtpw" name="Return" incoming="_SimQZCcoEeSLVrU2ifxtpw" parameter="_SimQYCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQZicoEeSLVrU2ifxtpw" name="Final" incoming="_SimQYycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQcScoEeSLVrU2ifxtpw" name="notEmpty$method$1" specification="_SimSBicoEeSLVrU2ifxtpw" node="_SimQdycoEeSLVrU2ifxtpw _SimQeCcoEeSLVrU2ifxtpw _SimQeScoEeSLVrU2ifxtpw" group="_SimQeScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQcicoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQcycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQdCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQdScoEeSLVrU2ifxtpw" target="_SimQeCcoEeSLVrU2ifxtpw" source="_SimQeicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQdicoEeSLVrU2ifxtpw" target="_SimQdycoEeSLVrU2ifxtpw" source="_SimQfCcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQeScoEeSLVrU2ifxtpw" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQeicoEeSLVrU2ifxtpw" name="ReturnStatement@41c211b3" outgoing="_SimQdScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQeycoEeSLVrU2ifxtpw" target="_SimQfCcoEeSLVrU2ifxtpw" source="_SimQgCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQfCcoEeSLVrU2ifxtpw" name="ReturnStatement@41c211b3.output" incoming="_SimQeycoEeSLVrU2ifxtpw" outgoing="_SimQdicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQfScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQficoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQfycoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_SimQgCcoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1).result()" outgoing="_SimQeycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQgScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQgicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQdycoEeSLVrU2ifxtpw" name="Return" incoming="_SimQdicoEeSLVrU2ifxtpw" parameter="_SimQcicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQeCcoEeSLVrU2ifxtpw" name="Final" incoming="_SimQdScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQgycoEeSLVrU2ifxtpw" name="remove$method$1" specification="_SimSCicoEeSLVrU2ifxtpw" node="_SimQjicoEeSLVrU2ifxtpw _SimQjycoEeSLVrU2ifxtpw _SimQkCcoEeSLVrU2ifxtpw _SimQkScoEeSLVrU2ifxtpw _SimQkicoEeSLVrU2ifxtpw" group="_SimQkicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQhCcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQhScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQhicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimQhycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQiCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQiScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQiicoEeSLVrU2ifxtpw" target="_SimQjycoEeSLVrU2ifxtpw" source="_SimQjicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQiycoEeSLVrU2ifxtpw" target="_SimQkScoEeSLVrU2ifxtpw" source="_SimQkycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQjCcoEeSLVrU2ifxtpw" target="_SimQmScoEeSLVrU2ifxtpw" source="_SimQjycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQjScoEeSLVrU2ifxtpw" target="_SimQkCcoEeSLVrU2ifxtpw" source="_SimQlScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQkicoEeSLVrU2ifxtpw" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQkycoEeSLVrU2ifxtpw" name="ReturnStatement@5841be48" outgoing="_SimQiycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQlCcoEeSLVrU2ifxtpw" target="_SimQlScoEeSLVrU2ifxtpw" source="_SimQnCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQlScoEeSLVrU2ifxtpw" name="ReturnStatement@5841be48.output" incoming="_SimQlCcoEeSLVrU2ifxtpw" outgoing="_SimQjScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQlicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQlycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQmCcoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1)">
              <argument xmi:id="_SimQmScoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).argument(element)" incoming="_SimQjCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQmicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQmycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SimQnCcoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).result()" outgoing="_SimQlCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQnScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQnicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQjicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SimQiicoEeSLVrU2ifxtpw" parameter="_SimQhCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimQjycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SimQiicoEeSLVrU2ifxtpw" outgoing="_SimQjCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQkCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimQjScoEeSLVrU2ifxtpw" parameter="_SimQhycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQkScoEeSLVrU2ifxtpw" name="Final" incoming="_SimQiycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQnycoEeSLVrU2ifxtpw" name="removeAll$method$1" specification="_SimSEScoEeSLVrU2ifxtpw" node="_SimQqicoEeSLVrU2ifxtpw _SimQqycoEeSLVrU2ifxtpw _SimQrCcoEeSLVrU2ifxtpw _SimQrScoEeSLVrU2ifxtpw _SimQricoEeSLVrU2ifxtpw" group="_SimQricoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQoCcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQoScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQoicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimQoycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQpCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQpScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQpicoEeSLVrU2ifxtpw" target="_SimQqycoEeSLVrU2ifxtpw" source="_SimQqicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQpycoEeSLVrU2ifxtpw" target="_SimQrScoEeSLVrU2ifxtpw" source="_SimQrycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQqCcoEeSLVrU2ifxtpw" target="_SimQtScoEeSLVrU2ifxtpw" source="_SimQqycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQqScoEeSLVrU2ifxtpw" target="_SimQrCcoEeSLVrU2ifxtpw" source="_SimQsScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQricoEeSLVrU2ifxtpw" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQrycoEeSLVrU2ifxtpw" name="ReturnStatement@5d3bd913" outgoing="_SimQpycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQsCcoEeSLVrU2ifxtpw" target="_SimQsScoEeSLVrU2ifxtpw" source="_SimQuCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQsScoEeSLVrU2ifxtpw" name="ReturnStatement@5d3bd913.output" incoming="_SimQsCcoEeSLVrU2ifxtpw" outgoing="_SimQqScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQsicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQsycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQtCcoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_SimQtScoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_SimQqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQticoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQtycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SimQuCcoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).result()" outgoing="_SimQsCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQuScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQuicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQqicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SimQpicoEeSLVrU2ifxtpw" parameter="_SimQoCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimQqycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SimQpicoEeSLVrU2ifxtpw" outgoing="_SimQqCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQrCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimQqScoEeSLVrU2ifxtpw" parameter="_SimQoycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQrScoEeSLVrU2ifxtpw" name="Final" incoming="_SimQpycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQuycoEeSLVrU2ifxtpw" name="removeOne$method$1" specification="_SimSGCcoEeSLVrU2ifxtpw" node="_SimQxicoEeSLVrU2ifxtpw _SimQxycoEeSLVrU2ifxtpw _SimQyCcoEeSLVrU2ifxtpw _SimQyScoEeSLVrU2ifxtpw _SimQyicoEeSLVrU2ifxtpw" group="_SimQyicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQvCcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQvScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQvicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimQvycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQwCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQwScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQwicoEeSLVrU2ifxtpw" target="_SimQxycoEeSLVrU2ifxtpw" source="_SimQxicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQwycoEeSLVrU2ifxtpw" target="_SimQyScoEeSLVrU2ifxtpw" source="_SimQyycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQxCcoEeSLVrU2ifxtpw" target="_SimQ0ScoEeSLVrU2ifxtpw" source="_SimQxycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQxScoEeSLVrU2ifxtpw" target="_SimQyCcoEeSLVrU2ifxtpw" source="_SimQzScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQyicoEeSLVrU2ifxtpw" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQyycoEeSLVrU2ifxtpw" name="ReturnStatement@1282fa7b" outgoing="_SimQwycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQzCcoEeSLVrU2ifxtpw" target="_SimQzScoEeSLVrU2ifxtpw" source="_SimQ1CcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQzScoEeSLVrU2ifxtpw" name="ReturnStatement@1282fa7b.output" incoming="_SimQzCcoEeSLVrU2ifxtpw" outgoing="_SimQxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQzicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQzycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQ0CcoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_SimQ0ScoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).argument(element)" incoming="_SimQxCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ0icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ0ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SimQ1CcoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).result()" outgoing="_SimQzCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ1ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ1icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQxicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SimQwicoEeSLVrU2ifxtpw" parameter="_SimQvCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimQxycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SimQwicoEeSLVrU2ifxtpw" outgoing="_SimQxCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQyCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimQxScoEeSLVrU2ifxtpw" parameter="_SimQvycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQyScoEeSLVrU2ifxtpw" name="Final" incoming="_SimQwycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQ1ycoEeSLVrU2ifxtpw" name="replace$method$1" specification="_SimSHycoEeSLVrU2ifxtpw" node="_SimQ5ycoEeSLVrU2ifxtpw _SimQ6CcoEeSLVrU2ifxtpw _SimQ6ScoEeSLVrU2ifxtpw _SimQ6icoEeSLVrU2ifxtpw _SimQ6ycoEeSLVrU2ifxtpw _SimQ7CcoEeSLVrU2ifxtpw _SimQ7ScoEeSLVrU2ifxtpw" group="_SimQ7ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQ2CcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ2ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ2icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimQ2ycoEeSLVrU2ifxtpw" name="newElement" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ3CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ3ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimQ3icoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ3ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ4CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQ4ScoEeSLVrU2ifxtpw" target="_SimQ6CcoEeSLVrU2ifxtpw" source="_SimQ5ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQ4icoEeSLVrU2ifxtpw" target="_SimQ6icoEeSLVrU2ifxtpw" source="_SimQ6ScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimQ4ycoEeSLVrU2ifxtpw" target="_SimQ7CcoEeSLVrU2ifxtpw" source="_SimQ7icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQ5CcoEeSLVrU2ifxtpw" target="_SimQ9CcoEeSLVrU2ifxtpw" source="_SimQ6CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQ5ScoEeSLVrU2ifxtpw" target="_SimQ9ycoEeSLVrU2ifxtpw" source="_SimQ6icoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQ5icoEeSLVrU2ifxtpw" target="_SimQ6ycoEeSLVrU2ifxtpw" source="_SimQ8CcoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimQ7ScoEeSLVrU2ifxtpw" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimQ7icoEeSLVrU2ifxtpw" name="ReturnStatement@d845871" outgoing="_SimQ4ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimQ7ycoEeSLVrU2ifxtpw" target="_SimQ8CcoEeSLVrU2ifxtpw" source="_SimQ-icoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimQ8CcoEeSLVrU2ifxtpw" name="ReturnStatement@d845871.output" incoming="_SimQ7ycoEeSLVrU2ifxtpw" outgoing="_SimQ5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ8ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ8icoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimQ8ycoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_SimQ9CcoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(element)" incoming="_SimQ5CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ9ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ9icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SimQ9ycoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_SimQ5ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ-CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ-ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SimQ-icoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).result()" outgoing="_SimQ7ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ-ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimQ_CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQ5ycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SimQ4ScoEeSLVrU2ifxtpw" parameter="_SimQ2CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimQ6CcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SimQ4ScoEeSLVrU2ifxtpw" outgoing="_SimQ5CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQ6ScoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_SimQ4icoEeSLVrU2ifxtpw" parameter="_SimQ2ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimQ6icoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_SimQ4icoEeSLVrU2ifxtpw" outgoing="_SimQ5ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimQ6ycoEeSLVrU2ifxtpw" name="Return" incoming="_SimQ5icoEeSLVrU2ifxtpw" parameter="_SimQ3icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimQ7CcoEeSLVrU2ifxtpw" name="Final" incoming="_SimQ4ycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimQ_ScoEeSLVrU2ifxtpw" name="replaceOne$method$1" specification="_SimSKScoEeSLVrU2ifxtpw" node="_SimRDScoEeSLVrU2ifxtpw _SimRDicoEeSLVrU2ifxtpw _SimRDycoEeSLVrU2ifxtpw _SimRECcoEeSLVrU2ifxtpw _SimREScoEeSLVrU2ifxtpw _SimREicoEeSLVrU2ifxtpw _SimREycoEeSLVrU2ifxtpw" group="_SimREycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimQ_icoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimQ_ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRACcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimRAScoEeSLVrU2ifxtpw" name="newElement" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRAicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRAycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimRBCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRBScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRBicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRBycoEeSLVrU2ifxtpw" target="_SimRDicoEeSLVrU2ifxtpw" source="_SimRDScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRCCcoEeSLVrU2ifxtpw" target="_SimRECcoEeSLVrU2ifxtpw" source="_SimRDycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimRCScoEeSLVrU2ifxtpw" target="_SimREicoEeSLVrU2ifxtpw" source="_SimRFCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRCicoEeSLVrU2ifxtpw" target="_SimRGicoEeSLVrU2ifxtpw" source="_SimRDicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRCycoEeSLVrU2ifxtpw" target="_SimRHScoEeSLVrU2ifxtpw" source="_SimRECcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRDCcoEeSLVrU2ifxtpw" target="_SimREScoEeSLVrU2ifxtpw" source="_SimRFicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimREycoEeSLVrU2ifxtpw" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimRFCcoEeSLVrU2ifxtpw" name="ReturnStatement@3755530a" outgoing="_SimRCScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRFScoEeSLVrU2ifxtpw" target="_SimRFicoEeSLVrU2ifxtpw" source="_SimRICcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimRFicoEeSLVrU2ifxtpw" name="ReturnStatement@3755530a.output" incoming="_SimRFScoEeSLVrU2ifxtpw" outgoing="_SimRDCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRFycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRGCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimRGScoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_SimRGicoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_SimRCicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRGycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRHCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SimRHScoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_SimRCycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRHicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRHycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SimRICcoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).result()" outgoing="_SimRFScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRIScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRIicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimRDScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SimRBycoEeSLVrU2ifxtpw" parameter="_SimQ_icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimRDicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SimRBycoEeSLVrU2ifxtpw" outgoing="_SimRCicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimRDycoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_SimRCCcoEeSLVrU2ifxtpw" parameter="_SimRAScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimRECcoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_SimRCCcoEeSLVrU2ifxtpw" outgoing="_SimRCycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimREScoEeSLVrU2ifxtpw" name="Return" incoming="_SimRDCcoEeSLVrU2ifxtpw" parameter="_SimRBCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimREicoEeSLVrU2ifxtpw" name="Final" incoming="_SimRCScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimRIycoEeSLVrU2ifxtpw" name="retainAll$method$1" specification="_SimSMycoEeSLVrU2ifxtpw" node="_SimRLicoEeSLVrU2ifxtpw _SimRLycoEeSLVrU2ifxtpw _SimRMCcoEeSLVrU2ifxtpw _SimRMScoEeSLVrU2ifxtpw _SimRMicoEeSLVrU2ifxtpw" group="_SimRMicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimRJCcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRJScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRJicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimRJycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRKCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRKScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRKicoEeSLVrU2ifxtpw" target="_SimRLycoEeSLVrU2ifxtpw" source="_SimRLicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimRKycoEeSLVrU2ifxtpw" target="_SimRMScoEeSLVrU2ifxtpw" source="_SimRMycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRLCcoEeSLVrU2ifxtpw" target="_SimROScoEeSLVrU2ifxtpw" source="_SimRLycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRLScoEeSLVrU2ifxtpw" target="_SimRMCcoEeSLVrU2ifxtpw" source="_SimRNScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimRMicoEeSLVrU2ifxtpw" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimRMycoEeSLVrU2ifxtpw" name="ReturnStatement@4ead8d5f" outgoing="_SimRKycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRNCcoEeSLVrU2ifxtpw" target="_SimRNScoEeSLVrU2ifxtpw" source="_SimRPCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimRNScoEeSLVrU2ifxtpw" name="ReturnStatement@4ead8d5f.output" incoming="_SimRNCcoEeSLVrU2ifxtpw" outgoing="_SimRLScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRNicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRNycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimROCcoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_SimROScoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_SimRLCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimROicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimROycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SimRPCcoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).result()" outgoing="_SimRNCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRPScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRPicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimRLicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SimRKicoEeSLVrU2ifxtpw" parameter="_SimRJCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SimRLycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SimRKicoEeSLVrU2ifxtpw" outgoing="_SimRLCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimRMCcoEeSLVrU2ifxtpw" name="Return" incoming="_SimRLScoEeSLVrU2ifxtpw" parameter="_SimRJycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimRMScoEeSLVrU2ifxtpw" name="Final" incoming="_SimRKycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimRPycoEeSLVrU2ifxtpw" name="size$method$1" specification="_SimSOicoEeSLVrU2ifxtpw" node="_SimRRScoEeSLVrU2ifxtpw _SimRRicoEeSLVrU2ifxtpw _SimRRycoEeSLVrU2ifxtpw" group="_SimRRycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimRQCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRQScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRQicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimRQycoEeSLVrU2ifxtpw" target="_SimRRicoEeSLVrU2ifxtpw" source="_SimRSCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRRCcoEeSLVrU2ifxtpw" target="_SimRRScoEeSLVrU2ifxtpw" source="_SimRSicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimRRycoEeSLVrU2ifxtpw" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimRSCcoEeSLVrU2ifxtpw" name="ReturnStatement@748a8ffb" outgoing="_SimRQycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRSScoEeSLVrU2ifxtpw" target="_SimRSicoEeSLVrU2ifxtpw" source="_SimRTicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimRSicoEeSLVrU2ifxtpw" name="ReturnStatement@748a8ffb.output" incoming="_SimRSScoEeSLVrU2ifxtpw" outgoing="_SimRRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRSycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRTCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimRTScoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1)">
              <result xmi:id="_SimRTicoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1).result()" outgoing="_SimRSScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRTycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRUCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimRRScoEeSLVrU2ifxtpw" name="Return" incoming="_SimRRCcoEeSLVrU2ifxtpw" parameter="_SimRQCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimRRicoEeSLVrU2ifxtpw" name="Final" incoming="_SimRQycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimRUScoEeSLVrU2ifxtpw" name="toSequence$method$1" specification="_SimSPicoEeSLVrU2ifxtpw" node="_SimRVycoEeSLVrU2ifxtpw _SimRWCcoEeSLVrU2ifxtpw _SimRWScoEeSLVrU2ifxtpw" group="_SimRWScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimRUicoEeSLVrU2ifxtpw" name="" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRUycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRVCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SimRVScoEeSLVrU2ifxtpw" target="_SimRWCcoEeSLVrU2ifxtpw" source="_SimRWicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRVicoEeSLVrU2ifxtpw" target="_SimRVycoEeSLVrU2ifxtpw" source="_SimRXScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SimRWScoEeSLVrU2ifxtpw" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimRWicoEeSLVrU2ifxtpw" name="ReturnStatement@196a4632" outgoing="_SimRVScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRWycoEeSLVrU2ifxtpw" target="_SimRdicoEeSLVrU2ifxtpw" source="_SimRYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRXCcoEeSLVrU2ifxtpw" target="_SimRXScoEeSLVrU2ifxtpw" source="_SimRdycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SimRXScoEeSLVrU2ifxtpw" name="ReturnStatement@196a4632.output" incoming="_SimRXCcoEeSLVrU2ifxtpw" outgoing="_SimRVicoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRXicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRXycoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimRYCcoEeSLVrU2ifxtpw" name="Call(getContent$method$1)">
              <result xmi:id="_SimRYScoEeSLVrU2ifxtpw" name="Call(getContent$method$1).result()" outgoing="_SimRWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRYicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRYycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#BagImpl-getContentmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_SimRZCcoEeSLVrU2ifxtpw" name="CastExpression@7d8a06d6" mode="parallel" outputElement="_SimRdycoEeSLVrU2ifxtpw" inputElement="_SimRdicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRZScoEeSLVrU2ifxtpw" target="_SimRbicoEeSLVrU2ifxtpw" source="_SimRdCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRZicoEeSLVrU2ifxtpw" target="_SimRdScoEeSLVrU2ifxtpw" source="_SimRdCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRZycoEeSLVrU2ifxtpw" target="_SimRdScoEeSLVrU2ifxtpw" source="_SimRcScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRaCcoEeSLVrU2ifxtpw" target="_SimRbCcoEeSLVrU2ifxtpw" source="_SimRdScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SimRaScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRaicoEeSLVrU2ifxtpw" target="_SimRdCcoEeSLVrU2ifxtpw" source="_SimRdicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRaycoEeSLVrU2ifxtpw" target="_SimRdycoEeSLVrU2ifxtpw" source="_SimRbCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SimRbCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@7d8a06d6.operand)" incoming="_SimRaCcoEeSLVrU2ifxtpw" outgoing="_SimRaycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SimRbScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_SilBcCcoEeSLVrU2ifxtpw">
                <object xmi:id="_SimRbicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_SimRZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRbycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRcCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SimRcScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_SimRZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRcicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRcycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SimRdCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_SimRaicoEeSLVrU2ifxtpw" outgoing="_SimRZScoEeSLVrU2ifxtpw _SimRZicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SimRdScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_SimRZicoEeSLVrU2ifxtpw _SimRZycoEeSLVrU2ifxtpw" outgoing="_SimRaCcoEeSLVrU2ifxtpw" decisionInputFlow="_SimRZycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SimRdicoEeSLVrU2ifxtpw" name="CastExpression@7d8a06d6.inputElement" incoming="_SimRWycoEeSLVrU2ifxtpw" outgoing="_SimRaicoEeSLVrU2ifxtpw" regionAsInput="_SimRZCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SimRdycoEeSLVrU2ifxtpw" name="CastExpression@7d8a06d6.outputElement" incoming="_SimRaycoEeSLVrU2ifxtpw" outgoing="_SimRXCcoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" regionAsOutput="_SimRZCcoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimRVycoEeSLVrU2ifxtpw" name="Return" incoming="_SimRVicoEeSLVrU2ifxtpw" parameter="_SimRUicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_SimRWCcoEeSLVrU2ifxtpw" name="Final" incoming="_SimRVScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimReCcoEeSLVrU2ifxtpw" name="Bag$initialization$1" specification="_SimRwCcoEeSLVrU2ifxtpw" node="_SimReScoEeSLVrU2ifxtpw" group="_SimReScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SimReScoEeSLVrU2ifxtpw" name="Body(Bag$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimReicoEeSLVrU2ifxtpw" target="_SimRiScoEeSLVrU2ifxtpw" source="_SimRhicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimReycoEeSLVrU2ifxtpw" target="_SimRjScoEeSLVrU2ifxtpw" source="_SimRiScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRfCcoEeSLVrU2ifxtpw" target="_SimRmCcoEeSLVrU2ifxtpw" source="_SimRiScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRfScoEeSLVrU2ifxtpw" target="_SimRoicoEeSLVrU2ifxtpw" source="_SimRiScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRficoEeSLVrU2ifxtpw" target="_SimRqScoEeSLVrU2ifxtpw" source="_SimRpScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRfycoEeSLVrU2ifxtpw" target="_SimRtScoEeSLVrU2ifxtpw" source="_SimRrCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRgCcoEeSLVrU2ifxtpw" target="_SimRuycoEeSLVrU2ifxtpw" source="_SimRsCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SimRgScoEeSLVrU2ifxtpw" target="_SimRvycoEeSLVrU2ifxtpw" source="_SimRvicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRgicoEeSLVrU2ifxtpw" target="_SimRvycoEeSLVrU2ifxtpw" source="_SimRuCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SimRgycoEeSLVrU2ifxtpw" target="_SimRiicoEeSLVrU2ifxtpw" source="_SimRvycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SimRhCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SimRhScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SimRhicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SimReicoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRhycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRiCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SimRiScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SimReicoEeSLVrU2ifxtpw" outgoing="_SimReycoEeSLVrU2ifxtpw _SimRfCcoEeSLVrU2ifxtpw _SimRfScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimRiicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SimRgycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SimRiycoEeSLVrU2ifxtpw" target="_SimRkCcoEeSLVrU2ifxtpw" source="_SimRjCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SimRjCcoEeSLVrU2ifxtpw" name="Call(BagImpl$initialization$1)" outgoing="_SimRiycoEeSLVrU2ifxtpw">
              <operation href="Libraries/CollectionClassesImpl.library.uml#BagImpl-BagImplinitialization1.1"/>
              <target xmi:id="_SimRjScoEeSLVrU2ifxtpw" name="Call(BagImpl$initialization$1).target" incoming="_SimReycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#BagImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRjicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRjycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimRkCcoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SimRiycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRkScoEeSLVrU2ifxtpw" target="_SimRnicoEeSLVrU2ifxtpw" source="_SimRkycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SimRkicoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SimRkycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SimRkScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRlCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRlScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SimRlicoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SimRlycoEeSLVrU2ifxtpw" name="Write(Bag$initializationFlag$1)" structuralFeature="_SimPKicoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SimRmCcoEeSLVrU2ifxtpw" name="Write(Bag$initializationFlag$1).object" incoming="_SimRfCcoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRmScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRmicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SimRmycoEeSLVrU2ifxtpw" name="Write(Bag$initializationFlag$1).result" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRnCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRnScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_SimRnicoEeSLVrU2ifxtpw" name="Write(Bag$initializationFlag$1).value" incoming="_SimRkScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRnycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRoCcoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SimRoScoEeSLVrU2ifxtpw" name="Read(Bag$initializationFlag$1)" structuralFeature="_SimPKicoEeSLVrU2ifxtpw">
            <object xmi:id="_SimRoicoEeSLVrU2ifxtpw" name="Read(Bag$initializationFlag$1).object" incoming="_SimRfScoEeSLVrU2ifxtpw" type="_SimPJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRoycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRpCcoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SimRpScoEeSLVrU2ifxtpw" name="Read(Bag$initializationFlag$1).result" outgoing="_SimRficoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRpicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRpycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SimRqCcoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SimRqScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SimRficoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRqicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRqycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SimRrCcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SimRfycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRrScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRricoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SimRrycoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SimRsCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SimRgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRsScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRsicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SimRsycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SimRtCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SimRtScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SimRfycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRticoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRtycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SimRuCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SimRgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRuScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRuicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SimRuycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SimRgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRvCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRvScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SimRvicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SimRgScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SimRvycoEeSLVrU2ifxtpw" name="Decision(Test(Bag$initializationFlag$1))" incoming="_SimRgScoEeSLVrU2ifxtpw _SimRgicoEeSLVrU2ifxtpw" outgoing="_SimRgycoEeSLVrU2ifxtpw" decisionInputFlow="_SimRgicoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SimRwCcoEeSLVrU2ifxtpw" name="Bag$initialization$1" visibility="protected" method="_SimReCcoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SimRwScoEeSLVrU2ifxtpw" name="Bag" visibility="public" method="_SimPLScoEeSLVrU2ifxtpw" redefinedOperation="_SimSRScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimRwicoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRwycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRxCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimRxScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SimPJycoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRxicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRxycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimRyCcoEeSLVrU2ifxtpw" name="destroy" visibility="public" method="_SimPeScoEeSLVrU2ifxtpw">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#BagImpl-destroy"/>
        <redefinedOperation href="#_SimSTCcoEeSLVrU2ifxtpw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SimRyScoEeSLVrU2ifxtpw" name="add" visibility="public" method="_SimPeycoEeSLVrU2ifxtpw" redefinedOperation="_SimSTicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimRyicoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRyycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRzCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimRzScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRzicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRzycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimR0CcoEeSLVrU2ifxtpw" name="addAll" visibility="public" method="_SimPlycoEeSLVrU2ifxtpw" redefinedOperation="_SimSUycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimR0ScoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR0icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR0ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimR1CcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR1ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR1icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimR1ycoEeSLVrU2ifxtpw" name="clear" visibility="public" method="_SimPsycoEeSLVrU2ifxtpw" redefinedOperation="_SimScScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SimR2CcoEeSLVrU2ifxtpw" name="count" visibility="public" method="_SimPtycoEeSLVrU2ifxtpw" redefinedOperation="_SimScycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimR2ScoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR2icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR2ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimR3CcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR3ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR3icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimR3ycoEeSLVrU2ifxtpw" name="equals" visibility="public" method="_SimP0ycoEeSLVrU2ifxtpw" redefinedOperation="_SimSWScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimR4CcoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR4ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR4icoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimR4ycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR5CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR5ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimR5icoEeSLVrU2ifxtpw" name="excludes" visibility="public" method="_SimP7ycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1YycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimR5ycoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR6CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR6ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimR6icoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR6ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR7CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimR7ScoEeSLVrU2ifxtpw" name="excludesAll" visibility="public" method="_SimQCycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1aScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimR7icoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR7ycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR8CcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimR8ScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR8icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR8ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimR9CcoEeSLVrU2ifxtpw" name="includes" visibility="public" method="_SimQJycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1cCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimR9ScoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR9icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR9ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimR-CcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR-ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR-icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimR-ycoEeSLVrU2ifxtpw" name="includesAll" visibility="public" method="_SimQQycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1dicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimR_CcoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimR_ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimR_icoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimR_ycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSACcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSAScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSAicoEeSLVrU2ifxtpw" name="isEmpty" visibility="public" method="_SimQXycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1fScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSAycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSBCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSBScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSBicoEeSLVrU2ifxtpw" name="notEmpty" visibility="public" method="_SimQcScoEeSLVrU2ifxtpw" redefinedOperation="_Sim1gScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSBycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSCCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSCScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSCicoEeSLVrU2ifxtpw" name="remove" visibility="public" method="_SimQgycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1hCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSCycoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSDCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSDScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSDicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSDycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSECcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSEScoEeSLVrU2ifxtpw" name="removeAll" visibility="public" method="_SimQnycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1iCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSEicoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSEycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSFCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSFScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSFicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSFycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSGCcoEeSLVrU2ifxtpw" name="removeOne" visibility="public" method="_SimQuycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1jycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSGScoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSGicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSGycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSHCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSHScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSHicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSHycoEeSLVrU2ifxtpw" name="replace" visibility="public" method="_SimQ1ycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1lCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSICcoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSIScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSIicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSIycoEeSLVrU2ifxtpw" name="newElement" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSJCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSJScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSJicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSJycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSKCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSKScoEeSLVrU2ifxtpw" name="replaceOne" visibility="public" method="_SimQ_ScoEeSLVrU2ifxtpw" redefinedOperation="_Sim1mycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSKicoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSKycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSLCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSLScoEeSLVrU2ifxtpw" name="newElement" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSLicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSLycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSMCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSMScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSMicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSMycoEeSLVrU2ifxtpw" name="retainAll" visibility="public" method="_SimRIycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1oicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSNCcoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSNScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSNicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSNycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSOCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSOScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSOicoEeSLVrU2ifxtpw" name="size" visibility="public" method="_SimRPycoEeSLVrU2ifxtpw" redefinedOperation="_Sim1qScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSOycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSPCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSPScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSPicoEeSLVrU2ifxtpw" name="toSequence" visibility="public" method="_SimRUScoEeSLVrU2ifxtpw" redefinedOperation="_Sim1rScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SimSPycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSQCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSQScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SimSQicoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Bag__Units_Map$Listener__" isAbstract="true">
      <ownedComment xmi:id="_SimSQycoEeSLVrU2ifxtpw" annotatedElement="_SimSQicoEeSLVrU2ifxtpw">
        <body>Concrete unordered, non-unique collection. Supports duplicate entries. </body>
      </ownedComment>
      <generalization xmi:id="_SimSRCcoEeSLVrU2ifxtpw" general="_SimSYicoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SimSRScoEeSLVrU2ifxtpw" name="Bag" isAbstract="true">
        <ownedComment xmi:id="_SimSRicoEeSLVrU2ifxtpw" annotatedElement="_SimSRScoEeSLVrU2ifxtpw">
          <body>Construct a bag and add all elements in the given sequence. post:
                result.toSequence()->asBag() = seq->asBag() </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimSRycoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimSSCcoEeSLVrU2ifxtpw" annotatedElement="_SimSRycoEeSLVrU2ifxtpw">
            <body>Elements to be added to the new bag. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSSScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSSicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSSycoEeSLVrU2ifxtpw" type="_SimSXycoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSTCcoEeSLVrU2ifxtpw" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_SimSTScoEeSLVrU2ifxtpw" annotatedElement="_SimSTCcoEeSLVrU2ifxtpw">
          <body>Destroy this bag. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSTicoEeSLVrU2ifxtpw" name="add" isAbstract="true" redefinedOperation="_SimSZCcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_SimSTycoEeSLVrU2ifxtpw" annotatedElement="_SimSTicoEeSLVrU2ifxtpw">
          <body>Insert the given element into this bag. Always returns true. post:
                self.toSequence()->asBag()
                = self@pre.toSequence()->asBag()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimSUCcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_SimSUScoEeSLVrU2ifxtpw" annotatedElement="_SimSUCcoEeSLVrU2ifxtpw">
            <body>Element to be appended to this collection.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSUicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSUycoEeSLVrU2ifxtpw" name="addAll" isAbstract="true" redefinedOperation="_SimSaicoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_SimSVCcoEeSLVrU2ifxtpw" annotatedElement="_SimSUycoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this bag. Return true if the
                given sequence is not empty. post: self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->union(seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimSVScoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSVicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSVycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSWCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSWScoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_SimSeScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_SimSWicoEeSLVrU2ifxtpw" annotatedElement="_SimSWScoEeSLVrU2ifxtpw">
          <body>Return true if the content of this bag is equal to the given sequence considered
                as a bag. post: result = (self@pre.toSequence()->asBag() =
                seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimSWycoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSXCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSXScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSXicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SimSXycoEeSLVrU2ifxtpw" name="Bag&lt;T>">
        <templateBinding xmi:id="_SimSYCcoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_SimSYScoEeSLVrU2ifxtpw" actual="_SilBcCcoEeSLVrU2ifxtpw">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SimSYicoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Collection__Units_Map$Listener__" isAbstract="true">
      <ownedComment xmi:id="_SimSYycoEeSLVrU2ifxtpw" annotatedElement="_SimSYicoEeSLVrU2ifxtpw">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_SimSZCcoEeSLVrU2ifxtpw" name="add" isAbstract="true">
        <ownedComment xmi:id="_SimSZScoEeSLVrU2ifxtpw" annotatedElement="_SimSZCcoEeSLVrU2ifxtpw">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimSZicoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SimSZycoEeSLVrU2ifxtpw" annotatedElement="_SimSZicoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSaCcoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_SimSaScoEeSLVrU2ifxtpw" annotatedElement="_SimSaCcoEeSLVrU2ifxtpw">
            <body>Element to be added to this collection.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSaicoEeSLVrU2ifxtpw" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_SimSaycoEeSLVrU2ifxtpw" annotatedElement="_SimSaicoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimSbCcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimSbScoEeSLVrU2ifxtpw" annotatedElement="_SimSbCcoEeSLVrU2ifxtpw">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimSbicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimSbycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SimScCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimScScoEeSLVrU2ifxtpw" name="clear" isAbstract="true">
        <ownedComment xmi:id="_SimScicoEeSLVrU2ifxtpw" annotatedElement="_SimScScoEeSLVrU2ifxtpw">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_SimScycoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimSdCcoEeSLVrU2ifxtpw" annotatedElement="_SimScycoEeSLVrU2ifxtpw">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimSdScoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_SimSdicoEeSLVrU2ifxtpw" annotatedElement="_SimSdScoEeSLVrU2ifxtpw">
            <body>Element to be counted.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_SimSdycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_SimSeCcoEeSLVrU2ifxtpw" annotatedElement="_SimSdycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SimSeScoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_SimSeicoEeSLVrU2ifxtpw" annotatedElement="_SimSeScoEeSLVrU2ifxtpw">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_SimSeycoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_SimSfCcoEeSLVrU2ifxtpw" annotatedElement="_SimSeycoEeSLVrU2ifxtpw">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim1YCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim1YScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1YicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1YycoEeSLVrU2ifxtpw" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1ZCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1YycoEeSLVrU2ifxtpw">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1ZScoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_Sim1ZicoEeSLVrU2ifxtpw" annotatedElement="_Sim1ZScoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1ZycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim1aCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1ZycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1aScoEeSLVrU2ifxtpw" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1aicoEeSLVrU2ifxtpw" annotatedElement="_Sim1aScoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1aycoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim1bCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1aycoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim1bScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim1bicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1bycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1cCcoEeSLVrU2ifxtpw" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1cScoEeSLVrU2ifxtpw" annotatedElement="_Sim1cCcoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1cicoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_Sim1cycoEeSLVrU2ifxtpw" annotatedElement="_Sim1cicoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1dCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim1dScoEeSLVrU2ifxtpw" annotatedElement="_Sim1dCcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1dicoEeSLVrU2ifxtpw" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1dycoEeSLVrU2ifxtpw" annotatedElement="_Sim1dicoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1eCcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim1eScoEeSLVrU2ifxtpw" annotatedElement="_Sim1eCcoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim1eicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim1eycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1fCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1fScoEeSLVrU2ifxtpw" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1ficoEeSLVrU2ifxtpw" annotatedElement="_Sim1fScoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1fycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim1gCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1fycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1gScoEeSLVrU2ifxtpw" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1gicoEeSLVrU2ifxtpw" annotatedElement="_Sim1gScoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1gycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1hCcoEeSLVrU2ifxtpw" name="remove" isAbstract="true">
        <ownedComment xmi:id="_Sim1hScoEeSLVrU2ifxtpw" annotatedElement="_Sim1hCcoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1hicoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw"/>
        <ownedParameter xmi:id="_Sim1hycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1iCcoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_Sim1iScoEeSLVrU2ifxtpw" annotatedElement="_Sim1iCcoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1iicoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim1iycoEeSLVrU2ifxtpw" annotatedElement="_Sim1iicoEeSLVrU2ifxtpw">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim1jCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim1jScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1jicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1jycoEeSLVrU2ifxtpw" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_Sim1kCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1jycoEeSLVrU2ifxtpw">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1kScoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_Sim1kicoEeSLVrU2ifxtpw" annotatedElement="_Sim1kScoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1kycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1lCcoEeSLVrU2ifxtpw" name="replace" isAbstract="true">
        <ownedComment xmi:id="_Sim1lScoEeSLVrU2ifxtpw" annotatedElement="_Sim1lCcoEeSLVrU2ifxtpw">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1licoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_Sim1lycoEeSLVrU2ifxtpw" annotatedElement="_Sim1licoEeSLVrU2ifxtpw">
            <body>Element to be replaced.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1mCcoEeSLVrU2ifxtpw" name="newElement" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_Sim1mScoEeSLVrU2ifxtpw" annotatedElement="_Sim1mCcoEeSLVrU2ifxtpw">
            <body>Element to replace original element. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1micoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1mycoEeSLVrU2ifxtpw" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_Sim1nCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1mycoEeSLVrU2ifxtpw">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1nScoEeSLVrU2ifxtpw" name="element" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_Sim1nicoEeSLVrU2ifxtpw" annotatedElement="_Sim1nScoEeSLVrU2ifxtpw">
            <body>Element to be replaced. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1nycoEeSLVrU2ifxtpw" name="newElement" type="_SilBcCcoEeSLVrU2ifxtpw" effect="create">
          <ownedComment xmi:id="_Sim1oCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1nycoEeSLVrU2ifxtpw">
            <body>Element to replace the original element. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1oScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1oicoEeSLVrU2ifxtpw" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_Sim1oycoEeSLVrU2ifxtpw" annotatedElement="_Sim1oicoEeSLVrU2ifxtpw">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1pCcoEeSLVrU2ifxtpw" name="seq" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim1pScoEeSLVrU2ifxtpw" annotatedElement="_Sim1pCcoEeSLVrU2ifxtpw">
            <body>Elements to retain. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim1picoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim1pycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1qCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1qScoEeSLVrU2ifxtpw" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1qicoEeSLVrU2ifxtpw" annotatedElement="_Sim1qScoEeSLVrU2ifxtpw">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1qycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim1rCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1qycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1rScoEeSLVrU2ifxtpw" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1ricoEeSLVrU2ifxtpw" annotatedElement="_Sim1rScoEeSLVrU2ifxtpw">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1rycoEeSLVrU2ifxtpw" type="_SilBcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_Sim1sCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1rycoEeSLVrU2ifxtpw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim1sScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim1sicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim1sycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Sim1tCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Sim1tScoEeSLVrU2ifxtpw" actual="_SilBcCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Sim1ticoEeSLVrU2ifxtpw" client="_SimSYicoEeSLVrU2ifxtpw" supplier="_Sim1sycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim1tycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Sim1uCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Sim1uScoEeSLVrU2ifxtpw" actual="_SilBcCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Sim1uicoEeSLVrU2ifxtpw" client="_SimSQicoEeSLVrU2ifxtpw" supplier="_Sim1tycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim1uycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Sim1vCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Sim1vScoEeSLVrU2ifxtpw" actual="_SilBcCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b4TvIXREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b4Tu4XREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Sim1vicoEeSLVrU2ifxtpw" client="_SimPJycoEeSLVrU2ifxtpw" supplier="_Sim1uycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim1vycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Set__PrimitiveTypes$Integer__" isAbstract="true">
      <ownedComment xmi:id="_Sim1wCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1vycoEeSLVrU2ifxtpw">
        <body>A concrete unordered, unique collection. Does not support duplicate entries.
            </body>
      </ownedComment>
      <generalization xmi:id="_Sim1wScoEeSLVrU2ifxtpw" general="_Sim15icoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_Sim1wicoEeSLVrU2ifxtpw" name="Set" isAbstract="true">
        <ownedComment xmi:id="_Sim1wycoEeSLVrU2ifxtpw" annotatedElement="_Sim1wicoEeSLVrU2ifxtpw">
          <body>Construct a set and add all elements in the given sequence. post:
                result.toSequence()->asSet() = seq->asSet() </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1xCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false" effect="create">
          <ownedComment xmi:id="_Sim1xScoEeSLVrU2ifxtpw" annotatedElement="_Sim1xCcoEeSLVrU2ifxtpw">
            <body>A sequence of elements of type &lt;T> to be added to the set</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim1xicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim1xycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1yCcoEeSLVrU2ifxtpw" type="_Sim14ycoEeSLVrU2ifxtpw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1yScoEeSLVrU2ifxtpw" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_Sim1yicoEeSLVrU2ifxtpw" annotatedElement="_Sim1yScoEeSLVrU2ifxtpw">
          <body>Destroy this set. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1yycoEeSLVrU2ifxtpw" name="add" isAbstract="true" redefinedOperation="_Sim16CcoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_Sim1zCcoEeSLVrU2ifxtpw" annotatedElement="_Sim1yycoEeSLVrU2ifxtpw">
          <body>Insert the given element into this set. Return true if a new element is actually
                inserted. post: self.toSequence()->asSet()
                = self@pre.toSequence()->asSet()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1zScoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim1zicoEeSLVrU2ifxtpw" annotatedElement="_Sim1zScoEeSLVrU2ifxtpw">
            <body>Element to be appended to this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1zycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim10CcoEeSLVrU2ifxtpw" name="addAll" isAbstract="true" precondition="_Sim10icoEeSLVrU2ifxtpw" redefinedOperation="_Sim17icoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_Sim10ScoEeSLVrU2ifxtpw" annotatedElement="_Sim10CcoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this set. Returns true if this
                collection increased in size. post: self.toSequence()->asSet() =
                self@pre.toSequence()->asSet()->union(seq->asSet()) </body>
        </ownedComment>
        <ownedRule xmi:id="_Sim10icoEeSLVrU2ifxtpw" constrainedElement="_Sim10CcoEeSLVrU2ifxtpw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Sim10ycoEeSLVrU2ifxtpw">
            <language>OCL</language>
            <body>self.toSequence()->size()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_Sim11CcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim11ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim11icoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim11ycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim12CcoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true" redefinedOperation="_Sim19ycoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_Sim12ScoEeSLVrU2ifxtpw" annotatedElement="_Sim12CcoEeSLVrU2ifxtpw">
          <body>The number of elements in this set that match a specified element. post: result
                = if self@pre.includes(element) then 1 else 0 endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim12icoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim12ycoEeSLVrU2ifxtpw" annotatedElement="_Sim12icoEeSLVrU2ifxtpw">
            <body>The element to be counted</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim13CcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim13ScoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_Sim1_ScoEeSLVrU2ifxtpw">
        <ownedComment xmi:id="_Sim13icoEeSLVrU2ifxtpw" annotatedElement="_Sim13ScoEeSLVrU2ifxtpw">
          <body>Return true if the content of this set is equal to the given sequence considered
                as a set. post: result = (self@pre.toSequence()->asSet() =
                seq->asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim13ycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim14CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim14ScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim14icoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_Sim14ycoEeSLVrU2ifxtpw" name="Set&lt;T>">
        <templateBinding xmi:id="_Sim15CcoEeSLVrU2ifxtpw">
          <parameterSubstitution xmi:id="_Sim15ScoEeSLVrU2ifxtpw">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim15icoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Collection__PrimitiveTypes$Integer__" isAbstract="true">
      <ownedComment xmi:id="_Sim15ycoEeSLVrU2ifxtpw" annotatedElement="_Sim15icoEeSLVrU2ifxtpw">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_Sim16CcoEeSLVrU2ifxtpw" name="add" isAbstract="true">
        <ownedComment xmi:id="_Sim16ScoEeSLVrU2ifxtpw" annotatedElement="_Sim16CcoEeSLVrU2ifxtpw">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim16icoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim16ycoEeSLVrU2ifxtpw" annotatedElement="_Sim16icoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim17CcoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim17ScoEeSLVrU2ifxtpw" annotatedElement="_Sim17CcoEeSLVrU2ifxtpw">
            <body>Element to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim17icoEeSLVrU2ifxtpw" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_Sim17ycoEeSLVrU2ifxtpw" annotatedElement="_Sim17icoEeSLVrU2ifxtpw">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim18CcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim18ScoEeSLVrU2ifxtpw" annotatedElement="_Sim18CcoEeSLVrU2ifxtpw">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim18icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim18ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim19CcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim19ScoEeSLVrU2ifxtpw" name="clear" isAbstract="true">
        <ownedComment xmi:id="_Sim19icoEeSLVrU2ifxtpw" annotatedElement="_Sim19ScoEeSLVrU2ifxtpw">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim19ycoEeSLVrU2ifxtpw" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1-CcoEeSLVrU2ifxtpw" annotatedElement="_Sim19ycoEeSLVrU2ifxtpw">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1-ScoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim1-icoEeSLVrU2ifxtpw" annotatedElement="_Sim1-ScoEeSLVrU2ifxtpw">
            <body>Element to be counted.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim1-ycoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim1_CcoEeSLVrU2ifxtpw" annotatedElement="_Sim1-ycoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim1_ScoEeSLVrU2ifxtpw" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim1_icoEeSLVrU2ifxtpw" annotatedElement="_Sim1_ScoEeSLVrU2ifxtpw">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim1_ycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim2ACcoEeSLVrU2ifxtpw" annotatedElement="_Sim1_ycoEeSLVrU2ifxtpw">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2AScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2AicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2AycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2BCcoEeSLVrU2ifxtpw" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim2BScoEeSLVrU2ifxtpw" annotatedElement="_Sim2BCcoEeSLVrU2ifxtpw">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2BicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim2BycoEeSLVrU2ifxtpw" annotatedElement="_Sim2BicoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2CCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim2CScoEeSLVrU2ifxtpw" annotatedElement="_Sim2CCcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2CicoEeSLVrU2ifxtpw" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim2CycoEeSLVrU2ifxtpw" annotatedElement="_Sim2CicoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2DCcoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim2DScoEeSLVrU2ifxtpw" annotatedElement="_Sim2DCcoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2DicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2DycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2ECcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2EScoEeSLVrU2ifxtpw" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim2EicoEeSLVrU2ifxtpw" annotatedElement="_Sim2EScoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2EycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim2FCcoEeSLVrU2ifxtpw" annotatedElement="_Sim2EycoEeSLVrU2ifxtpw">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2FScoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim2FicoEeSLVrU2ifxtpw" annotatedElement="_Sim2FScoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2FycoEeSLVrU2ifxtpw" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim2GCcoEeSLVrU2ifxtpw" annotatedElement="_Sim2FycoEeSLVrU2ifxtpw">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2GScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim2GicoEeSLVrU2ifxtpw" annotatedElement="_Sim2GScoEeSLVrU2ifxtpw">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2GycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2HCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2HScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2HicoEeSLVrU2ifxtpw" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim2HycoEeSLVrU2ifxtpw" annotatedElement="_Sim2HicoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2ICcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim2IScoEeSLVrU2ifxtpw" annotatedElement="_Sim2ICcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2IicoEeSLVrU2ifxtpw" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim2IycoEeSLVrU2ifxtpw" annotatedElement="_Sim2IicoEeSLVrU2ifxtpw">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2JCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2JScoEeSLVrU2ifxtpw" name="remove" isAbstract="true">
        <ownedComment xmi:id="_Sim2JicoEeSLVrU2ifxtpw" annotatedElement="_Sim2JScoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2JycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2KCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2KScoEeSLVrU2ifxtpw" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_Sim2KicoEeSLVrU2ifxtpw" annotatedElement="_Sim2KScoEeSLVrU2ifxtpw">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2KycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim2LCcoEeSLVrU2ifxtpw" annotatedElement="_Sim2KycoEeSLVrU2ifxtpw">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2LScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2LicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2LycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2MCcoEeSLVrU2ifxtpw" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_Sim2MScoEeSLVrU2ifxtpw" annotatedElement="_Sim2MCcoEeSLVrU2ifxtpw">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2MicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim2MycoEeSLVrU2ifxtpw" annotatedElement="_Sim2MicoEeSLVrU2ifxtpw">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2NCcoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2NScoEeSLVrU2ifxtpw" name="replace" isAbstract="true">
        <ownedComment xmi:id="_Sim2NicoEeSLVrU2ifxtpw" annotatedElement="_Sim2NScoEeSLVrU2ifxtpw">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2NycoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim2OCcoEeSLVrU2ifxtpw" annotatedElement="_Sim2NycoEeSLVrU2ifxtpw">
            <body>Element to be replaced.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2OScoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_Sim2OicoEeSLVrU2ifxtpw" annotatedElement="_Sim2OScoEeSLVrU2ifxtpw">
            <body>Element to replace original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2OycoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2PCcoEeSLVrU2ifxtpw" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_Sim2PScoEeSLVrU2ifxtpw" annotatedElement="_Sim2PCcoEeSLVrU2ifxtpw">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2PicoEeSLVrU2ifxtpw" name="element" effect="create">
          <ownedComment xmi:id="_Sim2PycoEeSLVrU2ifxtpw" annotatedElement="_Sim2PicoEeSLVrU2ifxtpw">
            <body>Element to be replaced. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2QCcoEeSLVrU2ifxtpw" name="newElement" effect="create">
          <ownedComment xmi:id="_Sim2QScoEeSLVrU2ifxtpw" annotatedElement="_Sim2QCcoEeSLVrU2ifxtpw">
            <body>Element to replace the original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2QicoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2QycoEeSLVrU2ifxtpw" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_Sim2RCcoEeSLVrU2ifxtpw" annotatedElement="_Sim2QycoEeSLVrU2ifxtpw">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2RScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_Sim2RicoEeSLVrU2ifxtpw" annotatedElement="_Sim2RScoEeSLVrU2ifxtpw">
            <body>Elements to retain. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2RycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2SCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2SScoEeSLVrU2ifxtpw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2SicoEeSLVrU2ifxtpw" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim2SycoEeSLVrU2ifxtpw" annotatedElement="_Sim2SicoEeSLVrU2ifxtpw">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2TCcoEeSLVrU2ifxtpw" direction="return" effect="create">
          <ownedComment xmi:id="_Sim2TScoEeSLVrU2ifxtpw" annotatedElement="_Sim2TCcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim2TicoEeSLVrU2ifxtpw" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_Sim2TycoEeSLVrU2ifxtpw" annotatedElement="_Sim2TicoEeSLVrU2ifxtpw">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_Sim2UCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_Sim2UScoEeSLVrU2ifxtpw" annotatedElement="_Sim2UCcoEeSLVrU2ifxtpw"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2UicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2UycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim2VCcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Sim2VScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Sim2VicoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Sim2VycoEeSLVrU2ifxtpw" client="_Sim15icoEeSLVrU2ifxtpw" supplier="_Sim2VCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim2WCcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Sim2WScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Sim2WicoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Sim2WycoEeSLVrU2ifxtpw" client="_Sim1vycoEeSLVrU2ifxtpw" supplier="_Sim2WCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim2XCcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__">
      <generalization xmi:id="_Sim2XScoEeSLVrU2ifxtpw">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
      </generalization>
      <generalization xmi:id="_Sim2XicoEeSLVrU2ifxtpw" general="_Sim1vycoEeSLVrU2ifxtpw"/>
      <ownedAttribute xmi:id="_Sim2XycoEeSLVrU2ifxtpw" name="Set$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2YCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2YScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim2YicoEeSLVrU2ifxtpw" name="Set$method$1" specification="_Sim4_icoEeSLVrU2ifxtpw" node="_Sim2bCcoEeSLVrU2ifxtpw _Sim2bScoEeSLVrU2ifxtpw _Sim2bicoEeSLVrU2ifxtpw _Sim2bycoEeSLVrU2ifxtpw" group="_Sim2bycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim2YycoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2ZCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2ZScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2ZicoEeSLVrU2ifxtpw" name="" type="_Sim2XCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2ZycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2aCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2aScoEeSLVrU2ifxtpw" target="_Sim2bScoEeSLVrU2ifxtpw" source="_Sim2bCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2aicoEeSLVrU2ifxtpw" target="_Sim2bicoEeSLVrU2ifxtpw" source="_Sim2gScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2aycoEeSLVrU2ifxtpw" target="_Sim2hScoEeSLVrU2ifxtpw" source="_Sim2bScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim2bycoEeSLVrU2ifxtpw" name="Body(Set$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2cCcoEeSLVrU2ifxtpw" target="_Sim2gScoEeSLVrU2ifxtpw" source="_Sim2ficoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2cScoEeSLVrU2ifxtpw" target="_Sim2jCcoEeSLVrU2ifxtpw" source="_Sim2gScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim2cicoEeSLVrU2ifxtpw" target="_Sim2fCcoEeSLVrU2ifxtpw" source="_Sim2iycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim2cycoEeSLVrU2ifxtpw" target="_Sim2iycoEeSLVrU2ifxtpw" source="_Sim2gicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2dCcoEeSLVrU2ifxtpw" target="_Sim2kCcoEeSLVrU2ifxtpw" source="_Sim2gScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2dScoEeSLVrU2ifxtpw" target="_Sim2lycoEeSLVrU2ifxtpw" source="_Sim2kycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2dicoEeSLVrU2ifxtpw" target="_Sim2oycoEeSLVrU2ifxtpw" source="_Sim2micoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2dycoEeSLVrU2ifxtpw" target="_Sim2qScoEeSLVrU2ifxtpw" source="_Sim2nicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim2eCcoEeSLVrU2ifxtpw" target="_Sim2rScoEeSLVrU2ifxtpw" source="_Sim2rCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2eScoEeSLVrU2ifxtpw" target="_Sim2rScoEeSLVrU2ifxtpw" source="_Sim2picoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim2eicoEeSLVrU2ifxtpw" target="_Sim2gicoEeSLVrU2ifxtpw" source="_Sim2rScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim2eycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim2fCcoEeSLVrU2ifxtpw" name="Body" incoming="_Sim2cicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim2fScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_Sim2ficoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Sim2cCcoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2fycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2gCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim2gScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Sim2cCcoEeSLVrU2ifxtpw" outgoing="_Sim2aicoEeSLVrU2ifxtpw _Sim2cScoEeSLVrU2ifxtpw _Sim2dCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim2gicoEeSLVrU2ifxtpw" name="Super" incoming="_Sim2eicoEeSLVrU2ifxtpw" outgoing="_Sim2cycoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim2gycoEeSLVrU2ifxtpw" name="ExpressionStatement@35a93ff1">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim2hCcoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1)">
                <argument xmi:id="_Sim2hScoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1).argument(seq)" incoming="_Sim2aycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2hicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2hycoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_Sim2iCcoEeSLVrU2ifxtpw" name="Call(SetImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2iScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2iicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#SetImpl-SetImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_Sim2iycoEeSLVrU2ifxtpw" name="Call(Set$initialization$1)" incoming="_Sim2cycoEeSLVrU2ifxtpw" outgoing="_Sim2cicoEeSLVrU2ifxtpw" operation="_Sim4_ScoEeSLVrU2ifxtpw">
            <target xmi:id="_Sim2jCcoEeSLVrU2ifxtpw" name="Call(Set$initialization$1).target" incoming="_Sim2cScoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2jScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2jicoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sim2jycoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1)" structuralFeature="_Sim2XycoEeSLVrU2ifxtpw">
            <object xmi:id="_Sim2kCcoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).object" incoming="_Sim2dCcoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2kScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2kicoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_Sim2kycoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).result" outgoing="_Sim2dScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2lCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2lScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim2licoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_Sim2lycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Sim2dScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2mCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2mScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Sim2micoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Sim2dicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2mycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2nCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim2nScoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_Sim2nicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Sim2dycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2nycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2oCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Sim2oScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Sim2oicoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_Sim2oycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Sim2dicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2pCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2pScoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_Sim2picoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Sim2eScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2pycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2qCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_Sim2qScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Sim2dycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2qicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2qycoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Sim2rCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Sim2eCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Sim2rScoEeSLVrU2ifxtpw" name="Decision(Test(Set$initializationFlag$1))" incoming="_Sim2eCcoEeSLVrU2ifxtpw _Sim2eScoEeSLVrU2ifxtpw" outgoing="_Sim2eicoEeSLVrU2ifxtpw" decisionInputFlow="_Sim2eScoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim2bCcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Sim2aScoEeSLVrU2ifxtpw" parameter="_Sim2YycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim2bScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Sim2aScoEeSLVrU2ifxtpw" outgoing="_Sim2aycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim2bicoEeSLVrU2ifxtpw" name="Return" incoming="_Sim2aicoEeSLVrU2ifxtpw" parameter="_Sim2ZicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim2ricoEeSLVrU2ifxtpw" name="destroy$method$2" specification="_Sim5BScoEeSLVrU2ifxtpw" node="_Sim2rycoEeSLVrU2ifxtpw" group="_Sim2rycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_Sim2rycoEeSLVrU2ifxtpw" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim2sCcoEeSLVrU2ifxtpw" name="add$method$1" specification="_Sim5BicoEeSLVrU2ifxtpw" node="_Sim2uycoEeSLVrU2ifxtpw _Sim2vCcoEeSLVrU2ifxtpw _Sim2vScoEeSLVrU2ifxtpw _Sim2vicoEeSLVrU2ifxtpw _Sim2vycoEeSLVrU2ifxtpw" group="_Sim2vycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim2sScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2sicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2sycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim2tCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2tScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2ticoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2tycoEeSLVrU2ifxtpw" target="_Sim2vCcoEeSLVrU2ifxtpw" source="_Sim2uycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim2uCcoEeSLVrU2ifxtpw" target="_Sim2vicoEeSLVrU2ifxtpw" source="_Sim2wCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2uScoEeSLVrU2ifxtpw" target="_Sim2xicoEeSLVrU2ifxtpw" source="_Sim2vCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2uicoEeSLVrU2ifxtpw" target="_Sim2vScoEeSLVrU2ifxtpw" source="_Sim2wicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim2vycoEeSLVrU2ifxtpw" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim2wCcoEeSLVrU2ifxtpw" name="ReturnStatement@42845bde" outgoing="_Sim2uCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2wScoEeSLVrU2ifxtpw" target="_Sim2wicoEeSLVrU2ifxtpw" source="_Sim2yScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim2wicoEeSLVrU2ifxtpw" name="ReturnStatement@42845bde.output" incoming="_Sim2wScoEeSLVrU2ifxtpw" outgoing="_Sim2uicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2wycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2xCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim2xScoEeSLVrU2ifxtpw" name="Call(addImpl$method$1)">
              <argument xmi:id="_Sim2xicoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).argument(element)" incoming="_Sim2uScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2xycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2yCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sim2yScoEeSLVrU2ifxtpw" name="Call(addImpl$method$1).result()" outgoing="_Sim2wScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2yicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2yycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim2uycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Sim2tycoEeSLVrU2ifxtpw" parameter="_Sim2sScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim2vCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Sim2tycoEeSLVrU2ifxtpw" outgoing="_Sim2uScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim2vScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim2uicoEeSLVrU2ifxtpw" parameter="_Sim2tCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim2vicoEeSLVrU2ifxtpw" name="Final" incoming="_Sim2uCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim2zCcoEeSLVrU2ifxtpw" name="addAll$method$1" specification="_Sim5DScoEeSLVrU2ifxtpw" node="_Sim21ycoEeSLVrU2ifxtpw _Sim22CcoEeSLVrU2ifxtpw _Sim22ScoEeSLVrU2ifxtpw _Sim22icoEeSLVrU2ifxtpw _Sim22ycoEeSLVrU2ifxtpw" group="_Sim22ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim2zScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2zicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim2zycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim20CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim20ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim20icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim20ycoEeSLVrU2ifxtpw" target="_Sim22CcoEeSLVrU2ifxtpw" source="_Sim21ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim21CcoEeSLVrU2ifxtpw" target="_Sim22icoEeSLVrU2ifxtpw" source="_Sim23CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim21ScoEeSLVrU2ifxtpw" target="_Sim24icoEeSLVrU2ifxtpw" source="_Sim22CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim21icoEeSLVrU2ifxtpw" target="_Sim22ScoEeSLVrU2ifxtpw" source="_Sim23icoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim22ycoEeSLVrU2ifxtpw" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim23CcoEeSLVrU2ifxtpw" name="ReturnStatement@7170077" outgoing="_Sim21CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim23ScoEeSLVrU2ifxtpw" target="_Sim23icoEeSLVrU2ifxtpw" source="_Sim25ScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim23icoEeSLVrU2ifxtpw" name="ReturnStatement@7170077.output" incoming="_Sim23ScoEeSLVrU2ifxtpw" outgoing="_Sim21icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim23ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim24CcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim24ScoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_Sim24icoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).argument(seq)" incoming="_Sim21ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim24ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim25CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Sim25ScoEeSLVrU2ifxtpw" name="Call(addAllImpl$method$1).result()" outgoing="_Sim23ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim25icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim25ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim21ycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Sim20ycoEeSLVrU2ifxtpw" parameter="_Sim2zScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim22CcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Sim20ycoEeSLVrU2ifxtpw" outgoing="_Sim21ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim22ScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim21icoEeSLVrU2ifxtpw" parameter="_Sim20CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim22icoEeSLVrU2ifxtpw" name="Final" incoming="_Sim21CcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim26CcoEeSLVrU2ifxtpw" name="clear$method$1" specification="_Sim5FCcoEeSLVrU2ifxtpw" node="_Sim26ScoEeSLVrU2ifxtpw" group="_Sim26ScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_Sim26ScoEeSLVrU2ifxtpw" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim26icoEeSLVrU2ifxtpw" name="ExpressionStatement@44d737ca">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim26ycoEeSLVrU2ifxtpw" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim27CcoEeSLVrU2ifxtpw" name="count$method$1" specification="_Sim5FScoEeSLVrU2ifxtpw" node="_Sim29ycoEeSLVrU2ifxtpw _Sim2-CcoEeSLVrU2ifxtpw _Sim2-ScoEeSLVrU2ifxtpw _Sim2-icoEeSLVrU2ifxtpw _Sim2-ycoEeSLVrU2ifxtpw" group="_Sim2-ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim27ScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim27icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim27ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim28CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim28ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim28icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim28ycoEeSLVrU2ifxtpw" target="_Sim2-CcoEeSLVrU2ifxtpw" source="_Sim29ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim29CcoEeSLVrU2ifxtpw" target="_Sim2-icoEeSLVrU2ifxtpw" source="_Sim2_CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim29ScoEeSLVrU2ifxtpw" target="_Sim3AicoEeSLVrU2ifxtpw" source="_Sim2-CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim29icoEeSLVrU2ifxtpw" target="_Sim2-ScoEeSLVrU2ifxtpw" source="_Sim2_icoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim2-ycoEeSLVrU2ifxtpw" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim2_CcoEeSLVrU2ifxtpw" name="ReturnStatement@3751834b" outgoing="_Sim29CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim2_ScoEeSLVrU2ifxtpw" target="_Sim2_icoEeSLVrU2ifxtpw" source="_Sim3BScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim2_icoEeSLVrU2ifxtpw" name="ReturnStatement@3751834b.output" incoming="_Sim2_ScoEeSLVrU2ifxtpw" outgoing="_Sim29icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim2_ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3ACcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3AScoEeSLVrU2ifxtpw" name="Call(countImpl$method$1)">
              <argument xmi:id="_Sim3AicoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).argument(element)" incoming="_Sim29ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3AycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3BCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sim3BScoEeSLVrU2ifxtpw" name="Call(countImpl$method$1).result()" outgoing="_Sim2_ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3BicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3BycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim29ycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Sim28ycoEeSLVrU2ifxtpw" parameter="_Sim27ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim2-CcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Sim28ycoEeSLVrU2ifxtpw" outgoing="_Sim29ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim2-ScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim29icoEeSLVrU2ifxtpw" parameter="_Sim28CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim2-icoEeSLVrU2ifxtpw" name="Final" incoming="_Sim29CcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim3CCcoEeSLVrU2ifxtpw" name="equals$method$1" specification="_Sim5HCcoEeSLVrU2ifxtpw" node="_Sim3EycoEeSLVrU2ifxtpw _Sim3FCcoEeSLVrU2ifxtpw _Sim3FScoEeSLVrU2ifxtpw _Sim3FicoEeSLVrU2ifxtpw _Sim3FycoEeSLVrU2ifxtpw" group="_Sim3FycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim3CScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3CicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3CycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim3DCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3DScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3DicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3DycoEeSLVrU2ifxtpw" target="_Sim3FCcoEeSLVrU2ifxtpw" source="_Sim3EycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3ECcoEeSLVrU2ifxtpw" target="_Sim3FicoEeSLVrU2ifxtpw" source="_Sim3GCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3EScoEeSLVrU2ifxtpw" target="_Sim3HicoEeSLVrU2ifxtpw" source="_Sim3FCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3EicoEeSLVrU2ifxtpw" target="_Sim3FScoEeSLVrU2ifxtpw" source="_Sim3GicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3FycoEeSLVrU2ifxtpw" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim3GCcoEeSLVrU2ifxtpw" name="ReturnStatement@1d00c794" outgoing="_Sim3ECcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3GScoEeSLVrU2ifxtpw" target="_Sim3GicoEeSLVrU2ifxtpw" source="_Sim3IScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim3GicoEeSLVrU2ifxtpw" name="ReturnStatement@1d00c794.output" incoming="_Sim3GScoEeSLVrU2ifxtpw" outgoing="_Sim3EicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3GycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3HCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3HScoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_Sim3HicoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).argument(seq)" incoming="_Sim3EScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3HycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3ICcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Sim3IScoEeSLVrU2ifxtpw" name="Call(equalsImpl$method$1).result()" outgoing="_Sim3GScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3IicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3IycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3EycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Sim3DycoEeSLVrU2ifxtpw" parameter="_Sim3CScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim3FCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Sim3DycoEeSLVrU2ifxtpw" outgoing="_Sim3EScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3FScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3EicoEeSLVrU2ifxtpw" parameter="_Sim3DCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3FicoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3ECcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim3JCcoEeSLVrU2ifxtpw" name="excludes$method$1" specification="_Sim5IycoEeSLVrU2ifxtpw" node="_Sim3LycoEeSLVrU2ifxtpw _Sim3MCcoEeSLVrU2ifxtpw _Sim3MScoEeSLVrU2ifxtpw _Sim3MicoEeSLVrU2ifxtpw _Sim3MycoEeSLVrU2ifxtpw" group="_Sim3MycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim3JScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3JicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3JycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim3KCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3KScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3KicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3KycoEeSLVrU2ifxtpw" target="_Sim3MCcoEeSLVrU2ifxtpw" source="_Sim3LycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3LCcoEeSLVrU2ifxtpw" target="_Sim3MicoEeSLVrU2ifxtpw" source="_Sim3NCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3LScoEeSLVrU2ifxtpw" target="_Sim3OicoEeSLVrU2ifxtpw" source="_Sim3MCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3LicoEeSLVrU2ifxtpw" target="_Sim3MScoEeSLVrU2ifxtpw" source="_Sim3NicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3MycoEeSLVrU2ifxtpw" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim3NCcoEeSLVrU2ifxtpw" name="ReturnStatement@1332fa84" outgoing="_Sim3LCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3NScoEeSLVrU2ifxtpw" target="_Sim3NicoEeSLVrU2ifxtpw" source="_Sim3PScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim3NicoEeSLVrU2ifxtpw" name="ReturnStatement@1332fa84.output" incoming="_Sim3NScoEeSLVrU2ifxtpw" outgoing="_Sim3LicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3NycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3OCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3OScoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_Sim3OicoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).argument(element)" incoming="_Sim3LScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3OycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3PCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sim3PScoEeSLVrU2ifxtpw" name="Call(excludesImpl$method$1).result()" outgoing="_Sim3NScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3PicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3PycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3LycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Sim3KycoEeSLVrU2ifxtpw" parameter="_Sim3JScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim3MCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Sim3KycoEeSLVrU2ifxtpw" outgoing="_Sim3LScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3MScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3LicoEeSLVrU2ifxtpw" parameter="_Sim3KCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3MicoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3LCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim3QCcoEeSLVrU2ifxtpw" name="excludesAll$method$1" specification="_Sim5KicoEeSLVrU2ifxtpw" node="_Sim3SycoEeSLVrU2ifxtpw _Sim3TCcoEeSLVrU2ifxtpw _Sim3TScoEeSLVrU2ifxtpw _Sim3TicoEeSLVrU2ifxtpw _Sim3TycoEeSLVrU2ifxtpw" group="_Sim3TycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim3QScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3QicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3QycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim3RCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3RScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3RicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3RycoEeSLVrU2ifxtpw" target="_Sim3TCcoEeSLVrU2ifxtpw" source="_Sim3SycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3SCcoEeSLVrU2ifxtpw" target="_Sim3TicoEeSLVrU2ifxtpw" source="_Sim3UCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3SScoEeSLVrU2ifxtpw" target="_Sim3VicoEeSLVrU2ifxtpw" source="_Sim3TCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3SicoEeSLVrU2ifxtpw" target="_Sim3TScoEeSLVrU2ifxtpw" source="_Sim3UicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3TycoEeSLVrU2ifxtpw" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim3UCcoEeSLVrU2ifxtpw" name="ReturnStatement@5213fce3" outgoing="_Sim3SCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3UScoEeSLVrU2ifxtpw" target="_Sim3UicoEeSLVrU2ifxtpw" source="_Sim3WScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim3UicoEeSLVrU2ifxtpw" name="ReturnStatement@5213fce3.output" incoming="_Sim3UScoEeSLVrU2ifxtpw" outgoing="_Sim3SicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3UycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3VCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3VScoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_Sim3VicoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_Sim3SScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3VycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3WCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Sim3WScoEeSLVrU2ifxtpw" name="Call(excludesAllImpl$method$1).result()" outgoing="_Sim3UScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3WicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3WycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3SycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Sim3RycoEeSLVrU2ifxtpw" parameter="_Sim3QScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim3TCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Sim3RycoEeSLVrU2ifxtpw" outgoing="_Sim3SScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3TScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3SicoEeSLVrU2ifxtpw" parameter="_Sim3RCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3TicoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3SCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim3XCcoEeSLVrU2ifxtpw" name="includes$method$1" specification="_Sim5MScoEeSLVrU2ifxtpw" node="_Sim3ZycoEeSLVrU2ifxtpw _Sim3aCcoEeSLVrU2ifxtpw _Sim3aScoEeSLVrU2ifxtpw _Sim3aicoEeSLVrU2ifxtpw _Sim3aycoEeSLVrU2ifxtpw" group="_Sim3aycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim3XScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3XicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3XycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim3YCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3YScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3YicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3YycoEeSLVrU2ifxtpw" target="_Sim3aCcoEeSLVrU2ifxtpw" source="_Sim3ZycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3ZCcoEeSLVrU2ifxtpw" target="_Sim3aicoEeSLVrU2ifxtpw" source="_Sim3bCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3ZScoEeSLVrU2ifxtpw" target="_Sim3cicoEeSLVrU2ifxtpw" source="_Sim3aCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3ZicoEeSLVrU2ifxtpw" target="_Sim3aScoEeSLVrU2ifxtpw" source="_Sim3bicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3aycoEeSLVrU2ifxtpw" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim3bCcoEeSLVrU2ifxtpw" name="ReturnStatement@512327c" outgoing="_Sim3ZCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3bScoEeSLVrU2ifxtpw" target="_Sim3bicoEeSLVrU2ifxtpw" source="_Sim3dScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim3bicoEeSLVrU2ifxtpw" name="ReturnStatement@512327c.output" incoming="_Sim3bScoEeSLVrU2ifxtpw" outgoing="_Sim3ZicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3bycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3cCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3cScoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1)">
              <argument xmi:id="_Sim3cicoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).argument(element)" incoming="_Sim3ZScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3cycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3dCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sim3dScoEeSLVrU2ifxtpw" name="Call(includesImpl$method$1).result()" outgoing="_Sim3bScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3dicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3dycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3ZycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Sim3YycoEeSLVrU2ifxtpw" parameter="_Sim3XScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim3aCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Sim3YycoEeSLVrU2ifxtpw" outgoing="_Sim3ZScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3aScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3ZicoEeSLVrU2ifxtpw" parameter="_Sim3YCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3aicoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3ZCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim3eCcoEeSLVrU2ifxtpw" name="includesAll$method$1" specification="_Sim5OCcoEeSLVrU2ifxtpw" node="_Sim3gycoEeSLVrU2ifxtpw _Sim3hCcoEeSLVrU2ifxtpw _Sim3hScoEeSLVrU2ifxtpw _Sim3hicoEeSLVrU2ifxtpw _Sim3hycoEeSLVrU2ifxtpw" group="_Sim3hycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim3eScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3eicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3eycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim3fCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3fScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3ficoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3fycoEeSLVrU2ifxtpw" target="_Sim3hCcoEeSLVrU2ifxtpw" source="_Sim3gycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3gCcoEeSLVrU2ifxtpw" target="_Sim3hicoEeSLVrU2ifxtpw" source="_Sim3iCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3gScoEeSLVrU2ifxtpw" target="_Sim3jicoEeSLVrU2ifxtpw" source="_Sim3hCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3gicoEeSLVrU2ifxtpw" target="_Sim3hScoEeSLVrU2ifxtpw" source="_Sim3iicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3hycoEeSLVrU2ifxtpw" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim3iCcoEeSLVrU2ifxtpw" name="ReturnStatement@2720d4a3" outgoing="_Sim3gCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3iScoEeSLVrU2ifxtpw" target="_Sim3iicoEeSLVrU2ifxtpw" source="_Sim3kScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim3iicoEeSLVrU2ifxtpw" name="ReturnStatement@2720d4a3.output" incoming="_Sim3iScoEeSLVrU2ifxtpw" outgoing="_Sim3gicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3iycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3jCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3jScoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_Sim3jicoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_Sim3gScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3jycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3kCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Sim3kScoEeSLVrU2ifxtpw" name="Call(includesAllImpl$method$1).result()" outgoing="_Sim3iScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3kicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3kycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3gycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Sim3fycoEeSLVrU2ifxtpw" parameter="_Sim3eScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim3hCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Sim3fycoEeSLVrU2ifxtpw" outgoing="_Sim3gScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3hScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3gicoEeSLVrU2ifxtpw" parameter="_Sim3fCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3hicoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3gCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim3lCcoEeSLVrU2ifxtpw" name="isEmpty$method$1" specification="_Sim5PycoEeSLVrU2ifxtpw" node="_Sim3micoEeSLVrU2ifxtpw _Sim3mycoEeSLVrU2ifxtpw _Sim3nCcoEeSLVrU2ifxtpw" group="_Sim3nCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim3lScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3licoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3lycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3mCcoEeSLVrU2ifxtpw" target="_Sim3mycoEeSLVrU2ifxtpw" source="_Sim3nScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3mScoEeSLVrU2ifxtpw" target="_Sim3micoEeSLVrU2ifxtpw" source="_Sim3nycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3nCcoEeSLVrU2ifxtpw" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim3nScoEeSLVrU2ifxtpw" name="ReturnStatement@3fec9e59" outgoing="_Sim3mCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3nicoEeSLVrU2ifxtpw" target="_Sim3nycoEeSLVrU2ifxtpw" source="_Sim3oycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim3nycoEeSLVrU2ifxtpw" name="ReturnStatement@3fec9e59.output" incoming="_Sim3nicoEeSLVrU2ifxtpw" outgoing="_Sim3mScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3oCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3oScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3oicoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_Sim3oycoEeSLVrU2ifxtpw" name="Call(isEmptyImpl$method$1).result()" outgoing="_Sim3nicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3pCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3pScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3micoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3mScoEeSLVrU2ifxtpw" parameter="_Sim3lScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3mycoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3mCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim3picoEeSLVrU2ifxtpw" name="notEmpty$method$1" specification="_Sim5QycoEeSLVrU2ifxtpw" node="_Sim3rCcoEeSLVrU2ifxtpw _Sim3rScoEeSLVrU2ifxtpw _Sim3ricoEeSLVrU2ifxtpw" group="_Sim3ricoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim3pycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3qCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3qScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3qicoEeSLVrU2ifxtpw" target="_Sim3rScoEeSLVrU2ifxtpw" source="_Sim3rycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3qycoEeSLVrU2ifxtpw" target="_Sim3rCcoEeSLVrU2ifxtpw" source="_Sim3sScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3ricoEeSLVrU2ifxtpw" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim3rycoEeSLVrU2ifxtpw" name="ReturnStatement@e1baffa" outgoing="_Sim3qicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3sCcoEeSLVrU2ifxtpw" target="_Sim3sScoEeSLVrU2ifxtpw" source="_Sim3tScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim3sScoEeSLVrU2ifxtpw" name="ReturnStatement@e1baffa.output" incoming="_Sim3sCcoEeSLVrU2ifxtpw" outgoing="_Sim3qycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3sicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3sycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3tCcoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_Sim3tScoEeSLVrU2ifxtpw" name="Call(notEmptyImpl$method$1).result()" outgoing="_Sim3sCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3ticoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3tycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3rCcoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3qycoEeSLVrU2ifxtpw" parameter="_Sim3pycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3rScoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3qicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim3uCcoEeSLVrU2ifxtpw" name="remove$method$1" specification="_Sim5RycoEeSLVrU2ifxtpw" node="_Sim3wycoEeSLVrU2ifxtpw _Sim3xCcoEeSLVrU2ifxtpw _Sim3xScoEeSLVrU2ifxtpw _Sim3xicoEeSLVrU2ifxtpw _Sim3xycoEeSLVrU2ifxtpw" group="_Sim3xycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim3uScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3uicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3uycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim3vCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3vScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3vicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3vycoEeSLVrU2ifxtpw" target="_Sim3xCcoEeSLVrU2ifxtpw" source="_Sim3wycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3wCcoEeSLVrU2ifxtpw" target="_Sim3xicoEeSLVrU2ifxtpw" source="_Sim3yCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3wScoEeSLVrU2ifxtpw" target="_Sim3zicoEeSLVrU2ifxtpw" source="_Sim3xCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3wicoEeSLVrU2ifxtpw" target="_Sim3xScoEeSLVrU2ifxtpw" source="_Sim3yicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3xycoEeSLVrU2ifxtpw" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim3yCcoEeSLVrU2ifxtpw" name="ReturnStatement@49f115cc" outgoing="_Sim3wCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3yScoEeSLVrU2ifxtpw" target="_Sim3yicoEeSLVrU2ifxtpw" source="_Sim30ScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim3yicoEeSLVrU2ifxtpw" name="ReturnStatement@49f115cc.output" incoming="_Sim3yScoEeSLVrU2ifxtpw" outgoing="_Sim3wicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3yycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim3zCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim3zScoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1)">
              <argument xmi:id="_Sim3zicoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).argument(element)" incoming="_Sim3wScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim3zycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim30CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sim30ScoEeSLVrU2ifxtpw" name="Call(removeImpl$method$1).result()" outgoing="_Sim3yScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim30icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim30ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3wycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Sim3vycoEeSLVrU2ifxtpw" parameter="_Sim3uScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim3xCcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Sim3vycoEeSLVrU2ifxtpw" outgoing="_Sim3wScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3xScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3wicoEeSLVrU2ifxtpw" parameter="_Sim3vCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3xicoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3wCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim31CcoEeSLVrU2ifxtpw" name="removeAll$method$1" specification="_Sim5TicoEeSLVrU2ifxtpw" node="_Sim33ycoEeSLVrU2ifxtpw _Sim34CcoEeSLVrU2ifxtpw _Sim34ScoEeSLVrU2ifxtpw _Sim34icoEeSLVrU2ifxtpw _Sim34ycoEeSLVrU2ifxtpw" group="_Sim34ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim31ScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim31icoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim31ycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim32CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim32ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim32icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim32ycoEeSLVrU2ifxtpw" target="_Sim34CcoEeSLVrU2ifxtpw" source="_Sim33ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim33CcoEeSLVrU2ifxtpw" target="_Sim34icoEeSLVrU2ifxtpw" source="_Sim35CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim33ScoEeSLVrU2ifxtpw" target="_Sim36icoEeSLVrU2ifxtpw" source="_Sim34CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim33icoEeSLVrU2ifxtpw" target="_Sim34ScoEeSLVrU2ifxtpw" source="_Sim35icoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim34ycoEeSLVrU2ifxtpw" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim35CcoEeSLVrU2ifxtpw" name="ReturnStatement@7e6b961c" outgoing="_Sim33CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim35ScoEeSLVrU2ifxtpw" target="_Sim35icoEeSLVrU2ifxtpw" source="_Sim37ScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim35icoEeSLVrU2ifxtpw" name="ReturnStatement@7e6b961c.output" incoming="_Sim35ScoEeSLVrU2ifxtpw" outgoing="_Sim33icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim35ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim36CcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim36ScoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_Sim36icoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_Sim33ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim36ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim37CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Sim37ScoEeSLVrU2ifxtpw" name="Call(removeAllImpl$method$1).result()" outgoing="_Sim35ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim37icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim37ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim33ycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Sim32ycoEeSLVrU2ifxtpw" parameter="_Sim31ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim34CcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Sim32ycoEeSLVrU2ifxtpw" outgoing="_Sim33ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim34ScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim33icoEeSLVrU2ifxtpw" parameter="_Sim32CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim34icoEeSLVrU2ifxtpw" name="Final" incoming="_Sim33CcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim38CcoEeSLVrU2ifxtpw" name="removeOne$method$1" specification="_Sim5VScoEeSLVrU2ifxtpw" node="_Sim3-ycoEeSLVrU2ifxtpw _Sim3_CcoEeSLVrU2ifxtpw _Sim3_ScoEeSLVrU2ifxtpw _Sim3_icoEeSLVrU2ifxtpw _Sim3_ycoEeSLVrU2ifxtpw" group="_Sim3_ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim38ScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim38icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim38ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim39CcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim39ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim39icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim39ycoEeSLVrU2ifxtpw" target="_Sim3_CcoEeSLVrU2ifxtpw" source="_Sim3-ycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim3-CcoEeSLVrU2ifxtpw" target="_Sim3_icoEeSLVrU2ifxtpw" source="_Sim4ACcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3-ScoEeSLVrU2ifxtpw" target="_Sim4BicoEeSLVrU2ifxtpw" source="_Sim3_CcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim3-icoEeSLVrU2ifxtpw" target="_Sim3_ScoEeSLVrU2ifxtpw" source="_Sim4AicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim3_ycoEeSLVrU2ifxtpw" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4ACcoEeSLVrU2ifxtpw" name="ReturnStatement@55167e58" outgoing="_Sim3-CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4AScoEeSLVrU2ifxtpw" target="_Sim4AicoEeSLVrU2ifxtpw" source="_Sim4CScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim4AicoEeSLVrU2ifxtpw" name="ReturnStatement@55167e58.output" incoming="_Sim4AScoEeSLVrU2ifxtpw" outgoing="_Sim3-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4AycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4BCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim4BScoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_Sim4BicoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).argument(element)" incoming="_Sim3-ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4BycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4CCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sim4CScoEeSLVrU2ifxtpw" name="Call(removeOneImpl$method$1).result()" outgoing="_Sim4AScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4CicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4CycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3-ycoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Sim39ycoEeSLVrU2ifxtpw" parameter="_Sim38ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim3_CcoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Sim39ycoEeSLVrU2ifxtpw" outgoing="_Sim3-ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim3_ScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim3-icoEeSLVrU2ifxtpw" parameter="_Sim39CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim3_icoEeSLVrU2ifxtpw" name="Final" incoming="_Sim3-CcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim4DCcoEeSLVrU2ifxtpw" name="replace$method$1" specification="_Sim5XCcoEeSLVrU2ifxtpw" node="_Sim4HCcoEeSLVrU2ifxtpw _Sim4HScoEeSLVrU2ifxtpw _Sim4HicoEeSLVrU2ifxtpw _Sim4HycoEeSLVrU2ifxtpw _Sim4ICcoEeSLVrU2ifxtpw _Sim4IScoEeSLVrU2ifxtpw _Sim4IicoEeSLVrU2ifxtpw" group="_Sim4IicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim4DScoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4DicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4DycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim4ECcoEeSLVrU2ifxtpw" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4EScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4EicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim4EycoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4FCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4FScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4FicoEeSLVrU2ifxtpw" target="_Sim4HScoEeSLVrU2ifxtpw" source="_Sim4HCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4FycoEeSLVrU2ifxtpw" target="_Sim4HycoEeSLVrU2ifxtpw" source="_Sim4HicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4GCcoEeSLVrU2ifxtpw" target="_Sim4IScoEeSLVrU2ifxtpw" source="_Sim4IycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4GScoEeSLVrU2ifxtpw" target="_Sim4KScoEeSLVrU2ifxtpw" source="_Sim4HScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4GicoEeSLVrU2ifxtpw" target="_Sim4LCcoEeSLVrU2ifxtpw" source="_Sim4HycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4GycoEeSLVrU2ifxtpw" target="_Sim4ICcoEeSLVrU2ifxtpw" source="_Sim4JScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim4IicoEeSLVrU2ifxtpw" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4IycoEeSLVrU2ifxtpw" name="ReturnStatement@3bda6b61" outgoing="_Sim4GCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4JCcoEeSLVrU2ifxtpw" target="_Sim4JScoEeSLVrU2ifxtpw" source="_Sim4LycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim4JScoEeSLVrU2ifxtpw" name="ReturnStatement@3bda6b61.output" incoming="_Sim4JCcoEeSLVrU2ifxtpw" outgoing="_Sim4GycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4JicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4JycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim4KCcoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_Sim4KScoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(element)" incoming="_Sim4GScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4KicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4KycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Sim4LCcoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_Sim4GicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4LScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4LicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sim4LycoEeSLVrU2ifxtpw" name="Call(replaceImpl$method$1).result()" outgoing="_Sim4JCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4MCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4MScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4HCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Sim4FicoEeSLVrU2ifxtpw" parameter="_Sim4DScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim4HScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Sim4FicoEeSLVrU2ifxtpw" outgoing="_Sim4GScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4HicoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_Sim4FycoEeSLVrU2ifxtpw" parameter="_Sim4ECcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim4HycoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_Sim4FycoEeSLVrU2ifxtpw" outgoing="_Sim4GicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4ICcoEeSLVrU2ifxtpw" name="Return" incoming="_Sim4GycoEeSLVrU2ifxtpw" parameter="_Sim4EycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim4IScoEeSLVrU2ifxtpw" name="Final" incoming="_Sim4GCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim4MicoEeSLVrU2ifxtpw" name="replaceOne$method$1" specification="_Sim5ZicoEeSLVrU2ifxtpw" node="_Sim4QicoEeSLVrU2ifxtpw _Sim4QycoEeSLVrU2ifxtpw _Sim4RCcoEeSLVrU2ifxtpw _Sim4RScoEeSLVrU2ifxtpw _Sim4RicoEeSLVrU2ifxtpw _Sim4RycoEeSLVrU2ifxtpw _Sim4SCcoEeSLVrU2ifxtpw" group="_Sim4SCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim4MycoEeSLVrU2ifxtpw" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4NCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4NScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim4NicoEeSLVrU2ifxtpw" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4NycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4OCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim4OScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4OicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4OycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4PCcoEeSLVrU2ifxtpw" target="_Sim4QycoEeSLVrU2ifxtpw" source="_Sim4QicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4PScoEeSLVrU2ifxtpw" target="_Sim4RScoEeSLVrU2ifxtpw" source="_Sim4RCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4PicoEeSLVrU2ifxtpw" target="_Sim4RycoEeSLVrU2ifxtpw" source="_Sim4SScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4PycoEeSLVrU2ifxtpw" target="_Sim4TycoEeSLVrU2ifxtpw" source="_Sim4QycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4QCcoEeSLVrU2ifxtpw" target="_Sim4UicoEeSLVrU2ifxtpw" source="_Sim4RScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4QScoEeSLVrU2ifxtpw" target="_Sim4RicoEeSLVrU2ifxtpw" source="_Sim4SycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim4SCcoEeSLVrU2ifxtpw" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4SScoEeSLVrU2ifxtpw" name="ReturnStatement@228d3cb6" outgoing="_Sim4PicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4SicoEeSLVrU2ifxtpw" target="_Sim4SycoEeSLVrU2ifxtpw" source="_Sim4VScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim4SycoEeSLVrU2ifxtpw" name="ReturnStatement@228d3cb6.output" incoming="_Sim4SicoEeSLVrU2ifxtpw" outgoing="_Sim4QScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4TCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4TScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim4TicoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_Sim4TycoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_Sim4PycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4UCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4UScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_Sim4UicoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_Sim4QCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4UycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4VCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sim4VScoEeSLVrU2ifxtpw" name="Call(replaceOneImpl$method$1).result()" outgoing="_Sim4SicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4VicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4VycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4QicoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_Sim4PCcoEeSLVrU2ifxtpw" parameter="_Sim4MycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim4QycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_Sim4PCcoEeSLVrU2ifxtpw" outgoing="_Sim4PycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4RCcoEeSLVrU2ifxtpw" name="Input(newElement)" outgoing="_Sim4PScoEeSLVrU2ifxtpw" parameter="_Sim4NicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim4RScoEeSLVrU2ifxtpw" name="Fork(newElement)" incoming="_Sim4PScoEeSLVrU2ifxtpw" outgoing="_Sim4QCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4RicoEeSLVrU2ifxtpw" name="Return" incoming="_Sim4QScoEeSLVrU2ifxtpw" parameter="_Sim4OScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim4RycoEeSLVrU2ifxtpw" name="Final" incoming="_Sim4PicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim4WCcoEeSLVrU2ifxtpw" name="retainAll$method$1" specification="_Sim5cCcoEeSLVrU2ifxtpw" node="_Sim4YycoEeSLVrU2ifxtpw _Sim4ZCcoEeSLVrU2ifxtpw _Sim4ZScoEeSLVrU2ifxtpw _Sim4ZicoEeSLVrU2ifxtpw _Sim4ZycoEeSLVrU2ifxtpw" group="_Sim4ZycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim4WScoEeSLVrU2ifxtpw" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4WicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4WycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim4XCcoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4XScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4XicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4XycoEeSLVrU2ifxtpw" target="_Sim4ZCcoEeSLVrU2ifxtpw" source="_Sim4YycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4YCcoEeSLVrU2ifxtpw" target="_Sim4ZicoEeSLVrU2ifxtpw" source="_Sim4aCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4YScoEeSLVrU2ifxtpw" target="_Sim4bicoEeSLVrU2ifxtpw" source="_Sim4ZCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4YicoEeSLVrU2ifxtpw" target="_Sim4ZScoEeSLVrU2ifxtpw" source="_Sim4aicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim4ZycoEeSLVrU2ifxtpw" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4aCcoEeSLVrU2ifxtpw" name="ReturnStatement@c266fa0" outgoing="_Sim4YCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4aScoEeSLVrU2ifxtpw" target="_Sim4aicoEeSLVrU2ifxtpw" source="_Sim4cScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim4aicoEeSLVrU2ifxtpw" name="ReturnStatement@c266fa0.output" incoming="_Sim4aScoEeSLVrU2ifxtpw" outgoing="_Sim4YicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4aycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4bCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim4bScoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_Sim4bicoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_Sim4YScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4bycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4cCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_Sim4cScoEeSLVrU2ifxtpw" name="Call(retainAllImpl$method$1).result()" outgoing="_Sim4aScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4cicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4cycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4YycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_Sim4XycoEeSLVrU2ifxtpw" parameter="_Sim4WScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim4ZCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_Sim4XycoEeSLVrU2ifxtpw" outgoing="_Sim4YScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4ZScoEeSLVrU2ifxtpw" name="Return" incoming="_Sim4YicoEeSLVrU2ifxtpw" parameter="_Sim4XCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim4ZicoEeSLVrU2ifxtpw" name="Final" incoming="_Sim4YCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim4dCcoEeSLVrU2ifxtpw" name="size$method$1" specification="_Sim5dycoEeSLVrU2ifxtpw" node="_Sim4eicoEeSLVrU2ifxtpw _Sim4eycoEeSLVrU2ifxtpw _Sim4fCcoEeSLVrU2ifxtpw" group="_Sim4fCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim4dScoEeSLVrU2ifxtpw" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4dicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4dycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4eCcoEeSLVrU2ifxtpw" target="_Sim4eycoEeSLVrU2ifxtpw" source="_Sim4fScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4eScoEeSLVrU2ifxtpw" target="_Sim4eicoEeSLVrU2ifxtpw" source="_Sim4fycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim4fCcoEeSLVrU2ifxtpw" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4fScoEeSLVrU2ifxtpw" name="ReturnStatement@727cfb78" outgoing="_Sim4eCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4ficoEeSLVrU2ifxtpw" target="_Sim4fycoEeSLVrU2ifxtpw" source="_Sim4gycoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim4fycoEeSLVrU2ifxtpw" name="ReturnStatement@727cfb78.output" incoming="_Sim4ficoEeSLVrU2ifxtpw" outgoing="_Sim4eScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4gCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4gScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim4gicoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1)">
              <result xmi:id="_Sim4gycoEeSLVrU2ifxtpw" name="Call(sizeImpl$method$1).result()" outgoing="_Sim4ficoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4hCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4hScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4eicoEeSLVrU2ifxtpw" name="Return" incoming="_Sim4eScoEeSLVrU2ifxtpw" parameter="_Sim4dScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim4eycoEeSLVrU2ifxtpw" name="Final" incoming="_Sim4eCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim4hicoEeSLVrU2ifxtpw" name="toSequence$method$1" specification="_Sim5eycoEeSLVrU2ifxtpw" node="_Sim4jCcoEeSLVrU2ifxtpw _Sim4jScoEeSLVrU2ifxtpw _Sim4jicoEeSLVrU2ifxtpw" group="_Sim4jicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim4hycoEeSLVrU2ifxtpw" name="" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4iCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4iScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4iicoEeSLVrU2ifxtpw" target="_Sim4jScoEeSLVrU2ifxtpw" source="_Sim4jycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4iycoEeSLVrU2ifxtpw" target="_Sim4jCcoEeSLVrU2ifxtpw" source="_Sim4kycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_Sim4jicoEeSLVrU2ifxtpw" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4jycoEeSLVrU2ifxtpw" name="ReturnStatement@6ad042d7" outgoing="_Sim4iicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4kCcoEeSLVrU2ifxtpw" target="_Sim4micoEeSLVrU2ifxtpw" source="_Sim4nicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4kScoEeSLVrU2ifxtpw" target="_Sim4sycoEeSLVrU2ifxtpw" source="_Sim4lycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4kicoEeSLVrU2ifxtpw" target="_Sim4kycoEeSLVrU2ifxtpw" source="_Sim4tCcoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_Sim4kycoEeSLVrU2ifxtpw" name="ReturnStatement@6ad042d7.output" incoming="_Sim4kicoEeSLVrU2ifxtpw" outgoing="_Sim4iycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4lCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4lScoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Sim4licoEeSLVrU2ifxtpw" name="Call(getContent)">
              <result xmi:id="_Sim4lycoEeSLVrU2ifxtpw" name="Call(getContent).result()" outgoing="_Sim4kScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4mCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4mScoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <operation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-getContent"/>
              <target xmi:id="_Sim4micoEeSLVrU2ifxtpw" name="Call(getContent).target" incoming="_Sim4kCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4mycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4nCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim4nScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_Sim4nicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Sim4kCcoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4nycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4oCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_Sim4oScoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5" mode="parallel" outputElement="_Sim4tCcoEeSLVrU2ifxtpw" inputElement="_Sim4sycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4oicoEeSLVrU2ifxtpw" target="_Sim4qycoEeSLVrU2ifxtpw" source="_Sim4sScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4oycoEeSLVrU2ifxtpw" target="_Sim4sicoEeSLVrU2ifxtpw" source="_Sim4sScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4pCcoEeSLVrU2ifxtpw" target="_Sim4sicoEeSLVrU2ifxtpw" source="_Sim4ricoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4pScoEeSLVrU2ifxtpw" target="_Sim4qScoEeSLVrU2ifxtpw" source="_Sim4sicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim4picoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4pycoEeSLVrU2ifxtpw" target="_Sim4sScoEeSLVrU2ifxtpw" source="_Sim4sycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4qCcoEeSLVrU2ifxtpw" target="_Sim4tCcoEeSLVrU2ifxtpw" source="_Sim4qScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_Sim4qScoEeSLVrU2ifxtpw" name="Merge(CastExpression@593fa6c5.operand)" incoming="_Sim4pScoEeSLVrU2ifxtpw" outgoing="_Sim4qCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sim4qicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <object xmi:id="_Sim4qycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_Sim4oicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4rCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4rScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Sim4ricoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_Sim4pCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4rycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4sCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim4sScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_Sim4pycoEeSLVrU2ifxtpw" outgoing="_Sim4oicoEeSLVrU2ifxtpw _Sim4oycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_Sim4sicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_Sim4oycoEeSLVrU2ifxtpw _Sim4pCcoEeSLVrU2ifxtpw" outgoing="_Sim4pScoEeSLVrU2ifxtpw" decisionInputFlow="_Sim4pCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_Sim4sycoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5.inputElement" incoming="_Sim4kScoEeSLVrU2ifxtpw" outgoing="_Sim4pycoEeSLVrU2ifxtpw" regionAsInput="_Sim4oScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_Sim4tCcoEeSLVrU2ifxtpw" name="CastExpression@593fa6c5.outputElement" incoming="_Sim4qCcoEeSLVrU2ifxtpw" outgoing="_Sim4kicoEeSLVrU2ifxtpw" regionAsOutput="_Sim4oScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4jCcoEeSLVrU2ifxtpw" name="Return" incoming="_Sim4iycoEeSLVrU2ifxtpw" parameter="_Sim4hycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Sim4jScoEeSLVrU2ifxtpw" name="Final" incoming="_Sim4iicoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim4tScoEeSLVrU2ifxtpw" name="Set$initialization$1" specification="_Sim4_ScoEeSLVrU2ifxtpw" node="_Sim4ticoEeSLVrU2ifxtpw" group="_Sim4ticoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_Sim4ticoEeSLVrU2ifxtpw" name="Body(Set$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4tycoEeSLVrU2ifxtpw" target="_Sim4xicoEeSLVrU2ifxtpw" source="_Sim4wycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4uCcoEeSLVrU2ifxtpw" target="_Sim4yicoEeSLVrU2ifxtpw" source="_Sim4xicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4uScoEeSLVrU2ifxtpw" target="_Sim41ScoEeSLVrU2ifxtpw" source="_Sim4xicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4uicoEeSLVrU2ifxtpw" target="_Sim43ycoEeSLVrU2ifxtpw" source="_Sim4xicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4uycoEeSLVrU2ifxtpw" target="_Sim45icoEeSLVrU2ifxtpw" source="_Sim44icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4vCcoEeSLVrU2ifxtpw" target="_Sim48icoEeSLVrU2ifxtpw" source="_Sim46ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4vScoEeSLVrU2ifxtpw" target="_Sim4-CcoEeSLVrU2ifxtpw" source="_Sim47ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4vicoEeSLVrU2ifxtpw" target="_Sim4_CcoEeSLVrU2ifxtpw" source="_Sim4-ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4vycoEeSLVrU2ifxtpw" target="_Sim4_CcoEeSLVrU2ifxtpw" source="_Sim49ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4wCcoEeSLVrU2ifxtpw" target="_Sim4xycoEeSLVrU2ifxtpw" source="_Sim4_CcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim4wScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim4wicoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_Sim4wycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_Sim4tycoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4xCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4xScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim4xicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_Sim4tycoEeSLVrU2ifxtpw" outgoing="_Sim4uCcoEeSLVrU2ifxtpw _Sim4uScoEeSLVrU2ifxtpw _Sim4uicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4xycoEeSLVrU2ifxtpw" name="Initialization" incoming="_Sim4wCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4yCcoEeSLVrU2ifxtpw" target="_Sim4zScoEeSLVrU2ifxtpw" source="_Sim4yScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Sim4yScoEeSLVrU2ifxtpw" name="Call(SetImpl$initialization$1)" outgoing="_Sim4yCcoEeSLVrU2ifxtpw">
              <operation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-SetImplinitialization1.1"/>
              <target xmi:id="_Sim4yicoEeSLVrU2ifxtpw" name="Call(SetImpl$initialization$1).target" incoming="_Sim4uCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4yycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4zCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4zScoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_Sim4yCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4zicoEeSLVrU2ifxtpw" target="_Sim42ycoEeSLVrU2ifxtpw" source="_Sim40CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim4zycoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_Sim40CcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_Sim4zicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim40ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim40icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Sim40ycoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim41CcoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1)" structuralFeature="_Sim2XycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_Sim41ScoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).object" incoming="_Sim4uScoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim41icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim41ycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_Sim42CcoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).result" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim42ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim42icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_Sim42ycoEeSLVrU2ifxtpw" name="Write(Set$initializationFlag$1).value" incoming="_Sim4zicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim43CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim43ScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sim43icoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1)" structuralFeature="_Sim2XycoEeSLVrU2ifxtpw">
            <object xmi:id="_Sim43ycoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).object" incoming="_Sim4uicoEeSLVrU2ifxtpw" type="_Sim2XCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim44CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim44ScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_Sim44icoEeSLVrU2ifxtpw" name="Read(Set$initializationFlag$1).result" outgoing="_Sim4uycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim44ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim45CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim45ScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_Sim45icoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_Sim4uycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim45ycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim46CcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Sim46ScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_Sim4vCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim46icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim46ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim47CcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_Sim47ScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_Sim4vScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim47icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim47ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Sim48CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Sim48ScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_Sim48icoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_Sim4vCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim48ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim49CcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_Sim49ScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_Sim4vycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim49icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim49ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_Sim4-CcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_Sim4vScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4-ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4-icoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Sim4-ycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_Sim4vicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Sim4_CcoEeSLVrU2ifxtpw" name="Decision(Test(Set$initializationFlag$1))" incoming="_Sim4vicoEeSLVrU2ifxtpw _Sim4vycoEeSLVrU2ifxtpw" outgoing="_Sim4wCcoEeSLVrU2ifxtpw" decisionInputFlow="_Sim4vycoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_Sim4_ScoEeSLVrU2ifxtpw" name="Set$initialization$1" visibility="protected" method="_Sim4tScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_Sim4_icoEeSLVrU2ifxtpw" name="Set" visibility="public" method="_Sim2YicoEeSLVrU2ifxtpw" redefinedOperation="_Sim1wicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim4_ycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5ACcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5AScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5AicoEeSLVrU2ifxtpw" name="" visibility="package" type="_Sim2XCcoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5AycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5BCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5BScoEeSLVrU2ifxtpw" name="destroy" visibility="public" method="_Sim2ricoEeSLVrU2ifxtpw">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-destroy"/>
        <redefinedOperation href="#_Sim1yScoEeSLVrU2ifxtpw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5BicoEeSLVrU2ifxtpw" name="add" visibility="public" method="_Sim2sCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim1yycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5BycoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5CCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5CScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5CicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5CycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5DCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5DScoEeSLVrU2ifxtpw" name="addAll" visibility="public" method="_Sim2zCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim10CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5DicoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5DycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5ECcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5EScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5EicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5EycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5FCcoEeSLVrU2ifxtpw" name="clear" visibility="public" method="_Sim26CcoEeSLVrU2ifxtpw" redefinedOperation="_Sim19ScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_Sim5FScoEeSLVrU2ifxtpw" name="count" visibility="public" method="_Sim27CcoEeSLVrU2ifxtpw" redefinedOperation="_Sim12CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5FicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5FycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5GCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5GScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5GicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5GycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5HCcoEeSLVrU2ifxtpw" name="equals" visibility="public" method="_Sim3CCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim13ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5HScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5HicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5HycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5ICcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5IScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5IicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5IycoEeSLVrU2ifxtpw" name="excludes" visibility="public" method="_Sim3JCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2BCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5JCcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5JScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5JicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5JycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5KCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5KScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5KicoEeSLVrU2ifxtpw" name="excludesAll" visibility="public" method="_Sim3QCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2CicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5KycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5LCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5LScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5LicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5LycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5MCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5MScoEeSLVrU2ifxtpw" name="includes" visibility="public" method="_Sim3XCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2EScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5MicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5MycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5NCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5NScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5NicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5NycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5OCcoEeSLVrU2ifxtpw" name="includesAll" visibility="public" method="_Sim3eCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2FycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5OScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5OicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5OycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5PCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5PScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5PicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5PycoEeSLVrU2ifxtpw" name="isEmpty" visibility="public" method="_Sim3lCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2HicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5QCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5QScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5QicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5QycoEeSLVrU2ifxtpw" name="notEmpty" visibility="public" method="_Sim3picoEeSLVrU2ifxtpw" redefinedOperation="_Sim2IicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5RCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5RScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5RicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5RycoEeSLVrU2ifxtpw" name="remove" visibility="public" method="_Sim3uCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2JScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5SCcoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5SScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5SicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5SycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5TCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5TScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5TicoEeSLVrU2ifxtpw" name="removeAll" visibility="public" method="_Sim31CcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2KScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5TycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5UCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5UScoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5UicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5UycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5VCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5VScoEeSLVrU2ifxtpw" name="removeOne" visibility="public" method="_Sim38CcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2MCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5VicoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5VycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5WCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5WScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5WicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5WycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5XCcoEeSLVrU2ifxtpw" name="replace" visibility="public" method="_Sim4DCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2NScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5XScoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5XicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5XycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5YCcoEeSLVrU2ifxtpw" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5YScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5YicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5YycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5ZCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5ZScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5ZicoEeSLVrU2ifxtpw" name="replaceOne" visibility="public" method="_Sim4MicoEeSLVrU2ifxtpw" redefinedOperation="_Sim2PCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5ZycoEeSLVrU2ifxtpw" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5aCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5aScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5aicoEeSLVrU2ifxtpw" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5aycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5bCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5bScoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5bicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5bycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5cCcoEeSLVrU2ifxtpw" name="retainAll" visibility="public" method="_Sim4WCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2QycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5cScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5cicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5cycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5dCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5dScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5dicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5dycoEeSLVrU2ifxtpw" name="size" visibility="public" method="_Sim4dCcoEeSLVrU2ifxtpw" redefinedOperation="_Sim2SicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5eCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5eScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5eicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5eycoEeSLVrU2ifxtpw" name="toSequence" visibility="public" method="_Sim4hicoEeSLVrU2ifxtpw" redefinedOperation="_Sim2TicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_Sim5fCcoEeSLVrU2ifxtpw" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5fScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5ficoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim5fycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Sim5gCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Sim5gScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b3EdYXREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b3EdIXREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Sim5gicoEeSLVrU2ifxtpw" client="_Sim2XCcoEeSLVrU2ifxtpw" supplier="_Sim5fycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_Sim5gycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_Sim5hCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_Sim5hScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0cD42IXREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <parameterSubstitution xmi:id="_Sim5hicoEeSLVrU2ifxtpw" actual="_SilBcCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0cD42oXREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0cD414XREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Sim5hycoEeSLVrU2ifxtpw" client="_SilC_icoEeSLVrU2ifxtpw" supplier="_Sim5gycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:InstanceSpecification" xmi:id="_Sim5iCcoEeSLVrU2ifxtpw" classifier="_SilC7icoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Sim5iScoEeSLVrU2ifxtpw" name="AssertEqual" node="_Sim5oicoEeSLVrU2ifxtpw _Sim5oycoEeSLVrU2ifxtpw _Sim5pCcoEeSLVrU2ifxtpw _Sim5pScoEeSLVrU2ifxtpw _Sim5picoEeSLVrU2ifxtpw _Sim5pycoEeSLVrU2ifxtpw _Sim5qCcoEeSLVrU2ifxtpw" group="_Sim5qCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_Sim5iicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_Sim5iycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Sim5jCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Sim5jScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_Sim5jicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_Sim5jycoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5kCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5kScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Sim5kicoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5kycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5lCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Sim5lScoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5licoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5lycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5mCcoEeSLVrU2ifxtpw" target="_Sim5oycoEeSLVrU2ifxtpw" source="_Sim5oicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5mScoEeSLVrU2ifxtpw" target="_Sim5pScoEeSLVrU2ifxtpw" source="_Sim5pCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5micoEeSLVrU2ifxtpw" target="_Sim5pycoEeSLVrU2ifxtpw" source="_Sim5picoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5mycoEeSLVrU2ifxtpw" target="_Sim5zScoEeSLVrU2ifxtpw" source="_Sim5pScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5nCcoEeSLVrU2ifxtpw" target="_Sim51ScoEeSLVrU2ifxtpw" source="_Sim5pycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5nScoEeSLVrU2ifxtpw" target="_Sim6DCcoEeSLVrU2ifxtpw" source="_Sim5oycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5nicoEeSLVrU2ifxtpw" target="_Sim6MicoEeSLVrU2ifxtpw" source="_Sim5pycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5nycoEeSLVrU2ifxtpw" target="_Sim6UCcoEeSLVrU2ifxtpw" source="_Sim5pycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5oCcoEeSLVrU2ifxtpw" target="_Sim6dicoEeSLVrU2ifxtpw" source="_Sim5pycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5oScoEeSLVrU2ifxtpw" target="_SinchScoEeSLVrU2ifxtpw" source="_Sim5pycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_Sim5qCcoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_Sim5qScoEeSLVrU2ifxtpw" name="IfStatement@771b67f3">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5qicoEeSLVrU2ifxtpw" target="_Sim5xCcoEeSLVrU2ifxtpw" source="_Sim5zScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5qycoEeSLVrU2ifxtpw" target="_Sim5zycoEeSLVrU2ifxtpw" source="_Sim5zScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5rCcoEeSLVrU2ifxtpw" target="_Sim5yicoEeSLVrU2ifxtpw" source="_Sim51ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5rScoEeSLVrU2ifxtpw" target="_Sim51ycoEeSLVrU2ifxtpw" source="_Sim51ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5ricoEeSLVrU2ifxtpw" target="_Sim53icoEeSLVrU2ifxtpw" source="_Sim50icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5rycoEeSLVrU2ifxtpw" target="_Sim53ycoEeSLVrU2ifxtpw" source="_Sim52icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5sCcoEeSLVrU2ifxtpw" target="_Sim54ScoEeSLVrU2ifxtpw" source="_Sim53icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5sScoEeSLVrU2ifxtpw" target="_Sim56CcoEeSLVrU2ifxtpw" source="_Sim53ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5sicoEeSLVrU2ifxtpw" target="_Sim57icoEeSLVrU2ifxtpw" source="_Sim53ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5sycoEeSLVrU2ifxtpw" target="_Sim5wycoEeSLVrU2ifxtpw" source="_Sim57icoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim5tCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5tScoEeSLVrU2ifxtpw" target="_Sim54CcoEeSLVrU2ifxtpw" source="_Sim57icoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim5ticoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5tycoEeSLVrU2ifxtpw" target="_Sim57ycoEeSLVrU2ifxtpw" source="_Sim53ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5uCcoEeSLVrU2ifxtpw" target="_Sim57ycoEeSLVrU2ifxtpw" source="_Sim53icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5uScoEeSLVrU2ifxtpw" target="_Sim57icoEeSLVrU2ifxtpw" source="_Sim57ycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim5uicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5uycoEeSLVrU2ifxtpw" target="_Sim55ycoEeSLVrU2ifxtpw" source="_Sim57ycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim5vCcoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5vScoEeSLVrU2ifxtpw" target="_Sim58CcoEeSLVrU2ifxtpw" source="_Sim5xycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5vicoEeSLVrU2ifxtpw" target="_Sim58CcoEeSLVrU2ifxtpw" source="_Sim55CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5vycoEeSLVrU2ifxtpw" target="_Sim58CcoEeSLVrU2ifxtpw" source="_Sim56ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5wCcoEeSLVrU2ifxtpw" target="_Sim58icoEeSLVrU2ifxtpw" source="_Sim58CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5wScoEeSLVrU2ifxtpw" target="_Sim6IScoEeSLVrU2ifxtpw" source="_Sim5-CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5wicoEeSLVrU2ifxtpw" target="_SincjCcoEeSLVrU2ifxtpw" source="_Sim6IScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Sim5wycoEeSLVrU2ifxtpw" name="Test(==)" incoming="_Sim5sycoEeSLVrU2ifxtpw">
            <first xmi:id="_Sim5xCcoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_Sim5qicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5xScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5xicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_Sim5xycoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_Sim5vScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5yCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5yScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_Sim5yicoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_Sim5rCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5yycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5zCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim5zScoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_Sim5mycoEeSLVrU2ifxtpw" outgoing="_Sim5qicoEeSLVrU2ifxtpw _Sim5qycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim5zicoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_Sim5zycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_Sim5qycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim50CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim50ScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Sim50icoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_Sim5ricoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim50ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim51CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim51ScoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_Sim5nCcoEeSLVrU2ifxtpw" outgoing="_Sim5rCcoEeSLVrU2ifxtpw _Sim5rScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim51icoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_Sim51ycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_Sim5rScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim52CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim52ScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_Sim52icoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_Sim5rycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim52ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim53CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Sim53ScoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_Sim5tycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim53icoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_Sim5ricoEeSLVrU2ifxtpw" outgoing="_Sim5sCcoEeSLVrU2ifxtpw _Sim5uCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim53ycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_Sim5rycoEeSLVrU2ifxtpw" outgoing="_Sim5sScoEeSLVrU2ifxtpw _Sim5sicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim54CcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_Sim5tScoEeSLVrU2ifxtpw">
            <argument xmi:id="_Sim54ScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_Sim5sCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim54icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim54ycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_Sim55CcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_Sim5vicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim55ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim55icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim55ycoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_Sim5uycoEeSLVrU2ifxtpw">
            <argument xmi:id="_Sim56CcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_Sim5sScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim56ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim56icoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_Sim56ycoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_Sim5vycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim57CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim57ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_Sim57icoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_Sim5sicoEeSLVrU2ifxtpw _Sim5uScoEeSLVrU2ifxtpw" outgoing="_Sim5sycoEeSLVrU2ifxtpw _Sim5tScoEeSLVrU2ifxtpw" decisionInputFlow="_Sim5sicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Sim57ycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_Sim5tycoEeSLVrU2ifxtpw _Sim5uCcoEeSLVrU2ifxtpw" outgoing="_Sim5uScoEeSLVrU2ifxtpw _Sim5uycoEeSLVrU2ifxtpw" decisionInputFlow="_Sim5uCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_Sim58CcoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_Sim5vScoEeSLVrU2ifxtpw _Sim5vicoEeSLVrU2ifxtpw _Sim5vycoEeSLVrU2ifxtpw" outgoing="_Sim5wCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim58ScoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_Sim58icoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_Sim5wCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim58ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim59CcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_Sim59ScoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim59icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim59ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim5-CcoEeSLVrU2ifxtpw" name="ExpressionStatement@101fad89" outgoing="_Sim5wScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5-ScoEeSLVrU2ifxtpw" target="_Sim5_CcoEeSLVrU2ifxtpw" source="_Sim6HicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5-icoEeSLVrU2ifxtpw" target="_Sim5-ycoEeSLVrU2ifxtpw" source="_Sim5_ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim5-ycoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_Sim5-icoEeSLVrU2ifxtpw" behavior="_SincoycoEeSLVrU2ifxtpw">
              <argument xmi:id="_Sim5_CcoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_Sim5-ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5_ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5_icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim5_ycoEeSLVrU2ifxtpw" name="Tuple@31590db4" outgoing="_Sim5-icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6ACcoEeSLVrU2ifxtpw" target="_Sim6CScoEeSLVrU2ifxtpw" source="_Sim6BCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6AScoEeSLVrU2ifxtpw" target="_Sim6GCcoEeSLVrU2ifxtpw" source="_Sim6DycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6AicoEeSLVrU2ifxtpw" target="_Sim6GycoEeSLVrU2ifxtpw" source="_Sim6EycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim6AycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_Sim6BCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_Sim6ACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6BScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6BicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sim6BycoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim6CCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_Sim6CScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Sim6ACcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6CicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6CycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_Sim6DCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Sim5nScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6DScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6DicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_Sim6DycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Sim6AScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6ECcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6EScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim6EicoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_Sim6EycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_Sim6AicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6FCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6FScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sim6FicoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim6FycoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_Sim6GCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Sim6AScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6GScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6GicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_Sim6GycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Sim6AicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6HCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6HScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_Sim6HicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Sim5-ScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6HycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6ICcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6IScoEeSLVrU2ifxtpw" name="ExpressionStatement@66998d5c" incoming="_Sim5wScoEeSLVrU2ifxtpw" outgoing="_Sim5wicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6IicoEeSLVrU2ifxtpw" target="_Sim6JScoEeSLVrU2ifxtpw" source="_SinciycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6IycoEeSLVrU2ifxtpw" target="_Sim6JCcoEeSLVrU2ifxtpw" source="_Sim6KCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim6JCcoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_Sim6IycoEeSLVrU2ifxtpw" behavior="_SincoycoEeSLVrU2ifxtpw">
              <argument xmi:id="_Sim6JScoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_Sim6IicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6JicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6JycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6KCcoEeSLVrU2ifxtpw" name="Tuple@19e006d1" outgoing="_Sim6IycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6KScoEeSLVrU2ifxtpw" target="_SinciicoEeSLVrU2ifxtpw" source="_SinciScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6KicoEeSLVrU2ifxtpw" target="_SinciicoEeSLVrU2ifxtpw" source="_Sim6NScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6KycoEeSLVrU2ifxtpw" target="_Sim6OCcoEeSLVrU2ifxtpw" source="_SinciicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim6LCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6LScoEeSLVrU2ifxtpw" target="_Sim6QicoEeSLVrU2ifxtpw" source="_SinciicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim6LicoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6LycoEeSLVrU2ifxtpw" target="_SinciycoEeSLVrU2ifxtpw" source="_Sim6OicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6MCcoEeSLVrU2ifxtpw" target="_SinciycoEeSLVrU2ifxtpw" source="_Sim6TCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim6MScoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_Sim6MicoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_Sim5nicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6MycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6NCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_Sim6NScoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_Sim6KicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6NicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6NycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6OCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1d010b95.operand2" incoming="_Sim6KycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6OScoEeSLVrU2ifxtpw" target="_Sim6OicoEeSLVrU2ifxtpw" source="_Sim6PicoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_Sim6OicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1d010b95.operand2.result" incoming="_Sim6OScoEeSLVrU2ifxtpw" outgoing="_Sim6LycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6OycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6PCcoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim6PScoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_Sim6PicoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_Sim6OScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6PycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6QCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sim6QScoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6QicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1d010b95.operand3" incoming="_Sim6LScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6QycoEeSLVrU2ifxtpw" target="_SinchycoEeSLVrU2ifxtpw" source="_SinchicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6RCcoEeSLVrU2ifxtpw" target="_SinchycoEeSLVrU2ifxtpw" source="_Sim6UycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6RScoEeSLVrU2ifxtpw" target="_Sim6VicoEeSLVrU2ifxtpw" source="_SinchycoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim6RicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6RycoEeSLVrU2ifxtpw" target="_SincgCcoEeSLVrU2ifxtpw" source="_SinchycoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim6SCcoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6SScoEeSLVrU2ifxtpw" target="_SinciCcoEeSLVrU2ifxtpw" source="_Sim6XCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6SicoEeSLVrU2ifxtpw" target="_SinciCcoEeSLVrU2ifxtpw" source="_SincgicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6SycoEeSLVrU2ifxtpw" target="_Sim6TCcoEeSLVrU2ifxtpw" source="_SinciCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_Sim6TCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@1d010b95.operand3.result" incoming="_Sim6SycoEeSLVrU2ifxtpw" outgoing="_Sim6MCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6TScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6TicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sim6TycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_Sim6UCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_Sim5nycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6UScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6UicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_Sim6UycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_Sim6RCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6VCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6VScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6VicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@43954425.operand2" incoming="_Sim6RScoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6VycoEeSLVrU2ifxtpw" target="_Sim6eScoEeSLVrU2ifxtpw" source="_Sim6YCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6WCcoEeSLVrU2ifxtpw" target="_Sim6fCcoEeSLVrU2ifxtpw" source="_Sim6dycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6WScoEeSLVrU2ifxtpw" target="_SincdycoEeSLVrU2ifxtpw" source="_Sim6fycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6WicoEeSLVrU2ifxtpw" target="_SinceicoEeSLVrU2ifxtpw" source="_SinccicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6WycoEeSLVrU2ifxtpw" target="_Sim6XCcoEeSLVrU2ifxtpw" source="_SincfScoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_Sim6XCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@43954425.operand2.result" incoming="_Sim6WycoEeSLVrU2ifxtpw" outgoing="_Sim6SScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6XScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6XicoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim6XycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_Sim6YCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_Sim6VycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6YScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6YicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Sim6YycoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_Sim6ZCcoEeSLVrU2ifxtpw" name="CastExpression@4b2f8047" mode="parallel" outputElement="_Sim6dycoEeSLVrU2ifxtpw" inputElement="_Sim6dicoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6ZScoEeSLVrU2ifxtpw" target="_Sim6bicoEeSLVrU2ifxtpw" source="_Sim6dCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6ZicoEeSLVrU2ifxtpw" target="_Sim6dScoEeSLVrU2ifxtpw" source="_Sim6dCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6ZycoEeSLVrU2ifxtpw" target="_Sim6dScoEeSLVrU2ifxtpw" source="_Sim6cScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6aCcoEeSLVrU2ifxtpw" target="_Sim6bCcoEeSLVrU2ifxtpw" source="_Sim6dScoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim6aScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6aicoEeSLVrU2ifxtpw" target="_Sim6dCcoEeSLVrU2ifxtpw" source="_Sim6dicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6aycoEeSLVrU2ifxtpw" target="_Sim6dycoEeSLVrU2ifxtpw" source="_Sim6bCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_Sim6bCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@4b2f8047.operand)" incoming="_Sim6aCcoEeSLVrU2ifxtpw" outgoing="_Sim6aycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sim6bScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_Sim6bicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_Sim6ZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6bycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6cCcoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_Sim6cScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_Sim6ZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6cicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6cycoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_Sim6dCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_Sim6aicoEeSLVrU2ifxtpw" outgoing="_Sim6ZScoEeSLVrU2ifxtpw _Sim6ZicoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_Sim6dScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_Sim6ZicoEeSLVrU2ifxtpw _Sim6ZycoEeSLVrU2ifxtpw" outgoing="_Sim6aCcoEeSLVrU2ifxtpw" decisionInputFlow="_Sim6ZycoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_Sim6dicoEeSLVrU2ifxtpw" name="CastExpression@4b2f8047.inputElement" incoming="_Sim5oCcoEeSLVrU2ifxtpw" outgoing="_Sim6aicoEeSLVrU2ifxtpw" regionAsInput="_Sim6ZCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_Sim6dycoEeSLVrU2ifxtpw" name="CastExpression@4b2f8047.outputElement" incoming="_Sim6aycoEeSLVrU2ifxtpw" outgoing="_Sim6WCcoEeSLVrU2ifxtpw" regionAsOutput="_Sim6ZCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim6eCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_Sim6eScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Sim6VycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6eicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6eycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_Sim6fCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Sim6WCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6fScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6ficoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_Sim6fycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Sim6WScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6gCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinccCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinccScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SinccicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_Sim6WicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinccycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincdCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SincdScoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SincdicoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SincdycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_Sim6WScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinceCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinceScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SinceicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_Sim6WicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinceycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincfCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SincfScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_Sim6WycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincficoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincfycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SincgCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@43954425.operand3" incoming="_Sim6RycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SincgScoEeSLVrU2ifxtpw" target="_SincgicoEeSLVrU2ifxtpw" source="_SinchScoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SincgicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@43954425.operand3.result" incoming="_SincgScoEeSLVrU2ifxtpw" outgoing="_Sim6SicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincgycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinchCcoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_SinchScoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_Sim5oScoEeSLVrU2ifxtpw" outgoing="_SincgScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SinchicoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@43954425)" outgoing="_Sim6QycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SinchycoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@43954425)" incoming="_Sim6QycoEeSLVrU2ifxtpw _Sim6RCcoEeSLVrU2ifxtpw" outgoing="_Sim6RScoEeSLVrU2ifxtpw _Sim6RycoEeSLVrU2ifxtpw" decisionInputFlow="_Sim6RCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SinciCcoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@43954425.result)" incoming="_Sim6SScoEeSLVrU2ifxtpw _Sim6SicoEeSLVrU2ifxtpw" outgoing="_Sim6SycoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SinciScoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@1d010b95)" outgoing="_Sim6KScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SinciicoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@1d010b95)" incoming="_Sim6KScoEeSLVrU2ifxtpw _Sim6KicoEeSLVrU2ifxtpw" outgoing="_Sim6KycoEeSLVrU2ifxtpw _Sim6LScoEeSLVrU2ifxtpw" decisionInputFlow="_Sim6KicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SinciycoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@1d010b95.result)" incoming="_Sim6LycoEeSLVrU2ifxtpw _Sim6MCcoEeSLVrU2ifxtpw" outgoing="_Sim6IicoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SincjCcoEeSLVrU2ifxtpw" name="ExpressionStatement@22abd131" incoming="_Sim5wicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SincjScoEeSLVrU2ifxtpw" target="_SinckCcoEeSLVrU2ifxtpw" source="_SincmCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SincjicoEeSLVrU2ifxtpw" target="_SincjycoEeSLVrU2ifxtpw" source="_SinclicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SincjycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SincjicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SinckCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SincjScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinckScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinckicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SinckycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinclCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinclScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinclicoEeSLVrU2ifxtpw" name="Tuple@2bb320a" outgoing="_SincjicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinclycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_SincmCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_SincjScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincmScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincmicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SincmycoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SincnCcoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SincnScoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincnicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincnycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SincoCcoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_SincoScoEeSLVrU2ifxtpw" body="_Sim5-CcoEeSLVrU2ifxtpw _Sim6IScoEeSLVrU2ifxtpw _SincjCcoEeSLVrU2ifxtpw" decider="_Sim59ScoEeSLVrU2ifxtpw" successorClause="_SincoicoEeSLVrU2ifxtpw" test="_Sim5wycoEeSLVrU2ifxtpw _Sim5zicoEeSLVrU2ifxtpw _Sim51icoEeSLVrU2ifxtpw _Sim54CcoEeSLVrU2ifxtpw _Sim55ycoEeSLVrU2ifxtpw _Sim58ScoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_SincoicoEeSLVrU2ifxtpw" decider="_SincnScoEeSLVrU2ifxtpw" predecessorClause="_SincoScoEeSLVrU2ifxtpw" test="_SincnCcoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim5oicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_Sim5mCcoEeSLVrU2ifxtpw" parameter="_Sim5jycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Sim5oycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_Sim5mCcoEeSLVrU2ifxtpw" outgoing="_Sim5nScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim5pCcoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_Sim5mScoEeSLVrU2ifxtpw" parameter="_Sim5kicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Sim5pScoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_Sim5mScoEeSLVrU2ifxtpw" outgoing="_Sim5mycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim5picoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_Sim5micoEeSLVrU2ifxtpw" parameter="_Sim5lScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Sim5pycoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_Sim5micoEeSLVrU2ifxtpw" outgoing="_Sim5nCcoEeSLVrU2ifxtpw _Sim5nicoEeSLVrU2ifxtpw _Sim5nycoEeSLVrU2ifxtpw _Sim5oCcoEeSLVrU2ifxtpw _Sim5oScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SincoycoEeSLVrU2ifxtpw" name="Write" node="_SincricoEeSLVrU2ifxtpw _SincrycoEeSLVrU2ifxtpw _SincsCcoEeSLVrU2ifxtpw" group="_SincsCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SincpCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SincpScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SincpicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SincpycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SincqCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SincqScoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincqicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincqycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SincrCcoEeSLVrU2ifxtpw" target="_SincrycoEeSLVrU2ifxtpw" source="_SincricoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SincrScoEeSLVrU2ifxtpw" target="_SinctycoEeSLVrU2ifxtpw" source="_SincrycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SincsCcoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SincsScoEeSLVrU2ifxtpw" name="ExpressionStatement@6cfece27">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SincsicoEeSLVrU2ifxtpw" target="_SincxCcoEeSLVrU2ifxtpw" source="_Sinc0ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SincsycoEeSLVrU2ifxtpw" target="_SinctCcoEeSLVrU2ifxtpw" source="_SincxScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SinctCcoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_SincsycoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SincxCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinctScoEeSLVrU2ifxtpw" target="_SincuycoEeSLVrU2ifxtpw" source="_SinctycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SincticoEeSLVrU2ifxtpw" target="_SincwScoEeSLVrU2ifxtpw" source="_SincxCcoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_SinctycoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_SincrScoEeSLVrU2ifxtpw" outgoing="_SinctScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincuCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincuScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SincuicoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_SincuycoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_SinctScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincvCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincvScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SincvicoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincvycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincwCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SincwScoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_SincticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SincwicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SincwycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SincxCcoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_SincsicoEeSLVrU2ifxtpw" outgoing="_SincticoEeSLVrU2ifxtpw" regionAsInput="_SinctCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SincxScoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_SincsycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SincxicoEeSLVrU2ifxtpw" target="_SincyycoEeSLVrU2ifxtpw" source="_Sinc1icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SincxycoEeSLVrU2ifxtpw" target="_Sinc3icoEeSLVrU2ifxtpw" source="_Sinc2icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SincyCcoEeSLVrU2ifxtpw" target="_SincyicoEeSLVrU2ifxtpw" source="_Sinc1CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SincyScoEeSLVrU2ifxtpw" target="_SinczicoEeSLVrU2ifxtpw" source="_Sinc3icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SincyicoEeSLVrU2ifxtpw" name="Call(At)" incoming="_SincyCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SincyycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SincxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinczCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinczScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SinczicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SincyScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinczycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinc0CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_Sinc0ScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SincsicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinc0icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinc0ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinc1CcoEeSLVrU2ifxtpw" name="Tuple@4f6ae561" outgoing="_SincyCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_Sinc1ScoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_Sinc1icoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_SincxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinc1ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinc2CcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinc2ScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_Sinc2icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SincxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinc2ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinc3CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sinc3ScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Sinc3icoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SincxycoEeSLVrU2ifxtpw" outgoing="_SincyScoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SincricoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_SincrCcoEeSLVrU2ifxtpw" parameter="_SincqScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SincrycoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_SincrCcoEeSLVrU2ifxtpw" outgoing="_SincrScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <profileApplication xmi:id="_Sinc3ycoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_Sinc4CcoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_Sinc4ScoEeSLVrU2ifxtpw" base_BehavioralFeature="_Sim1wicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Sinc4icoEeSLVrU2ifxtpw" base_BehavioralFeature="_SilBaycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_Sinc4ycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SilCfScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_Sinc5CcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SilChicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Sinc5ScoEeSLVrU2ifxtpw" base_BehavioralFeature="_Sim4_icoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_Sinc5icoEeSLVrU2ifxtpw" base_BehavioralFeature="_Sim5BScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Sinc5ycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SimO-ycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Sinc6CcoEeSLVrU2ifxtpw" base_BehavioralFeature="_Silr-CcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_Sinc6ScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SimSRScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SioDgCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_Sim1yScoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SioDgScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SimRwScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SioDgicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SimRyCcoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SioDgycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SimPAicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SioDhCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SimSTCcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SioDhScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SilCgCcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SioDhicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SiloHScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SioDhycoEeSLVrU2ifxtpw" base_BehavioralFeature="_Silr_ycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SioDiCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SilBbycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SioDiScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SilCdScoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SioDiicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SiloJCcoEeSLVrU2ifxtpw"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_RtKbICcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_RtKbIScoEeSLVrU2ifxtpw" name="Expressions_Object" classifierBehavior="_RtKbNicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_RtKbIicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RtKbIycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RtKbJCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RtKbJScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RtKbJicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_RtKbJycoEeSLVrU2ifxtpw" name="Expressions_Object$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbKCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbKScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RtKbKicoEeSLVrU2ifxtpw" name="members" visibility="package" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbKycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbLCcoEeSLVrU2ifxtpw" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RtKbLScoEeSLVrU2ifxtpw" name="principal" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbLicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbLycoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RtKbMCcoEeSLVrU2ifxtpw" name="rate" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbMScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbMicoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RtKbMycoEeSLVrU2ifxtpw" name="interest" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbNCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbNScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RtKbNicoEeSLVrU2ifxtpw" name="Expressions_Object$classifierBehavior$1" visibility="private" isActive="true" node="_RtKbNycoEeSLVrU2ifxtpw" group="_RtKbNycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RtKbNycoEeSLVrU2ifxtpw" name="Body(Expressions_Object$classifierBehavior$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbOCcoEeSLVrU2ifxtpw" target="_RtKbkycoEeSLVrU2ifxtpw" source="_RtKbcScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbOScoEeSLVrU2ifxtpw" target="_RtKbdicoEeSLVrU2ifxtpw" source="_RtKbUycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbOicoEeSLVrU2ifxtpw" target="_RtKbsicoEeSLVrU2ifxtpw" source="_RtKbcScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbOycoEeSLVrU2ifxtpw" target="_RtKbmScoEeSLVrU2ifxtpw" source="_RtKbdicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbPCcoEeSLVrU2ifxtpw" target="_RtKb0CcoEeSLVrU2ifxtpw" source="_RtKbcScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbPScoEeSLVrU2ifxtpw" target="_RtKbsycoEeSLVrU2ifxtpw" source="_RtKbmScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbPicoEeSLVrU2ifxtpw" target="_RtKb8ycoEeSLVrU2ifxtpw" source="_RtKbcicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbPycoEeSLVrU2ifxtpw" target="_RtKb1icoEeSLVrU2ifxtpw" source="_RtKbsycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbQCcoEeSLVrU2ifxtpw" target="_RtKcFicoEeSLVrU2ifxtpw" source="_RtKbcicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbQScoEeSLVrU2ifxtpw" target="_RtKb-ScoEeSLVrU2ifxtpw" source="_RtKb1icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbQicoEeSLVrU2ifxtpw" target="_RtKcOScoEeSLVrU2ifxtpw" source="_RtKbcicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbQycoEeSLVrU2ifxtpw" target="_RtKcHCcoEeSLVrU2ifxtpw" source="_RtKb-ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbRCcoEeSLVrU2ifxtpw" target="_RtKcXCcoEeSLVrU2ifxtpw" source="_RtKbcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbRScoEeSLVrU2ifxtpw" target="_RtKcPycoEeSLVrU2ifxtpw" source="_RtKcHCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbRicoEeSLVrU2ifxtpw" target="_RtKcfycoEeSLVrU2ifxtpw" source="_RtKbcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbRycoEeSLVrU2ifxtpw" target="_RtKcYicoEeSLVrU2ifxtpw" source="_RtKcPycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbSCcoEeSLVrU2ifxtpw" target="_RtKcoicoEeSLVrU2ifxtpw" source="_RtKbcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbSScoEeSLVrU2ifxtpw" target="_RtKchScoEeSLVrU2ifxtpw" source="_RtKcYicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbSicoEeSLVrU2ifxtpw" target="_RtKcxScoEeSLVrU2ifxtpw" source="_RtKbdScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbSycoEeSLVrU2ifxtpw" target="_RtKcqCcoEeSLVrU2ifxtpw" source="_RtKchScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbTCcoEeSLVrU2ifxtpw" target="_RtKc6CcoEeSLVrU2ifxtpw" source="_RtKbdScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbTScoEeSLVrU2ifxtpw" target="_RtKcyycoEeSLVrU2ifxtpw" source="_RtKcqCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbTicoEeSLVrU2ifxtpw" target="_RtLCPycoEeSLVrU2ifxtpw" source="_RtKbdScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbTycoEeSLVrU2ifxtpw" target="_RtKc7icoEeSLVrU2ifxtpw" source="_RtKcyycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbUCcoEeSLVrU2ifxtpw" target="_RtLCTScoEeSLVrU2ifxtpw" source="_RtKbdCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbUScoEeSLVrU2ifxtpw" target="_RtLCRScoEeSLVrU2ifxtpw" source="_RtKc7icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbUicoEeSLVrU2ifxtpw" target="_RtLCbCcoEeSLVrU2ifxtpw" source="_RtLCRScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKbUycoEeSLVrU2ifxtpw" name="ExpressionStatement@536703f1" outgoing="_RtKbOScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbVCcoEeSLVrU2ifxtpw" target="_RtKbcScoEeSLVrU2ifxtpw" source="_RtKbWycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbVScoEeSLVrU2ifxtpw" target="_RtKbcicoEeSLVrU2ifxtpw" source="_RtKbXicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbVicoEeSLVrU2ifxtpw" target="_RtKbcycoEeSLVrU2ifxtpw" source="_RtKbYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbVycoEeSLVrU2ifxtpw" target="_RtKbdCcoEeSLVrU2ifxtpw" source="_RtKbZCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbWCcoEeSLVrU2ifxtpw" target="_RtKbdScoEeSLVrU2ifxtpw" source="_RtKbZycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbWScoEeSLVrU2ifxtpw" target="_RtKbaicoEeSLVrU2ifxtpw" source="_RtKbbicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RtKbWicoEeSLVrU2ifxtpw" name="Call(test)" operation="_RtLGqicoEeSLVrU2ifxtpw">
              <result xmi:id="_RtKbWycoEeSLVrU2ifxtpw" name="Call(test).result(member)" outgoing="_RtKbVCcoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbXCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbXScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RtKbXicoEeSLVrU2ifxtpw" name="Call(test).result(customer0)" outgoing="_RtKbVScoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbXycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbYCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RtKbYScoEeSLVrU2ifxtpw" name="Call(test).result(customer1)" outgoing="_RtKbVicoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbYicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbYycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RtKbZCcoEeSLVrU2ifxtpw" name="Call(test).result(names)" outgoing="_RtKbVycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbZScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbZicoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_RtKbZycoEeSLVrU2ifxtpw" name="Call(test).result(self)" outgoing="_RtKbWCcoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbaCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbaScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_RtKbaicoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_RtKbWScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbaycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbbCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RtKbbScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_RtKbbicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtKbWScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbbycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbcCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtKbcScoEeSLVrU2ifxtpw" name="Fork(member)@9083a57" incoming="_RtKbVCcoEeSLVrU2ifxtpw" outgoing="_RtKbOCcoEeSLVrU2ifxtpw _RtKbOicoEeSLVrU2ifxtpw _RtKbPCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtKbcicoEeSLVrU2ifxtpw" name="Fork(customer0)@13e0c71c" incoming="_RtKbVScoEeSLVrU2ifxtpw" outgoing="_RtKbPicoEeSLVrU2ifxtpw _RtKbQCcoEeSLVrU2ifxtpw _RtKbQicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtKbcycoEeSLVrU2ifxtpw" name="Fork(customer1)@a300976" incoming="_RtKbVicoEeSLVrU2ifxtpw" outgoing="_RtKbRCcoEeSLVrU2ifxtpw _RtKbRicoEeSLVrU2ifxtpw _RtKbSCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtKbdCcoEeSLVrU2ifxtpw" name="Fork(names)@57bd2733" incoming="_RtKbVycoEeSLVrU2ifxtpw" outgoing="_RtKbUCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtKbdScoEeSLVrU2ifxtpw" name="Fork(self)@4358b245" incoming="_RtKbWCcoEeSLVrU2ifxtpw" outgoing="_RtKbSicoEeSLVrU2ifxtpw _RtKbTCcoEeSLVrU2ifxtpw _RtKbTicoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKbdicoEeSLVrU2ifxtpw" name="ExpressionStatement@2fd3aa96" incoming="_RtKbOScoEeSLVrU2ifxtpw" outgoing="_RtKbOycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbdycoEeSLVrU2ifxtpw" target="_RtKbfCcoEeSLVrU2ifxtpw" source="_RtKbiCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbeCcoEeSLVrU2ifxtpw" target="_RtKbfycoEeSLVrU2ifxtpw" source="_RtKbkCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbeScoEeSLVrU2ifxtpw" target="_RtKbgicoEeSLVrU2ifxtpw" source="_RtKblScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbeicoEeSLVrU2ifxtpw" target="_RtKbeycoEeSLVrU2ifxtpw" source="_RtKbhScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKbeycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKbeicoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKbfCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKbdycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbfScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbficoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKbfycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKbeCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbgCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbgScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKbgicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKbeScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbgycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbhCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKbhScoEeSLVrU2ifxtpw" name="Tuple@10a55706" outgoing="_RtKbeicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbhicoEeSLVrU2ifxtpw" target="_RtKbjScoEeSLVrU2ifxtpw" source="_RtKbkycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKbhycoEeSLVrU2ifxtpw" name="Value(&quot;member.name&quot;)">
                <result xmi:id="_RtKbiCcoEeSLVrU2ifxtpw" name="Value(&quot;member.name&quot;).result" outgoing="_RtKbdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbiScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbiicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKbiycoEeSLVrU2ifxtpw" value="member.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKbjCcoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_RtLGxicoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKbjScoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_RtKbhicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbjicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbjycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKbkCcoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_RtKbeCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbkScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbkicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKbkycoEeSLVrU2ifxtpw" name="Fork(Fork(member)@9083a57)" incoming="_RtKbOCcoEeSLVrU2ifxtpw" outgoing="_RtKbhicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKblCcoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;)">
                <result xmi:id="_RtKblScoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;).result" outgoing="_RtKbeScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKblicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKblycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKbmCcoEeSLVrU2ifxtpw" value="A">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKbmScoEeSLVrU2ifxtpw" name="ExpressionStatement@2d8b5e2" incoming="_RtKbOycoEeSLVrU2ifxtpw" outgoing="_RtKbPScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbmicoEeSLVrU2ifxtpw" target="_RtKbnicoEeSLVrU2ifxtpw" source="_RtKbpycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbmycoEeSLVrU2ifxtpw" target="_RtKboScoEeSLVrU2ifxtpw" source="_RtKbrycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbnCcoEeSLVrU2ifxtpw" target="_RtKbnScoEeSLVrU2ifxtpw" source="_RtKbpCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKbnScoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_RtKbnCcoEeSLVrU2ifxtpw" behavior="_RtLq0ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKbnicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_RtKbmicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbnycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKboCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKboScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_RtKbmycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKboicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKboycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKbpCcoEeSLVrU2ifxtpw" name="Tuple@21b42081" outgoing="_RtKbnCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbpScoEeSLVrU2ifxtpw" target="_RtKbrCcoEeSLVrU2ifxtpw" source="_RtKbsicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKbpicoEeSLVrU2ifxtpw" name="Value(&quot;member.isActive&quot;)">
                <result xmi:id="_RtKbpycoEeSLVrU2ifxtpw" name="Value(&quot;member.isActive&quot;).result" outgoing="_RtKbmicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbqCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbqScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKbqicoEeSLVrU2ifxtpw" value="member.isActive">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKbqycoEeSLVrU2ifxtpw" name="Read(isActive)" structuralFeature="_RtLGwycoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKbrCcoEeSLVrU2ifxtpw" name="Read(isActive).object" incoming="_RtKbpScoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbrScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbricoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKbrycoEeSLVrU2ifxtpw" name="Read(isActive).result" outgoing="_RtKbmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbsCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbsScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKbsicoEeSLVrU2ifxtpw" name="Fork(Fork(member)@9083a57)" incoming="_RtKbOicoEeSLVrU2ifxtpw" outgoing="_RtKbpScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKbsycoEeSLVrU2ifxtpw" name="ExpressionStatement@5cd470f0" incoming="_RtKbPScoEeSLVrU2ifxtpw" outgoing="_RtKbPycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbtCcoEeSLVrU2ifxtpw" target="_RtKbuScoEeSLVrU2ifxtpw" source="_RtKbxScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbtScoEeSLVrU2ifxtpw" target="_RtKbvCcoEeSLVrU2ifxtpw" source="_RtKbzScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbticoEeSLVrU2ifxtpw" target="_RtKbvycoEeSLVrU2ifxtpw" source="_RtKb0icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKbtycoEeSLVrU2ifxtpw" target="_RtKbuCcoEeSLVrU2ifxtpw" source="_RtKbwicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKbuCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKbtycoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKbuScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKbtCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbuicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbuycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKbvCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKbtScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbvScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbvicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKbvycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKbticoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbwCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbwScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKbwicoEeSLVrU2ifxtpw" name="Tuple@2657d257" outgoing="_RtKbtycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKbwycoEeSLVrU2ifxtpw" target="_RtKbyicoEeSLVrU2ifxtpw" source="_RtKb0CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKbxCcoEeSLVrU2ifxtpw" name="Value(&quot;member.address&quot;)">
                <result xmi:id="_RtKbxScoEeSLVrU2ifxtpw" name="Value(&quot;member.address&quot;).result" outgoing="_RtKbtCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbxicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbxycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKbyCcoEeSLVrU2ifxtpw" value="member.address">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKbyScoEeSLVrU2ifxtpw" name="Read(address)" structuralFeature="_RtLGyScoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKbyicoEeSLVrU2ifxtpw" name="Read(address).object" incoming="_RtKbwycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbyycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbzCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKbzScoEeSLVrU2ifxtpw" name="Read(address).result" outgoing="_RtKbtScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKbzicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKbzycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKb0CcoEeSLVrU2ifxtpw" name="Fork(Fork(member)@9083a57)" incoming="_RtKbPCcoEeSLVrU2ifxtpw" outgoing="_RtKbwycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKb0ScoEeSLVrU2ifxtpw" name="Value(&quot;Easy Street&quot;)">
                <result xmi:id="_RtKb0icoEeSLVrU2ifxtpw" name="Value(&quot;Easy Street&quot;).result" outgoing="_RtKbticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKb0ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKb1CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKb1ScoEeSLVrU2ifxtpw" value="Easy Street">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKb1icoEeSLVrU2ifxtpw" name="ExpressionStatement@3483ba7e" incoming="_RtKbPycoEeSLVrU2ifxtpw" outgoing="_RtKbQScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKb1ycoEeSLVrU2ifxtpw" target="_RtKb3CcoEeSLVrU2ifxtpw" source="_RtKb6CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKb2CcoEeSLVrU2ifxtpw" target="_RtKb3ycoEeSLVrU2ifxtpw" source="_RtKb8CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKb2ScoEeSLVrU2ifxtpw" target="_RtKb4icoEeSLVrU2ifxtpw" source="_RtKb9ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKb2icoEeSLVrU2ifxtpw" target="_RtKb2ycoEeSLVrU2ifxtpw" source="_RtKb5ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKb2ycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKb2icoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKb3CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKb1ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKb3ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKb3icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKb3ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKb2CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKb4CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKb4ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKb4icoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKb2ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKb4ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKb5CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKb5ScoEeSLVrU2ifxtpw" name="Tuple@4b819793" outgoing="_RtKb2icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKb5icoEeSLVrU2ifxtpw" target="_RtKb7ScoEeSLVrU2ifxtpw" source="_RtKb8ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKb5ycoEeSLVrU2ifxtpw" name="Value(&quot;customer0.name&quot;)">
                <result xmi:id="_RtKb6CcoEeSLVrU2ifxtpw" name="Value(&quot;customer0.name&quot;).result" outgoing="_RtKb1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKb6ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKb6icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKb6ycoEeSLVrU2ifxtpw" value="customer0.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKb7CcoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_RtLpnCcoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKb7ScoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_RtKb5icoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKb7icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKb7ycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKb8CcoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_RtKb2CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKb8ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKb8icoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKb8ycoEeSLVrU2ifxtpw" name="Fork(Fork(customer0)@13e0c71c)" incoming="_RtKbPicoEeSLVrU2ifxtpw" outgoing="_RtKb5icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKb9CcoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;)">
                <result xmi:id="_RtKb9ScoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;).result" outgoing="_RtKb2ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKb9icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKb9ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKb-CcoEeSLVrU2ifxtpw" value="Fred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKb-ScoEeSLVrU2ifxtpw" name="ExpressionStatement@69f9e318" incoming="_RtKbQScoEeSLVrU2ifxtpw" outgoing="_RtKbQycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKb-icoEeSLVrU2ifxtpw" target="_RtKb_ycoEeSLVrU2ifxtpw" source="_RtKcCycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKb-ycoEeSLVrU2ifxtpw" target="_RtKcAicoEeSLVrU2ifxtpw" source="_RtKcEycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKb_CcoEeSLVrU2ifxtpw" target="_RtKcBScoEeSLVrU2ifxtpw" source="_RtKcGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKb_ScoEeSLVrU2ifxtpw" target="_RtKb_icoEeSLVrU2ifxtpw" source="_RtKcCCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKb_icoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKb_ScoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKb_ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKb-icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcACcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcAScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcAicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKb-ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcAycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcBCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcBScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKb_CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcBicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcBycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKcCCcoEeSLVrU2ifxtpw" name="Tuple@150a1a8d" outgoing="_RtKb_ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcCScoEeSLVrU2ifxtpw" target="_RtKcECcoEeSLVrU2ifxtpw" source="_RtKcFicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcCicoEeSLVrU2ifxtpw" name="Value(&quot;customer0.email&quot;)">
                <result xmi:id="_RtKcCycoEeSLVrU2ifxtpw" name="Value(&quot;customer0.email&quot;).result" outgoing="_RtKb-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcDCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcDScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcDicoEeSLVrU2ifxtpw" value="customer0.email">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKcDycoEeSLVrU2ifxtpw" name="Read(email)" structuralFeature="_RtLpnycoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKcECcoEeSLVrU2ifxtpw" name="Read(email).object" incoming="_RtKcCScoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcEScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcEicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKcEycoEeSLVrU2ifxtpw" name="Read(email).result" outgoing="_RtKb-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcFCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcFScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKcFicoEeSLVrU2ifxtpw" name="Fork(Fork(customer0)@13e0c71c)" incoming="_RtKbQCcoEeSLVrU2ifxtpw" outgoing="_RtKcCScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcFycoEeSLVrU2ifxtpw" name="Value(&quot;fred@blah.com&quot;)">
                <result xmi:id="_RtKcGCcoEeSLVrU2ifxtpw" name="Value(&quot;fred@blah.com&quot;).result" outgoing="_RtKb_CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcGScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcGicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcGycoEeSLVrU2ifxtpw" value="fred@blah.com">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKcHCcoEeSLVrU2ifxtpw" name="ExpressionStatement@1bcd7e36" incoming="_RtKbQycoEeSLVrU2ifxtpw" outgoing="_RtKbRScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcHScoEeSLVrU2ifxtpw" target="_RtKcIicoEeSLVrU2ifxtpw" source="_RtKcLicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcHicoEeSLVrU2ifxtpw" target="_RtKcJScoEeSLVrU2ifxtpw" source="_RtKcNicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcHycoEeSLVrU2ifxtpw" target="_RtKcKCcoEeSLVrU2ifxtpw" source="_RtKcOycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKcICcoEeSLVrU2ifxtpw" target="_RtKcIScoEeSLVrU2ifxtpw" source="_RtKcKycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKcIScoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_RtKcICcoEeSLVrU2ifxtpw" behavior="_RtLrNCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKcIicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_RtKcHScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcIycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcJCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcJScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_RtKcHicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcJicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcJycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RtKcKCcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_RtKcHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcKScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcKicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKcKycoEeSLVrU2ifxtpw" name="Tuple@3b4d67" outgoing="_RtKcICcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcLCcoEeSLVrU2ifxtpw" target="_RtKcMycoEeSLVrU2ifxtpw" source="_RtKcOScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcLScoEeSLVrU2ifxtpw" name="Value(&quot;customer0.address&quot;)">
                <result xmi:id="_RtKcLicoEeSLVrU2ifxtpw" name="Value(&quot;customer0.address&quot;).result" outgoing="_RtKcHScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcLycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcMCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcMScoEeSLVrU2ifxtpw" value="customer0.address">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKcMicoEeSLVrU2ifxtpw" name="Read(address)" structuralFeature="_RtLpoicoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKcMycoEeSLVrU2ifxtpw" name="Read(address).object" incoming="_RtKcLCcoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcNCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcNScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKcNicoEeSLVrU2ifxtpw" name="Read(address).result" outgoing="_RtKcHicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcNycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcOCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKcOScoEeSLVrU2ifxtpw" name="Fork(Fork(customer0)@13e0c71c)" incoming="_RtKbQicoEeSLVrU2ifxtpw" outgoing="_RtKcLCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcOicoEeSLVrU2ifxtpw" name="Value(&quot;Unknown&quot;)">
                <result xmi:id="_RtKcOycoEeSLVrU2ifxtpw" name="Value(&quot;Unknown&quot;).result" outgoing="_RtKcHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcPCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcPScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcPicoEeSLVrU2ifxtpw" value="Unknown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKcPycoEeSLVrU2ifxtpw" name="ExpressionStatement@5d7a4ab" incoming="_RtKbRScoEeSLVrU2ifxtpw" outgoing="_RtKbRycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcQCcoEeSLVrU2ifxtpw" target="_RtKcRScoEeSLVrU2ifxtpw" source="_RtKcUScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcQScoEeSLVrU2ifxtpw" target="_RtKcSCcoEeSLVrU2ifxtpw" source="_RtKcWScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcQicoEeSLVrU2ifxtpw" target="_RtKcSycoEeSLVrU2ifxtpw" source="_RtKcXicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKcQycoEeSLVrU2ifxtpw" target="_RtKcRCcoEeSLVrU2ifxtpw" source="_RtKcTicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKcRCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKcQycoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKcRScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKcQCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcRicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcRycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcSCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKcQScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcSScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcSicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcSycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKcQicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcTCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcTScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKcTicoEeSLVrU2ifxtpw" name="Tuple@2616aa35" outgoing="_RtKcQycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcTycoEeSLVrU2ifxtpw" target="_RtKcVicoEeSLVrU2ifxtpw" source="_RtKcXCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcUCcoEeSLVrU2ifxtpw" name="Value(&quot;customer1.name&quot;)">
                <result xmi:id="_RtKcUScoEeSLVrU2ifxtpw" name="Value(&quot;customer1.name&quot;).result" outgoing="_RtKcQCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcUicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcUycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcVCcoEeSLVrU2ifxtpw" value="customer1.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKcVScoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_RtLpnCcoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKcVicoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_RtKcTycoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcVycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcWCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKcWScoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_RtKcQScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcWicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcWycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKcXCcoEeSLVrU2ifxtpw" name="Fork(Fork(customer1)@a300976)" incoming="_RtKbRCcoEeSLVrU2ifxtpw" outgoing="_RtKcTycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcXScoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;)">
                <result xmi:id="_RtKcXicoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;).result" outgoing="_RtKcQicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcXycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcYCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcYScoEeSLVrU2ifxtpw" value="Fred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKcYicoEeSLVrU2ifxtpw" name="ExpressionStatement@24df9745" incoming="_RtKbRycoEeSLVrU2ifxtpw" outgoing="_RtKbSScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcYycoEeSLVrU2ifxtpw" target="_RtKcaCcoEeSLVrU2ifxtpw" source="_RtKcdCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcZCcoEeSLVrU2ifxtpw" target="_RtKcaycoEeSLVrU2ifxtpw" source="_RtKcfCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcZScoEeSLVrU2ifxtpw" target="_RtKcbicoEeSLVrU2ifxtpw" source="_RtKcgScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKcZicoEeSLVrU2ifxtpw" target="_RtKcZycoEeSLVrU2ifxtpw" source="_RtKccScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKcZycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKcZicoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKcaCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKcYycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcaScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcaicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcaycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKcZCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcbCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcbScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcbicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKcZScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcbycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKccCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKccScoEeSLVrU2ifxtpw" name="Tuple@3475bf4" outgoing="_RtKcZicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKccicoEeSLVrU2ifxtpw" target="_RtKceScoEeSLVrU2ifxtpw" source="_RtKcfycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKccycoEeSLVrU2ifxtpw" name="Value(&quot;customer1.email&quot;)">
                <result xmi:id="_RtKcdCcoEeSLVrU2ifxtpw" name="Value(&quot;customer1.email&quot;).result" outgoing="_RtKcYycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcdScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcdicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcdycoEeSLVrU2ifxtpw" value="customer1.email">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKceCcoEeSLVrU2ifxtpw" name="Read(email)" structuralFeature="_RtLpnycoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKceScoEeSLVrU2ifxtpw" name="Read(email).object" incoming="_RtKccicoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKceicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKceycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKcfCcoEeSLVrU2ifxtpw" name="Read(email).result" outgoing="_RtKcZCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcfScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcficoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKcfycoEeSLVrU2ifxtpw" name="Fork(Fork(customer1)@a300976)" incoming="_RtKbRicoEeSLVrU2ifxtpw" outgoing="_RtKccicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcgCcoEeSLVrU2ifxtpw" name="Value(&quot;fred@blah.com&quot;)">
                <result xmi:id="_RtKcgScoEeSLVrU2ifxtpw" name="Value(&quot;fred@blah.com&quot;).result" outgoing="_RtKcZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcgicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcgycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKchCcoEeSLVrU2ifxtpw" value="fred@blah.com">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKchScoEeSLVrU2ifxtpw" name="ExpressionStatement@4422b21a" incoming="_RtKbSScoEeSLVrU2ifxtpw" outgoing="_RtKbSycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKchicoEeSLVrU2ifxtpw" target="_RtKciycoEeSLVrU2ifxtpw" source="_RtKclycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKchycoEeSLVrU2ifxtpw" target="_RtKcjicoEeSLVrU2ifxtpw" source="_RtKcnycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKciCcoEeSLVrU2ifxtpw" target="_RtKckScoEeSLVrU2ifxtpw" source="_RtKcpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKciScoEeSLVrU2ifxtpw" target="_RtKciicoEeSLVrU2ifxtpw" source="_RtKclCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKciicoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_RtKciScoEeSLVrU2ifxtpw" behavior="_RtLrNCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKciycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_RtKchicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcjCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcjScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcjicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_RtKchycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcjycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKckCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RtKckScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_RtKciCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKckicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKckycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKclCcoEeSLVrU2ifxtpw" name="Tuple@3336ea98" outgoing="_RtKciScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKclScoEeSLVrU2ifxtpw" target="_RtKcnCcoEeSLVrU2ifxtpw" source="_RtKcoicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKclicoEeSLVrU2ifxtpw" name="Value(&quot;customer1.address&quot;)">
                <result xmi:id="_RtKclycoEeSLVrU2ifxtpw" name="Value(&quot;customer1.address&quot;).result" outgoing="_RtKchicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcmCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcmScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcmicoEeSLVrU2ifxtpw" value="customer1.address">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKcmycoEeSLVrU2ifxtpw" name="Read(address)" structuralFeature="_RtLpoicoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKcnCcoEeSLVrU2ifxtpw" name="Read(address).object" incoming="_RtKclScoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcnScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcnicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKcnycoEeSLVrU2ifxtpw" name="Read(address).result" outgoing="_RtKchycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcoCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcoScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKcoicoEeSLVrU2ifxtpw" name="Fork(Fork(customer1)@a300976)" incoming="_RtKbSCcoEeSLVrU2ifxtpw" outgoing="_RtKclScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcoycoEeSLVrU2ifxtpw" name="Value(&quot;Easy Street&quot;)">
                <result xmi:id="_RtKcpCcoEeSLVrU2ifxtpw" name="Value(&quot;Easy Street&quot;).result" outgoing="_RtKciCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcpScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcpicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcpycoEeSLVrU2ifxtpw" value="Easy Street">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKcqCcoEeSLVrU2ifxtpw" name="ExpressionStatement@4c718ac5" incoming="_RtKbSycoEeSLVrU2ifxtpw" outgoing="_RtKbTScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcqScoEeSLVrU2ifxtpw" target="_RtKcricoEeSLVrU2ifxtpw" source="_RtKcuicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcqicoEeSLVrU2ifxtpw" target="_RtKcsScoEeSLVrU2ifxtpw" source="_RtKcwicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcqycoEeSLVrU2ifxtpw" target="_RtKctCcoEeSLVrU2ifxtpw" source="_RtKcxycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKcrCcoEeSLVrU2ifxtpw" target="_RtKcrScoEeSLVrU2ifxtpw" source="_RtKctycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKcrScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKcrCcoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKcricoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKcqScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcrycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcsCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKcsScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKcqicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcsicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcsycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKctCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKcqycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKctScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcticoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKctycoEeSLVrU2ifxtpw" name="Tuple@128e42d" outgoing="_RtKcrCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKcuCcoEeSLVrU2ifxtpw" target="_RtKcvycoEeSLVrU2ifxtpw" source="_RtKcxScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcuScoEeSLVrU2ifxtpw" name="Value(&quot;self.principal&quot;)">
                <result xmi:id="_RtKcuicoEeSLVrU2ifxtpw" name="Value(&quot;self.principal&quot;).result" outgoing="_RtKcqScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcuycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcvCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKcvScoEeSLVrU2ifxtpw" value="self.principal">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKcvicoEeSLVrU2ifxtpw" name="Read(principal)" structuralFeature="_RtKbLScoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKcvycoEeSLVrU2ifxtpw" name="Read(principal).object" incoming="_RtKcuCcoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcwCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcwScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKcwicoEeSLVrU2ifxtpw" name="Read(principal).result" outgoing="_RtKcqicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcwycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcxCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKcxScoEeSLVrU2ifxtpw" name="Fork(Fork(self)@4358b245)" incoming="_RtKbSicoEeSLVrU2ifxtpw" outgoing="_RtKcuCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKcxicoEeSLVrU2ifxtpw" name="Value(1000)">
                <result xmi:id="_RtKcxycoEeSLVrU2ifxtpw" name="Value(1000).result" outgoing="_RtKcqycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKcyCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKcyScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtKcyicoEeSLVrU2ifxtpw" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKcyycoEeSLVrU2ifxtpw" name="ExpressionStatement@187484c1" incoming="_RtKbTScoEeSLVrU2ifxtpw" outgoing="_RtKbTycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKczCcoEeSLVrU2ifxtpw" target="_RtKc0ScoEeSLVrU2ifxtpw" source="_RtKc3ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKczScoEeSLVrU2ifxtpw" target="_RtKc1CcoEeSLVrU2ifxtpw" source="_RtKc5ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKczicoEeSLVrU2ifxtpw" target="_RtKc1ycoEeSLVrU2ifxtpw" source="_RtKc6icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKczycoEeSLVrU2ifxtpw" target="_RtKc0CcoEeSLVrU2ifxtpw" source="_RtKc2icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKc0CcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKczycoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKc0ScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKczCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc0icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc0ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKc1CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKczScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc1ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc1icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKc1ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKczicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc2CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc2ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKc2icoEeSLVrU2ifxtpw" name="Tuple@7e346698" outgoing="_RtKczycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKc2ycoEeSLVrU2ifxtpw" target="_RtKc4icoEeSLVrU2ifxtpw" source="_RtKc6CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKc3CcoEeSLVrU2ifxtpw" name="Value(&quot;self.rate&quot;)">
                <result xmi:id="_RtKc3ScoEeSLVrU2ifxtpw" name="Value(&quot;self.rate&quot;).result" outgoing="_RtKczCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc3icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc3ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtKc4CcoEeSLVrU2ifxtpw" value="self.rate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtKc4ScoEeSLVrU2ifxtpw" name="Read(rate)" structuralFeature="_RtKbMCcoEeSLVrU2ifxtpw">
                <object xmi:id="_RtKc4icoEeSLVrU2ifxtpw" name="Read(rate).object" incoming="_RtKc2ycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc4ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc5CcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtKc5ScoEeSLVrU2ifxtpw" name="Read(rate).result" outgoing="_RtKczScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc5icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc5ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtKc6CcoEeSLVrU2ifxtpw" name="Fork(Fork(self)@4358b245)" incoming="_RtKbTCcoEeSLVrU2ifxtpw" outgoing="_RtKc2ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtKc6ScoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RtKc6icoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RtKczicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc6ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc7CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtKc7ScoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtKc7icoEeSLVrU2ifxtpw" name="ExpressionStatement@529f339e" incoming="_RtKbTycoEeSLVrU2ifxtpw" outgoing="_RtKbUScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKc7ycoEeSLVrU2ifxtpw" target="_RtKc9CcoEeSLVrU2ifxtpw" source="_RtLCNCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKc8CcoEeSLVrU2ifxtpw" target="_RtKc9ycoEeSLVrU2ifxtpw" source="_RtLCPCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtKc8ScoEeSLVrU2ifxtpw" target="_RtKc-icoEeSLVrU2ifxtpw" source="_RtLCQScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtKc8icoEeSLVrU2ifxtpw" target="_RtKc8ycoEeSLVrU2ifxtpw" source="_RtLCMScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtKc8ycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtKc8icoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtKc9CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtKc7ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc9ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc9icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKc9ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtKc8CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc-CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtKc-ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtKc-icoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtKc8ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtKc-ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCMCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCMScoEeSLVrU2ifxtpw" name="Tuple@23d2a5a9" outgoing="_RtKc8icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCMicoEeSLVrU2ifxtpw" target="_RtLCOScoEeSLVrU2ifxtpw" source="_RtLCPycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLCMycoEeSLVrU2ifxtpw" name="Value(&quot;self.interest&quot;)">
                <result xmi:id="_RtLCNCcoEeSLVrU2ifxtpw" name="Value(&quot;self.interest&quot;).result" outgoing="_RtKc7ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCNScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCNicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLCNycoEeSLVrU2ifxtpw" value="self.interest">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLCOCcoEeSLVrU2ifxtpw" name="Read(interest)" structuralFeature="_RtKbMycoEeSLVrU2ifxtpw">
                <object xmi:id="_RtLCOScoEeSLVrU2ifxtpw" name="Read(interest).object" incoming="_RtLCMicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCOicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCOycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLCPCcoEeSLVrU2ifxtpw" name="Read(interest).result" outgoing="_RtKc8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCPScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCPicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLCPycoEeSLVrU2ifxtpw" name="Fork(Fork(self)@4358b245)" incoming="_RtKbTicoEeSLVrU2ifxtpw" outgoing="_RtLCMicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLCQCcoEeSLVrU2ifxtpw" name="Value(500)">
                <result xmi:id="_RtLCQScoEeSLVrU2ifxtpw" name="Value(500).result" outgoing="_RtKc8ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCQicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCQycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtLCRCcoEeSLVrU2ifxtpw" value="500">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCRScoEeSLVrU2ifxtpw" name="ExpressionStatement@263bff7b" incoming="_RtKbUScoEeSLVrU2ifxtpw" outgoing="_RtKbUicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCRicoEeSLVrU2ifxtpw" target="_RtLCSicoEeSLVrU2ifxtpw" source="_RtLCVScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCRycoEeSLVrU2ifxtpw" target="_RtLCUCcoEeSLVrU2ifxtpw" source="_RtLCXScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCSCcoEeSLVrU2ifxtpw" target="_RtLCSScoEeSLVrU2ifxtpw" source="_RtLCUycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLCSScoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_RtLCSCcoEeSLVrU2ifxtpw" behavior="_RtLrNCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLCSicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_RtLCRicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCSycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCTCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtLCTScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_RtKbUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCTicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCTycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RtLCUCcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_RtLCRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCUScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCUicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCUycoEeSLVrU2ifxtpw" name="Tuple@1decbbc0" outgoing="_RtLCSCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLCVCcoEeSLVrU2ifxtpw" name="Value(&quot;names&quot;)">
                <result xmi:id="_RtLCVScoEeSLVrU2ifxtpw" name="Value(&quot;names&quot;).result" outgoing="_RtLCRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCVicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCVycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLCWCcoEeSLVrU2ifxtpw" value="names">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCWScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@46318420">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCWicoEeSLVrU2ifxtpw" target="_RtLCZicoEeSLVrU2ifxtpw" source="_RtLCYCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCWycoEeSLVrU2ifxtpw" target="_RtLCXScoEeSLVrU2ifxtpw" source="_RtLCYicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCXCcoEeSLVrU2ifxtpw" target="_RtLCXScoEeSLVrU2ifxtpw" source="_RtLCaCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RtLCXScoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@46318420.output" incoming="_RtLCWycoEeSLVrU2ifxtpw _RtLCXCcoEeSLVrU2ifxtpw" outgoing="_RtLCRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCXicoEeSLVrU2ifxtpw" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCXycoEeSLVrU2ifxtpw" value="2"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCYCcoEeSLVrU2ifxtpw" name="SequenceExpressionList@385227ca#1" outgoing="_RtLCWicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLCYScoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;)">
                    <result xmi:id="_RtLCYicoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;).result" outgoing="_RtLCWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCYycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCZCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RtLCZScoEeSLVrU2ifxtpw" value="A">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCZicoEeSLVrU2ifxtpw" name="SequenceExpressionList@385227ca#2" incoming="_RtLCWicoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLCZycoEeSLVrU2ifxtpw" name="Value(&quot;B&quot;)">
                    <result xmi:id="_RtLCaCcoEeSLVrU2ifxtpw" name="Value(&quot;B&quot;).result" outgoing="_RtLCXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCaScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCaicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RtLCaycoEeSLVrU2ifxtpw" value="B">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCbCcoEeSLVrU2ifxtpw" name="ExpressionStatement@3c0b4f71" incoming="_RtKbUicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCbScoEeSLVrU2ifxtpw" target="_RtLCcCcoEeSLVrU2ifxtpw" source="_RtLCeCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCbicoEeSLVrU2ifxtpw" target="_RtLCbycoEeSLVrU2ifxtpw" source="_RtLCdicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLCbycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RtLCbicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLCcCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RtLCbScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCcScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCcicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLCcycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCdCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCdScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCdicoEeSLVrU2ifxtpw" name="Tuple@699f3107" outgoing="_RtLCbicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLCdycoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_RtLCeCcoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_RtLCbScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCeScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCeicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLCeycoEeSLVrU2ifxtpw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RtLCfCcoEeSLVrU2ifxtpw" name="test$method$1" specification="_RtLGqicoEeSLVrU2ifxtpw" node="_RtLCkScoEeSLVrU2ifxtpw _RtLCkicoEeSLVrU2ifxtpw _RtLCkycoEeSLVrU2ifxtpw _RtLClCcoEeSLVrU2ifxtpw _RtLClScoEeSLVrU2ifxtpw _RtLClicoEeSLVrU2ifxtpw" group="_RtLClicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RtLCfScoEeSLVrU2ifxtpw" name="member" type="_RtLGvycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCficoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCfycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RtLCgCcoEeSLVrU2ifxtpw" name="customer0" type="_RtLpmycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCgScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCgicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RtLCgycoEeSLVrU2ifxtpw" name="customer1" type="_RtLpmycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLChCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLChScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RtLChicoEeSLVrU2ifxtpw" name="names" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLChycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCiCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RtLCiScoEeSLVrU2ifxtpw" name="self" type="_RtKbIScoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCiicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCiycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCjCcoEeSLVrU2ifxtpw" target="_RtLCkScoEeSLVrU2ifxtpw" source="_RtLCrycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCjScoEeSLVrU2ifxtpw" target="_RtLCkicoEeSLVrU2ifxtpw" source="_RtLCsicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCjicoEeSLVrU2ifxtpw" target="_RtLCkycoEeSLVrU2ifxtpw" source="_RtLCtScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCjycoEeSLVrU2ifxtpw" target="_RtLClCcoEeSLVrU2ifxtpw" source="_RtLCuCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCkCcoEeSLVrU2ifxtpw" target="_RtLClScoEeSLVrU2ifxtpw" source="_RtLCuycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_RtLClicoEeSLVrU2ifxtpw" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLClycoEeSLVrU2ifxtpw" target="_RtLDAScoEeSLVrU2ifxtpw" source="_RtLCvicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCmCcoEeSLVrU2ifxtpw" target="_RtLDRCcoEeSLVrU2ifxtpw" source="_RtLDAScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCmScoEeSLVrU2ifxtpw" target="_RtLDiycoEeSLVrU2ifxtpw" source="_RtLDRCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCmicoEeSLVrU2ifxtpw" target="_RtLD0icoEeSLVrU2ifxtpw" source="_RtLDiycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCmycoEeSLVrU2ifxtpw" target="_RtLEACcoEeSLVrU2ifxtpw" source="_RtLD1CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCnCcoEeSLVrU2ifxtpw" target="_RtLD-ScoEeSLVrU2ifxtpw" source="_RtLD0icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCnScoEeSLVrU2ifxtpw" target="_RtLEIycoEeSLVrU2ifxtpw" source="_RtLD1CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCnicoEeSLVrU2ifxtpw" target="_RtLEHCcoEeSLVrU2ifxtpw" source="_RtLD-ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCnycoEeSLVrU2ifxtpw" target="_RtLEPycoEeSLVrU2ifxtpw" source="_RtLEHCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCoCcoEeSLVrU2ifxtpw" target="_RtLE0icoEeSLVrU2ifxtpw" source="_RtLEQScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCoScoEeSLVrU2ifxtpw" target="_RtLE0ScoEeSLVrU2ifxtpw" source="_RtLEPycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCoicoEeSLVrU2ifxtpw" target="_RtLE3CcoEeSLVrU2ifxtpw" source="_RtLE0icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCoycoEeSLVrU2ifxtpw" target="_RtLFQycoEeSLVrU2ifxtpw" source="_RtLD1CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCpCcoEeSLVrU2ifxtpw" target="_RtLE1CcoEeSLVrU2ifxtpw" source="_RtLE0ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCpScoEeSLVrU2ifxtpw" target="_RtLFRCcoEeSLVrU2ifxtpw" source="_RtLE1CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCpicoEeSLVrU2ifxtpw" target="_RtLFbCcoEeSLVrU2ifxtpw" source="_RtLFRCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCpycoEeSLVrU2ifxtpw" target="_RtLFlCcoEeSLVrU2ifxtpw" source="_RtLFbCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCqCcoEeSLVrU2ifxtpw" target="_RtLGAScoEeSLVrU2ifxtpw" source="_RtLFlCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCqScoEeSLVrU2ifxtpw" target="_RtLGIicoEeSLVrU2ifxtpw" source="_RtLGAScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCqicoEeSLVrU2ifxtpw" target="_RtLCrycoEeSLVrU2ifxtpw" source="_RtLD1CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCqycoEeSLVrU2ifxtpw" target="_RtLCsicoEeSLVrU2ifxtpw" source="_RtLEQScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCrCcoEeSLVrU2ifxtpw" target="_RtLCtScoEeSLVrU2ifxtpw" source="_RtLFOScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCrScoEeSLVrU2ifxtpw" target="_RtLCuCcoEeSLVrU2ifxtpw" source="_RtLGAycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCricoEeSLVrU2ifxtpw" target="_RtLCuycoEeSLVrU2ifxtpw" source="_RtLGJCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_RtLCrycoEeSLVrU2ifxtpw" name="Output(member)" incoming="_RtLCqicoEeSLVrU2ifxtpw" outgoing="_RtLCjCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCsCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCsScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RtLCsicoEeSLVrU2ifxtpw" name="Output(customer0)" incoming="_RtLCqycoEeSLVrU2ifxtpw" outgoing="_RtLCjScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCsycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCtCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RtLCtScoEeSLVrU2ifxtpw" name="Output(customer1)" incoming="_RtLCrCcoEeSLVrU2ifxtpw" outgoing="_RtLCjicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCticoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCtycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RtLCuCcoEeSLVrU2ifxtpw" name="Output(names)" incoming="_RtLCrScoEeSLVrU2ifxtpw" outgoing="_RtLCjycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCuScoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCuicoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RtLCuycoEeSLVrU2ifxtpw" name="Output(self)" incoming="_RtLCricoEeSLVrU2ifxtpw" outgoing="_RtLCkCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCvCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCvScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCvicoEeSLVrU2ifxtpw" name="ExpressionStatement@24084e41" outgoing="_RtLClycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCvycoEeSLVrU2ifxtpw" target="_RtLCzicoEeSLVrU2ifxtpw" source="_RtLCyScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCwCcoEeSLVrU2ifxtpw" target="_RtLC1ScoEeSLVrU2ifxtpw" source="_RtLC0CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCwScoEeSLVrU2ifxtpw" target="_RtLC2ycoEeSLVrU2ifxtpw" source="_RtLC2CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCwicoEeSLVrU2ifxtpw" target="_RtLC3ScoEeSLVrU2ifxtpw" source="_RtLCyycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCwycoEeSLVrU2ifxtpw" target="_RtLC4ycoEeSLVrU2ifxtpw" source="_RtLC2ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCxCcoEeSLVrU2ifxtpw" target="_RtLC5ycoEeSLVrU2ifxtpw" source="_RtLC4CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCxScoEeSLVrU2ifxtpw" target="_RtLC8CcoEeSLVrU2ifxtpw" source="_RtLC2ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCxicoEeSLVrU2ifxtpw" target="_RtLC7ScoEeSLVrU2ifxtpw" source="_RtLC8ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLCxycoEeSLVrU2ifxtpw" target="_RtLC8ycoEeSLVrU2ifxtpw" source="_RtLC9ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLCyCcoEeSLVrU2ifxtpw" target="_RtLCyScoEeSLVrU2ifxtpw" source="_RtLC9CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCyScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@bcc98ef)" incoming="_RtLCyCcoEeSLVrU2ifxtpw" outgoing="_RtLCvycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLCyicoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLCyycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLCwicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLCzCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLCzScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLCzicoEeSLVrU2ifxtpw" name="Index(LeftHandSide@bcc98ef)" incoming="_RtLCvycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLCzycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RtLC0CcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLCwCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC0ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC0icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtLC0ycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLC1CcoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural)">
              <argument xmi:id="_RtLC1ScoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural).argument(x)" incoming="_RtLCwCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC1icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC1ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLC2CcoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural).result(result)" outgoing="_RtLCwScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC2ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC2icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLC2ycoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_RtLCwScoEeSLVrU2ifxtpw" outgoing="_RtLCwycoEeSLVrU2ifxtpw _RtLCxScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_RtLC3CcoEeSLVrU2ifxtpw" name="Remove(members)" structuralFeature="_RtKbKicoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLC3ScoEeSLVrU2ifxtpw" name="Remove(members).object" incoming="_RtLCwicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC3icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC3ycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLC4CcoEeSLVrU2ifxtpw" name="Remove(members).result" outgoing="_RtLCxCcoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC4ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC4icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <removeAt xmi:id="_RtLC4ycoEeSLVrU2ifxtpw" name="Remove(members).removeAt" incoming="_RtLCwycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC5CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC5ScoEeSLVrU2ifxtpw" value="1"/>
              </removeAt>
            </node>
            <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLC5icoEeSLVrU2ifxtpw" name="Write(members)" structuralFeature="_RtKbKicoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLC5ycoEeSLVrU2ifxtpw" name="Write(members).object" incoming="_RtLCxCcoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC6CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC6ScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLC6icoEeSLVrU2ifxtpw" name="Write(members).result" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC6ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC7CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:id="_RtLC7ScoEeSLVrU2ifxtpw" name="Write(members).value" incoming="_RtLCxicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC7icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC7ycoEeSLVrU2ifxtpw" value="1"/>
              </value>
              <insertAt xmi:id="_RtLC8CcoEeSLVrU2ifxtpw" name="Write(members).insertAt" incoming="_RtLCxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC8ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC8icoEeSLVrU2ifxtpw" value="1"/>
              </insertAt>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLC8ycoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@bcc98ef)" incoming="_RtLCxycoEeSLVrU2ifxtpw" outgoing="_RtLCxicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLC9CcoEeSLVrU2ifxtpw" name="RightHandSide@1791125" outgoing="_RtLCyCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLC9ScoEeSLVrU2ifxtpw" target="_RtLC-icoEeSLVrU2ifxtpw" source="_RtLC_icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RtLC9icoEeSLVrU2ifxtpw" name="Call(Member)" operation="_RtLplicoEeSLVrU2ifxtpw">
                <result xmi:id="_RtLC9ycoEeSLVrU2ifxtpw" name="Call(Member).result()" outgoing="_RtLCxycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC-CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC-ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_RtLC-icoEeSLVrU2ifxtpw" name="Call(Member).target" incoming="_RtLC9ScoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC-ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLC_CcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RtLC_ScoEeSLVrU2ifxtpw" name="Create(Member)" classifier="_RtLGvycoEeSLVrU2ifxtpw">
                <result xmi:id="_RtLC_icoEeSLVrU2ifxtpw" name="Create(Member).result" outgoing="_RtLC9ScoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLC_ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDACcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDAScoEeSLVrU2ifxtpw" name="ExpressionStatement@301c375b" incoming="_RtLClycoEeSLVrU2ifxtpw" outgoing="_RtLCmCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLDAicoEeSLVrU2ifxtpw" target="_RtLDEScoEeSLVrU2ifxtpw" source="_RtLDDCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDAycoEeSLVrU2ifxtpw" target="_RtLDGCcoEeSLVrU2ifxtpw" source="_RtLDEycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDBCcoEeSLVrU2ifxtpw" target="_RtLDHicoEeSLVrU2ifxtpw" source="_RtLDGycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDBScoEeSLVrU2ifxtpw" target="_RtLDICcoEeSLVrU2ifxtpw" source="_RtLDDicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDBicoEeSLVrU2ifxtpw" target="_RtLDJicoEeSLVrU2ifxtpw" source="_RtLDHicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDBycoEeSLVrU2ifxtpw" target="_RtLDKicoEeSLVrU2ifxtpw" source="_RtLDIycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDCCcoEeSLVrU2ifxtpw" target="_RtLDMycoEeSLVrU2ifxtpw" source="_RtLDHicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDCScoEeSLVrU2ifxtpw" target="_RtLDMCcoEeSLVrU2ifxtpw" source="_RtLDNicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDCicoEeSLVrU2ifxtpw" target="_RtLDNicoEeSLVrU2ifxtpw" source="_RtLDOicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLDCycoEeSLVrU2ifxtpw" target="_RtLDDCcoEeSLVrU2ifxtpw" source="_RtLDNycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDDCcoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@10e4316d)" incoming="_RtLDCycoEeSLVrU2ifxtpw" outgoing="_RtLDAicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLDDScoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLDDicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLDBScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDDycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDECcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDEScoEeSLVrU2ifxtpw" name="Index(LeftHandSide@10e4316d)" incoming="_RtLDAicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLDEicoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_RtLDEycoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_RtLDAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDFCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDFScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtLDFicoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLDFycoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural)">
              <argument xmi:id="_RtLDGCcoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural).argument(x)" incoming="_RtLDAycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDGScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDGicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLDGycoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural).result(result)" outgoing="_RtLDBCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDHCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDHScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLDHicoEeSLVrU2ifxtpw" name="Fork(Value(2).result)" incoming="_RtLDBCcoEeSLVrU2ifxtpw" outgoing="_RtLDBicoEeSLVrU2ifxtpw _RtLDCCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_RtLDHycoEeSLVrU2ifxtpw" name="Remove(members)" structuralFeature="_RtKbKicoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLDICcoEeSLVrU2ifxtpw" name="Remove(members).object" incoming="_RtLDBScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDIScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDIicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLDIycoEeSLVrU2ifxtpw" name="Remove(members).result" outgoing="_RtLDBycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDJCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDJScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <removeAt xmi:id="_RtLDJicoEeSLVrU2ifxtpw" name="Remove(members).removeAt" incoming="_RtLDBicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDJycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDKCcoEeSLVrU2ifxtpw" value="1"/>
              </removeAt>
            </node>
            <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLDKScoEeSLVrU2ifxtpw" name="Write(members)" structuralFeature="_RtKbKicoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLDKicoEeSLVrU2ifxtpw" name="Write(members).object" incoming="_RtLDBycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDKycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDLCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLDLScoEeSLVrU2ifxtpw" name="Write(members).result" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDLicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDLycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:id="_RtLDMCcoEeSLVrU2ifxtpw" name="Write(members).value" incoming="_RtLDCScoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDMScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDMicoEeSLVrU2ifxtpw" value="1"/>
              </value>
              <insertAt xmi:id="_RtLDMycoEeSLVrU2ifxtpw" name="Write(members).insertAt" incoming="_RtLDCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDNCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDNScoEeSLVrU2ifxtpw" value="1"/>
              </insertAt>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLDNicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@10e4316d)" incoming="_RtLDCicoEeSLVrU2ifxtpw" outgoing="_RtLDCScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDNycoEeSLVrU2ifxtpw" name="RightHandSide@2668ed33" outgoing="_RtLDCycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDOCcoEeSLVrU2ifxtpw" target="_RtLDPScoEeSLVrU2ifxtpw" source="_RtLDQScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RtLDOScoEeSLVrU2ifxtpw" name="Call(Member)" operation="_RtLplicoEeSLVrU2ifxtpw">
                <result xmi:id="_RtLDOicoEeSLVrU2ifxtpw" name="Call(Member).result()" outgoing="_RtLDCicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDOycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDPCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_RtLDPScoEeSLVrU2ifxtpw" name="Call(Member).target" incoming="_RtLDOCcoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDPicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDPycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RtLDQCcoEeSLVrU2ifxtpw" name="Create(Member)" classifier="_RtLGvycoEeSLVrU2ifxtpw">
                <result xmi:id="_RtLDQScoEeSLVrU2ifxtpw" name="Create(Member).result" outgoing="_RtLDOCcoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDQicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDQycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDRCcoEeSLVrU2ifxtpw" name="ExpressionStatement@4d3bd23f" incoming="_RtLCmCcoEeSLVrU2ifxtpw" outgoing="_RtLCmScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDRScoEeSLVrU2ifxtpw" target="_RtLDbycoEeSLVrU2ifxtpw" source="_RtLDVicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDRicoEeSLVrU2ifxtpw" target="_RtLDeCcoEeSLVrU2ifxtpw" source="_RtLDdScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDRycoEeSLVrU2ifxtpw" target="_RtLDfCcoEeSLVrU2ifxtpw" source="_RtLDcicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDSCcoEeSLVrU2ifxtpw" target="_RtLDdScoEeSLVrU2ifxtpw" source="_RtLDhycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLDSScoEeSLVrU2ifxtpw" target="_RtLDSicoEeSLVrU2ifxtpw" source="_RtLDhScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDSicoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@1ee09450)" incoming="_RtLDSScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDSycoEeSLVrU2ifxtpw" target="_RtLDUCcoEeSLVrU2ifxtpw" source="_RtLDZCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDTCcoEeSLVrU2ifxtpw" target="_RtLDbScoEeSLVrU2ifxtpw" source="_RtLDaScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RtLDTScoEeSLVrU2ifxtpw" target="_RtLDTycoEeSLVrU2ifxtpw" source="_RtLDWScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDTicoEeSLVrU2ifxtpw" target="_RtLDUycoEeSLVrU2ifxtpw" source="_RtLDbScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLDTycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RtLDTScoEeSLVrU2ifxtpw">
                <argument xmi:id="_RtLDUCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RtLDSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDUScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDUicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RtLDUycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RtLDTicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDVCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDVScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLDVicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RtLDRScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDVycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDWCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDWScoEeSLVrU2ifxtpw" name="Tuple@3f250b17" outgoing="_RtLDTScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDWicoEeSLVrU2ifxtpw" target="_RtLDZycoEeSLVrU2ifxtpw" source="_RtLDXScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDWycoEeSLVrU2ifxtpw" target="_RtLDYScoEeSLVrU2ifxtpw" source="_RtLDZycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLDXCcoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_RtLDXScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLDWicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDXicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDXycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLDYCcoEeSLVrU2ifxtpw" name="Read(members)" structuralFeature="_RtKbKicoEeSLVrU2ifxtpw">
                  <object xmi:id="_RtLDYScoEeSLVrU2ifxtpw" name="Read(members).object" incoming="_RtLDWycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDYicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDYycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLDZCcoEeSLVrU2ifxtpw" name="Read(members).result" outgoing="_RtLDSycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDZScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDZicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RtLDZycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLDWicoEeSLVrU2ifxtpw" outgoing="_RtLDWycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLDaCcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_RtLDaScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLDTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDaicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDaycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RtLDbCcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLDbScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RtLDTCcoEeSLVrU2ifxtpw" outgoing="_RtLDTicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RtLDbicoEeSLVrU2ifxtpw" name="Clear(name)" structuralFeature="_RtLGxicoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLDbycoEeSLVrU2ifxtpw" name="Clear(name).object" incoming="_RtLDRScoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDcCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDcScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLDcicoEeSLVrU2ifxtpw" name="Clear(name).result" outgoing="_RtLDRycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDcycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDdCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLDdScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@1ee09450)" incoming="_RtLDSCcoEeSLVrU2ifxtpw" outgoing="_RtLDRicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDdicoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Member::name)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDdycoEeSLVrU2ifxtpw" target="_RtLDgicoEeSLVrU2ifxtpw" source="_RtLDeCcoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLDeCcoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Member::name).input(Expressions_Object::Member::name)" incoming="_RtLDRicoEeSLVrU2ifxtpw" outgoing="_RtLDdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDeScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDeicoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLDeycoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_RtLGxicoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RtLDfCcoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_RtLDRycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDfScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDficoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLDfycoEeSLVrU2ifxtpw" name="Write(name).result" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDgCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDgScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RtLDgicoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_RtLDdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDgycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDhCcoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDhScoEeSLVrU2ifxtpw" name="RightHandSide@2c97c0a8" outgoing="_RtLDSScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLDhicoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;)">
                <result xmi:id="_RtLDhycoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;).result" outgoing="_RtLDSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDiCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDiScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLDiicoEeSLVrU2ifxtpw" value="A">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDiycoEeSLVrU2ifxtpw" name="ExpressionStatement@5c081abe" incoming="_RtLCmScoEeSLVrU2ifxtpw" outgoing="_RtLCmicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDjCcoEeSLVrU2ifxtpw" target="_RtLDticoEeSLVrU2ifxtpw" source="_RtLDnScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDjScoEeSLVrU2ifxtpw" target="_RtLDvycoEeSLVrU2ifxtpw" source="_RtLDvCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDjicoEeSLVrU2ifxtpw" target="_RtLDwycoEeSLVrU2ifxtpw" source="_RtLDuScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDjycoEeSLVrU2ifxtpw" target="_RtLDvCcoEeSLVrU2ifxtpw" source="_RtLDzicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLDkCcoEeSLVrU2ifxtpw" target="_RtLDkScoEeSLVrU2ifxtpw" source="_RtLDzCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDkScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@4ea173bc)" incoming="_RtLDkCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDkicoEeSLVrU2ifxtpw" target="_RtLDlycoEeSLVrU2ifxtpw" source="_RtLDqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDkycoEeSLVrU2ifxtpw" target="_RtLDtCcoEeSLVrU2ifxtpw" source="_RtLDsCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RtLDlCcoEeSLVrU2ifxtpw" target="_RtLDlicoEeSLVrU2ifxtpw" source="_RtLDoCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDlScoEeSLVrU2ifxtpw" target="_RtLDmicoEeSLVrU2ifxtpw" source="_RtLDtCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLDlicoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RtLDlCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RtLDlycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RtLDkicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDmCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDmScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RtLDmicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RtLDlScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDmycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDnCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLDnScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RtLDjCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDnicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDnycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDoCcoEeSLVrU2ifxtpw" name="Tuple@39c783f1" outgoing="_RtLDlCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDoScoEeSLVrU2ifxtpw" target="_RtLDricoEeSLVrU2ifxtpw" source="_RtLDpCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDoicoEeSLVrU2ifxtpw" target="_RtLDqCcoEeSLVrU2ifxtpw" source="_RtLDricoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLDoycoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_RtLDpCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLDoScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDpScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDpicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLDpycoEeSLVrU2ifxtpw" name="Read(members)" structuralFeature="_RtKbKicoEeSLVrU2ifxtpw">
                  <object xmi:id="_RtLDqCcoEeSLVrU2ifxtpw" name="Read(members).object" incoming="_RtLDoicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDqScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDqicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLDqycoEeSLVrU2ifxtpw" name="Read(members).result" outgoing="_RtLDkicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDrCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDrScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RtLDricoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLDoScoEeSLVrU2ifxtpw" outgoing="_RtLDoicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLDrycoEeSLVrU2ifxtpw" name="Value(2)">
                  <result xmi:id="_RtLDsCcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_RtLDkycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDsScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDsicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RtLDsycoEeSLVrU2ifxtpw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLDtCcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RtLDkycoEeSLVrU2ifxtpw" outgoing="_RtLDlScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RtLDtScoEeSLVrU2ifxtpw" name="Clear(name)" structuralFeature="_RtLGxicoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLDticoEeSLVrU2ifxtpw" name="Clear(name).object" incoming="_RtLDjCcoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDtycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDuCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLDuScoEeSLVrU2ifxtpw" name="Clear(name).result" outgoing="_RtLDjicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDuicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDuycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLDvCcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@4ea173bc)" incoming="_RtLDjycoEeSLVrU2ifxtpw" outgoing="_RtLDjScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDvScoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Member::name)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLDvicoEeSLVrU2ifxtpw" target="_RtLDyScoEeSLVrU2ifxtpw" source="_RtLDvycoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLDvycoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Member::name).input(Expressions_Object::Member::name)" incoming="_RtLDjScoEeSLVrU2ifxtpw" outgoing="_RtLDvicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDwCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDwScoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLDwicoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_RtLGxicoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RtLDwycoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_RtLDjicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDxCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDxScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLDxicoEeSLVrU2ifxtpw" name="Write(name).result" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDyCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RtLDyScoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_RtLDvicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDyicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLDyycoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLDzCcoEeSLVrU2ifxtpw" name="RightHandSide@171f9c77" outgoing="_RtLDkCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLDzScoEeSLVrU2ifxtpw" name="Value(&quot;B&quot;)">
                <result xmi:id="_RtLDzicoEeSLVrU2ifxtpw" name="Value(&quot;B&quot;).result" outgoing="_RtLDjycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLDzycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLD0CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLD0ScoEeSLVrU2ifxtpw" value="B">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLD0icoEeSLVrU2ifxtpw" name="ExpressionStatement@41c3bd8d" incoming="_RtLCmicoEeSLVrU2ifxtpw" outgoing="_RtLCnCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD0ycoEeSLVrU2ifxtpw" target="_RtLD1CcoEeSLVrU2ifxtpw" source="_RtLD4ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLD1CcoEeSLVrU2ifxtpw" name="Fork(member)@5e264a1f" incoming="_RtLD0ycoEeSLVrU2ifxtpw" outgoing="_RtLCmycoEeSLVrU2ifxtpw _RtLCnScoEeSLVrU2ifxtpw _RtLCoycoEeSLVrU2ifxtpw _RtLCqicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLD1ScoEeSLVrU2ifxtpw" name="RightHandSide@23cc6983">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD1icoEeSLVrU2ifxtpw" target="_RtLD2ycoEeSLVrU2ifxtpw" source="_RtLD7ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD1ycoEeSLVrU2ifxtpw" target="_RtLD-CcoEeSLVrU2ifxtpw" source="_RtLD9CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RtLD2CcoEeSLVrU2ifxtpw" target="_RtLD2icoEeSLVrU2ifxtpw" source="_RtLD5CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD2ScoEeSLVrU2ifxtpw" target="_RtLD3icoEeSLVrU2ifxtpw" source="_RtLD-CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLD2icoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RtLD2CcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RtLD2ycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RtLD1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLD3CcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLD3ScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RtLD3icoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RtLD2ScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLD3ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLD4CcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLD4ScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RtLD0ycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLD4icoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLD4ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLD5CcoEeSLVrU2ifxtpw" name="Tuple@1e26d91b" outgoing="_RtLD2CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD5ScoEeSLVrU2ifxtpw" target="_RtLD8icoEeSLVrU2ifxtpw" source="_RtLD6CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD5icoEeSLVrU2ifxtpw" target="_RtLD7CcoEeSLVrU2ifxtpw" source="_RtLD8icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLD5ycoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_RtLD6CcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLD5ScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLD6ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLD6icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLD6ycoEeSLVrU2ifxtpw" name="Read(members)" structuralFeature="_RtKbKicoEeSLVrU2ifxtpw">
                  <object xmi:id="_RtLD7CcoEeSLVrU2ifxtpw" name="Read(members).object" incoming="_RtLD5icoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLD7ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLD7icoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLD7ycoEeSLVrU2ifxtpw" name="Read(members).result" outgoing="_RtLD1icoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLD8CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLD8ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RtLD8icoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLD5ScoEeSLVrU2ifxtpw" outgoing="_RtLD5icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLD8ycoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_RtLD9CcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLD1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLD9ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLD9icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RtLD9ycoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLD-CcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RtLD1ycoEeSLVrU2ifxtpw" outgoing="_RtLD2ScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLD-ScoEeSLVrU2ifxtpw" name="ExpressionStatement@1483b19a" incoming="_RtLCnCcoEeSLVrU2ifxtpw" outgoing="_RtLCnicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD-icoEeSLVrU2ifxtpw" target="_RtLECScoEeSLVrU2ifxtpw" source="_RtLEBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD-ycoEeSLVrU2ifxtpw" target="_RtLEDScoEeSLVrU2ifxtpw" source="_RtLEAycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLD_CcoEeSLVrU2ifxtpw" target="_RtLEBicoEeSLVrU2ifxtpw" source="_RtLEGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLD_ScoEeSLVrU2ifxtpw" target="_RtLD_icoEeSLVrU2ifxtpw" source="_RtLEFicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLD_icoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@3d3461)" incoming="_RtLD_ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RtLD_ycoEeSLVrU2ifxtpw" name="Clear(isActive)" structuralFeature="_RtLGwycoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLEACcoEeSLVrU2ifxtpw" name="Clear(isActive).object" incoming="_RtLCmycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEAScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEAicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLEAycoEeSLVrU2ifxtpw" name="Clear(isActive).result" outgoing="_RtLD-ycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEBCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEBScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLEBicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@3d3461)" incoming="_RtLD_CcoEeSLVrU2ifxtpw" outgoing="_RtLD-icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEBycoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Member::isActive)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLECCcoEeSLVrU2ifxtpw" target="_RtLEEycoEeSLVrU2ifxtpw" source="_RtLECScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLECScoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Member::isActive).input(Expressions_Object::Member::isActive)" incoming="_RtLD-icoEeSLVrU2ifxtpw" outgoing="_RtLECCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLECicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLECycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLEDCcoEeSLVrU2ifxtpw" name="Write(isActive)" structuralFeature="_RtLGwycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RtLEDScoEeSLVrU2ifxtpw" name="Write(isActive).object" incoming="_RtLD-ycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEDicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEDycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLEECcoEeSLVrU2ifxtpw" name="Write(isActive).result" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEEScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEEicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RtLEEycoEeSLVrU2ifxtpw" name="Write(isActive).value" incoming="_RtLECCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEFCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEFScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEFicoEeSLVrU2ifxtpw" name="RightHandSide@3aeece0e" outgoing="_RtLD_ScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLEFycoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_RtLEGCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RtLD_CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEGScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEGicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RtLEGycoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEHCcoEeSLVrU2ifxtpw" name="ExpressionStatement@2f19b9ba" incoming="_RtLCnicoEeSLVrU2ifxtpw" outgoing="_RtLCnycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEHScoEeSLVrU2ifxtpw" target="_RtLELCcoEeSLVrU2ifxtpw" source="_RtLEKScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEHicoEeSLVrU2ifxtpw" target="_RtLEMCcoEeSLVrU2ifxtpw" source="_RtLEJicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEHycoEeSLVrU2ifxtpw" target="_RtLEKScoEeSLVrU2ifxtpw" source="_RtLEOycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLEICcoEeSLVrU2ifxtpw" target="_RtLEIScoEeSLVrU2ifxtpw" source="_RtLEOScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEIScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@5c863c7e)" incoming="_RtLEICcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RtLEIicoEeSLVrU2ifxtpw" name="Clear(address)" structuralFeature="_RtLGyScoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLEIycoEeSLVrU2ifxtpw" name="Clear(address).object" incoming="_RtLCnScoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEJCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEJScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLEJicoEeSLVrU2ifxtpw" name="Clear(address).result" outgoing="_RtLEHicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEJycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEKCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLEKScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@5c863c7e)" incoming="_RtLEHycoEeSLVrU2ifxtpw" outgoing="_RtLEHScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEKicoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Member::address)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEKycoEeSLVrU2ifxtpw" target="_RtLENicoEeSLVrU2ifxtpw" source="_RtLELCcoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLELCcoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Member::address).input(Expressions_Object::Member::address)" incoming="_RtLEHScoEeSLVrU2ifxtpw" outgoing="_RtLEKycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLELScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLELicoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLELycoEeSLVrU2ifxtpw" name="Write(address)" structuralFeature="_RtLGyScoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RtLEMCcoEeSLVrU2ifxtpw" name="Write(address).object" incoming="_RtLEHicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEMScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEMicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLEMycoEeSLVrU2ifxtpw" name="Write(address).result" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLENCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLENScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RtLENicoEeSLVrU2ifxtpw" name="Write(address).value" incoming="_RtLEKycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLENycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEOCcoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEOScoEeSLVrU2ifxtpw" name="RightHandSide@14ce3deb" outgoing="_RtLEICcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLEOicoEeSLVrU2ifxtpw" name="Value(&quot;Easy Street&quot;)">
                <result xmi:id="_RtLEOycoEeSLVrU2ifxtpw" name="Value(&quot;Easy Street&quot;).result" outgoing="_RtLEHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEPCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEPScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLEPicoEeSLVrU2ifxtpw" value="Easy Street">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEPycoEeSLVrU2ifxtpw" name="ExpressionStatement@75feb231" incoming="_RtLCnycoEeSLVrU2ifxtpw" outgoing="_RtLCoScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEQCcoEeSLVrU2ifxtpw" target="_RtLEQScoEeSLVrU2ifxtpw" source="_RtLEuycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLEQScoEeSLVrU2ifxtpw" name="Fork(customer0)@2c46cc31" incoming="_RtLEQCcoEeSLVrU2ifxtpw" outgoing="_RtLCoCcoEeSLVrU2ifxtpw _RtLCqycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEQicoEeSLVrU2ifxtpw" name="RightHandSide@5c07bbac">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEQycoEeSLVrU2ifxtpw" target="_RtLETicoEeSLVrU2ifxtpw" source="_RtLEwycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLERCcoEeSLVrU2ifxtpw" target="_RtLEUScoEeSLVrU2ifxtpw" source="_RtLEyCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLERScoEeSLVrU2ifxtpw" target="_RtLEVCcoEeSLVrU2ifxtpw" source="_RtLEzScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RtLERicoEeSLVrU2ifxtpw" target="_RtLERycoEeSLVrU2ifxtpw" source="_RtLEwScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLERycoEeSLVrU2ifxtpw" name="Create(Expressions_Object::Customer)" incoming="_RtLERicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLESCcoEeSLVrU2ifxtpw" target="_RtLEYycoEeSLVrU2ifxtpw" source="_RtLETicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLESScoEeSLVrU2ifxtpw" target="_RtLEXScoEeSLVrU2ifxtpw" source="_RtLEWCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLESicoEeSLVrU2ifxtpw" target="_RtLEbScoEeSLVrU2ifxtpw" source="_RtLEUScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLESycoEeSLVrU2ifxtpw" target="_RtLEZycoEeSLVrU2ifxtpw" source="_RtLEYCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLETCcoEeSLVrU2ifxtpw" target="_RtLEtScoEeSLVrU2ifxtpw" source="_RtLEaicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLETScoEeSLVrU2ifxtpw" target="_RtLEuCcoEeSLVrU2ifxtpw" source="_RtLEVCcoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_RtLETicoEeSLVrU2ifxtpw" name="Create(Expressions_Object::Customer).input(Expressions_Object::Customer::name)" incoming="_RtLEQycoEeSLVrU2ifxtpw" outgoing="_RtLESCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLETycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEUCcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeInput xmi:id="_RtLEUScoEeSLVrU2ifxtpw" name="Create(Expressions_Object::Customer).input(Expressions_Object::Customer::email)" incoming="_RtLERCcoEeSLVrU2ifxtpw" outgoing="_RtLESicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEUicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEUycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeInput xmi:id="_RtLEVCcoEeSLVrU2ifxtpw" name="Create(Expressions_Object::Customer).input(Expressions_Object::Customer::address)" incoming="_RtLERScoEeSLVrU2ifxtpw" outgoing="_RtLETScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEVScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEVicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLEVycoEeSLVrU2ifxtpw" name="Value(Customer)">
                  <result xmi:id="_RtLEWCcoEeSLVrU2ifxtpw" name="Value(Customer).result" outgoing="_RtLESScoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEWScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEWicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RtLEWycoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" instance="_RtLppScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLEXCcoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_RtLpnCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_RtLEXScoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_RtLESScoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEXicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEXycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLEYCcoEeSLVrU2ifxtpw" name="Write(name).result" outgoing="_RtLESycoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEYScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEYicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_RtLEYycoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_RtLESCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEZCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEZScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLEZicoEeSLVrU2ifxtpw" name="Write(email)" structuralFeature="_RtLpnycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_RtLEZycoEeSLVrU2ifxtpw" name="Write(email).object" incoming="_RtLESycoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEaCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEaScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLEaicoEeSLVrU2ifxtpw" name="Write(email).result" outgoing="_RtLETCcoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEaycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEbCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_RtLEbScoEeSLVrU2ifxtpw" name="Write(email).value" incoming="_RtLESicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEbicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEbycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:LoopNode" xmi:id="_RtLEcCcoEeSLVrU2ifxtpw" name="Iterate(Write(address))" bodyOutput="_RtLEfycoEeSLVrU2ifxtpw _RtLEpScoEeSLVrU2ifxtpw" bodyPart="_RtLEeycoEeSLVrU2ifxtpw _RtLEiCcoEeSLVrU2ifxtpw _RtLEjicoEeSLVrU2ifxtpw _RtLElCcoEeSLVrU2ifxtpw _RtLEnicoEeSLVrU2ifxtpw" decider="_RtLErCcoEeSLVrU2ifxtpw" isTestedFirst="true" test="_RtLEqCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEcScoEeSLVrU2ifxtpw" target="_RtLEhScoEeSLVrU2ifxtpw" source="_RtLEiScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEcicoEeSLVrU2ifxtpw" target="_RtLEfCcoEeSLVrU2ifxtpw" source="_RtLErycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEcycoEeSLVrU2ifxtpw" target="_RtLEjScoEeSLVrU2ifxtpw" source="_RtLEsicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEdCcoEeSLVrU2ifxtpw" target="_RtLEkycoEeSLVrU2ifxtpw" source="_RtLEjycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEdScoEeSLVrU2ifxtpw" target="_RtLElScoEeSLVrU2ifxtpw" source="_RtLEjScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEdicoEeSLVrU2ifxtpw" target="_RtLEmCcoEeSLVrU2ifxtpw" source="_RtLEkycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEdycoEeSLVrU2ifxtpw" target="_RtLEgicoEeSLVrU2ifxtpw" source="_RtLEmycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEeCcoEeSLVrU2ifxtpw" target="_RtLEnycoEeSLVrU2ifxtpw" source="_RtLEjScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEeScoEeSLVrU2ifxtpw" target="_RtLEoicoEeSLVrU2ifxtpw" source="_RtLEkycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLEeicoEeSLVrU2ifxtpw" target="_RtLEqScoEeSLVrU2ifxtpw" source="_RtLEjScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLEeycoEeSLVrU2ifxtpw" name="Write(address)" structuralFeature="_RtLpoicoEeSLVrU2ifxtpw">
                    <object xmi:id="_RtLEfCcoEeSLVrU2ifxtpw" name="Write(address).object" incoming="_RtLEcicoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEfScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEficoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_RtLEfycoEeSLVrU2ifxtpw" name="Write(address).result" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEgCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEgScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_RtLEgicoEeSLVrU2ifxtpw" name="Write(address).value" incoming="_RtLEdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEgycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEhCcoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                    <insertAt xmi:id="_RtLEhScoEeSLVrU2ifxtpw" name="Write(address).insertAt" incoming="_RtLEcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEhicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEhycoEeSLVrU2ifxtpw" value="1"/>
                    </insertAt>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLEiCcoEeSLVrU2ifxtpw" name="Value(*)">
                    <result xmi:id="_RtLEiScoEeSLVrU2ifxtpw" name="Value(*).result" outgoing="_RtLEcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEiicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEiycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEjCcoEeSLVrU2ifxtpw" value="*">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RtLEjScoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_RtLEcycoEeSLVrU2ifxtpw" outgoing="_RtLEdScoEeSLVrU2ifxtpw _RtLEeCcoEeSLVrU2ifxtpw _RtLEeicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLEjicoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_RtLEjycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLEdCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEkCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEkScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RtLEkicoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RtLEkycoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_RtLEdCcoEeSLVrU2ifxtpw" outgoing="_RtLEdicoEeSLVrU2ifxtpw _RtLEeScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLElCcoEeSLVrU2ifxtpw" name="Call(ListGet)">
                    <argument xmi:id="_RtLElScoEeSLVrU2ifxtpw" name="Call(ListGet).argument(list)" incoming="_RtLEdScoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLElicoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLElycoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_RtLEmCcoEeSLVrU2ifxtpw" name="Call(ListGet).argument(index)" incoming="_RtLEdicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEmScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEmicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLEmycoEeSLVrU2ifxtpw" name="Call(ListGet).result(result)" outgoing="_RtLEdycoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEnCcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEnScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListGet"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLEnicoEeSLVrU2ifxtpw" name="Call(ExcludeAt)">
                    <argument xmi:id="_RtLEnycoEeSLVrU2ifxtpw" name="Call(ExcludeAt).argument(seq)" incoming="_RtLEeCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEoCcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEoScoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_RtLEoicoEeSLVrU2ifxtpw" name="Call(ExcludeAt).argument(index)" incoming="_RtLEeScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEoycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEpCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLEpScoEeSLVrU2ifxtpw" name="Call(ExcludeAt).result()" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEpicoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEpycoEeSLVrU2ifxtpw" value="*"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLEqCcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
                    <argument xmi:id="_RtLEqScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RtLEeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEqicoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEqycoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <result xmi:id="_RtLErCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLErScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEricoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                  </node>
                  <loopVariable xmi:id="_RtLErycoEeSLVrU2ifxtpw" name="Iterate(Write(address)).loopVariable()(Write(email).result)" outgoing="_RtLEcicoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEsCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEsScoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_RtLEsicoEeSLVrU2ifxtpw" name="Iterate(Write(address)).loopVariable()(value)" outgoing="_RtLEcycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEsycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEtCcoEeSLVrU2ifxtpw" value="*"/>
                  </loopVariable>
                  <loopVariableInput xmi:id="_RtLEtScoEeSLVrU2ifxtpw" name="Iterate(Write(address)).loopVariableInput(Write(email).result)" incoming="_RtLETCcoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEticoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEtycoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_RtLEuCcoEeSLVrU2ifxtpw" name="Iterate(Write(address)).loopVariableInput(value)" incoming="_RtLETScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEuScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEuicoEeSLVrU2ifxtpw" value="*"/>
                  </loopVariableInput>
                  <result xmi:id="_RtLEuycoEeSLVrU2ifxtpw" name="Iterate(Write(address)).result(Write(email).result)" outgoing="_RtLEQCcoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEvCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEvScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <result xmi:id="_RtLEvicoEeSLVrU2ifxtpw" name="Iterate(Write(address)).result(value)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEvycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEwCcoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLEwScoEeSLVrU2ifxtpw" name="Tuple@2f5c610" outgoing="_RtLERicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLEwicoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;)">
                  <result xmi:id="_RtLEwycoEeSLVrU2ifxtpw" name="Value(&quot;Fred&quot;).result" outgoing="_RtLEQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLExCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLExScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RtLExicoEeSLVrU2ifxtpw" value="Fred">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLExycoEeSLVrU2ifxtpw" name="Value(&quot;fred@blah.com&quot;)">
                  <result xmi:id="_RtLEyCcoEeSLVrU2ifxtpw" name="Value(&quot;fred@blah.com&quot;).result" outgoing="_RtLERCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEyScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEyicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RtLEyycoEeSLVrU2ifxtpw" value="fred@blah.com">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLEzCcoEeSLVrU2ifxtpw" name="Value(&quot;Unknown&quot;)">
                  <result xmi:id="_RtLEzScoEeSLVrU2ifxtpw" name="Value(&quot;Unknown&quot;).result" outgoing="_RtLERScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLEzicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLEzycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RtLE0CcoEeSLVrU2ifxtpw" value="Unknown">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLE0ScoEeSLVrU2ifxtpw" name="ExpressionStatement@2c42bcc5" incoming="_RtLCoScoEeSLVrU2ifxtpw" outgoing="_RtLCpCcoEeSLVrU2ifxtpw">
            <node xmi:type="uml:ForkNode" xmi:id="_RtLE0icoEeSLVrU2ifxtpw" name="Fork(customer1)@51774036" incoming="_RtLCoCcoEeSLVrU2ifxtpw" outgoing="_RtLCoicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLE0ycoEeSLVrU2ifxtpw" name="RightHandSide@6c18c302"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLE1CcoEeSLVrU2ifxtpw" name="ExpressionStatement@3c1e5453" incoming="_RtLCpCcoEeSLVrU2ifxtpw" outgoing="_RtLCpScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE1ScoEeSLVrU2ifxtpw" target="_RtLE5ScoEeSLVrU2ifxtpw" source="_RtLE4icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE1icoEeSLVrU2ifxtpw" target="_RtLFLScoEeSLVrU2ifxtpw" source="_RtLE3ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE1ycoEeSLVrU2ifxtpw" target="_RtLFOScoEeSLVrU2ifxtpw" source="_RtLFMycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE2CcoEeSLVrU2ifxtpw" target="_RtLE4icoEeSLVrU2ifxtpw" source="_RtLFQCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLE2ScoEeSLVrU2ifxtpw" target="_RtLE2icoEeSLVrU2ifxtpw" source="_RtLFOicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLE2icoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@26d03842)" incoming="_RtLE2ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RtLE2ycoEeSLVrU2ifxtpw" name="Clear(address)" structuralFeature="_RtLpoicoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLE3CcoEeSLVrU2ifxtpw" name="Clear(address).object" incoming="_RtLCoicoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLE3ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLE3icoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLE3ycoEeSLVrU2ifxtpw" name="Clear(address).result" outgoing="_RtLE1icoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLE4CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLE4ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLE4icoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@26d03842)" incoming="_RtLE2CcoEeSLVrU2ifxtpw" outgoing="_RtLE1ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLE4ycoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Customer::address)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE5CcoEeSLVrU2ifxtpw" target="_RtLFMCcoEeSLVrU2ifxtpw" source="_RtLE5ScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLE5ScoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::Customer::address).input(Expressions_Object::Customer::address)" incoming="_RtLE1ScoEeSLVrU2ifxtpw" outgoing="_RtLE5CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLE5icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLE5ycoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeInput>
              <node xmi:type="uml:LoopNode" xmi:id="_RtLE6CcoEeSLVrU2ifxtpw" name="Iterate(Write(address))" bodyOutput="_RtLE9ycoEeSLVrU2ifxtpw _RtLFHScoEeSLVrU2ifxtpw" bodyPart="_RtLE8ycoEeSLVrU2ifxtpw _RtLFACcoEeSLVrU2ifxtpw _RtLFBicoEeSLVrU2ifxtpw _RtLFDCcoEeSLVrU2ifxtpw _RtLFFicoEeSLVrU2ifxtpw" decider="_RtLFJCcoEeSLVrU2ifxtpw" isTestedFirst="true" test="_RtLFICcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE6ScoEeSLVrU2ifxtpw" target="_RtLE_ScoEeSLVrU2ifxtpw" source="_RtLFAScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE6icoEeSLVrU2ifxtpw" target="_RtLE9CcoEeSLVrU2ifxtpw" source="_RtLFJycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE6ycoEeSLVrU2ifxtpw" target="_RtLFBScoEeSLVrU2ifxtpw" source="_RtLFKicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE7CcoEeSLVrU2ifxtpw" target="_RtLFCycoEeSLVrU2ifxtpw" source="_RtLFBycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE7ScoEeSLVrU2ifxtpw" target="_RtLFDScoEeSLVrU2ifxtpw" source="_RtLFBScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE7icoEeSLVrU2ifxtpw" target="_RtLFECcoEeSLVrU2ifxtpw" source="_RtLFCycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE7ycoEeSLVrU2ifxtpw" target="_RtLE-icoEeSLVrU2ifxtpw" source="_RtLFEycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE8CcoEeSLVrU2ifxtpw" target="_RtLFFycoEeSLVrU2ifxtpw" source="_RtLFBScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE8ScoEeSLVrU2ifxtpw" target="_RtLFGicoEeSLVrU2ifxtpw" source="_RtLFCycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLE8icoEeSLVrU2ifxtpw" target="_RtLFIScoEeSLVrU2ifxtpw" source="_RtLFBScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLE8ycoEeSLVrU2ifxtpw" name="Write(address)" structuralFeature="_RtLpoicoEeSLVrU2ifxtpw">
                  <object xmi:id="_RtLE9CcoEeSLVrU2ifxtpw" name="Write(address).object" incoming="_RtLE6icoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLE9ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLE9icoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLE9ycoEeSLVrU2ifxtpw" name="Write(address).result" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLE-CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLE-ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_RtLE-icoEeSLVrU2ifxtpw" name="Write(address).value" incoming="_RtLE7ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLE-ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLE_CcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                  <insertAt xmi:id="_RtLE_ScoEeSLVrU2ifxtpw" name="Write(address).insertAt" incoming="_RtLE6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLE_icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLE_ycoEeSLVrU2ifxtpw" value="1"/>
                  </insertAt>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLFACcoEeSLVrU2ifxtpw" name="Value(*)">
                  <result xmi:id="_RtLFAScoEeSLVrU2ifxtpw" name="Value(*).result" outgoing="_RtLE6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFAicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFAycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFBCcoEeSLVrU2ifxtpw" value="*">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RtLFBScoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_RtLE6ycoEeSLVrU2ifxtpw" outgoing="_RtLE7ScoEeSLVrU2ifxtpw _RtLE8CcoEeSLVrU2ifxtpw _RtLE8icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLFBicoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_RtLFBycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLE7CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFCCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFCScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RtLFCicoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RtLFCycoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_RtLE7CcoEeSLVrU2ifxtpw" outgoing="_RtLE7icoEeSLVrU2ifxtpw _RtLE8ScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLFDCcoEeSLVrU2ifxtpw" name="Call(ListGet)">
                  <argument xmi:id="_RtLFDScoEeSLVrU2ifxtpw" name="Call(ListGet).argument(list)" incoming="_RtLE7ScoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFDicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFDycoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <argument xmi:id="_RtLFECcoEeSLVrU2ifxtpw" name="Call(ListGet).argument(index)" incoming="_RtLE7icoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFEScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFEicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RtLFEycoEeSLVrU2ifxtpw" name="Call(ListGet).result(result)" outgoing="_RtLE7ycoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFFCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFFScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListGet"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLFFicoEeSLVrU2ifxtpw" name="Call(ExcludeAt)">
                  <argument xmi:id="_RtLFFycoEeSLVrU2ifxtpw" name="Call(ExcludeAt).argument(seq)" incoming="_RtLE8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFGCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFGScoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <argument xmi:id="_RtLFGicoEeSLVrU2ifxtpw" name="Call(ExcludeAt).argument(index)" incoming="_RtLE8ScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFGycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFHCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RtLFHScoEeSLVrU2ifxtpw" name="Call(ExcludeAt).result()" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFHicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFHycoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLFICcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
                  <argument xmi:id="_RtLFIScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RtLE8icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFIicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFIycoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <result xmi:id="_RtLFJCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFJScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFJicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <loopVariable xmi:id="_RtLFJycoEeSLVrU2ifxtpw" name="Iterate(Write(address)).loopVariable()(Clear(address).result)" outgoing="_RtLE6icoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFKCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFKScoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_RtLFKicoEeSLVrU2ifxtpw" name="Iterate(Write(address)).loopVariable()(value)" outgoing="_RtLE6ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFKycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFLCcoEeSLVrU2ifxtpw" value="*"/>
                </loopVariable>
                <loopVariableInput xmi:id="_RtLFLScoEeSLVrU2ifxtpw" name="Iterate(Write(address)).loopVariableInput(Clear(address).result)" incoming="_RtLE1icoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFLicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFLycoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_RtLFMCcoEeSLVrU2ifxtpw" name="Iterate(Write(address)).loopVariableInput(value)" incoming="_RtLE5CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFMScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFMicoEeSLVrU2ifxtpw" value="*"/>
                </loopVariableInput>
                <result xmi:id="_RtLFMycoEeSLVrU2ifxtpw" name="Iterate(Write(address)).result(Clear(address).result)" outgoing="_RtLE1ycoEeSLVrU2ifxtpw" type="_RtLpmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFNCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFNScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_RtLFNicoEeSLVrU2ifxtpw" name="Iterate(Write(address)).result(value)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFNycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFOCcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLFOScoEeSLVrU2ifxtpw" name="Fork(Iterate(Write(address)).result(Clear(address).result))" incoming="_RtLE1ycoEeSLVrU2ifxtpw" outgoing="_RtLCrCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFOicoEeSLVrU2ifxtpw" name="RightHandSide@4e99f2a1" outgoing="_RtLE2ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFOycoEeSLVrU2ifxtpw" target="_RtLFPScoEeSLVrU2ifxtpw" source="_RtLFQycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLFPCcoEeSLVrU2ifxtpw" name="Read(address)" structuralFeature="_RtLGyScoEeSLVrU2ifxtpw">
                <object xmi:id="_RtLFPScoEeSLVrU2ifxtpw" name="Read(address).object" incoming="_RtLFOycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFPicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFPycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLFQCcoEeSLVrU2ifxtpw" name="Read(address).result" outgoing="_RtLE2CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFQScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFQicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLFQycoEeSLVrU2ifxtpw" name="Fork(Fork(member)@5e264a1f)" incoming="_RtLCoycoEeSLVrU2ifxtpw" outgoing="_RtLFOycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFRCcoEeSLVrU2ifxtpw" name="ExpressionStatement@791b95a1" incoming="_RtLCpScoEeSLVrU2ifxtpw" outgoing="_RtLCpicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFRScoEeSLVrU2ifxtpw" target="_RtLFUCcoEeSLVrU2ifxtpw" source="_RtLFTCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFRicoEeSLVrU2ifxtpw" target="_RtLFWScoEeSLVrU2ifxtpw" source="_RtLFVicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFRycoEeSLVrU2ifxtpw" target="_RtLFXScoEeSLVrU2ifxtpw" source="_RtLFUycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFSCcoEeSLVrU2ifxtpw" target="_RtLFVicoEeSLVrU2ifxtpw" source="_RtLFaCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLFSScoEeSLVrU2ifxtpw" target="_RtLFSicoEeSLVrU2ifxtpw" source="_RtLFZicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFSicoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@604ec46f)" incoming="_RtLFSScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLFSycoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLFTCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLFRScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFTScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFTicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RtLFTycoEeSLVrU2ifxtpw" name="Clear(principal)" structuralFeature="_RtKbLScoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLFUCcoEeSLVrU2ifxtpw" name="Clear(principal).object" incoming="_RtLFRScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFUScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFUicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLFUycoEeSLVrU2ifxtpw" name="Clear(principal).result" outgoing="_RtLFRycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFVCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFVScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLFVicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@604ec46f)" incoming="_RtLFSCcoEeSLVrU2ifxtpw" outgoing="_RtLFRicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFVycoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::principal)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFWCcoEeSLVrU2ifxtpw" target="_RtLFYycoEeSLVrU2ifxtpw" source="_RtLFWScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLFWScoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::principal).input(Expressions_Object::principal)" incoming="_RtLFRicoEeSLVrU2ifxtpw" outgoing="_RtLFWCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFWicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFWycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLFXCcoEeSLVrU2ifxtpw" name="Write(principal)" structuralFeature="_RtKbLScoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RtLFXScoEeSLVrU2ifxtpw" name="Write(principal).object" incoming="_RtLFRycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFXicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFXycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLFYCcoEeSLVrU2ifxtpw" name="Write(principal).result" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFYScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFYicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RtLFYycoEeSLVrU2ifxtpw" name="Write(principal).value" incoming="_RtLFWCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFZCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFZScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFZicoEeSLVrU2ifxtpw" name="RightHandSide@46d386ab" outgoing="_RtLFSScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLFZycoEeSLVrU2ifxtpw" name="Value(1000)">
                <result xmi:id="_RtLFaCcoEeSLVrU2ifxtpw" name="Value(1000).result" outgoing="_RtLFSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFaScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFaicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtLFaycoEeSLVrU2ifxtpw" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFbCcoEeSLVrU2ifxtpw" name="ExpressionStatement@e68f7e0" incoming="_RtLCpicoEeSLVrU2ifxtpw" outgoing="_RtLCpycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFbScoEeSLVrU2ifxtpw" target="_RtLFeCcoEeSLVrU2ifxtpw" source="_RtLFdCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFbicoEeSLVrU2ifxtpw" target="_RtLFgScoEeSLVrU2ifxtpw" source="_RtLFficoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFbycoEeSLVrU2ifxtpw" target="_RtLFhScoEeSLVrU2ifxtpw" source="_RtLFeycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFcCcoEeSLVrU2ifxtpw" target="_RtLFficoEeSLVrU2ifxtpw" source="_RtLFkCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLFcScoEeSLVrU2ifxtpw" target="_RtLFcicoEeSLVrU2ifxtpw" source="_RtLFjicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFcicoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@540c5c46)" incoming="_RtLFcScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLFcycoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLFdCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLFbScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFdScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFdicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RtLFdycoEeSLVrU2ifxtpw" name="Clear(rate)" structuralFeature="_RtKbMCcoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLFeCcoEeSLVrU2ifxtpw" name="Clear(rate).object" incoming="_RtLFbScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFeScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFeicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLFeycoEeSLVrU2ifxtpw" name="Clear(rate).result" outgoing="_RtLFbycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFfCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFfScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLFficoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@540c5c46)" incoming="_RtLFcCcoEeSLVrU2ifxtpw" outgoing="_RtLFbicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFfycoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::rate)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFgCcoEeSLVrU2ifxtpw" target="_RtLFiycoEeSLVrU2ifxtpw" source="_RtLFgScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLFgScoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::rate).input(Expressions_Object::rate)" incoming="_RtLFbicoEeSLVrU2ifxtpw" outgoing="_RtLFgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFgicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFgycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLFhCcoEeSLVrU2ifxtpw" name="Write(rate)" structuralFeature="_RtKbMCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RtLFhScoEeSLVrU2ifxtpw" name="Write(rate).object" incoming="_RtLFbycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFhicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFhycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLFiCcoEeSLVrU2ifxtpw" name="Write(rate).result" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFiScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFiicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RtLFiycoEeSLVrU2ifxtpw" name="Write(rate).value" incoming="_RtLFgCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFjCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFjScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFjicoEeSLVrU2ifxtpw" name="RightHandSide@720dc9e7" outgoing="_RtLFcScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLFjycoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RtLFkCcoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RtLFcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFkScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFkicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtLFkycoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFlCcoEeSLVrU2ifxtpw" name="ExpressionStatement@24a872c9" incoming="_RtLCpycoEeSLVrU2ifxtpw" outgoing="_RtLCqCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFlScoEeSLVrU2ifxtpw" target="_RtLFoCcoEeSLVrU2ifxtpw" source="_RtLFnCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFlicoEeSLVrU2ifxtpw" target="_RtLFqScoEeSLVrU2ifxtpw" source="_RtLFpicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFlycoEeSLVrU2ifxtpw" target="_RtLFrScoEeSLVrU2ifxtpw" source="_RtLFoycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFmCcoEeSLVrU2ifxtpw" target="_RtLFpicoEeSLVrU2ifxtpw" source="_RtLF_icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLFmScoEeSLVrU2ifxtpw" target="_RtLFmicoEeSLVrU2ifxtpw" source="_RtLFticoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFmicoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@3c6d66d3)" incoming="_RtLFmScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLFmycoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLFnCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLFlScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFnScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFnicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RtLFnycoEeSLVrU2ifxtpw" name="Clear(interest)" structuralFeature="_RtKbMycoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLFoCcoEeSLVrU2ifxtpw" name="Clear(interest).object" incoming="_RtLFlScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFoScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFoicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLFoycoEeSLVrU2ifxtpw" name="Clear(interest).result" outgoing="_RtLFlycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFpCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFpScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLFpicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@3c6d66d3)" incoming="_RtLFmCcoEeSLVrU2ifxtpw" outgoing="_RtLFlicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFpycoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::interest)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFqCcoEeSLVrU2ifxtpw" target="_RtLFsycoEeSLVrU2ifxtpw" source="_RtLFqScoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLFqScoEeSLVrU2ifxtpw" name="WriteAll(Expressions_Object::interest).input(Expressions_Object::interest)" incoming="_RtLFlicoEeSLVrU2ifxtpw" outgoing="_RtLFqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFqycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLFrCcoEeSLVrU2ifxtpw" name="Write(interest)" structuralFeature="_RtKbMycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RtLFrScoEeSLVrU2ifxtpw" name="Write(interest).object" incoming="_RtLFlycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFricoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFrycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLFsCcoEeSLVrU2ifxtpw" name="Write(interest).result" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFsScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFsicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RtLFsycoEeSLVrU2ifxtpw" name="Write(interest).value" incoming="_RtLFqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFtCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFtScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLFticoEeSLVrU2ifxtpw" name="RightHandSide@e78bfcc" outgoing="_RtLFmScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFtycoEeSLVrU2ifxtpw" target="_RtLFzCcoEeSLVrU2ifxtpw" source="_RtLFwicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFuCcoEeSLVrU2ifxtpw" target="_RtLFxicoEeSLVrU2ifxtpw" source="_RtLFzCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFuScoEeSLVrU2ifxtpw" target="_RtLF2CcoEeSLVrU2ifxtpw" source="_RtLFzicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFuicoEeSLVrU2ifxtpw" target="_RtLF0icoEeSLVrU2ifxtpw" source="_RtLF2CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFuycoEeSLVrU2ifxtpw" target="_RtLF2icoEeSLVrU2ifxtpw" source="_RtLFyScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFvCcoEeSLVrU2ifxtpw" target="_RtLF3ScoEeSLVrU2ifxtpw" source="_RtLF1ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFvScoEeSLVrU2ifxtpw" target="_RtLF6ScoEeSLVrU2ifxtpw" source="_RtLF4CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFvicoEeSLVrU2ifxtpw" target="_RtLF7CcoEeSLVrU2ifxtpw" source="_RtLF5CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFvycoEeSLVrU2ifxtpw" target="_RtLF-CcoEeSLVrU2ifxtpw" source="_RtLF7ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLFwCcoEeSLVrU2ifxtpw" target="_RtLF-ycoEeSLVrU2ifxtpw" source="_RtLF8ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLFwScoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLFwicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLFtycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFwycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFxCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLFxScoEeSLVrU2ifxtpw" name="Read(principal)" structuralFeature="_RtKbLScoEeSLVrU2ifxtpw">
                <object xmi:id="_RtLFxicoEeSLVrU2ifxtpw" name="Read(principal).object" incoming="_RtLFuCcoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFyCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLFyScoEeSLVrU2ifxtpw" name="Read(principal).result" outgoing="_RtLFuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFyicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLFyycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLFzCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLFtycoEeSLVrU2ifxtpw" outgoing="_RtLFuCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLFzScoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLFzicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLFuScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLFzycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF0CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLF0ScoEeSLVrU2ifxtpw" name="Read(rate)" structuralFeature="_RtKbMCcoEeSLVrU2ifxtpw">
                <object xmi:id="_RtLF0icoEeSLVrU2ifxtpw" name="Read(rate).object" incoming="_RtLFuicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF0ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF1CcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLF1ScoEeSLVrU2ifxtpw" name="Read(rate).result" outgoing="_RtLFvCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF1icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF1ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLF2CcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLFuScoEeSLVrU2ifxtpw" outgoing="_RtLFuicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLF2ScoEeSLVrU2ifxtpw" name="Call(*)">
                <argument xmi:id="_RtLF2icoEeSLVrU2ifxtpw" name="Call(*).argument(x)" incoming="_RtLFuycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF2ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF3CcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RtLF3ScoEeSLVrU2ifxtpw" name="Call(*).argument(y)" incoming="_RtLFvCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF3icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF3ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLF4CcoEeSLVrU2ifxtpw" name="Call(*).result(result)" outgoing="_RtLFvScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF4ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF4icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLF4ycoEeSLVrU2ifxtpw" name="Value(100)">
                <result xmi:id="_RtLF5CcoEeSLVrU2ifxtpw" name="Value(100).result" outgoing="_RtLFvicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF5ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF5icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtLF5ycoEeSLVrU2ifxtpw" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLF6CcoEeSLVrU2ifxtpw" name="Call(Div)">
                <argument xmi:id="_RtLF6ScoEeSLVrU2ifxtpw" name="Call(Div).argument(x)" incoming="_RtLFvScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF6icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF6ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RtLF7CcoEeSLVrU2ifxtpw" name="Call(Div).argument(y)" incoming="_RtLFvicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF7ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF7icoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLF7ycoEeSLVrU2ifxtpw" name="Call(Div).result(result)" outgoing="_RtLFvycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF8CcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF8ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLF8icoEeSLVrU2ifxtpw" name="Value(10)">
                <result xmi:id="_RtLF8ycoEeSLVrU2ifxtpw" name="Value(10).result" outgoing="_RtLFwCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF9CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF9ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtLF9icoEeSLVrU2ifxtpw" value="10">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLF9ycoEeSLVrU2ifxtpw" name="Call(*)">
                <argument xmi:id="_RtLF-CcoEeSLVrU2ifxtpw" name="Call(*).argument(x)" incoming="_RtLFvycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF-ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF-icoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RtLF-ycoEeSLVrU2ifxtpw" name="Call(*).argument(y)" incoming="_RtLFwCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF_CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLF_ScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLF_icoEeSLVrU2ifxtpw" name="Call(*).result(result)" outgoing="_RtLFmCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLF_ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGACcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLGAScoEeSLVrU2ifxtpw" name="ExpressionStatement@733ed393" incoming="_RtLCqCcoEeSLVrU2ifxtpw" outgoing="_RtLCqScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGAicoEeSLVrU2ifxtpw" target="_RtLGAycoEeSLVrU2ifxtpw" source="_RtLGIScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLGAycoEeSLVrU2ifxtpw" name="Fork(names)@4b8f70b4" incoming="_RtLGAicoEeSLVrU2ifxtpw" outgoing="_RtLCrScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLGBCcoEeSLVrU2ifxtpw" name="RightHandSide@3630602d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGBScoEeSLVrU2ifxtpw" target="_RtLGFCcoEeSLVrU2ifxtpw" source="_RtLGCicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGBicoEeSLVrU2ifxtpw" target="_RtLGDicoEeSLVrU2ifxtpw" source="_RtLGFCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGBycoEeSLVrU2ifxtpw" target="_RtLGFScoEeSLVrU2ifxtpw" source="_RtLGEScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGCCcoEeSLVrU2ifxtpw" target="_RtLGICcoEeSLVrU2ifxtpw" source="_RtLGFScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLGCScoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLGCicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLGBScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGCycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGDCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLGDScoEeSLVrU2ifxtpw" name="Read(members)" structuralFeature="_RtKbKicoEeSLVrU2ifxtpw">
                <object xmi:id="_RtLGDicoEeSLVrU2ifxtpw" name="Read(members).object" incoming="_RtLGBicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGDycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGECcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLGEScoEeSLVrU2ifxtpw" name="Read(members).result" outgoing="_RtLGBycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGEicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGEycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLGFCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLGBScoEeSLVrU2ifxtpw" outgoing="_RtLGBicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RtLGFScoEeSLVrU2ifxtpw" name="Fork(Read(members).result)" incoming="_RtLGBycoEeSLVrU2ifxtpw" outgoing="_RtLGCCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_RtLGFicoEeSLVrU2ifxtpw" name="Collect(Read(name))" mode="parallel" outputElement="_RtLGIScoEeSLVrU2ifxtpw" inputElement="_RtLGICcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGFycoEeSLVrU2ifxtpw" target="_RtLGGicoEeSLVrU2ifxtpw" source="_RtLGICcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGGCcoEeSLVrU2ifxtpw" target="_RtLGIScoEeSLVrU2ifxtpw" source="_RtLGHScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLGGScoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_RtLGxicoEeSLVrU2ifxtpw">
                  <object xmi:id="_RtLGGicoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_RtLGFycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGGycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGHCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLGHScoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_RtLGGCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGHicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGHycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_RtLGICcoEeSLVrU2ifxtpw" name="Collect(Read(name)).inputElement" incoming="_RtLGCCcoEeSLVrU2ifxtpw" outgoing="_RtLGFycoEeSLVrU2ifxtpw" regionAsInput="_RtLGFicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_RtLGIScoEeSLVrU2ifxtpw" name="Collect(Read(name)).outputElement" incoming="_RtLGGCcoEeSLVrU2ifxtpw" outgoing="_RtLGAicoEeSLVrU2ifxtpw" regionAsOutput="_RtLGFicoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLGIicoEeSLVrU2ifxtpw" name="ExpressionStatement@4a292746" incoming="_RtLCqScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGIycoEeSLVrU2ifxtpw" target="_RtLGJCcoEeSLVrU2ifxtpw" source="_RtLGJycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLGJCcoEeSLVrU2ifxtpw" name="Fork(self)@5b194485" incoming="_RtLGIycoEeSLVrU2ifxtpw" outgoing="_RtLCricoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLGJScoEeSLVrU2ifxtpw" name="RightHandSide@57e1a67c">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLGJicoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_RtLGJycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLGIycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGKCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGKScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLCkScoEeSLVrU2ifxtpw" name="Output(member)" incoming="_RtLCjCcoEeSLVrU2ifxtpw" parameter="_RtLCfScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLCkicoEeSLVrU2ifxtpw" name="Output(customer0)" incoming="_RtLCjScoEeSLVrU2ifxtpw" parameter="_RtLCgCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLCkycoEeSLVrU2ifxtpw" name="Output(customer1)" incoming="_RtLCjicoEeSLVrU2ifxtpw" parameter="_RtLCgycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLClCcoEeSLVrU2ifxtpw" name="Output(names)" incoming="_RtLCjycoEeSLVrU2ifxtpw" parameter="_RtLChicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLClScoEeSLVrU2ifxtpw" name="Output(self)" incoming="_RtLCkCcoEeSLVrU2ifxtpw" parameter="_RtLCiScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RtLGKicoEeSLVrU2ifxtpw" name="Expressions_Object$method$1" specification="_RtLGuicoEeSLVrU2ifxtpw" node="_RtLGLycoEeSLVrU2ifxtpw _RtLGMCcoEeSLVrU2ifxtpw" group="_RtLGMCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RtLGKycoEeSLVrU2ifxtpw" name="" type="_RtKbIScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGLCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGLScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGLicoEeSLVrU2ifxtpw" target="_RtLGLycoEeSLVrU2ifxtpw" source="_RtLGQScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_RtLGMCcoEeSLVrU2ifxtpw" name="Body(Expressions_Object$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGMScoEeSLVrU2ifxtpw" target="_RtLGQScoEeSLVrU2ifxtpw" source="_RtLGPicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGMicoEeSLVrU2ifxtpw" target="_RtLGQycoEeSLVrU2ifxtpw" source="_RtLGQScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLGMycoEeSLVrU2ifxtpw" target="_RtLGPCcoEeSLVrU2ifxtpw" source="_RtLGQicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGNCcoEeSLVrU2ifxtpw" target="_RtLGRycoEeSLVrU2ifxtpw" source="_RtLGQScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGNScoEeSLVrU2ifxtpw" target="_RtLGTicoEeSLVrU2ifxtpw" source="_RtLGSicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGNicoEeSLVrU2ifxtpw" target="_RtLGWicoEeSLVrU2ifxtpw" source="_RtLGUScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGNycoEeSLVrU2ifxtpw" target="_RtLGYCcoEeSLVrU2ifxtpw" source="_RtLGVScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLGOCcoEeSLVrU2ifxtpw" target="_RtLGZCcoEeSLVrU2ifxtpw" source="_RtLGYycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGOScoEeSLVrU2ifxtpw" target="_RtLGZCcoEeSLVrU2ifxtpw" source="_RtLGXScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLGOicoEeSLVrU2ifxtpw" target="_RtLGQicoEeSLVrU2ifxtpw" source="_RtLGZCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLGOycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLGPCcoEeSLVrU2ifxtpw" name="Body" incoming="_RtLGMycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLGPScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_RtLGPicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLGMScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGPycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGQCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RtLGQScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLGMScoEeSLVrU2ifxtpw" outgoing="_RtLGLicoEeSLVrU2ifxtpw _RtLGMicoEeSLVrU2ifxtpw _RtLGNCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RtLGQicoEeSLVrU2ifxtpw" name="Call(Expressions_Object$initialization$1)" incoming="_RtLGOicoEeSLVrU2ifxtpw" outgoing="_RtLGMycoEeSLVrU2ifxtpw" operation="_RtLGqScoEeSLVrU2ifxtpw">
            <target xmi:id="_RtLGQycoEeSLVrU2ifxtpw" name="Call(Expressions_Object$initialization$1).target" incoming="_RtLGMicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGRCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGRScoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLGRicoEeSLVrU2ifxtpw" name="Read(Expressions_Object$initializationFlag$1)" structuralFeature="_RtKbJycoEeSLVrU2ifxtpw">
            <object xmi:id="_RtLGRycoEeSLVrU2ifxtpw" name="Read(Expressions_Object$initializationFlag$1).object" incoming="_RtLGNCcoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGSCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGSScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_RtLGSicoEeSLVrU2ifxtpw" name="Read(Expressions_Object$initializationFlag$1).result" outgoing="_RtLGNScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGSycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGTCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLGTScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_RtLGTicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_RtLGNScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGTycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGUCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RtLGUScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_RtLGNicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGUicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGUycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLGVCcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_RtLGVScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RtLGNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGVicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGVycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RtLGWCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RtLGWScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_RtLGWicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_RtLGNicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGWycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGXCcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RtLGXScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_RtLGOScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGXicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGXycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RtLGYCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_RtLGNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGYScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGYicoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RtLGYycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_RtLGOCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RtLGZCcoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Object$initializationFlag$1))" incoming="_RtLGOCcoEeSLVrU2ifxtpw _RtLGOScoEeSLVrU2ifxtpw" outgoing="_RtLGOicoEeSLVrU2ifxtpw" decisionInputFlow="_RtLGOScoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLGLycoEeSLVrU2ifxtpw" name="Return" incoming="_RtLGLicoEeSLVrU2ifxtpw" parameter="_RtLGKycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RtLGZScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_RtLGvicoEeSLVrU2ifxtpw" node="_RtLGZicoEeSLVrU2ifxtpw" group="_RtLGZicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RtLGZicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RtLGZycoEeSLVrU2ifxtpw" name="Expressions_Object$initialization$1" specification="_RtLGqScoEeSLVrU2ifxtpw" node="_RtLGaCcoEeSLVrU2ifxtpw" group="_RtLGaCcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RtLGaCcoEeSLVrU2ifxtpw" name="Body(Expressions_Object$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGaScoEeSLVrU2ifxtpw" target="_RtLGdycoEeSLVrU2ifxtpw" source="_RtLGdCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGaicoEeSLVrU2ifxtpw" target="_RtLGgScoEeSLVrU2ifxtpw" source="_RtLGdycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGaycoEeSLVrU2ifxtpw" target="_RtLGiycoEeSLVrU2ifxtpw" source="_RtLGdycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGbCcoEeSLVrU2ifxtpw" target="_RtLGkicoEeSLVrU2ifxtpw" source="_RtLGjicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGbScoEeSLVrU2ifxtpw" target="_RtLGnicoEeSLVrU2ifxtpw" source="_RtLGlScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGbicoEeSLVrU2ifxtpw" target="_RtLGpCcoEeSLVrU2ifxtpw" source="_RtLGmScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLGbycoEeSLVrU2ifxtpw" target="_RtLGqCcoEeSLVrU2ifxtpw" source="_RtLGpycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGcCcoEeSLVrU2ifxtpw" target="_RtLGqCcoEeSLVrU2ifxtpw" source="_RtLGoScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLGcScoEeSLVrU2ifxtpw" target="_RtLGeCcoEeSLVrU2ifxtpw" source="_RtLGqCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLGcicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLGcycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_RtLGdCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLGaScoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGdScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGdicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RtLGdycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLGaScoEeSLVrU2ifxtpw" outgoing="_RtLGaicoEeSLVrU2ifxtpw _RtLGaycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLGeCcoEeSLVrU2ifxtpw" name="Initialization" incoming="_RtLGcScoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLGeScoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLGeicoEeSLVrU2ifxtpw" target="_RtLGhycoEeSLVrU2ifxtpw" source="_RtLGfCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLGeycoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_RtLGfCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RtLGeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGfScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGficoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RtLGfycoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLGgCcoEeSLVrU2ifxtpw" name="Write(Expressions_Object$initializationFlag$1)" structuralFeature="_RtKbJycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RtLGgScoEeSLVrU2ifxtpw" name="Write(Expressions_Object$initializationFlag$1).object" incoming="_RtLGaicoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGgicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGgycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RtLGhCcoEeSLVrU2ifxtpw" name="Write(Expressions_Object$initializationFlag$1).result" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGhScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGhicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RtLGhycoEeSLVrU2ifxtpw" name="Write(Expressions_Object$initializationFlag$1).value" incoming="_RtLGeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGiCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGiScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLGiicoEeSLVrU2ifxtpw" name="Read(Expressions_Object$initializationFlag$1)" structuralFeature="_RtKbJycoEeSLVrU2ifxtpw">
            <object xmi:id="_RtLGiycoEeSLVrU2ifxtpw" name="Read(Expressions_Object$initializationFlag$1).object" incoming="_RtLGaycoEeSLVrU2ifxtpw" type="_RtKbIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGjCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGjScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_RtLGjicoEeSLVrU2ifxtpw" name="Read(Expressions_Object$initializationFlag$1).result" outgoing="_RtLGbCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGjycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGkCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLGkScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_RtLGkicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_RtLGbCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGkycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGlCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RtLGlScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_RtLGbScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGlicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGlycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLGmCcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_RtLGmScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RtLGbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGmicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGmycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RtLGnCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RtLGnScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_RtLGnicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_RtLGbScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGnycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGoCcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RtLGoScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_RtLGcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGoicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGoycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RtLGpCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_RtLGbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGpScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGpicoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RtLGpycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_RtLGbycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RtLGqCcoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Object$initializationFlag$1))" incoming="_RtLGbycoEeSLVrU2ifxtpw _RtLGcCcoEeSLVrU2ifxtpw" outgoing="_RtLGcScoEeSLVrU2ifxtpw" decisionInputFlow="_RtLGcCcoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_RtLGqScoEeSLVrU2ifxtpw" name="Expressions_Object$initialization$1" visibility="protected" method="_RtLGZycoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_RtLGqicoEeSLVrU2ifxtpw" name="test" visibility="package" method="_RtLCfCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RtLGqycoEeSLVrU2ifxtpw" name="member" visibility="package" type="_RtLGvycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGrCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGrScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RtLGricoEeSLVrU2ifxtpw" name="customer0" visibility="package" type="_RtLpmycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGrycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGsCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RtLGsScoEeSLVrU2ifxtpw" name="customer1" visibility="package" type="_RtLpmycoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGsicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGsycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RtLGtCcoEeSLVrU2ifxtpw" name="names" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGtScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGticoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RtLGtycoEeSLVrU2ifxtpw" name="self" visibility="package" type="_RtKbIScoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGuCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGuScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RtLGuicoEeSLVrU2ifxtpw" name="Expressions_Object" visibility="package" method="_RtLGKicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RtLGuycoEeSLVrU2ifxtpw" name="" visibility="package" type="_RtKbIScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGvCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGvScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RtLGvicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_RtLGZScoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_RtLGvycoEeSLVrU2ifxtpw" name="Member" visibility="package">
        <ownedAttribute xmi:id="_RtLGwCcoEeSLVrU2ifxtpw" name="Member$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGwScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGwicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RtLGwycoEeSLVrU2ifxtpw" name="isActive" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGxCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGxScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RtLGxicoEeSLVrU2ifxtpw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGxycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGyCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RtLGyScoEeSLVrU2ifxtpw" name="address" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGyicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGyycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RtLGzCcoEeSLVrU2ifxtpw" name="Member$method$1" specification="_RtLplicoEeSLVrU2ifxtpw" node="_RtLG0ScoEeSLVrU2ifxtpw _RtLG0icoEeSLVrU2ifxtpw" group="_RtLG0icoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_RtLGzScoEeSLVrU2ifxtpw" name="" type="_RtLGvycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLGzicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLGzycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLG0CcoEeSLVrU2ifxtpw" target="_RtLG0ScoEeSLVrU2ifxtpw" source="_RtLG4ycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_RtLG0icoEeSLVrU2ifxtpw" name="Body(Member$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLG0ycoEeSLVrU2ifxtpw" target="_RtLG4ycoEeSLVrU2ifxtpw" source="_RtLG4CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLG1CcoEeSLVrU2ifxtpw" target="_RtLG5ScoEeSLVrU2ifxtpw" source="_RtLG4ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLG1ScoEeSLVrU2ifxtpw" target="_RtLG3icoEeSLVrU2ifxtpw" source="_RtLG5CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLG1icoEeSLVrU2ifxtpw" target="_RtLG6ScoEeSLVrU2ifxtpw" source="_RtLG4ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLG1ycoEeSLVrU2ifxtpw" target="_RtLG8CcoEeSLVrU2ifxtpw" source="_RtLG7CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLG2CcoEeSLVrU2ifxtpw" target="_RtLpRicoEeSLVrU2ifxtpw" source="_RtLG8ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLG2ScoEeSLVrU2ifxtpw" target="_RtLpTCcoEeSLVrU2ifxtpw" source="_RtLpQScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLG2icoEeSLVrU2ifxtpw" target="_RtLpUCcoEeSLVrU2ifxtpw" source="_RtLpTycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLG2ycoEeSLVrU2ifxtpw" target="_RtLpUCcoEeSLVrU2ifxtpw" source="_RtLpSScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLG3CcoEeSLVrU2ifxtpw" target="_RtLG5CcoEeSLVrU2ifxtpw" source="_RtLpUCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLG3ScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLG3icoEeSLVrU2ifxtpw" name="Body" incoming="_RtLG1ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLG3ycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_RtLG4CcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLG0ycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLG4ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLG4icoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLG4ycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLG0ycoEeSLVrU2ifxtpw" outgoing="_RtLG0CcoEeSLVrU2ifxtpw _RtLG1CcoEeSLVrU2ifxtpw _RtLG1icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RtLG5CcoEeSLVrU2ifxtpw" name="Call(Member$initialization$1)" incoming="_RtLG3CcoEeSLVrU2ifxtpw" outgoing="_RtLG1ScoEeSLVrU2ifxtpw" operation="_RtLplScoEeSLVrU2ifxtpw">
              <target xmi:id="_RtLG5ScoEeSLVrU2ifxtpw" name="Call(Member$initialization$1).target" incoming="_RtLG1CcoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLG5icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLG5ycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLG6CcoEeSLVrU2ifxtpw" name="Read(Member$initializationFlag$1)" structuralFeature="_RtLGwCcoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLG6ScoEeSLVrU2ifxtpw" name="Read(Member$initializationFlag$1).object" incoming="_RtLG1icoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLG6icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLG6ycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLG7CcoEeSLVrU2ifxtpw" name="Read(Member$initializationFlag$1).result" outgoing="_RtLG1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLG7ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLG7icoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLG7ycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_RtLG8CcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_RtLG1ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLG8ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLG8icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RtLG8ycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_RtLG2CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLG9CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLG9ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLpQCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_RtLpQScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RtLG2ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpQicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpQycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RtLpRCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RtLpRScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_RtLpRicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_RtLG2CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpRycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpSCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_RtLpSScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_RtLG2ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpSicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpSycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_RtLpTCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_RtLG2ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpTScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpTicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RtLpTycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_RtLG2icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RtLpUCcoEeSLVrU2ifxtpw" name="Decision(Test(Member$initializationFlag$1))" incoming="_RtLG2icoEeSLVrU2ifxtpw _RtLG2ycoEeSLVrU2ifxtpw" outgoing="_RtLG3CcoEeSLVrU2ifxtpw" decisionInputFlow="_RtLG2ycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLG0ScoEeSLVrU2ifxtpw" name="Return" incoming="_RtLG0CcoEeSLVrU2ifxtpw" parameter="_RtLGzScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RtLpUScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_RtLpmicoEeSLVrU2ifxtpw" node="_RtLpUicoEeSLVrU2ifxtpw" group="_RtLpUicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_RtLpUicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RtLpUycoEeSLVrU2ifxtpw" name="Member$initialization$1" specification="_RtLplScoEeSLVrU2ifxtpw" node="_RtLpVCcoEeSLVrU2ifxtpw" group="_RtLpVCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_RtLpVCcoEeSLVrU2ifxtpw" name="Body(Member$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpVScoEeSLVrU2ifxtpw" target="_RtLpYycoEeSLVrU2ifxtpw" source="_RtLpYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpVicoEeSLVrU2ifxtpw" target="_RtLpbScoEeSLVrU2ifxtpw" source="_RtLpYycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpVycoEeSLVrU2ifxtpw" target="_RtLpdycoEeSLVrU2ifxtpw" source="_RtLpYycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpWCcoEeSLVrU2ifxtpw" target="_RtLpficoEeSLVrU2ifxtpw" source="_RtLpeicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpWScoEeSLVrU2ifxtpw" target="_RtLpiicoEeSLVrU2ifxtpw" source="_RtLpgScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpWicoEeSLVrU2ifxtpw" target="_RtLpkCcoEeSLVrU2ifxtpw" source="_RtLphScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLpWycoEeSLVrU2ifxtpw" target="_RtLplCcoEeSLVrU2ifxtpw" source="_RtLpkycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpXCcoEeSLVrU2ifxtpw" target="_RtLplCcoEeSLVrU2ifxtpw" source="_RtLpjScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLpXScoEeSLVrU2ifxtpw" target="_RtLpZCcoEeSLVrU2ifxtpw" source="_RtLplCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLpXicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RtLpXycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_RtLpYCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RtLpVScoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpYScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpYicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLpYycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RtLpVScoEeSLVrU2ifxtpw" outgoing="_RtLpVicoEeSLVrU2ifxtpw _RtLpVycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLpZCcoEeSLVrU2ifxtpw" name="Initialization" incoming="_RtLpXScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLpZScoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpZicoEeSLVrU2ifxtpw" target="_RtLpcycoEeSLVrU2ifxtpw" source="_RtLpaCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLpZycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_RtLpaCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RtLpZicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpaScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpaicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RtLpaycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RtLpbCcoEeSLVrU2ifxtpw" name="Write(Member$initializationFlag$1)" structuralFeature="_RtLGwCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_RtLpbScoEeSLVrU2ifxtpw" name="Write(Member$initializationFlag$1).object" incoming="_RtLpVicoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpbicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpbycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLpcCcoEeSLVrU2ifxtpw" name="Write(Member$initializationFlag$1).result" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpcScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpcicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_RtLpcycoEeSLVrU2ifxtpw" name="Write(Member$initializationFlag$1).value" incoming="_RtLpZicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpdCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpdScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RtLpdicoEeSLVrU2ifxtpw" name="Read(Member$initializationFlag$1)" structuralFeature="_RtLGwCcoEeSLVrU2ifxtpw">
              <object xmi:id="_RtLpdycoEeSLVrU2ifxtpw" name="Read(Member$initializationFlag$1).object" incoming="_RtLpVycoEeSLVrU2ifxtpw" type="_RtLGvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpeCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpeScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_RtLpeicoEeSLVrU2ifxtpw" name="Read(Member$initializationFlag$1).result" outgoing="_RtLpWCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpeycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpfCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLpfScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_RtLpficoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_RtLpWCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpfycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpgCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RtLpgScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_RtLpWScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpgicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpgycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLphCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_RtLphScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RtLpWicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLphicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLphycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RtLpiCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RtLpiScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_RtLpiicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_RtLpWScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpiycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpjCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_RtLpjScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_RtLpXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpjicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpjycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_RtLpkCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_RtLpWicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpkScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpkicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RtLpkycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_RtLpWycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RtLplCcoEeSLVrU2ifxtpw" name="Decision(Test(Member$initializationFlag$1))" incoming="_RtLpWycoEeSLVrU2ifxtpw _RtLpXCcoEeSLVrU2ifxtpw" outgoing="_RtLpXScoEeSLVrU2ifxtpw" decisionInputFlow="_RtLpXCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_RtLplScoEeSLVrU2ifxtpw" name="Member$initialization$1" visibility="protected" method="_RtLpUycoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_RtLplicoEeSLVrU2ifxtpw" name="Member" visibility="package" method="_RtLGzCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_RtLplycoEeSLVrU2ifxtpw" name="" visibility="package" type="_RtLGvycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpmCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpmScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RtLpmicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_RtLpUScoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:DataType" xmi:id="_RtLpmycoEeSLVrU2ifxtpw" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_RtLpnCcoEeSLVrU2ifxtpw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpnScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpnicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RtLpnycoEeSLVrU2ifxtpw" name="email" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpoCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpoScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RtLpoicoEeSLVrU2ifxtpw" name="address" visibility="public" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpoycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLppCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedAttribute>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:InstanceSpecification" xmi:id="_RtLppScoEeSLVrU2ifxtpw" name="Customer" classifier="_RtLpmycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RtLppicoEeSLVrU2ifxtpw" name="AssertEqual" node="_RtLpvycoEeSLVrU2ifxtpw _RtLpwCcoEeSLVrU2ifxtpw _RtLpwScoEeSLVrU2ifxtpw _RtLpwicoEeSLVrU2ifxtpw _RtLpwycoEeSLVrU2ifxtpw _RtLpxCcoEeSLVrU2ifxtpw _RtLpxScoEeSLVrU2ifxtpw" group="_RtLpxScoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RtLppycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RtLpqCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RtLpqScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RtLpqicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RtLpqycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RtLprCcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLprScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpricoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RtLprycoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpsCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLpsScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RtLpsicoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLpsycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLptCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLptScoEeSLVrU2ifxtpw" target="_RtLpwCcoEeSLVrU2ifxtpw" source="_RtLpvycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpticoEeSLVrU2ifxtpw" target="_RtLpwicoEeSLVrU2ifxtpw" source="_RtLpwScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLptycoEeSLVrU2ifxtpw" target="_RtLpxCcoEeSLVrU2ifxtpw" source="_RtLpwycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpuCcoEeSLVrU2ifxtpw" target="_RtLp6icoEeSLVrU2ifxtpw" source="_RtLpwicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpuScoEeSLVrU2ifxtpw" target="_RtLp8icoEeSLVrU2ifxtpw" source="_RtLpxCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpuicoEeSLVrU2ifxtpw" target="_RtLqKScoEeSLVrU2ifxtpw" source="_RtLpwCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpuycoEeSLVrU2ifxtpw" target="_RtLqTycoEeSLVrU2ifxtpw" source="_RtLpxCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpvCcoEeSLVrU2ifxtpw" target="_RtLqbScoEeSLVrU2ifxtpw" source="_RtLpxCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpvScoEeSLVrU2ifxtpw" target="_RtLqkycoEeSLVrU2ifxtpw" source="_RtLpxCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpvicoEeSLVrU2ifxtpw" target="_RtLqsycoEeSLVrU2ifxtpw" source="_RtLpxCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RtLpxScoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_RtLpxicoEeSLVrU2ifxtpw" name="IfStatement@5b77a36c">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpxycoEeSLVrU2ifxtpw" target="_RtLp4ScoEeSLVrU2ifxtpw" source="_RtLp6icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpyCcoEeSLVrU2ifxtpw" target="_RtLp7CcoEeSLVrU2ifxtpw" source="_RtLp6icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpyScoEeSLVrU2ifxtpw" target="_RtLp5ycoEeSLVrU2ifxtpw" source="_RtLp8icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpyicoEeSLVrU2ifxtpw" target="_RtLp9CcoEeSLVrU2ifxtpw" source="_RtLp8icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpyycoEeSLVrU2ifxtpw" target="_RtLp-ycoEeSLVrU2ifxtpw" source="_RtLp7ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpzCcoEeSLVrU2ifxtpw" target="_RtLp_CcoEeSLVrU2ifxtpw" source="_RtLp9ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpzScoEeSLVrU2ifxtpw" target="_RtLp_icoEeSLVrU2ifxtpw" source="_RtLp-ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpzicoEeSLVrU2ifxtpw" target="_RtLqBScoEeSLVrU2ifxtpw" source="_RtLp_CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLpzycoEeSLVrU2ifxtpw" target="_RtLqCycoEeSLVrU2ifxtpw" source="_RtLp_CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLp0CcoEeSLVrU2ifxtpw" target="_RtLp4CcoEeSLVrU2ifxtpw" source="_RtLqCycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLp0ScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLp0icoEeSLVrU2ifxtpw" target="_RtLp_ScoEeSLVrU2ifxtpw" source="_RtLqCycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLp0ycoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLp1CcoEeSLVrU2ifxtpw" target="_RtLqDCcoEeSLVrU2ifxtpw" source="_RtLp-icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLp1ScoEeSLVrU2ifxtpw" target="_RtLqDCcoEeSLVrU2ifxtpw" source="_RtLp-ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLp1icoEeSLVrU2ifxtpw" target="_RtLqCycoEeSLVrU2ifxtpw" source="_RtLqDCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLp1ycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLp2CcoEeSLVrU2ifxtpw" target="_RtLqBCcoEeSLVrU2ifxtpw" source="_RtLqDCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLp2ScoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLp2icoEeSLVrU2ifxtpw" target="_RtLqDScoEeSLVrU2ifxtpw" source="_RtLp5CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLp2ycoEeSLVrU2ifxtpw" target="_RtLqDScoEeSLVrU2ifxtpw" source="_RtLqAScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLp3CcoEeSLVrU2ifxtpw" target="_RtLqDScoEeSLVrU2ifxtpw" source="_RtLqCCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLp3ScoEeSLVrU2ifxtpw" target="_RtLqDycoEeSLVrU2ifxtpw" source="_RtLqDScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLp3icoEeSLVrU2ifxtpw" target="_RtLqPicoEeSLVrU2ifxtpw" source="_RtLqFScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLp3ycoEeSLVrU2ifxtpw" target="_RtLquicoEeSLVrU2ifxtpw" source="_RtLqPicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RtLp4CcoEeSLVrU2ifxtpw" name="Test(==)" incoming="_RtLp0CcoEeSLVrU2ifxtpw">
            <first xmi:id="_RtLp4ScoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RtLpxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLp4icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLp4ycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RtLp5CcoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RtLp2icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLp5ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLp5icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RtLp5ycoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RtLpyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLp6CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLp6ScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RtLp6icoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_RtLpuCcoEeSLVrU2ifxtpw" outgoing="_RtLpxycoEeSLVrU2ifxtpw _RtLpyCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLp6ycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_RtLp7CcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RtLpyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLp7ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLp7icoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RtLp7ycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RtLpyycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLp8CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLp8ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RtLp8icoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_RtLpuScoEeSLVrU2ifxtpw" outgoing="_RtLpyScoEeSLVrU2ifxtpw _RtLpyicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLp8ycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_RtLp9CcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RtLpyicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLp9ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLp9icoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RtLp9ycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RtLpzCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLp-CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLp-ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RtLp-icoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_RtLp1CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RtLp-ycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RtLpyycoEeSLVrU2ifxtpw" outgoing="_RtLpzScoEeSLVrU2ifxtpw _RtLp1ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RtLp_CcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RtLpzCcoEeSLVrU2ifxtpw" outgoing="_RtLpzicoEeSLVrU2ifxtpw _RtLpzycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLp_ScoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RtLp0icoEeSLVrU2ifxtpw">
            <argument xmi:id="_RtLp_icoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RtLpzScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLp_ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqACcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RtLqAScoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RtLp2ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqAicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqAycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqBCcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RtLp2CcoEeSLVrU2ifxtpw">
            <argument xmi:id="_RtLqBScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RtLpzicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqBicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqBycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RtLqCCcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RtLp3CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqCScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqCicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_RtLqCycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RtLpzycoEeSLVrU2ifxtpw _RtLp1icoEeSLVrU2ifxtpw" outgoing="_RtLp0CcoEeSLVrU2ifxtpw _RtLp0icoEeSLVrU2ifxtpw" decisionInputFlow="_RtLpzycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RtLqDCcoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RtLp1CcoEeSLVrU2ifxtpw _RtLp1ScoEeSLVrU2ifxtpw" outgoing="_RtLp1icoEeSLVrU2ifxtpw _RtLp2CcoEeSLVrU2ifxtpw" decisionInputFlow="_RtLp1ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_RtLqDScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_RtLp2icoEeSLVrU2ifxtpw _RtLp2ycoEeSLVrU2ifxtpw _RtLp3CcoEeSLVrU2ifxtpw" outgoing="_RtLp3ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqDicoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_RtLqDycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RtLp3ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqECcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqEScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RtLqEicoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqEycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqFCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqFScoEeSLVrU2ifxtpw" name="ExpressionStatement@3339046d" outgoing="_RtLp3icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqFicoEeSLVrU2ifxtpw" target="_RtLqGScoEeSLVrU2ifxtpw" source="_RtLqOycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqFycoEeSLVrU2ifxtpw" target="_RtLqGCcoEeSLVrU2ifxtpw" source="_RtLqHCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqGCcoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RtLqFycoEeSLVrU2ifxtpw" behavior="_RtLs1ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLqGScoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RtLqFicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqGicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqGycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqHCcoEeSLVrU2ifxtpw" name="Tuple@38f0b16c" outgoing="_RtLqFycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqHScoEeSLVrU2ifxtpw" target="_RtLqJicoEeSLVrU2ifxtpw" source="_RtLqIScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqHicoEeSLVrU2ifxtpw" target="_RtLqNScoEeSLVrU2ifxtpw" source="_RtLqLCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqHycoEeSLVrU2ifxtpw" target="_RtLqOCcoEeSLVrU2ifxtpw" source="_RtLqMCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLqICcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_RtLqIScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RtLqHScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqIicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqIycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLqJCcoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqJScoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_RtLqJicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLqHScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqJycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqKCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RtLqKScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLpuicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqKicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqKycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLqLCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLqHicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqLScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqLicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLqLycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_RtLqMCcoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_RtLqHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqMScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqMicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLqMycoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqNCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_RtLqNScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLqHicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqNicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqNycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RtLqOCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLqHycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqOScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqOicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLqOycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLqFicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqPCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqPScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqPicoEeSLVrU2ifxtpw" name="ExpressionStatement@3763985a" incoming="_RtLp3icoEeSLVrU2ifxtpw" outgoing="_RtLp3ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqPycoEeSLVrU2ifxtpw" target="_RtLqQicoEeSLVrU2ifxtpw" source="_RtLquScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqQCcoEeSLVrU2ifxtpw" target="_RtLqQScoEeSLVrU2ifxtpw" source="_RtLqRScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqQScoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RtLqQCcoEeSLVrU2ifxtpw" behavior="_RtLs1ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLqQicoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RtLqPycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqQycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqRCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqRScoEeSLVrU2ifxtpw" name="Tuple@625af9b" outgoing="_RtLqQCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqRicoEeSLVrU2ifxtpw" target="_RtLquCcoEeSLVrU2ifxtpw" source="_RtLqtycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqRycoEeSLVrU2ifxtpw" target="_RtLquCcoEeSLVrU2ifxtpw" source="_RtLqUicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqSCcoEeSLVrU2ifxtpw" target="_RtLqVScoEeSLVrU2ifxtpw" source="_RtLquCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLqSScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqSicoEeSLVrU2ifxtpw" target="_RtLqXycoEeSLVrU2ifxtpw" source="_RtLquCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLqSycoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqTCcoEeSLVrU2ifxtpw" target="_RtLquScoEeSLVrU2ifxtpw" source="_RtLqVycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqTScoEeSLVrU2ifxtpw" target="_RtLquScoEeSLVrU2ifxtpw" source="_RtLqaScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqTicoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_RtLqTycoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_RtLpuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqUCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqUScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_RtLqUicoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_RtLqRycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqUycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqVCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqVScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@6ca85bcc.operand2" incoming="_RtLqSCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqVicoEeSLVrU2ifxtpw" target="_RtLqVycoEeSLVrU2ifxtpw" source="_RtLqWycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RtLqVycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@6ca85bcc.operand2.result" incoming="_RtLqVicoEeSLVrU2ifxtpw" outgoing="_RtLqTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqWCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqWScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLqWicoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_RtLqWycoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_RtLqVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqXCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqXScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RtLqXicoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqXycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@6ca85bcc.operand3" incoming="_RtLqSicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqYCcoEeSLVrU2ifxtpw" target="_RtLqtScoEeSLVrU2ifxtpw" source="_RtLqtCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqYScoEeSLVrU2ifxtpw" target="_RtLqtScoEeSLVrU2ifxtpw" source="_RtLqcCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqYicoEeSLVrU2ifxtpw" target="_RtLqcycoEeSLVrU2ifxtpw" source="_RtLqtScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLqYycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqZCcoEeSLVrU2ifxtpw" target="_RtLqricoEeSLVrU2ifxtpw" source="_RtLqtScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLqZScoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqZicoEeSLVrU2ifxtpw" target="_RtLqticoEeSLVrU2ifxtpw" source="_RtLqeScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqZycoEeSLVrU2ifxtpw" target="_RtLqticoEeSLVrU2ifxtpw" source="_RtLqsCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqaCcoEeSLVrU2ifxtpw" target="_RtLqaScoEeSLVrU2ifxtpw" source="_RtLqticoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RtLqaScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@6ca85bcc.operand3.result" incoming="_RtLqaCcoEeSLVrU2ifxtpw" outgoing="_RtLqTScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqaicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqaycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RtLqbCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_RtLqbScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RtLpvCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqbicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqbycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RtLqcCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RtLqYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqcScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqcicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqcycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@68bf7345.operand2" incoming="_RtLqYicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqdCcoEeSLVrU2ifxtpw" target="_RtLqlicoEeSLVrU2ifxtpw" source="_RtLqfScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqdScoEeSLVrU2ifxtpw" target="_RtLqmScoEeSLVrU2ifxtpw" source="_RtLqlCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqdicoEeSLVrU2ifxtpw" target="_RtLqpScoEeSLVrU2ifxtpw" source="_RtLqnCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqdycoEeSLVrU2ifxtpw" target="_RtLqqCcoEeSLVrU2ifxtpw" source="_RtLqoCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqeCcoEeSLVrU2ifxtpw" target="_RtLqeScoEeSLVrU2ifxtpw" source="_RtLqqycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_RtLqeScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@68bf7345.operand2.result" incoming="_RtLqeCcoEeSLVrU2ifxtpw" outgoing="_RtLqZicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqeicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqeycoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLqfCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RtLqfScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RtLqdCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqficoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqfycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RtLqgCcoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_RtLqgScoEeSLVrU2ifxtpw" name="CastExpression@233730e0" mode="parallel" outputElement="_RtLqlCcoEeSLVrU2ifxtpw" inputElement="_RtLqkycoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqgicoEeSLVrU2ifxtpw" target="_RtLqiycoEeSLVrU2ifxtpw" source="_RtLqkScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqgycoEeSLVrU2ifxtpw" target="_RtLqkicoEeSLVrU2ifxtpw" source="_RtLqkScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqhCcoEeSLVrU2ifxtpw" target="_RtLqkicoEeSLVrU2ifxtpw" source="_RtLqjicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqhScoEeSLVrU2ifxtpw" target="_RtLqiScoEeSLVrU2ifxtpw" source="_RtLqkicoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLqhicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqhycoEeSLVrU2ifxtpw" target="_RtLqkScoEeSLVrU2ifxtpw" source="_RtLqkycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqiCcoEeSLVrU2ifxtpw" target="_RtLqlCcoEeSLVrU2ifxtpw" source="_RtLqiScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_RtLqiScoEeSLVrU2ifxtpw" name="Merge(CastExpression@233730e0.operand)" incoming="_RtLqhScoEeSLVrU2ifxtpw" outgoing="_RtLqiCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RtLqiicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_RtLqiycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RtLqgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqjCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqjScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_RtLqjicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RtLqhCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqjycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqkCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RtLqkScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_RtLqhycoEeSLVrU2ifxtpw" outgoing="_RtLqgicoEeSLVrU2ifxtpw _RtLqgycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_RtLqkicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_RtLqgycoEeSLVrU2ifxtpw _RtLqhCcoEeSLVrU2ifxtpw" outgoing="_RtLqhScoEeSLVrU2ifxtpw" decisionInputFlow="_RtLqhCcoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RtLqkycoEeSLVrU2ifxtpw" name="CastExpression@233730e0.inputElement" incoming="_RtLpvScoEeSLVrU2ifxtpw" outgoing="_RtLqhycoEeSLVrU2ifxtpw" regionAsInput="_RtLqgScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RtLqlCcoEeSLVrU2ifxtpw" name="CastExpression@233730e0.outputElement" incoming="_RtLqiCcoEeSLVrU2ifxtpw" outgoing="_RtLqdScoEeSLVrU2ifxtpw" regionAsOutput="_RtLqgScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqlScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RtLqlicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLqdCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqlycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqmCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RtLqmScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLqdScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqmicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqmycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLqnCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLqdicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqnScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqnicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLqnycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RtLqoCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RtLqdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqoScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqoicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RtLqoycoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqpCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RtLqpScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLqdicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqpicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqpycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RtLqqCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLqdycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqqScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqqicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLqqycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLqeCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqrCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqrScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqricoEeSLVrU2ifxtpw" name="ConditionalTestExpression@68bf7345.operand3" incoming="_RtLqZCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLqrycoEeSLVrU2ifxtpw" target="_RtLqsCcoEeSLVrU2ifxtpw" source="_RtLqsycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_RtLqsCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@68bf7345.operand3.result" incoming="_RtLqrycoEeSLVrU2ifxtpw" outgoing="_RtLqZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqsScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqsicoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_RtLqsycoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_RtLpvicoEeSLVrU2ifxtpw" outgoing="_RtLqrycoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_RtLqtCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@68bf7345)" outgoing="_RtLqYCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_RtLqtScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@68bf7345)" incoming="_RtLqYCcoEeSLVrU2ifxtpw _RtLqYScoEeSLVrU2ifxtpw" outgoing="_RtLqYicoEeSLVrU2ifxtpw _RtLqZCcoEeSLVrU2ifxtpw" decisionInputFlow="_RtLqYScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_RtLqticoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@68bf7345.result)" incoming="_RtLqZicoEeSLVrU2ifxtpw _RtLqZycoEeSLVrU2ifxtpw" outgoing="_RtLqaCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RtLqtycoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@6ca85bcc)" outgoing="_RtLqRicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RtLquCcoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@6ca85bcc)" incoming="_RtLqRicoEeSLVrU2ifxtpw _RtLqRycoEeSLVrU2ifxtpw" outgoing="_RtLqSCcoEeSLVrU2ifxtpw _RtLqSicoEeSLVrU2ifxtpw" decisionInputFlow="_RtLqRycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RtLquScoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@6ca85bcc.result)" incoming="_RtLqTCcoEeSLVrU2ifxtpw _RtLqTScoEeSLVrU2ifxtpw" outgoing="_RtLqPycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLquicoEeSLVrU2ifxtpw" name="ExpressionStatement@2c1907ae" incoming="_RtLp3ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLquycoEeSLVrU2ifxtpw" target="_RtLqvicoEeSLVrU2ifxtpw" source="_RtLqxicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLqvCcoEeSLVrU2ifxtpw" target="_RtLqvScoEeSLVrU2ifxtpw" source="_RtLqxCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLqvScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RtLqvCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLqvicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RtLquycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqvycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqwCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLqwScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqwicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqwycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLqxCcoEeSLVrU2ifxtpw" name="Tuple@13493d20" outgoing="_RtLqvCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLqxScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_RtLqxicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_RtLquycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqyCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLqyScoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLqyicoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_RtLqyycoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLqzCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLqzScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RtLqzicoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_RtLqzycoEeSLVrU2ifxtpw" body="_RtLqFScoEeSLVrU2ifxtpw _RtLqPicoEeSLVrU2ifxtpw _RtLquicoEeSLVrU2ifxtpw" decider="_RtLqEicoEeSLVrU2ifxtpw" successorClause="_RtLq0CcoEeSLVrU2ifxtpw" test="_RtLp4CcoEeSLVrU2ifxtpw _RtLp6ycoEeSLVrU2ifxtpw _RtLp8ycoEeSLVrU2ifxtpw _RtLp_ScoEeSLVrU2ifxtpw _RtLqBCcoEeSLVrU2ifxtpw _RtLqDicoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_RtLq0CcoEeSLVrU2ifxtpw" decider="_RtLqyycoEeSLVrU2ifxtpw" predecessorClause="_RtLqzycoEeSLVrU2ifxtpw" test="_RtLqyicoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLpvycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RtLptScoEeSLVrU2ifxtpw" parameter="_RtLprCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLpwCcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RtLptScoEeSLVrU2ifxtpw" outgoing="_RtLpuicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLpwScoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_RtLpticoEeSLVrU2ifxtpw" parameter="_RtLprycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLpwicoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_RtLpticoEeSLVrU2ifxtpw" outgoing="_RtLpuCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLpwycoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_RtLptycoEeSLVrU2ifxtpw" parameter="_RtLpsicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLpxCcoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_RtLptycoEeSLVrU2ifxtpw" outgoing="_RtLpuScoEeSLVrU2ifxtpw _RtLpuycoEeSLVrU2ifxtpw _RtLpvCcoEeSLVrU2ifxtpw _RtLpvScoEeSLVrU2ifxtpw _RtLpvicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RtLq0ScoEeSLVrU2ifxtpw" name="AssertTrue" node="_RtLq4ScoEeSLVrU2ifxtpw _RtLq4icoEeSLVrU2ifxtpw _RtLq4ycoEeSLVrU2ifxtpw _RtLq5CcoEeSLVrU2ifxtpw _RtLq5ScoEeSLVrU2ifxtpw" group="_RtLq5ScoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RtLq0icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RtLq0ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RtLq1CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RtLq1ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RtLq1icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RtLq1ycoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLq2CcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLq2ScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RtLq2icoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLq2ycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLq3CcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq3ScoEeSLVrU2ifxtpw" target="_RtLq4icoEeSLVrU2ifxtpw" source="_RtLq4ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq3icoEeSLVrU2ifxtpw" target="_RtLq5CcoEeSLVrU2ifxtpw" source="_RtLq4ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq3ycoEeSLVrU2ifxtpw" target="_RtLrACcoEeSLVrU2ifxtpw" source="_RtLq5CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq4CcoEeSLVrU2ifxtpw" target="_RtLrJycoEeSLVrU2ifxtpw" source="_RtLq4icoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RtLq5ScoEeSLVrU2ifxtpw" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_RtLq5icoEeSLVrU2ifxtpw" name="IfStatement@79e9ac03">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq5ycoEeSLVrU2ifxtpw" target="_RtLq9ycoEeSLVrU2ifxtpw" source="_RtLrACcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq6CcoEeSLVrU2ifxtpw" target="_RtLrAicoEeSLVrU2ifxtpw" source="_RtLrACcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq6ScoEeSLVrU2ifxtpw" target="_RtLrCCcoEeSLVrU2ifxtpw" source="_RtLrBScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq6icoEeSLVrU2ifxtpw" target="_RtLrCScoEeSLVrU2ifxtpw" source="_RtLq-icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq6ycoEeSLVrU2ifxtpw" target="_RtLrCicoEeSLVrU2ifxtpw" source="_RtLrCCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq7CcoEeSLVrU2ifxtpw" target="_RtLrCicoEeSLVrU2ifxtpw" source="_RtLrCCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq7ScoEeSLVrU2ifxtpw" target="_RtLrCScoEeSLVrU2ifxtpw" source="_RtLrCicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RtLq7icoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq7ycoEeSLVrU2ifxtpw" target="_RtLq_ScoEeSLVrU2ifxtpw" source="_RtLq8icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLq8CcoEeSLVrU2ifxtpw" target="_RtLrDCcoEeSLVrU2ifxtpw" source="_RtLrCScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLq8ScoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_RtLq8icoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RtLq7ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLq8ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLq9CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RtLq9ScoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RtLq9icoEeSLVrU2ifxtpw" name="Test(==)">
            <first xmi:id="_RtLq9ycoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RtLq5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLq-CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLq-ScoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RtLq-icoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RtLq6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLq-ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLq_CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RtLq_ScoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RtLq7ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLq_icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLq_ycoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RtLrACcoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_RtLq3ycoEeSLVrU2ifxtpw" outgoing="_RtLq5ycoEeSLVrU2ifxtpw _RtLq6CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrAScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_RtLrAicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RtLq6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrAycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrBCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RtLrBScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RtLq6ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrBicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrBycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RtLrCCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RtLq6ScoEeSLVrU2ifxtpw" outgoing="_RtLq6ycoEeSLVrU2ifxtpw _RtLq7CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_RtLrCScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_RtLq6icoEeSLVrU2ifxtpw _RtLq7ScoEeSLVrU2ifxtpw" outgoing="_RtLq8CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RtLrCicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RtLq6ycoEeSLVrU2ifxtpw _RtLq7CcoEeSLVrU2ifxtpw" outgoing="_RtLq7ScoEeSLVrU2ifxtpw" decisionInputFlow="_RtLq7CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrCycoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_RtLrDCcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RtLq8CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrDScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrDicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RtLrDycoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrECcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrEScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLrEicoEeSLVrU2ifxtpw" name="ExpressionStatement@46a53a27">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrEycoEeSLVrU2ifxtpw" target="_RtLrFicoEeSLVrU2ifxtpw" source="_RtLrKicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLrFCcoEeSLVrU2ifxtpw" target="_RtLrFScoEeSLVrU2ifxtpw" source="_RtLrHCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrFScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RtLrFCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLrFicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RtLrEycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrFycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrGCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLrGScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrGicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrGycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLrHCcoEeSLVrU2ifxtpw" name="Tuple@4a270f33" outgoing="_RtLrFCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrHScoEeSLVrU2ifxtpw" target="_RtLrJCcoEeSLVrU2ifxtpw" source="_RtLrHycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLrHicoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_RtLrHycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RtLrHScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrICcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrIScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RtLrIicoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrIycoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_RtLrJCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLrHScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrJScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrJicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RtLrJycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLq4CcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrKCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrKScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RtLrKicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLrEycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrKycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrLCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLrLScoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_RtLrLicoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrLycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrMCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RtLrMScoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_RtLrMicoEeSLVrU2ifxtpw" body="_RtLrEicoEeSLVrU2ifxtpw" decider="_RtLrDycoEeSLVrU2ifxtpw" successorClause="_RtLrMycoEeSLVrU2ifxtpw" test="_RtLq8ScoEeSLVrU2ifxtpw _RtLq9icoEeSLVrU2ifxtpw _RtLrAScoEeSLVrU2ifxtpw _RtLrCycoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_RtLrMycoEeSLVrU2ifxtpw" decider="_RtLrLicoEeSLVrU2ifxtpw" predecessorClause="_RtLrMicoEeSLVrU2ifxtpw" test="_RtLrLScoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLq4ScoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RtLq3ScoEeSLVrU2ifxtpw" parameter="_RtLq1ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLq4icoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RtLq3ScoEeSLVrU2ifxtpw" outgoing="_RtLq4CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLq4ycoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_RtLq3icoEeSLVrU2ifxtpw" parameter="_RtLq2icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLq5CcoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_RtLq3icoEeSLVrU2ifxtpw" outgoing="_RtLq3ycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RtLrNCcoEeSLVrU2ifxtpw" name="AssertList" node="_RtLrTicoEeSLVrU2ifxtpw _RtLrTycoEeSLVrU2ifxtpw _RtLrUCcoEeSLVrU2ifxtpw _RtLrUScoEeSLVrU2ifxtpw _RtLrUicoEeSLVrU2ifxtpw _RtLrUycoEeSLVrU2ifxtpw _RtLrVCcoEeSLVrU2ifxtpw" group="_RtLrVCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RtLrNScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RtLrNicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RtLrNycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RtLrOCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RtLrOScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RtLrOicoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrOycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrPCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RtLrPScoEeSLVrU2ifxtpw" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrPicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrPycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RtLrQCcoEeSLVrU2ifxtpw" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrQScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrQicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrQycoEeSLVrU2ifxtpw" target="_RtLrTycoEeSLVrU2ifxtpw" source="_RtLrTicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrRCcoEeSLVrU2ifxtpw" target="_RtLrUScoEeSLVrU2ifxtpw" source="_RtLrUCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrRScoEeSLVrU2ifxtpw" target="_RtLrUycoEeSLVrU2ifxtpw" source="_RtLrUicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrRicoEeSLVrU2ifxtpw" target="_RtLrbScoEeSLVrU2ifxtpw" source="_RtLrTycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrRycoEeSLVrU2ifxtpw" target="_RtLrdycoEeSLVrU2ifxtpw" source="_RtLrUScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrSCcoEeSLVrU2ifxtpw" target="_RtLrficoEeSLVrU2ifxtpw" source="_RtLrUycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrSScoEeSLVrU2ifxtpw" target="_RtLsbicoEeSLVrU2ifxtpw" source="_RtLrUycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrSicoEeSLVrU2ifxtpw" target="_RtLscScoEeSLVrU2ifxtpw" source="_RtLrUScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrSycoEeSLVrU2ifxtpw" target="_RtLsdCcoEeSLVrU2ifxtpw" source="_RtLrTycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrTCcoEeSLVrU2ifxtpw" target="_RtLsqycoEeSLVrU2ifxtpw" source="_RtLrUScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrTScoEeSLVrU2ifxtpw" target="_RtLssicoEeSLVrU2ifxtpw" source="_RtLrUycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RtLrVCcoEeSLVrU2ifxtpw" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_RtLrVScoEeSLVrU2ifxtpw" target="_RtLrhCcoEeSLVrU2ifxtpw" source="_RtLrVicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLrVicoEeSLVrU2ifxtpw" name="ExpressionStatement@ca43bbd" outgoing="_RtLrVScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrVycoEeSLVrU2ifxtpw" target="_RtLrXCcoEeSLVrU2ifxtpw" source="_RtLrcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrWCcoEeSLVrU2ifxtpw" target="_RtLrXycoEeSLVrU2ifxtpw" source="_RtLreicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrWScoEeSLVrU2ifxtpw" target="_RtLrYicoEeSLVrU2ifxtpw" source="_RtLrgScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLrWicoEeSLVrU2ifxtpw" target="_RtLrWycoEeSLVrU2ifxtpw" source="_RtLrZScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrWycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtLrWicoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
            <argument xmi:id="_RtLrXCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtLrVycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrXScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrXicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RtLrXycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtLrWCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrYCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrYScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RtLrYicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtLrWScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrYycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrZCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLrZScoEeSLVrU2ifxtpw" name="Tuple@30322e1b" outgoing="_RtLrWicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrZicoEeSLVrU2ifxtpw" target="_RtLrcCcoEeSLVrU2ifxtpw" source="_RtLraCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLrZycoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_RtLraCcoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;).result" outgoing="_RtLrZicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLraScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLraicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RtLraycoEeSLVrU2ifxtpw" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrbCcoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_RtLrbScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLrRicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrbicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrbycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtLrcCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLrZicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrcScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrcicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLrcycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLrVycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrdCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrdScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrdicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_RtLtEycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLrdycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_RtLrRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLreCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLreScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RtLreicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_RtLrWCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLreycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrfCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrfScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_RtLtEycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLrficoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_RtLrSCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrfycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrgCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RtLrgScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_RtLrWScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrgicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrgycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLrhCcoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6" incoming="_RtLrVScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrhScoEeSLVrU2ifxtpw" target="_RtLsuCcoEeSLVrU2ifxtpw" source="_RtLsmycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrhicoEeSLVrU2ifxtpw" target="_RtLseicoEeSLVrU2ifxtpw" source="_RtLs0ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrhycoEeSLVrU2ifxtpw" target="_RtLsfScoEeSLVrU2ifxtpw" source="_RtLszycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLriCcoEeSLVrU2ifxtpw" target="_RtLsdycoEeSLVrU2ifxtpw" source="_RtLsuCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLriScoEeSLVrU2ifxtpw" target="_RtLriicoEeSLVrU2ifxtpw" source="_RtLskicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:LoopNode" xmi:id="_RtLriicoEeSLVrU2ifxtpw" name="Loop(ForStatement@b28b2e6)" incoming="_RtLriScoEeSLVrU2ifxtpw" bodyOutput="_RtLruScoEeSLVrU2ifxtpw _RtLrvCcoEeSLVrU2ifxtpw _RtLrvycoEeSLVrU2ifxtpw _RtLsPScoEeSLVrU2ifxtpw _RtLsTCcoEeSLVrU2ifxtpw _RtLsWScoEeSLVrU2ifxtpw" bodyPart="_RtLrsycoEeSLVrU2ifxtpw _RtLrtScoEeSLVrU2ifxtpw _RtLsNicoEeSLVrU2ifxtpw _RtLsQCcoEeSLVrU2ifxtpw _RtLsRScoEeSLVrU2ifxtpw _RtLsTycoEeSLVrU2ifxtpw _RtLsVCcoEeSLVrU2ifxtpw" decider="_RtLrsCcoEeSLVrU2ifxtpw" isTestedFirst="true" test="_RtLrqScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLriycoEeSLVrU2ifxtpw" target="_RtLroycoEeSLVrU2ifxtpw" source="_RtLsXCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrjCcoEeSLVrU2ifxtpw" target="_RtLrpCcoEeSLVrU2ifxtpw" source="_RtLsXycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrjScoEeSLVrU2ifxtpw" target="_RtLrpScoEeSLVrU2ifxtpw" source="_RtLsYicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrjicoEeSLVrU2ifxtpw" target="_RtLrpicoEeSLVrU2ifxtpw" source="_RtLsZScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrjycoEeSLVrU2ifxtpw" target="_RtLrpycoEeSLVrU2ifxtpw" source="_RtLsaCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrkCcoEeSLVrU2ifxtpw" target="_RtLrqCcoEeSLVrU2ifxtpw" source="_RtLsaycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrkScoEeSLVrU2ifxtpw" target="_RtLrqicoEeSLVrU2ifxtpw" source="_RtLrpycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrkicoEeSLVrU2ifxtpw" target="_RtLrrScoEeSLVrU2ifxtpw" source="_RtLrqCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrkycoEeSLVrU2ifxtpw" target="_RtLrtCcoEeSLVrU2ifxtpw" source="_RtLsZScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLrlCcoEeSLVrU2ifxtpw" target="_RtLrtScoEeSLVrU2ifxtpw" source="_RtLrsycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrlScoEeSLVrU2ifxtpw" target="_RtLr6ScoEeSLVrU2ifxtpw" source="_RtLrtCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrlicoEeSLVrU2ifxtpw" target="_RtLsEicoEeSLVrU2ifxtpw" source="_RtLrtCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrlycoEeSLVrU2ifxtpw" target="_RtLsHScoEeSLVrU2ifxtpw" source="_RtLrtCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrmCcoEeSLVrU2ifxtpw" target="_RtLsNycoEeSLVrU2ifxtpw" source="_RtLrpicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrmScoEeSLVrU2ifxtpw" target="_RtLsOicoEeSLVrU2ifxtpw" source="_RtLsQScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrmicoEeSLVrU2ifxtpw" target="_RtLsRicoEeSLVrU2ifxtpw" source="_RtLrpycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrmycoEeSLVrU2ifxtpw" target="_RtLsSScoEeSLVrU2ifxtpw" source="_RtLsUCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrnCcoEeSLVrU2ifxtpw" target="_RtLsVicoEeSLVrU2ifxtpw" source="_RtLrqCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrnScoEeSLVrU2ifxtpw" target="_RtLr3ycoEeSLVrU2ifxtpw" source="_RtLrpScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrnicoEeSLVrU2ifxtpw" target="_RtLsCScoEeSLVrU2ifxtpw" source="_RtLrpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrnycoEeSLVrU2ifxtpw" target="_RtLsFCcoEeSLVrU2ifxtpw" source="_RtLroycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLroCcoEeSLVrU2ifxtpw" target="_RtLsICcoEeSLVrU2ifxtpw" source="_RtLroycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLroScoEeSLVrU2ifxtpw" target="_RtLsKCcoEeSLVrU2ifxtpw" source="_RtLrpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLroicoEeSLVrU2ifxtpw" target="_RtLsMCcoEeSLVrU2ifxtpw" source="_RtLrpScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLroycoEeSLVrU2ifxtpw" name="Fork(ForStatement@b28b2e6.loopVariable(expected))" incoming="_RtLriycoEeSLVrU2ifxtpw" outgoing="_RtLrnycoEeSLVrU2ifxtpw _RtLroCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLrpCcoEeSLVrU2ifxtpw" name="Fork(ForStatement@b28b2e6.loopVariable(list))" incoming="_RtLrjCcoEeSLVrU2ifxtpw" outgoing="_RtLrnicoEeSLVrU2ifxtpw _RtLroScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLrpScoEeSLVrU2ifxtpw" name="Fork(ForStatement@b28b2e6.loopVariable(label))" incoming="_RtLrjScoEeSLVrU2ifxtpw" outgoing="_RtLrnScoEeSLVrU2ifxtpw _RtLroicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLrpicoEeSLVrU2ifxtpw" name="Fork(ForStatement@b28b2e6.loopVariable(i))" incoming="_RtLrjicoEeSLVrU2ifxtpw" outgoing="_RtLrmCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLrpycoEeSLVrU2ifxtpw" name="Fork(ForStatement@b28b2e6.loopVariable(counter))" incoming="_RtLrjycoEeSLVrU2ifxtpw" outgoing="_RtLrkScoEeSLVrU2ifxtpw _RtLrmicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLrqCcoEeSLVrU2ifxtpw" name="Fork(ForStatement@b28b2e6.loopVariable(upper))" incoming="_RtLrkCcoEeSLVrU2ifxtpw" outgoing="_RtLrkicoEeSLVrU2ifxtpw _RtLrnCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrqScoEeSLVrU2ifxtpw" name="Call(&lt;=)">
              <argument xmi:id="_RtLrqicoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_RtLrkScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrqycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrrCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtLrrScoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_RtLrkicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrricoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrrycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLrsCcoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrsScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrsicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLrsycoEeSLVrU2ifxtpw" name="Values(ForStatement@b28b2e6)" outgoing="_RtLrlCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ForkNode" xmi:id="_RtLrtCcoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_RtLrkycoEeSLVrU2ifxtpw" outgoing="_RtLrlScoEeSLVrU2ifxtpw _RtLrlicoEeSLVrU2ifxtpw _RtLrlycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLrtScoEeSLVrU2ifxtpw" name="Body(ForStatement@b28b2e6)" incoming="_RtLrlCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrticoEeSLVrU2ifxtpw" target="_RtLruScoEeSLVrU2ifxtpw" source="_RtLsIycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrtycoEeSLVrU2ifxtpw" target="_RtLrvCcoEeSLVrU2ifxtpw" source="_RtLsKycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLruCcoEeSLVrU2ifxtpw" target="_RtLrvycoEeSLVrU2ifxtpw" source="_RtLsMycoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_RtLruScoEeSLVrU2ifxtpw" name="expected" incoming="_RtLrticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLruicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLruycoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_RtLrvCcoEeSLVrU2ifxtpw" name="list" incoming="_RtLrtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrvScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrvicoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_RtLrvycoEeSLVrU2ifxtpw" name="label" incoming="_RtLruCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrwCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrwScoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLrwicoEeSLVrU2ifxtpw" name="ExpressionStatement@25f7dec0">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrwycoEeSLVrU2ifxtpw" target="_RtLryCcoEeSLVrU2ifxtpw" source="_RtLsBScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrxCcoEeSLVrU2ifxtpw" target="_RtLryycoEeSLVrU2ifxtpw" source="_RtLsDycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLrxScoEeSLVrU2ifxtpw" target="_RtLrzicoEeSLVrU2ifxtpw" source="_RtLsGicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RtLrxicoEeSLVrU2ifxtpw" target="_RtLrxycoEeSLVrU2ifxtpw" source="_RtLr0ScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLrxycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RtLrxicoEeSLVrU2ifxtpw" behavior="_RtLppicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_RtLryCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RtLrwycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLryScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLryicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RtLryycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RtLrxCcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrzCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLrzScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RtLrzicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RtLrxScoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLrzycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr0CcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLr0ScoEeSLVrU2ifxtpw" name="Tuple@14bad191" outgoing="_RtLrxicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLr0icoEeSLVrU2ifxtpw" target="_RtLr4icoEeSLVrU2ifxtpw" source="_RtLr2icoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLr0ycoEeSLVrU2ifxtpw" target="_RtLr8CcoEeSLVrU2ifxtpw" source="_RtLr5ScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLr1CcoEeSLVrU2ifxtpw" target="_RtLr8ycoEeSLVrU2ifxtpw" source="_RtLr7CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLr1ScoEeSLVrU2ifxtpw" target="_RtLr_ycoEeSLVrU2ifxtpw" source="_RtLr9icoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLr1icoEeSLVrU2ifxtpw" target="_RtLsAicoEeSLVrU2ifxtpw" source="_RtLr-icoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLr1ycoEeSLVrU2ifxtpw" target="_RtLsDCcoEeSLVrU2ifxtpw" source="_RtLsEicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLr2CcoEeSLVrU2ifxtpw" target="_RtLsFycoEeSLVrU2ifxtpw" source="_RtLsHScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLr2ScoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;)">
                    <result xmi:id="_RtLr2icoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;).result" outgoing="_RtLr0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr2ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr3CcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RtLr3ScoEeSLVrU2ifxtpw" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLr3icoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RtLr3ycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLrnScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr4CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr4ScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RtLr4icoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLr0icoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr4ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr5CcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLr5ScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLr0ycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr5icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr5ycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLr6CcoEeSLVrU2ifxtpw" name="Call(ToString)">
                    <argument xmi:id="_RtLr6ScoEeSLVrU2ifxtpw" name="Call(ToString).argument(x)" incoming="_RtLrlScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr6icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr6ycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLr7CcoEeSLVrU2ifxtpw" name="Call(ToString).result(result)" outgoing="_RtLr1CcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr7ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr7icoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLr7ycoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RtLr8CcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLr0ycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr8ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr8icoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RtLr8ycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLr1CcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr9CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr9ScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLr9icoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLr1ScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr9ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr-CcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLr-ScoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;)">
                    <result xmi:id="_RtLr-icoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;).result" outgoing="_RtLr1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLr-ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLr_CcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RtLr_ScoEeSLVrU2ifxtpw" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLr_icoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RtLr_ycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RtLr1ScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsACcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsAScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RtLsAicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RtLr1icoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsAycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsBCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLsBScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RtLrwycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsBicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsBycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLsCCcoEeSLVrU2ifxtpw" name="Call(At)">
                    <argument xmi:id="_RtLsCScoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RtLrnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsCicoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsCycoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_RtLsDCcoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RtLr1ycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsDScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsDicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLsDycoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RtLrxCcoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsECcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsEScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RtLsEicoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RtLrlicoEeSLVrU2ifxtpw" outgoing="_RtLr1ycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLsEycoEeSLVrU2ifxtpw" name="Call(At)">
                    <argument xmi:id="_RtLsFCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RtLrnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsFScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsFicoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_RtLsFycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RtLr2CcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsGCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsGScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RtLsGicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RtLrxScoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsGycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsHCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RtLsHScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RtLrlycoEeSLVrU2ifxtpw" outgoing="_RtLr2CcoEeSLVrU2ifxtpw"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLsHicoEeSLVrU2ifxtpw" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLsHycoEeSLVrU2ifxtpw" target="_RtLsIycoEeSLVrU2ifxtpw" source="_RtLsICcoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_RtLsICcoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).input" incoming="_RtLroCcoEeSLVrU2ifxtpw" outgoing="_RtLsHycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsIScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsIicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RtLsIycoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).output" incoming="_RtLsHycoEeSLVrU2ifxtpw" outgoing="_RtLrticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsJCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsJScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLsJicoEeSLVrU2ifxtpw" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLsJycoEeSLVrU2ifxtpw" target="_RtLsKycoEeSLVrU2ifxtpw" source="_RtLsKCcoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_RtLsKCcoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).input" incoming="_RtLroScoEeSLVrU2ifxtpw" outgoing="_RtLsJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsKScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsKicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RtLsKycoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).output" incoming="_RtLsJycoEeSLVrU2ifxtpw" outgoing="_RtLrtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsLCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsLScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLsLicoEeSLVrU2ifxtpw" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLsLycoEeSLVrU2ifxtpw" target="_RtLsMycoEeSLVrU2ifxtpw" source="_RtLsMCcoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_RtLsMCcoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).input" incoming="_RtLroicoEeSLVrU2ifxtpw" outgoing="_RtLsLycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsMScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsMicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RtLsMycoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).output" incoming="_RtLsLycoEeSLVrU2ifxtpw" outgoing="_RtLruCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsNCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsNScoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLsNicoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RtLsNycoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RtLrmCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsOCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsOScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtLsOicoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RtLrmScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsOycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsPCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLsPScoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsPicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsPycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLsQCcoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_RtLsQScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLrmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsQicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsQycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RtLsRCcoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLsRScoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RtLsRicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RtLrmicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsRycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsSCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtLsSScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RtLrmycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsSicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsSycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLsTCcoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsTScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsTicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLsTycoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_RtLsUCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLrmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsUScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsUicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RtLsUycoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLsVCcoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLsVScoEeSLVrU2ifxtpw" target="_RtLsWScoEeSLVrU2ifxtpw" source="_RtLsVicoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RtLsVicoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).input" incoming="_RtLrnCcoEeSLVrU2ifxtpw" outgoing="_RtLsVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsVycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsWCcoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RtLsWScoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).output" incoming="_RtLsVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsWicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsWycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <loopVariable xmi:id="_RtLsXCcoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariable(expected)" outgoing="_RtLriycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsXScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsXicoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_RtLsXycoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariable(list)" outgoing="_RtLrjCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsYCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsYScoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_RtLsYicoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariable(label)" outgoing="_RtLrjScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsYycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsZCcoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_RtLsZScoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariable(i)" outgoing="_RtLrjicoEeSLVrU2ifxtpw _RtLrkycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsZicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsZycoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_RtLsaCcoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariable(counter)" outgoing="_RtLrjycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsaScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsaicoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_RtLsaycoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariable(upper)" outgoing="_RtLrkCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsbCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsbScoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_RtLsbicoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariableInput(expected)" incoming="_RtLrSScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsbycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLscCcoEeSLVrU2ifxtpw" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_RtLscScoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariableInput(list)" incoming="_RtLrSicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLscicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLscycoEeSLVrU2ifxtpw" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_RtLsdCcoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariableInput(label)" incoming="_RtLrSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsdScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsdicoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_RtLsdycoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariableInput(i)" incoming="_RtLriCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLseCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLseScoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_RtLseicoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariableInput(counter)" incoming="_RtLrhicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLseycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsfCcoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_RtLsfScoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.loopVariableInput(upper)" incoming="_RtLrhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsficoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsfycoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <result xmi:id="_RtLsgCcoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsgScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsgicoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_RtLsgycoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLshCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLshScoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_RtLshicoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLshycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsiCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <result xmi:id="_RtLsiScoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsiicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsiycoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_RtLsjCcoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsjScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsjicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <result xmi:id="_RtLsjycoEeSLVrU2ifxtpw" name="ForStatement@b28b2e6.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLskCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLskScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLskicoEeSLVrU2ifxtpw" name="LoopVariables(ForStatement@b28b2e6)" outgoing="_RtLriScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLskycoEeSLVrU2ifxtpw" target="_RtLsoCcoEeSLVrU2ifxtpw" source="_RtLsricoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLslCcoEeSLVrU2ifxtpw" target="_RtLsoycoEeSLVrU2ifxtpw" source="_RtLstScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLslScoEeSLVrU2ifxtpw" target="_RtLsnycoEeSLVrU2ifxtpw" source="_RtLsqScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLslicoEeSLVrU2ifxtpw" target="_RtLsuicoEeSLVrU2ifxtpw" source="_RtLspicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLslycoEeSLVrU2ifxtpw" target="_RtLsvScoEeSLVrU2ifxtpw" source="_RtLsuCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLsmCcoEeSLVrU2ifxtpw" target="_RtLsyScoEeSLVrU2ifxtpw" source="_RtLswCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLsmScoEeSLVrU2ifxtpw" target="_RtLszCcoEeSLVrU2ifxtpw" source="_RtLsxCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLsmicoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_RtLsmycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLrhScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsnCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsnScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RtLsnicoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLsnycoEeSLVrU2ifxtpw" name="Call(Min)" incoming="_RtLslScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLsoCcoEeSLVrU2ifxtpw" name="Call(Min).argument(x)" incoming="_RtLskycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsoScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsoicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtLsoycoEeSLVrU2ifxtpw" name="Call(Min).argument(y)" incoming="_RtLslCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLspCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLspScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLspicoEeSLVrU2ifxtpw" name="Call(Min).result(result)" outgoing="_RtLslicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLspycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsqCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLsqScoEeSLVrU2ifxtpw" name="Tuple@20656b7" outgoing="_RtLslScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLsqicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_RtLtEycoEeSLVrU2ifxtpw">
                <argument xmi:id="_RtLsqycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_RtLrTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsrCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsrScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_RtLsricoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_RtLskycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsrycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLssCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLssScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_RtLtEycoEeSLVrU2ifxtpw">
                <argument xmi:id="_RtLssicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_RtLrTScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLssycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLstCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_RtLstScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_RtLslCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsticoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLstycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLsuCcoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_RtLrhScoEeSLVrU2ifxtpw" outgoing="_RtLriCcoEeSLVrU2ifxtpw _RtLslycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLsuScoEeSLVrU2ifxtpw" name="Call(-)">
              <argument xmi:id="_RtLsuicoEeSLVrU2ifxtpw" name="Call(-).argument(x)" incoming="_RtLslicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsuycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsvCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtLsvScoEeSLVrU2ifxtpw" name="Call(-).argument(y)" incoming="_RtLslycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsvicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsvycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLswCcoEeSLVrU2ifxtpw" name="Call(-).result(result)" outgoing="_RtLsmCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLswScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLswicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLswycoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_RtLsxCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLsmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsxScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsxicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RtLsxycoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLsyCcoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RtLsyScoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RtLsmCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLsyicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLsyycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RtLszCcoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RtLsmScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLszScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLszicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLszycoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RtLrhycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLs0CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLs0ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLs0icoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_RtLs0ycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLrhicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLs1CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLs1ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RtLs1icoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLrTicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RtLrQycoEeSLVrU2ifxtpw" parameter="_RtLrOicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLrTycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RtLrQycoEeSLVrU2ifxtpw" outgoing="_RtLrRicoEeSLVrU2ifxtpw _RtLrSycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLrUCcoEeSLVrU2ifxtpw" name="Input(list)" outgoing="_RtLrRCcoEeSLVrU2ifxtpw" parameter="_RtLrPScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLrUScoEeSLVrU2ifxtpw" name="Fork(list)" incoming="_RtLrRCcoEeSLVrU2ifxtpw" outgoing="_RtLrRycoEeSLVrU2ifxtpw _RtLrTCcoEeSLVrU2ifxtpw _RtLrSicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLrUicoEeSLVrU2ifxtpw" name="Input(expected)" outgoing="_RtLrRScoEeSLVrU2ifxtpw" parameter="_RtLrQCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLrUycoEeSLVrU2ifxtpw" name="Fork(expected)" incoming="_RtLrRScoEeSLVrU2ifxtpw" outgoing="_RtLrSCcoEeSLVrU2ifxtpw _RtLrTScoEeSLVrU2ifxtpw _RtLrSScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RtLs1ycoEeSLVrU2ifxtpw" name="Write" node="_RtLs4icoEeSLVrU2ifxtpw _RtLs4ycoEeSLVrU2ifxtpw _RtLs5CcoEeSLVrU2ifxtpw" group="_RtLs5CcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RtLs2CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RtLs2ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RtLs2icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RtLs2ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RtLs3CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RtLs3ScoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLs3icoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLs3ycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLs4CcoEeSLVrU2ifxtpw" target="_RtLs4ycoEeSLVrU2ifxtpw" source="_RtLs4icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLs4ScoEeSLVrU2ifxtpw" target="_RtLs6ycoEeSLVrU2ifxtpw" source="_RtLs4ycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RtLs5CcoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLs5ScoEeSLVrU2ifxtpw" name="ExpressionStatement@5469abb6">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLs5icoEeSLVrU2ifxtpw" target="_RtLs-CcoEeSLVrU2ifxtpw" source="_RtLtBScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RtLs5ycoEeSLVrU2ifxtpw" target="_RtLs6CcoEeSLVrU2ifxtpw" source="_RtLs-ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_RtLs6CcoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_RtLs5ycoEeSLVrU2ifxtpw" mode="parallel" inputElement="_RtLs-CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLs6ScoEeSLVrU2ifxtpw" target="_RtLs7ycoEeSLVrU2ifxtpw" source="_RtLs6ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLs6icoEeSLVrU2ifxtpw" target="_RtLs9ScoEeSLVrU2ifxtpw" source="_RtLs-CcoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_RtLs6ycoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_RtLs4ScoEeSLVrU2ifxtpw" outgoing="_RtLs6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLs7CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLs7ScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RtLs7icoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_RtLs7ycoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_RtLs6ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLs8CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLs8ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLs8icoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLs8ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLs9CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_RtLs9ScoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_RtLs6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLs9icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLs9ycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_RtLs-CcoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_RtLs5icoEeSLVrU2ifxtpw" outgoing="_RtLs6icoEeSLVrU2ifxtpw" regionAsInput="_RtLs6CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLs-ScoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_RtLs5ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLs-icoEeSLVrU2ifxtpw" target="_RtLs_ycoEeSLVrU2ifxtpw" source="_RtLtCicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLs-ycoEeSLVrU2ifxtpw" target="_RtLtEicoEeSLVrU2ifxtpw" source="_RtLtDicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RtLs_CcoEeSLVrU2ifxtpw" target="_RtLs_icoEeSLVrU2ifxtpw" source="_RtLtCCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLs_ScoEeSLVrU2ifxtpw" target="_RtLtAicoEeSLVrU2ifxtpw" source="_RtLtEicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLs_icoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RtLs_CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RtLs_ycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RtLs-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtACcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtAScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RtLtAicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RtLs_ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtAycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtBCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RtLtBScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RtLs5icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtBicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtBycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLtCCcoEeSLVrU2ifxtpw" name="Tuple@482cfcf" outgoing="_RtLs_CcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_RtLtCScoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_RtLtCicoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_RtLs-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtCycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtDCcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RtLtDScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RtLtDicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RtLs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtDycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtECcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RtLtEScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RtLtEicoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RtLs-ycoEeSLVrU2ifxtpw" outgoing="_RtLs_ScoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLs4icoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_RtLs4CcoEeSLVrU2ifxtpw" parameter="_RtLs3ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLs4ycoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_RtLs4CcoEeSLVrU2ifxtpw" outgoing="_RtLs4ScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RtLtEycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$size__any__" node="_RtLtHicoEeSLVrU2ifxtpw _RtLtHycoEeSLVrU2ifxtpw _RtLtICcoEeSLVrU2ifxtpw _RtLtIScoEeSLVrU2ifxtpw _RtLtIicoEeSLVrU2ifxtpw" group="_RtLtIicoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_RtLtFCcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtFScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtFicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RtLtFycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtGCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtGScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLtGicoEeSLVrU2ifxtpw" target="_RtLtHycoEeSLVrU2ifxtpw" source="_RtLtHicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RtLtGycoEeSLVrU2ifxtpw" target="_RtLtIScoEeSLVrU2ifxtpw" source="_RtLtIycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLtHCcoEeSLVrU2ifxtpw" target="_RtLtKScoEeSLVrU2ifxtpw" source="_RtLtHycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLtHScoEeSLVrU2ifxtpw" target="_RtLtICcoEeSLVrU2ifxtpw" source="_RtLtJScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RtLtIicoEeSLVrU2ifxtpw" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RtLtIycoEeSLVrU2ifxtpw" name="ReturnStatement@22536490" outgoing="_RtLtGycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RtLtJCcoEeSLVrU2ifxtpw" target="_RtLtJScoEeSLVrU2ifxtpw" source="_RtLtLCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_RtLtJScoEeSLVrU2ifxtpw" name="ReturnStatement@22536490.output" incoming="_RtLtJCcoEeSLVrU2ifxtpw" outgoing="_RtLtHScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtJicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtJycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RtLtKCcoEeSLVrU2ifxtpw" name="Call(Size)">
            <argument xmi:id="_RtLtKScoEeSLVrU2ifxtpw" name="Call(Size).argument(seq)" incoming="_RtLtHCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtKicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtKycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RtLtLCcoEeSLVrU2ifxtpw" name="Call(Size).result()" outgoing="_RtLtJCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RtLtLScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RtLtLicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLtHicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_RtLtGicoEeSLVrU2ifxtpw" parameter="_RtLtFCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RtLtHycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_RtLtGicoEeSLVrU2ifxtpw" outgoing="_RtLtHCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RtLtICcoEeSLVrU2ifxtpw" name="Return" incoming="_RtLtHScoEeSLVrU2ifxtpw" parameter="_RtLtFycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_RtLtIScoEeSLVrU2ifxtpw" name="Final" incoming="_RtLtGycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RtLtLycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_RtLtMCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_RtLtMScoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_RtLtMicoEeSLVrU2ifxtpw" client="_RtLtEycoEeSLVrU2ifxtpw" supplier="_RtLtLycoEeSLVrU2ifxtpw"/>
    <profileApplication xmi:id="_RtLtMycoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_RtLtNCcoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_RtLtNScoEeSLVrU2ifxtpw" base_BehavioralFeature="_RtLGuicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_RtMQUCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_RtLGvicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_RtMQUScoEeSLVrU2ifxtpw" base_BehavioralFeature="_RtLplicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_RtMQUicoEeSLVrU2ifxtpw" base_BehavioralFeature="_RtLpmicoEeSLVrU2ifxtpw"/>
</xmi:XMI>

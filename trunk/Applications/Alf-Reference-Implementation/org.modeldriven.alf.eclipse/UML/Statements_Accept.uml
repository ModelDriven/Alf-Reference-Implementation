<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_AIlskIVqEeKQivIQgUOGDQ" name="Model">
    <packagedElement xmi:type="uml:Class" xmi:id="_AIlskYVqEeKQivIQgUOGDQ" name="Statements_Accept" classifierBehavior="_AIlsmoVqEeKQivIQgUOGDQ" isActive="true">
      <packageImport xmi:id="_AIlskoVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AIlsk4VqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AIlslIVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AIlslYVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AIlsloVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_AIlsl4VqEeKQivIQgUOGDQ" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIlsmIVqEeKQivIQgUOGDQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIlsmYVqEeKQivIQgUOGDQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AIlsmoVqEeKQivIQgUOGDQ" name="Statements_Accept$classifierBehavior$1" visibility="private" isActive="true" group="_AIlsm4VqEeKQivIQgUOGDQ" node="_AIlsm4VqEeKQivIQgUOGDQ">
        <structuredNode xmi:id="_AIlsm4VqEeKQivIQgUOGDQ" name="Body(Statements_Accept$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIlsnIVqEeKQivIQgUOGDQ" name="ExpressionStatement@616615ac">
            <node xmi:type="uml:SendSignalAction" xmi:id="_AIlsnYVqEeKQivIQgUOGDQ" name="SendSignal(Start)" signal="_AIzvAYVqEeKQivIQgUOGDQ">
              <target xmi:id="_AIlsnoVqEeKQivIQgUOGDQ" name="SendSignal(Start).target" incoming="_AIlsuYVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIlsn4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIlsoIVqEeKQivIQgUOGDQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIlsoYVqEeKQivIQgUOGDQ" name="InstanceCreationExpression@7c3dbd50">
              <node xmi:type="uml:CallOperationAction" xmi:id="_AIlsooVqEeKQivIQgUOGDQ" name="Call(TestRunner)" operation="_AIzIU4VqEeKQivIQgUOGDQ">
                <result xmi:id="_AIlso4VqEeKQivIQgUOGDQ" name="Call(TestRunner).result()" outgoing="_AIlstoVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIlspIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIlspYVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <target xmi:id="_AIlspoVqEeKQivIQgUOGDQ" name="Call(TestRunner).target" incoming="_AIlstYVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIlsp4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIlsqIVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_AIlsqYVqEeKQivIQgUOGDQ" name="Create(TestRunner)" classifier="_AIu2g4VqEeKQivIQgUOGDQ">
                <result xmi:id="_AIlsqoVqEeKQivIQgUOGDQ" name="Create(TestRunner).result" outgoing="_AIlstYVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIlsq4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIlsrIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AIlsrYVqEeKQivIQgUOGDQ" name="Fork(Call(TestRunner).result())" outgoing="_AIlst4VqEeKQivIQgUOGDQ _AIlsuIVqEeKQivIQgUOGDQ" incoming="_AIlstoVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_AIlsroVqEeKQivIQgUOGDQ" name="Start(TestRunner)">
                <object xmi:id="_AIlsr4VqEeKQivIQgUOGDQ" name="Start(TestRunner).object" incoming="_AIlst4VqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIlssIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIlssYVqEeKQivIQgUOGDQ" value="1"/>
                </object>
              </node>
              <structuredNodeOutput xmi:id="_AIlssoVqEeKQivIQgUOGDQ" name="Output(Call(TestRunner).result())" outgoing="_AIlsuYVqEeKQivIQgUOGDQ" incoming="_AIlsuIVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIlss4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIlstIVqEeKQivIQgUOGDQ" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIlstYVqEeKQivIQgUOGDQ" source="_AIlsqoVqEeKQivIQgUOGDQ" target="_AIlspoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIlstoVqEeKQivIQgUOGDQ" source="_AIlso4VqEeKQivIQgUOGDQ" target="_AIlsrYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIlst4VqEeKQivIQgUOGDQ" source="_AIlsrYVqEeKQivIQgUOGDQ" target="_AIlsr4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIlsuIVqEeKQivIQgUOGDQ" source="_AIlsrYVqEeKQivIQgUOGDQ" target="_AIlssoVqEeKQivIQgUOGDQ"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIlsuYVqEeKQivIQgUOGDQ" source="_AIlssoVqEeKQivIQgUOGDQ" target="_AIlsnoVqEeKQivIQgUOGDQ"/>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AImToIVqEeKQivIQgUOGDQ" name="Statements_Accept$method$1" specification="_AIm614VqEeKQivIQgUOGDQ" group="_AImTpoVqEeKQivIQgUOGDQ" node="_AImTpYVqEeKQivIQgUOGDQ _AImTpoVqEeKQivIQgUOGDQ">
        <ownedParameter xmi:id="_AImToYVqEeKQivIQgUOGDQ" name="" type="_AIlskYVqEeKQivIQgUOGDQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTooVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTo4VqEeKQivIQgUOGDQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AImTpIVqEeKQivIQgUOGDQ" source="_AImTrIVqEeKQivIQgUOGDQ" target="_AImTpYVqEeKQivIQgUOGDQ"/>
        <structuredNode xmi:id="_AImTpoVqEeKQivIQgUOGDQ" name="Body(Statements_Accept$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AImTp4VqEeKQivIQgUOGDQ" name="Body" incoming="_AImT0oVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_AImTqIVqEeKQivIQgUOGDQ" name="ReadSelf">
            <result xmi:id="_AImTqYVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AImT0IVqEeKQivIQgUOGDQ" type="_AIlskYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTqoVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTq4VqEeKQivIQgUOGDQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AImTrIVqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AImTpIVqEeKQivIQgUOGDQ _AImT0YVqEeKQivIQgUOGDQ _AImT04VqEeKQivIQgUOGDQ" incoming="_AImT0IVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_AImTrYVqEeKQivIQgUOGDQ" name="Call(Statements_Accept$initialization$1)" outgoing="_AImT0oVqEeKQivIQgUOGDQ" incoming="_AImT2YVqEeKQivIQgUOGDQ" operation="_AIm61oVqEeKQivIQgUOGDQ">
            <target xmi:id="_AImTroVqEeKQivIQgUOGDQ" name="Call(Statements_Accept$initialization$1).target" incoming="_AImT0YVqEeKQivIQgUOGDQ" type="_AIlskYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTr4VqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTsIVqEeKQivIQgUOGDQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AImTsYVqEeKQivIQgUOGDQ" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_AIlsl4VqEeKQivIQgUOGDQ">
            <object xmi:id="_AImTsoVqEeKQivIQgUOGDQ" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_AImT04VqEeKQivIQgUOGDQ" type="_AIlskYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTs4VqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTtIVqEeKQivIQgUOGDQ" value="1"/>
            </object>
            <result xmi:id="_AImTtYVqEeKQivIQgUOGDQ" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_AImT1IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTtoVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTt4VqEeKQivIQgUOGDQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AImTuIVqEeKQivIQgUOGDQ" name="Call(ListSize)">
            <argument xmi:id="_AImTuYVqEeKQivIQgUOGDQ" name="Call(ListSize).argument(list)" incoming="_AImT1IVqEeKQivIQgUOGDQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTuoVqEeKQivIQgUOGDQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTu4VqEeKQivIQgUOGDQ" value="*"/>
            </argument>
            <result xmi:id="_AImTvIVqEeKQivIQgUOGDQ" name="Call(ListSize).result(result)" outgoing="_AImT1YVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTvYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTvoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AImTv4VqEeKQivIQgUOGDQ" name="Value(0)">
            <result xmi:id="_AImTwIVqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AImT1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTwYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTwoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_AImTw4VqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_AImTxIVqEeKQivIQgUOGDQ" name="Test(Size==0)">
            <first xmi:id="_AImTxYVqEeKQivIQgUOGDQ" name="Test(Size==0).first" incoming="_AImT1YVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTxoVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTx4VqEeKQivIQgUOGDQ" value="1"/>
            </first>
            <result xmi:id="_AImTyIVqEeKQivIQgUOGDQ" name="Test(Size==0).result" outgoing="_AImT2IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTyYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTyoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <second xmi:id="_AImTy4VqEeKQivIQgUOGDQ" name="Test(Size==0).second" incoming="_AImT1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImTzIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImTzYVqEeKQivIQgUOGDQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_AImTzoVqEeKQivIQgUOGDQ" name="InitialNode" outgoing="_AImT14VqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_AImTz4VqEeKQivIQgUOGDQ" name="Decision(Test(Statements_Accept$initializationFlag$1))" outgoing="_AImT2YVqEeKQivIQgUOGDQ" incoming="_AImT14VqEeKQivIQgUOGDQ _AImT2IVqEeKQivIQgUOGDQ" decisionInputFlow="_AImT2IVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AImT0IVqEeKQivIQgUOGDQ" source="_AImTqYVqEeKQivIQgUOGDQ" target="_AImTrIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AImT0YVqEeKQivIQgUOGDQ" source="_AImTrIVqEeKQivIQgUOGDQ" target="_AImTroVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AImT0oVqEeKQivIQgUOGDQ" source="_AImTrYVqEeKQivIQgUOGDQ" target="_AImTp4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AImT04VqEeKQivIQgUOGDQ" source="_AImTrIVqEeKQivIQgUOGDQ" target="_AImTsoVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AImT1IVqEeKQivIQgUOGDQ" source="_AImTtYVqEeKQivIQgUOGDQ" target="_AImTuYVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AImT1YVqEeKQivIQgUOGDQ" source="_AImTvIVqEeKQivIQgUOGDQ" target="_AImTxYVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AImT1oVqEeKQivIQgUOGDQ" source="_AImTwIVqEeKQivIQgUOGDQ" target="_AImTy4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AImT14VqEeKQivIQgUOGDQ" source="_AImTzoVqEeKQivIQgUOGDQ" target="_AImTz4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AImT2IVqEeKQivIQgUOGDQ" source="_AImTyIVqEeKQivIQgUOGDQ" target="_AImTz4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AImT2YVqEeKQivIQgUOGDQ" source="_AImTz4VqEeKQivIQgUOGDQ" target="_AImTrYVqEeKQivIQgUOGDQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AImT2oVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_AImTpYVqEeKQivIQgUOGDQ" name="Return" incoming="_AImTpIVqEeKQivIQgUOGDQ" parameter="_AImToYVqEeKQivIQgUOGDQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AImT24VqEeKQivIQgUOGDQ" name="destroy$method$1" specification="_AIm624VqEeKQivIQgUOGDQ" group="_AImT3IVqEeKQivIQgUOGDQ" node="_AImT3IVqEeKQivIQgUOGDQ">
        <structuredNode xmi:id="_AImT3IVqEeKQivIQgUOGDQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AImT3YVqEeKQivIQgUOGDQ" name="Statements_Accept$initialization$1" specification="_AIm61oVqEeKQivIQgUOGDQ" group="_AImT3oVqEeKQivIQgUOGDQ" node="_AImT3oVqEeKQivIQgUOGDQ">
        <structuredNode xmi:id="_AImT3oVqEeKQivIQgUOGDQ" name="Body(Statements_Accept$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_AImT34VqEeKQivIQgUOGDQ" name="ReadSelf">
            <result xmi:id="_AImT4IVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIm6zIVqEeKQivIQgUOGDQ" type="_AIlskYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImT4YVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImT4oVqEeKQivIQgUOGDQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AImT44VqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AIm6zYVqEeKQivIQgUOGDQ _AIm6zoVqEeKQivIQgUOGDQ" incoming="_AIm6zIVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AImT5IVqEeKQivIQgUOGDQ" name="Initialization" incoming="_AIm61IVqEeKQivIQgUOGDQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AImT5YVqEeKQivIQgUOGDQ" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AImT5oVqEeKQivIQgUOGDQ" name="Value(true)">
                <result xmi:id="_AImT54VqEeKQivIQgUOGDQ" name="Value(true).result" outgoing="_AImT9YVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImT6IVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImT6YVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_AImT6oVqEeKQivIQgUOGDQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AImT64VqEeKQivIQgUOGDQ" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_AIlsl4VqEeKQivIQgUOGDQ" isReplaceAll="true">
                <object xmi:id="_AImT7IVqEeKQivIQgUOGDQ" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_AIm6zYVqEeKQivIQgUOGDQ" type="_AIlskYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImT7YVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImT7oVqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AImT74VqEeKQivIQgUOGDQ" name="Write(Statements_Accept$initializationFlag$1).result" type="_AIlskYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImT8IVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImT8YVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:id="_AImT8oVqEeKQivIQgUOGDQ" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_AImT9YVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImT84VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AImT9IVqEeKQivIQgUOGDQ" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AImT9YVqEeKQivIQgUOGDQ" source="_AImT54VqEeKQivIQgUOGDQ" target="_AImT8oVqEeKQivIQgUOGDQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AImT9oVqEeKQivIQgUOGDQ" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_AIlsl4VqEeKQivIQgUOGDQ">
            <object xmi:id="_AImT94VqEeKQivIQgUOGDQ" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_AIm6zoVqEeKQivIQgUOGDQ" type="_AIlskYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AImT-IVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6sIVqEeKQivIQgUOGDQ" value="1"/>
            </object>
            <result xmi:id="_AIm6sYVqEeKQivIQgUOGDQ" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_AIm6z4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6soVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6s4VqEeKQivIQgUOGDQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIm6tIVqEeKQivIQgUOGDQ" name="Call(ListSize)">
            <argument xmi:id="_AIm6tYVqEeKQivIQgUOGDQ" name="Call(ListSize).argument(list)" incoming="_AIm6z4VqEeKQivIQgUOGDQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6toVqEeKQivIQgUOGDQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6t4VqEeKQivIQgUOGDQ" value="*"/>
            </argument>
            <result xmi:id="_AIm6uIVqEeKQivIQgUOGDQ" name="Call(ListSize).result(result)" outgoing="_AIm60IVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6uYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6uoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIm6u4VqEeKQivIQgUOGDQ" name="Value(0)">
            <result xmi:id="_AIm6vIVqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AIm60YVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6vYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6voVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_AIm6v4VqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_AIm6wIVqEeKQivIQgUOGDQ" name="Test(Size==0)">
            <first xmi:id="_AIm6wYVqEeKQivIQgUOGDQ" name="Test(Size==0).first" incoming="_AIm60IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6woVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6w4VqEeKQivIQgUOGDQ" value="1"/>
            </first>
            <result xmi:id="_AIm6xIVqEeKQivIQgUOGDQ" name="Test(Size==0).result" outgoing="_AIm604VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6xYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6xoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <second xmi:id="_AIm6x4VqEeKQivIQgUOGDQ" name="Test(Size==0).second" incoming="_AIm60YVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6yIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6yYVqEeKQivIQgUOGDQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_AIm6yoVqEeKQivIQgUOGDQ" name="InitialNode" outgoing="_AIm60oVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_AIm6y4VqEeKQivIQgUOGDQ" name="Decision(Test(Statements_Accept$initializationFlag$1))" outgoing="_AIm61IVqEeKQivIQgUOGDQ" incoming="_AIm60oVqEeKQivIQgUOGDQ _AIm604VqEeKQivIQgUOGDQ" decisionInputFlow="_AIm604VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIm6zIVqEeKQivIQgUOGDQ" source="_AImT4IVqEeKQivIQgUOGDQ" target="_AImT44VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIm6zYVqEeKQivIQgUOGDQ" source="_AImT44VqEeKQivIQgUOGDQ" target="_AImT7IVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIm6zoVqEeKQivIQgUOGDQ" source="_AImT44VqEeKQivIQgUOGDQ" target="_AImT94VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIm6z4VqEeKQivIQgUOGDQ" source="_AIm6sYVqEeKQivIQgUOGDQ" target="_AIm6tYVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIm60IVqEeKQivIQgUOGDQ" source="_AIm6uIVqEeKQivIQgUOGDQ" target="_AIm6wYVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIm60YVqEeKQivIQgUOGDQ" source="_AIm6vIVqEeKQivIQgUOGDQ" target="_AIm6x4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AIm60oVqEeKQivIQgUOGDQ" source="_AIm6yoVqEeKQivIQgUOGDQ" target="_AIm6y4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIm604VqEeKQivIQgUOGDQ" source="_AIm6xIVqEeKQivIQgUOGDQ" target="_AIm6y4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AIm61IVqEeKQivIQgUOGDQ" source="_AIm6y4VqEeKQivIQgUOGDQ" target="_AImT5IVqEeKQivIQgUOGDQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AIm61YVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_AIm61oVqEeKQivIQgUOGDQ" name="Statements_Accept$initialization$1" visibility="protected" method="_AImT3YVqEeKQivIQgUOGDQ"/>
      <ownedOperation xmi:id="_AIm614VqEeKQivIQgUOGDQ" name="Statements_Accept" visibility="package" method="_AImToIVqEeKQivIQgUOGDQ">
        <ownedParameter xmi:id="_AIm62IVqEeKQivIQgUOGDQ" name="" visibility="package" type="_AIlskYVqEeKQivIQgUOGDQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm62YVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm62oVqEeKQivIQgUOGDQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AIm624VqEeKQivIQgUOGDQ" name="destroy" visibility="package" method="_AImT24VqEeKQivIQgUOGDQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_AIm63IVqEeKQivIQgUOGDQ" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_AIm63YVqEeKQivIQgUOGDQ" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm63oVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm634VqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AIm64IVqEeKQivIQgUOGDQ" name="Super$method$1" specification="_AIniFoVqEeKQivIQgUOGDQ" group="_AIm65oVqEeKQivIQgUOGDQ" node="_AIm65YVqEeKQivIQgUOGDQ _AIm65oVqEeKQivIQgUOGDQ">
          <ownedParameter xmi:id="_AIm64YVqEeKQivIQgUOGDQ" name="" type="_AIm63IVqEeKQivIQgUOGDQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm64oVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm644VqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIm65IVqEeKQivIQgUOGDQ" source="_AIm67IVqEeKQivIQgUOGDQ" target="_AIm65YVqEeKQivIQgUOGDQ"/>
          <structuredNode xmi:id="_AIm65oVqEeKQivIQgUOGDQ" name="Body(Super$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIm654VqEeKQivIQgUOGDQ" name="Body" incoming="_AInhyIVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AIm66IVqEeKQivIQgUOGDQ" name="ReadSelf">
              <result xmi:id="_AIm66YVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AInhxoVqEeKQivIQgUOGDQ" type="_AIm63IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm66oVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm664VqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AIm67IVqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AIm65IVqEeKQivIQgUOGDQ _AInhx4VqEeKQivIQgUOGDQ _AInhyYVqEeKQivIQgUOGDQ" incoming="_AInhxoVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_AIm67YVqEeKQivIQgUOGDQ" name="Call(Super$initialization$1)" outgoing="_AInhyIVqEeKQivIQgUOGDQ" incoming="_AInhz4VqEeKQivIQgUOGDQ" operation="_AIniFYVqEeKQivIQgUOGDQ">
              <target xmi:id="_AIm67oVqEeKQivIQgUOGDQ" name="Call(Super$initialization$1).target" incoming="_AInhx4VqEeKQivIQgUOGDQ" type="_AIm63IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm674VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm68IVqEeKQivIQgUOGDQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIm68YVqEeKQivIQgUOGDQ" name="Read(Super$initializationFlag$1)" structuralFeature="_AIm63YVqEeKQivIQgUOGDQ">
              <object xmi:id="_AIm68oVqEeKQivIQgUOGDQ" name="Read(Super$initializationFlag$1).object" incoming="_AInhyYVqEeKQivIQgUOGDQ" type="_AIm63IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm684VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm69IVqEeKQivIQgUOGDQ" value="1"/>
              </object>
              <result xmi:id="_AIm69YVqEeKQivIQgUOGDQ" name="Read(Super$initializationFlag$1).result" outgoing="_AInhyoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm69oVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm694VqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIm6-IVqEeKQivIQgUOGDQ" name="Call(ListSize)">
              <argument xmi:id="_AIm6-YVqEeKQivIQgUOGDQ" name="Call(ListSize).argument(list)" incoming="_AInhyoVqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6-oVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6-4VqEeKQivIQgUOGDQ" value="*"/>
              </argument>
              <result xmi:id="_AIm6_IVqEeKQivIQgUOGDQ" name="Call(ListSize).result(result)" outgoing="_AInhy4VqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm6_YVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm6_oVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIm6_4VqEeKQivIQgUOGDQ" name="Value(0)">
              <result xmi:id="_AIm7AIVqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AInhzIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm7AYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm7AoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_AIm7A4VqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AIm7BIVqEeKQivIQgUOGDQ" name="Test(Size==0)">
              <first xmi:id="_AIm7BYVqEeKQivIQgUOGDQ" name="Test(Size==0).first" incoming="_AInhy4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm7BoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIm7B4VqEeKQivIQgUOGDQ" value="1"/>
              </first>
              <result xmi:id="_AIm7CIVqEeKQivIQgUOGDQ" name="Test(Size==0).result" outgoing="_AInhzoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIm7CYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInhwIVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <second xmi:id="_AInhwYVqEeKQivIQgUOGDQ" name="Test(Size==0).second" incoming="_AInhzIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInhwoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInhw4VqEeKQivIQgUOGDQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AInhxIVqEeKQivIQgUOGDQ" name="InitialNode" outgoing="_AInhzYVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AInhxYVqEeKQivIQgUOGDQ" name="Decision(Test(Super$initializationFlag$1))" outgoing="_AInhz4VqEeKQivIQgUOGDQ" incoming="_AInhzYVqEeKQivIQgUOGDQ _AInhzoVqEeKQivIQgUOGDQ" decisionInputFlow="_AInhzoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AInhxoVqEeKQivIQgUOGDQ" source="_AIm66YVqEeKQivIQgUOGDQ" target="_AIm67IVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AInhx4VqEeKQivIQgUOGDQ" source="_AIm67IVqEeKQivIQgUOGDQ" target="_AIm67oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AInhyIVqEeKQivIQgUOGDQ" source="_AIm67YVqEeKQivIQgUOGDQ" target="_AIm654VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AInhyYVqEeKQivIQgUOGDQ" source="_AIm67IVqEeKQivIQgUOGDQ" target="_AIm68oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AInhyoVqEeKQivIQgUOGDQ" source="_AIm69YVqEeKQivIQgUOGDQ" target="_AIm6-YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AInhy4VqEeKQivIQgUOGDQ" source="_AIm6_IVqEeKQivIQgUOGDQ" target="_AIm7BYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AInhzIVqEeKQivIQgUOGDQ" source="_AIm7AIVqEeKQivIQgUOGDQ" target="_AInhwYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AInhzYVqEeKQivIQgUOGDQ" source="_AInhxIVqEeKQivIQgUOGDQ" target="_AInhxYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AInhzoVqEeKQivIQgUOGDQ" source="_AIm7CIVqEeKQivIQgUOGDQ" target="_AInhxYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AInhz4VqEeKQivIQgUOGDQ" source="_AInhxYVqEeKQivIQgUOGDQ" target="_AIm67YVqEeKQivIQgUOGDQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AInh0IVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_AIm65YVqEeKQivIQgUOGDQ" name="Return" incoming="_AIm65IVqEeKQivIQgUOGDQ" parameter="_AIm64YVqEeKQivIQgUOGDQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AInh0YVqEeKQivIQgUOGDQ" name="destroy$method$1" specification="_AIniGoVqEeKQivIQgUOGDQ" group="_AInh0oVqEeKQivIQgUOGDQ" node="_AInh0oVqEeKQivIQgUOGDQ">
          <structuredNode xmi:id="_AInh0oVqEeKQivIQgUOGDQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AInh04VqEeKQivIQgUOGDQ" name="Super$initialization$1" specification="_AIniFYVqEeKQivIQgUOGDQ" group="_AInh1IVqEeKQivIQgUOGDQ" node="_AInh1IVqEeKQivIQgUOGDQ">
          <structuredNode xmi:id="_AInh1IVqEeKQivIQgUOGDQ" name="Body(Super$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AInh1YVqEeKQivIQgUOGDQ" name="ReadSelf">
              <result xmi:id="_AInh1oVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIniC4VqEeKQivIQgUOGDQ" type="_AIm63IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh14VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh2IVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AInh2YVqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AIniDIVqEeKQivIQgUOGDQ _AIniDYVqEeKQivIQgUOGDQ" incoming="_AIniC4VqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AInh2oVqEeKQivIQgUOGDQ" name="Initialization" incoming="_AIniE4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AInh24VqEeKQivIQgUOGDQ" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AInh3IVqEeKQivIQgUOGDQ" name="Value(true)">
                  <result xmi:id="_AInh3YVqEeKQivIQgUOGDQ" name="Value(true).result" outgoing="_AInh64VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh3oVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh34VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_AInh4IVqEeKQivIQgUOGDQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AInh4YVqEeKQivIQgUOGDQ" name="Write(Super$initializationFlag$1)" structuralFeature="_AIm63YVqEeKQivIQgUOGDQ" isReplaceAll="true">
                  <object xmi:id="_AInh4oVqEeKQivIQgUOGDQ" name="Write(Super$initializationFlag$1).object" incoming="_AIniDIVqEeKQivIQgUOGDQ" type="_AIm63IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh44VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh5IVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AInh5YVqEeKQivIQgUOGDQ" name="Write(Super$initializationFlag$1).result" type="_AIm63IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh5oVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh54VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:id="_AInh6IVqEeKQivIQgUOGDQ" name="Write(Super$initializationFlag$1).value" incoming="_AInh64VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh6YVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh6oVqEeKQivIQgUOGDQ" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AInh64VqEeKQivIQgUOGDQ" source="_AInh3YVqEeKQivIQgUOGDQ" target="_AInh6IVqEeKQivIQgUOGDQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AInh7IVqEeKQivIQgUOGDQ" name="Read(Super$initializationFlag$1)" structuralFeature="_AIm63YVqEeKQivIQgUOGDQ">
              <object xmi:id="_AInh7YVqEeKQivIQgUOGDQ" name="Read(Super$initializationFlag$1).object" incoming="_AIniDYVqEeKQivIQgUOGDQ" type="_AIm63IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh7oVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh74VqEeKQivIQgUOGDQ" value="1"/>
              </object>
              <result xmi:id="_AInh8IVqEeKQivIQgUOGDQ" name="Read(Super$initializationFlag$1).result" outgoing="_AIniDoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh8YVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh8oVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AInh84VqEeKQivIQgUOGDQ" name="Call(ListSize)">
              <argument xmi:id="_AInh9IVqEeKQivIQgUOGDQ" name="Call(ListSize).argument(list)" incoming="_AIniDoVqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh9YVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh9oVqEeKQivIQgUOGDQ" value="*"/>
              </argument>
              <result xmi:id="_AInh94VqEeKQivIQgUOGDQ" name="Call(ListSize).result(result)" outgoing="_AIniD4VqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh-IVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh-YVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AInh-oVqEeKQivIQgUOGDQ" name="Value(0)">
              <result xmi:id="_AInh-4VqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AIniEIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AInh_IVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AInh_YVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_AInh_oVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AInh_4VqEeKQivIQgUOGDQ" name="Test(Size==0)">
              <first xmi:id="_AIniAIVqEeKQivIQgUOGDQ" name="Test(Size==0).first" incoming="_AIniD4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIniAYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIniAoVqEeKQivIQgUOGDQ" value="1"/>
              </first>
              <result xmi:id="_AIniA4VqEeKQivIQgUOGDQ" name="Test(Size==0).result" outgoing="_AIniEoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIniBIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIniBYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <second xmi:id="_AIniBoVqEeKQivIQgUOGDQ" name="Test(Size==0).second" incoming="_AIniEIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIniB4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIniCIVqEeKQivIQgUOGDQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AIniCYVqEeKQivIQgUOGDQ" name="InitialNode" outgoing="_AIniEYVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AIniCoVqEeKQivIQgUOGDQ" name="Decision(Test(Super$initializationFlag$1))" outgoing="_AIniE4VqEeKQivIQgUOGDQ" incoming="_AIniEYVqEeKQivIQgUOGDQ _AIniEoVqEeKQivIQgUOGDQ" decisionInputFlow="_AIniEoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIniC4VqEeKQivIQgUOGDQ" source="_AInh1oVqEeKQivIQgUOGDQ" target="_AInh2YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIniDIVqEeKQivIQgUOGDQ" source="_AInh2YVqEeKQivIQgUOGDQ" target="_AInh4oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIniDYVqEeKQivIQgUOGDQ" source="_AInh2YVqEeKQivIQgUOGDQ" target="_AInh7YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIniDoVqEeKQivIQgUOGDQ" source="_AInh8IVqEeKQivIQgUOGDQ" target="_AInh9IVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIniD4VqEeKQivIQgUOGDQ" source="_AInh94VqEeKQivIQgUOGDQ" target="_AIniAIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIniEIVqEeKQivIQgUOGDQ" source="_AInh-4VqEeKQivIQgUOGDQ" target="_AIniBoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIniEYVqEeKQivIQgUOGDQ" source="_AIniCYVqEeKQivIQgUOGDQ" target="_AIniCoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIniEoVqEeKQivIQgUOGDQ" source="_AIniA4VqEeKQivIQgUOGDQ" target="_AIniCoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIniE4VqEeKQivIQgUOGDQ" source="_AIniCoVqEeKQivIQgUOGDQ" target="_AInh2oVqEeKQivIQgUOGDQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AIniFIVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_AIniFYVqEeKQivIQgUOGDQ" name="Super$initialization$1" visibility="protected" method="_AInh04VqEeKQivIQgUOGDQ"/>
        <ownedOperation xmi:id="_AIniFoVqEeKQivIQgUOGDQ" name="Super" visibility="package" method="_AIm64IVqEeKQivIQgUOGDQ">
          <ownedParameter xmi:id="_AIniF4VqEeKQivIQgUOGDQ" name="" visibility="package" type="_AIm63IVqEeKQivIQgUOGDQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIniGIVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIniGYVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AIniGoVqEeKQivIQgUOGDQ" name="destroy" visibility="package" method="_AInh0YVqEeKQivIQgUOGDQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_AIoI0IVqEeKQivIQgUOGDQ" name="SignalNewArrival">
          <ownedAttribute xmi:id="_AIoI0YVqEeKQivIQgUOGDQ" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI0oVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI04VqEeKQivIQgUOGDQ" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_AIoI1IVqEeKQivIQgUOGDQ" name="SignalTermination"/>
        <ownedReception xmi:id="_AIoI1YVqEeKQivIQgUOGDQ" name="SignalTermination" signal="_AIoI1IVqEeKQivIQgUOGDQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_AIoI1oVqEeKQivIQgUOGDQ" name="Test" visibility="private" classifierBehavior="_AIoI9oVqEeKQivIQgUOGDQ" isActive="true">
        <generalization xmi:id="_AIoI14VqEeKQivIQgUOGDQ" general="_AIm63IVqEeKQivIQgUOGDQ"/>
        <ownedAttribute xmi:id="_AIoI2IVqEeKQivIQgUOGDQ" name="Test$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI2YVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI2oVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI24VqEeKQivIQgUOGDQ" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI3IVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI3YVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI3oVqEeKQivIQgUOGDQ" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI34VqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI4IVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI4YVqEeKQivIQgUOGDQ" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI4oVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI44VqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI5IVqEeKQivIQgUOGDQ" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI5YVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI5oVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI54VqEeKQivIQgUOGDQ" name="arrival" visibility="public" type="_AIoI0IVqEeKQivIQgUOGDQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI6IVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI6YVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI6oVqEeKQivIQgUOGDQ" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI64VqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI7IVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI7YVqEeKQivIQgUOGDQ" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI7oVqEeKQivIQgUOGDQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI74VqEeKQivIQgUOGDQ" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI8IVqEeKQivIQgUOGDQ" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI8YVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI8oVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_AIoI84VqEeKQivIQgUOGDQ" name="tester" visibility="public" type="_AIu2g4VqEeKQivIQgUOGDQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI9IVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI9YVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AIoI9oVqEeKQivIQgUOGDQ" name="Test$classifierBehavior$1" visibility="private" isActive="true" group="_AIoI94VqEeKQivIQgUOGDQ" node="_AIoI94VqEeKQivIQgUOGDQ">
          <structuredNode xmi:id="_AIoI94VqEeKQivIQgUOGDQ" name="Body(Test$classifierBehavior$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIoI-IVqEeKQivIQgUOGDQ" name="AcceptStatement@5c7b2faa" outgoing="_AItBkoVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ForkNode" xmi:id="_AIoI-YVqEeKQivIQgUOGDQ" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" outgoing="_AItBkYVqEeKQivIQgUOGDQ _AItBoYVqEeKQivIQgUOGDQ _AItBpoVqEeKQivIQgUOGDQ" incoming="_AIoJAoVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_AIoI-oVqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival,SignalTermination)" incoming="_AIoJAYVqEeKQivIQgUOGDQ">
                <result xmi:id="_AIoI-4VqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_AIoJAoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoI_IVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoI_YVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <trigger xmi:id="_AIoI_oVqEeKQivIQgUOGDQ" event="_AIzvBYVqEeKQivIQgUOGDQ"/>
                <trigger xmi:id="_AIoI_4VqEeKQivIQgUOGDQ" event="_AIzvBoVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AIoJAIVqEeKQivIQgUOGDQ" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_AIoJAYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIoJAYVqEeKQivIQgUOGDQ" source="_AIoJAIVqEeKQivIQgUOGDQ" target="_AIoI-oVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIoJAoVqEeKQivIQgUOGDQ" source="_AIoI-4VqEeKQivIQgUOGDQ" target="_AIoI-YVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIoJA4VqEeKQivIQgUOGDQ" name="ExpressionStatement@3652d2b1" outgoing="_AItBk4VqEeKQivIQgUOGDQ" incoming="_AItBkoVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIoJBIVqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@77867e53)" incoming="_AIoJF4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_AIoJBYVqEeKQivIQgUOGDQ" name="ReadSelf">
                  <result xmi:id="_AIoJBoVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIoJFYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoJB4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoJCIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIoJCYVqEeKQivIQgUOGDQ" name="Write(sig)" structuralFeature="_AIoI24VqEeKQivIQgUOGDQ" isReplaceAll="true">
                <object xmi:id="_AIoJCoVqEeKQivIQgUOGDQ" name="Write(sig).object" incoming="_AIoJFYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoJC4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoJDIVqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AIoJDYVqEeKQivIQgUOGDQ" name="Write(sig).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoJDoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoJD4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:id="_AIoJEIVqEeKQivIQgUOGDQ" name="Write(sig).value" incoming="_AIoJFoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoJEYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoJEoVqEeKQivIQgUOGDQ" value="1"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AIoJE4VqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@77867e53)" outgoing="_AIoJFoVqEeKQivIQgUOGDQ" incoming="_AItBkYVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIoJFIVqEeKQivIQgUOGDQ" name="RightHandSide@2df26106" outgoing="_AIoJF4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIoJFYVqEeKQivIQgUOGDQ" source="_AIoJBoVqEeKQivIQgUOGDQ" target="_AIoJCoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIoJFoVqEeKQivIQgUOGDQ" source="_AIoJE4VqEeKQivIQgUOGDQ" target="_AIoJEIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIoJF4VqEeKQivIQgUOGDQ" source="_AIoJFIVqEeKQivIQgUOGDQ" target="_AIoJBIVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIoJGIVqEeKQivIQgUOGDQ" name="ExpressionStatement@9748a5c" outgoing="_AItBmIVqEeKQivIQgUOGDQ" incoming="_AItBk4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ForkNode" xmi:id="_AIoJGYVqEeKQivIQgUOGDQ" name="Fork(terminate)@7b51a536" outgoing="_AItBloVqEeKQivIQgUOGDQ" incoming="_AIov4IVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIoJGoVqEeKQivIQgUOGDQ" name="RightHandSide@2d35bb7a">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIoJG4VqEeKQivIQgUOGDQ" name="Value(false)">
                  <result xmi:id="_AIoJHIVqEeKQivIQgUOGDQ" name="Value(false).result" outgoing="_AIov4IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIoJHYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIoJHoVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_AIoJH4VqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIov4IVqEeKQivIQgUOGDQ" source="_AIoJHIVqEeKQivIQgUOGDQ" target="_AIoJGYVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIov4YVqEeKQivIQgUOGDQ" name="AcceptStatement@40bd84ef" outgoing="_AItBmoVqEeKQivIQgUOGDQ" incoming="_AItBmIVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIov4oVqEeKQivIQgUOGDQ" name="AcceptBlock(SignalNewArrival)" incoming="_AIowMYVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIov44VqEeKQivIQgUOGDQ" name="ExpressionStatement@6a812e5a">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIov5IVqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@d79b603)" incoming="_AIowAYVqEeKQivIQgUOGDQ">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_AIov5YVqEeKQivIQgUOGDQ" name="ReadSelf">
                      <result xmi:id="_AIov5oVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIov_oVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIov54VqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIov6IVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIov6YVqEeKQivIQgUOGDQ" name="Write(name)" structuralFeature="_AIoI4YVqEeKQivIQgUOGDQ" isReplaceAll="true">
                    <object xmi:id="_AIov6oVqEeKQivIQgUOGDQ" name="Write(name).object" incoming="_AIov_oVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIov64VqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIov7IVqEeKQivIQgUOGDQ" value="1"/>
                    </object>
                    <result xmi:id="_AIov7YVqEeKQivIQgUOGDQ" name="Write(name).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIov7oVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIov74VqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                    <value xmi:id="_AIov8IVqEeKQivIQgUOGDQ" name="Write(name).value" incoming="_AIov_4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIov8YVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIov8oVqEeKQivIQgUOGDQ" value="1"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_AIov84VqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@d79b603)" outgoing="_AIov_4VqEeKQivIQgUOGDQ" incoming="_AIowAIVqEeKQivIQgUOGDQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIov9IVqEeKQivIQgUOGDQ" name="RightHandSide@59e2832d" outgoing="_AIowAYVqEeKQivIQgUOGDQ">
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIov9YVqEeKQivIQgUOGDQ" name="Read(name)" structuralFeature="_AIoI0YVqEeKQivIQgUOGDQ">
                      <object xmi:id="_AIov9oVqEeKQivIQgUOGDQ" name="Read(name).object" incoming="_AIov_YVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIov94VqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIov-IVqEeKQivIQgUOGDQ" value="1"/>
                      </object>
                      <result xmi:id="_AIov-YVqEeKQivIQgUOGDQ" name="Read(name).result" outgoing="_AIowAIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIov-oVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIov-4VqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_AIov_IVqEeKQivIQgUOGDQ" name="Fork()" outgoing="_AIov_YVqEeKQivIQgUOGDQ" incoming="_AItBlIVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIov_YVqEeKQivIQgUOGDQ" source="_AIov_IVqEeKQivIQgUOGDQ" target="_AIov9oVqEeKQivIQgUOGDQ"/>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIov_oVqEeKQivIQgUOGDQ" source="_AIov5oVqEeKQivIQgUOGDQ" target="_AIov6oVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIov_4VqEeKQivIQgUOGDQ" source="_AIov84VqEeKQivIQgUOGDQ" target="_AIov8IVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowAIVqEeKQivIQgUOGDQ" source="_AIov-YVqEeKQivIQgUOGDQ" target="_AIov84VqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_AIowAYVqEeKQivIQgUOGDQ" source="_AIov9IVqEeKQivIQgUOGDQ" target="_AIov5IVqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIowAoVqEeKQivIQgUOGDQ" name="Passthru(terminate)">
                  <structuredNodeInput xmi:id="_AIowA4VqEeKQivIQgUOGDQ" name="Passthru(terminate).input" outgoing="_AIowCYVqEeKQivIQgUOGDQ" incoming="_AItBloVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowBIVqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowBYVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_AIowBoVqEeKQivIQgUOGDQ" name="Passthru(terminate).output" outgoing="_AIowM4VqEeKQivIQgUOGDQ" incoming="_AIowCYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowB4VqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowCIVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowCYVqEeKQivIQgUOGDQ" source="_AIowA4VqEeKQivIQgUOGDQ" target="_AIowBoVqEeKQivIQgUOGDQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AIowCoVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_AIoI0IVqEeKQivIQgUOGDQ">
                <object xmi:id="_AIowC4VqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_AItBlYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowDIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowDYVqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AIowDoVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_AIowMIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowD4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowEIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_AIowEYVqEeKQivIQgUOGDQ" name="Decision(Test(SignalNewArrival))" outgoing="_AIowMYVqEeKQivIQgUOGDQ" incoming="_AIowMIVqEeKQivIQgUOGDQ _AIowN4VqEeKQivIQgUOGDQ" decisionInputFlow="_AIowMIVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIowEoVqEeKQivIQgUOGDQ" name="AcceptBlock(SignalTermination)" incoming="_AIowNYVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIowE4VqEeKQivIQgUOGDQ" name="ExpressionStatement@757eac49">
                  <node xmi:type="uml:ForkNode" xmi:id="_AIowFIVqEeKQivIQgUOGDQ" name="Fork(terminate)@540d9a89" outgoing="_AIowOYVqEeKQivIQgUOGDQ" incoming="_AIowG4VqEeKQivIQgUOGDQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIowFYVqEeKQivIQgUOGDQ" name="RightHandSide@491cc37b">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIowFoVqEeKQivIQgUOGDQ" name="Value(true)">
                      <result xmi:id="_AIowF4VqEeKQivIQgUOGDQ" name="Value(true).result" outgoing="_AIowG4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowGIVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowGYVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_AIowGoVqEeKQivIQgUOGDQ" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowG4VqEeKQivIQgUOGDQ" source="_AIowF4VqEeKQivIQgUOGDQ" target="_AIowFIVqEeKQivIQgUOGDQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AIowHIVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_AIoI1IVqEeKQivIQgUOGDQ">
                <object xmi:id="_AIowHYVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_AItBl4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowHoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowH4VqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AIowIIVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_AIowNIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowIYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowIoVqEeKQivIQgUOGDQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_AIowI4VqEeKQivIQgUOGDQ" name="Decision(Test(SignalTermination))" outgoing="_AIowNYVqEeKQivIQgUOGDQ _AIowN4VqEeKQivIQgUOGDQ" incoming="_AIowNIVqEeKQivIQgUOGDQ _AIowPIVqEeKQivIQgUOGDQ" decisionInputFlow="_AIowNIVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AIowJIVqEeKQivIQgUOGDQ" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" outgoing="_AItBlIVqEeKQivIQgUOGDQ _AItBlYVqEeKQivIQgUOGDQ _AItBl4VqEeKQivIQgUOGDQ" incoming="_AIowPYVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AIowJYVqEeKQivIQgUOGDQ" name="Fork(terminate)" outgoing="_AItBmYVqEeKQivIQgUOGDQ _AItBn4VqEeKQivIQgUOGDQ _AItBo4VqEeKQivIQgUOGDQ" incoming="_AIowOoVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_AIowJoVqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival,SignalTermination)" outgoing="_AIowPIVqEeKQivIQgUOGDQ" incoming="_AIowO4VqEeKQivIQgUOGDQ">
                <result xmi:id="_AIowJ4VqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_AIowPYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowKIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowKYVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <trigger xmi:id="_AIowKoVqEeKQivIQgUOGDQ" event="_AIzvB4VqEeKQivIQgUOGDQ"/>
                <trigger xmi:id="_AIowK4VqEeKQivIQgUOGDQ" event="_AIzvCIVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AIowLIVqEeKQivIQgUOGDQ" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_AIowO4VqEeKQivIQgUOGDQ"/>
              <structuredNodeOutput xmi:id="_AIowLYVqEeKQivIQgUOGDQ" name="AcceptStatement@40bd84ef.output(terminate)" outgoing="_AIowOoVqEeKQivIQgUOGDQ" incoming="_AIowM4VqEeKQivIQgUOGDQ _AIowOYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIowLoVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIowL4VqEeKQivIQgUOGDQ" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowMIVqEeKQivIQgUOGDQ" source="_AIowDoVqEeKQivIQgUOGDQ" target="_AIowEYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIowMYVqEeKQivIQgUOGDQ" source="_AIowEYVqEeKQivIQgUOGDQ" target="_AIov4oVqEeKQivIQgUOGDQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_AIowMoVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowM4VqEeKQivIQgUOGDQ" source="_AIowBoVqEeKQivIQgUOGDQ" target="_AIowLYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowNIVqEeKQivIQgUOGDQ" source="_AIowIIVqEeKQivIQgUOGDQ" target="_AIowI4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIowNYVqEeKQivIQgUOGDQ" source="_AIowI4VqEeKQivIQgUOGDQ" target="_AIowEoVqEeKQivIQgUOGDQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_AIowNoVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIowN4VqEeKQivIQgUOGDQ" source="_AIowI4VqEeKQivIQgUOGDQ" target="_AIowEYVqEeKQivIQgUOGDQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_AIowOIVqEeKQivIQgUOGDQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowOYVqEeKQivIQgUOGDQ" source="_AIowFIVqEeKQivIQgUOGDQ" target="_AIowLYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowOoVqEeKQivIQgUOGDQ" source="_AIowLYVqEeKQivIQgUOGDQ" target="_AIowJYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIowO4VqEeKQivIQgUOGDQ" source="_AIowLIVqEeKQivIQgUOGDQ" target="_AIowJoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIowPIVqEeKQivIQgUOGDQ" source="_AIowJoVqEeKQivIQgUOGDQ" target="_AIowI4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIowPYVqEeKQivIQgUOGDQ" source="_AIowJ4VqEeKQivIQgUOGDQ" target="_AIowJIVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIowPoVqEeKQivIQgUOGDQ" name="ExpressionStatement@181db0a5" outgoing="_AItBm4VqEeKQivIQgUOGDQ" incoming="_AItBmoVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpW8IVqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@45382d01)" incoming="_AIpXA4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_AIpW8YVqEeKQivIQgUOGDQ" name="ReadSelf">
                  <result xmi:id="_AIpW8oVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIpXAYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpW84VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpW9IVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIpW9YVqEeKQivIQgUOGDQ" name="Write(terminate)" structuralFeature="_AIoI5IVqEeKQivIQgUOGDQ" isReplaceAll="true">
                <object xmi:id="_AIpW9oVqEeKQivIQgUOGDQ" name="Write(terminate).object" incoming="_AIpXAYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpW94VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpW-IVqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AIpW-YVqEeKQivIQgUOGDQ" name="Write(terminate).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpW-oVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpW-4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:id="_AIpW_IVqEeKQivIQgUOGDQ" name="Write(terminate).value" incoming="_AIpXAoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpW_YVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpW_oVqEeKQivIQgUOGDQ" value="1"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AIpW_4VqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@45382d01)" outgoing="_AIpXAoVqEeKQivIQgUOGDQ" incoming="_AItBmYVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXAIVqEeKQivIQgUOGDQ" name="RightHandSide@35b713b2" outgoing="_AIpXA4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIpXAYVqEeKQivIQgUOGDQ" source="_AIpW8oVqEeKQivIQgUOGDQ" target="_AIpW9oVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIpXAoVqEeKQivIQgUOGDQ" source="_AIpW_4VqEeKQivIQgUOGDQ" target="_AIpW_IVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIpXA4VqEeKQivIQgUOGDQ" source="_AIpXAIVqEeKQivIQgUOGDQ" target="_AIpW8IVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXBIVqEeKQivIQgUOGDQ" name="AcceptStatement@4a07eb92" outgoing="_AItBnIVqEeKQivIQgUOGDQ" incoming="_AItBm4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:AcceptEventAction" xmi:id="_AIpXBYVqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival)" incoming="_AIpXCIVqEeKQivIQgUOGDQ">
                <trigger xmi:id="_AIpXBoVqEeKQivIQgUOGDQ" event="_AIzvCYVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AIpXB4VqEeKQivIQgUOGDQ" name="Initial(Accept(SignalNewArrival))" outgoing="_AIpXCIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIpXCIVqEeKQivIQgUOGDQ" source="_AIpXB4VqEeKQivIQgUOGDQ" target="_AIpXBYVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXCYVqEeKQivIQgUOGDQ" name="AcceptStatement@226c1080" outgoing="_AItBnoVqEeKQivIQgUOGDQ" incoming="_AItBnIVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ForkNode" xmi:id="_AIpXCoVqEeKQivIQgUOGDQ" name="Fork(Accept(SignalNewArrival).result)" outgoing="_AItBnYVqEeKQivIQgUOGDQ _AItBoIVqEeKQivIQgUOGDQ _AItBpYVqEeKQivIQgUOGDQ" incoming="_AIpXEoVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_AIpXC4VqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival)" incoming="_AIpXEYVqEeKQivIQgUOGDQ">
                <result xmi:id="_AIpXDIVqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival).result" outgoing="_AIpXEoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXDYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXDoVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <trigger xmi:id="_AIpXD4VqEeKQivIQgUOGDQ" event="_AIzvCoVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AIpXEIVqEeKQivIQgUOGDQ" name="Initial(Accept(SignalNewArrival))" outgoing="_AIpXEYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIpXEYVqEeKQivIQgUOGDQ" source="_AIpXEIVqEeKQivIQgUOGDQ" target="_AIpXC4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIpXEoVqEeKQivIQgUOGDQ" source="_AIpXDIVqEeKQivIQgUOGDQ" target="_AIpXCoVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXE4VqEeKQivIQgUOGDQ" name="ExpressionStatement@75c8b2b" outgoing="_AItBooVqEeKQivIQgUOGDQ" incoming="_AItBnoVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXFIVqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@4cb4b7d3)" incoming="_AIpXJ4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_AIpXFYVqEeKQivIQgUOGDQ" name="ReadSelf">
                  <result xmi:id="_AIpXFoVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIpXJYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXF4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXGIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIpXGYVqEeKQivIQgUOGDQ" name="Write(arrival)" structuralFeature="_AIoI54VqEeKQivIQgUOGDQ" isReplaceAll="true">
                <object xmi:id="_AIpXGoVqEeKQivIQgUOGDQ" name="Write(arrival).object" incoming="_AIpXJYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXG4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXHIVqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AIpXHYVqEeKQivIQgUOGDQ" name="Write(arrival).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXHoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXH4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:id="_AIpXIIVqEeKQivIQgUOGDQ" name="Write(arrival).value" incoming="_AIpXJoVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXIYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXIoVqEeKQivIQgUOGDQ" value="1"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AIpXI4VqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@4cb4b7d3)" outgoing="_AIpXJoVqEeKQivIQgUOGDQ" incoming="_AItBnYVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXJIVqEeKQivIQgUOGDQ" name="RightHandSide@2c76ab44" outgoing="_AIpXJ4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIpXJYVqEeKQivIQgUOGDQ" source="_AIpXFoVqEeKQivIQgUOGDQ" target="_AIpXGoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIpXJoVqEeKQivIQgUOGDQ" source="_AIpXI4VqEeKQivIQgUOGDQ" target="_AIpXIIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIpXJ4VqEeKQivIQgUOGDQ" source="_AIpXJIVqEeKQivIQgUOGDQ" target="_AIpXFIVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXKIVqEeKQivIQgUOGDQ" name="ForStatement@290b5757" outgoing="_AItBqIVqEeKQivIQgUOGDQ" incoming="_AItBooVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:LoopNode" xmi:id="_AIpXKYVqEeKQivIQgUOGDQ" name="Loop(ForStatement@290b5757)" incoming="_AIrMTYVqEeKQivIQgUOGDQ" bodyOutput="_AIp-RIVqEeKQivIQgUOGDQ _AIp-R4VqEeKQivIQgUOGDQ _AIp-SoVqEeKQivIQgUOGDQ _AIp-WYVqEeKQivIQgUOGDQ _AIqlFYVqEeKQivIQgUOGDQ _AIqlIYVqEeKQivIQgUOGDQ" bodyPart="_AIpXOoVqEeKQivIQgUOGDQ _AIpXPIVqEeKQivIQgUOGDQ _AIp-UoVqEeKQivIQgUOGDQ _AIp-XIVqEeKQivIQgUOGDQ _AIp-YYVqEeKQivIQgUOGDQ _AIqlGIVqEeKQivIQgUOGDQ _AIqlHYVqEeKQivIQgUOGDQ" decider="_AIpXN4VqEeKQivIQgUOGDQ" isTestedFirst="true" loopVariable="_AIqlSoVqEeKQivIQgUOGDQ _AIqlUIVqEeKQivIQgUOGDQ _AIqlVoVqEeKQivIQgUOGDQ _AIqlXIVqEeKQivIQgUOGDQ _AIqlYoVqEeKQivIQgUOGDQ _AIqlaIVqEeKQivIQgUOGDQ" test="_AIpXMIVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ForkNode" xmi:id="_AIpXKoVqEeKQivIQgUOGDQ" name="Fork(ForStatement@290b5757.loopVariable(terminate))" outgoing="_AIqlNYVqEeKQivIQgUOGDQ" incoming="_AIqlJYVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_AIpXK4VqEeKQivIQgUOGDQ" name="Fork(ForStatement@290b5757.loopVariable(arrival3))" outgoing="_AIqlNoVqEeKQivIQgUOGDQ" incoming="_AIqlJoVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_AIpXLIVqEeKQivIQgUOGDQ" name="Fork(ForStatement@290b5757.loopVariable(sig))" outgoing="_AIqlN4VqEeKQivIQgUOGDQ" incoming="_AIqlJ4VqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_AIpXLYVqEeKQivIQgUOGDQ" name="Fork(ForStatement@290b5757.loopVariable(i))" outgoing="_AIqlMIVqEeKQivIQgUOGDQ" incoming="_AIqlKIVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_AIpXLoVqEeKQivIQgUOGDQ" name="Fork(ForStatement@290b5757.loopVariable(counter))" outgoing="_AIqlK4VqEeKQivIQgUOGDQ _AIqlMoVqEeKQivIQgUOGDQ" incoming="_AIqlKYVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_AIpXL4VqEeKQivIQgUOGDQ" name="Fork(ForStatement@290b5757.loopVariable(upper))" outgoing="_AIqlLIVqEeKQivIQgUOGDQ _AIqlNIVqEeKQivIQgUOGDQ" incoming="_AIqlKoVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIpXMIVqEeKQivIQgUOGDQ" name="Call(&lt;=)">
                  <argument xmi:id="_AIpXMYVqEeKQivIQgUOGDQ" name="Call(&lt;=).argument(x)" incoming="_AIqlK4VqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXMoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXM4VqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <argument xmi:id="_AIpXNIVqEeKQivIQgUOGDQ" name="Call(&lt;=).argument(y)" incoming="_AIqlLIVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXNYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXNoVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AIpXN4VqEeKQivIQgUOGDQ" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXOIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXOYVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXOoVqEeKQivIQgUOGDQ" name="Values(ForStatement@290b5757)" outgoing="_AIqlLoVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_AIpXO4VqEeKQivIQgUOGDQ" name="Fork(i)" outgoing="_AIqlL4VqEeKQivIQgUOGDQ" incoming="_AIqlLYVqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXPIVqEeKQivIQgUOGDQ" name="Body(ForStatement@290b5757)" incoming="_AIqlLoVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXPYVqEeKQivIQgUOGDQ" name="AcceptStatement@682c8e3e" outgoing="_AIp-UYVqEeKQivIQgUOGDQ">
                    <node xmi:type="uml:ForkNode" xmi:id="_AIpXPoVqEeKQivIQgUOGDQ" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" outgoing="_AIp-UIVqEeKQivIQgUOGDQ" incoming="_AIpXR4VqEeKQivIQgUOGDQ"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_AIpXP4VqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival,SignalTermination)" incoming="_AIpXRoVqEeKQivIQgUOGDQ">
                      <result xmi:id="_AIpXQIVqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_AIpXR4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIpXQYVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIpXQoVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <trigger xmi:id="_AIpXQ4VqEeKQivIQgUOGDQ" event="_AIzvC4VqEeKQivIQgUOGDQ"/>
                      <trigger xmi:id="_AIpXRIVqEeKQivIQgUOGDQ" event="_AIzvDIVqEeKQivIQgUOGDQ"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_AIpXRYVqEeKQivIQgUOGDQ" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_AIpXRoVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_AIpXRoVqEeKQivIQgUOGDQ" source="_AIpXRYVqEeKQivIQgUOGDQ" target="_AIpXP4VqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIpXR4VqEeKQivIQgUOGDQ" source="_AIpXQIVqEeKQivIQgUOGDQ" target="_AIpXPoVqEeKQivIQgUOGDQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXSIVqEeKQivIQgUOGDQ" name="ExpressionStatement@4974cb2b" incoming="_AIp-UYVqEeKQivIQgUOGDQ">
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIpXSYVqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@12c699ba)" outgoing="_AIp-JIVqEeKQivIQgUOGDQ" incoming="_AIp-K4VqEeKQivIQgUOGDQ">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_AIpXSoVqEeKQivIQgUOGDQ" name="ReadSelf">
                        <result xmi:id="_AIpXS4VqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIp-JoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-AIVqEeKQivIQgUOGDQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-AYVqEeKQivIQgUOGDQ" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIp-AoVqEeKQivIQgUOGDQ" name="Index(LeftHandSide@12c699ba)" incoming="_AIp-JIVqEeKQivIQgUOGDQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIp-A4VqEeKQivIQgUOGDQ" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_AIp-BIVqEeKQivIQgUOGDQ" name="Call(ToUnlimitedNatural).argument(x)" incoming="_AIqlL4VqEeKQivIQgUOGDQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-BYVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-BoVqEeKQivIQgUOGDQ" value="1"/>
                      </argument>
                      <result xmi:id="_AIp-B4VqEeKQivIQgUOGDQ" name="Call(ToUnlimitedNatural).result(result)" outgoing="_AIp-JYVqEeKQivIQgUOGDQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-CIVqEeKQivIQgUOGDQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-CYVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_AIp-CoVqEeKQivIQgUOGDQ" name="Fork(Fork(i))" outgoing="_AIp-J4VqEeKQivIQgUOGDQ _AIp-KYVqEeKQivIQgUOGDQ" incoming="_AIp-JYVqEeKQivIQgUOGDQ"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_AIp-C4VqEeKQivIQgUOGDQ" name="Remove(signals)" structuralFeature="_AIoI7YVqEeKQivIQgUOGDQ">
                      <object xmi:id="_AIp-DIVqEeKQivIQgUOGDQ" name="Remove(signals).object" incoming="_AIp-JoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-DYVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-DoVqEeKQivIQgUOGDQ" value="1"/>
                      </object>
                      <result xmi:id="_AIp-D4VqEeKQivIQgUOGDQ" name="Remove(signals).result" outgoing="_AIp-KIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-EIVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-EYVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <removeAt xmi:id="_AIp-EoVqEeKQivIQgUOGDQ" name="Remove(signals).removeAt" incoming="_AIp-J4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-E4VqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-FIVqEeKQivIQgUOGDQ" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIp-FYVqEeKQivIQgUOGDQ" name="Write(signals)" structuralFeature="_AIoI7YVqEeKQivIQgUOGDQ">
                      <object xmi:id="_AIp-FoVqEeKQivIQgUOGDQ" name="Write(signals).object" incoming="_AIp-KIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-F4VqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-GIVqEeKQivIQgUOGDQ" value="1"/>
                      </object>
                      <result xmi:id="_AIp-GYVqEeKQivIQgUOGDQ" name="Write(signals).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-GoVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-G4VqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <value xmi:id="_AIp-HIVqEeKQivIQgUOGDQ" name="Write(signals).value" incoming="_AIp-KoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-HYVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-HoVqEeKQivIQgUOGDQ" value="1"/>
                      </value>
                      <insertAt xmi:id="_AIp-H4VqEeKQivIQgUOGDQ" name="Write(signals).insertAt" incoming="_AIp-KYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-IIVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-IYVqEeKQivIQgUOGDQ" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_AIp-IoVqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@12c699ba)" outgoing="_AIp-KoVqEeKQivIQgUOGDQ" incoming="_AIp-UIVqEeKQivIQgUOGDQ"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIp-I4VqEeKQivIQgUOGDQ" name="RightHandSide@13abfad0" outgoing="_AIp-K4VqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_AIp-JIVqEeKQivIQgUOGDQ" source="_AIpXSYVqEeKQivIQgUOGDQ" target="_AIp-AoVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-JYVqEeKQivIQgUOGDQ" source="_AIp-B4VqEeKQivIQgUOGDQ" target="_AIp-CoVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-JoVqEeKQivIQgUOGDQ" source="_AIpXS4VqEeKQivIQgUOGDQ" target="_AIp-DIVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-J4VqEeKQivIQgUOGDQ" source="_AIp-CoVqEeKQivIQgUOGDQ" target="_AIp-EoVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-KIVqEeKQivIQgUOGDQ" source="_AIp-D4VqEeKQivIQgUOGDQ" target="_AIp-FoVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-KYVqEeKQivIQgUOGDQ" source="_AIp-CoVqEeKQivIQgUOGDQ" target="_AIp-H4VqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-KoVqEeKQivIQgUOGDQ" source="_AIp-IoVqEeKQivIQgUOGDQ" target="_AIp-HIVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_AIp-K4VqEeKQivIQgUOGDQ" source="_AIp-I4VqEeKQivIQgUOGDQ" target="_AIpXSYVqEeKQivIQgUOGDQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIp-LIVqEeKQivIQgUOGDQ" name="Passthru(Fork(terminate))">
                    <structuredNodeInput xmi:id="_AIp-LYVqEeKQivIQgUOGDQ" name="Passthru(Fork(terminate)).input" outgoing="_AIp-M4VqEeKQivIQgUOGDQ" incoming="_AIqlNYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-LoVqEeKQivIQgUOGDQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-L4VqEeKQivIQgUOGDQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_AIp-MIVqEeKQivIQgUOGDQ" name="Passthru(Fork(terminate)).output" outgoing="_AIp-TYVqEeKQivIQgUOGDQ" incoming="_AIp-M4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-MYVqEeKQivIQgUOGDQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-MoVqEeKQivIQgUOGDQ" value="1"/>
                    </structuredNodeOutput>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-M4VqEeKQivIQgUOGDQ" source="_AIp-LYVqEeKQivIQgUOGDQ" target="_AIp-MIVqEeKQivIQgUOGDQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIp-NIVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <structuredNodeInput xmi:id="_AIp-NYVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" outgoing="_AIp-O4VqEeKQivIQgUOGDQ" incoming="_AIqlNoVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-NoVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-N4VqEeKQivIQgUOGDQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_AIp-OIVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" outgoing="_AIp-ToVqEeKQivIQgUOGDQ" incoming="_AIp-O4VqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-OYVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-OoVqEeKQivIQgUOGDQ" value="1"/>
                    </structuredNodeOutput>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-O4VqEeKQivIQgUOGDQ" source="_AIp-NYVqEeKQivIQgUOGDQ" target="_AIp-OIVqEeKQivIQgUOGDQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIp-PIVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                    <structuredNodeInput xmi:id="_AIp-PYVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" outgoing="_AIp-Q4VqEeKQivIQgUOGDQ" incoming="_AIqlN4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-PoVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-P4VqEeKQivIQgUOGDQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_AIp-QIVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" outgoing="_AIp-T4VqEeKQivIQgUOGDQ" incoming="_AIp-Q4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-QYVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-QoVqEeKQivIQgUOGDQ" value="1"/>
                    </structuredNodeOutput>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-Q4VqEeKQivIQgUOGDQ" source="_AIp-PYVqEeKQivIQgUOGDQ" target="_AIp-QIVqEeKQivIQgUOGDQ"/>
                  </node>
                  <structuredNodeOutput xmi:id="_AIp-RIVqEeKQivIQgUOGDQ" name="terminate" incoming="_AIp-TYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-RYVqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-RoVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_AIp-R4VqEeKQivIQgUOGDQ" name="arrival3" incoming="_AIp-ToVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-SIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-SYVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_AIp-SoVqEeKQivIQgUOGDQ" name="sig" incoming="_AIp-T4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-S4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-TIVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-TYVqEeKQivIQgUOGDQ" source="_AIp-MIVqEeKQivIQgUOGDQ" target="_AIp-RIVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-ToVqEeKQivIQgUOGDQ" source="_AIp-OIVqEeKQivIQgUOGDQ" target="_AIp-R4VqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-T4VqEeKQivIQgUOGDQ" source="_AIp-QIVqEeKQivIQgUOGDQ" target="_AIp-SoVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIp-UIVqEeKQivIQgUOGDQ" source="_AIpXPoVqEeKQivIQgUOGDQ" target="_AIp-IoVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_AIp-UYVqEeKQivIQgUOGDQ" source="_AIpXPYVqEeKQivIQgUOGDQ" target="_AIpXSIVqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIp-UoVqEeKQivIQgUOGDQ" name="Call(+)">
                  <argument xmi:id="_AIp-U4VqEeKQivIQgUOGDQ" name="Call(+).argument(x)" incoming="_AIqlMIVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-VIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-VYVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <argument xmi:id="_AIp-VoVqEeKQivIQgUOGDQ" name="Call(+).argument(y)" incoming="_AIqlMYVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-V4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-WIVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AIp-WYVqEeKQivIQgUOGDQ" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-WoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-W4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIp-XIVqEeKQivIQgUOGDQ" name="Value(1)">
                  <result xmi:id="_AIp-XYVqEeKQivIQgUOGDQ" name="Value(1).result" outgoing="_AIqlMYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIp-XoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIp-X4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AIp-YIVqEeKQivIQgUOGDQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIp-YYVqEeKQivIQgUOGDQ" name="Call(+)">
                  <argument xmi:id="_AIp-YoVqEeKQivIQgUOGDQ" name="Call(+).argument(x)" incoming="_AIqlMoVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlEIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlEYVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <argument xmi:id="_AIqlEoVqEeKQivIQgUOGDQ" name="Call(+).argument(y)" incoming="_AIqlM4VqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlE4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlFIVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AIqlFYVqEeKQivIQgUOGDQ" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlFoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlF4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIqlGIVqEeKQivIQgUOGDQ" name="Value(1)">
                  <result xmi:id="_AIqlGYVqEeKQivIQgUOGDQ" name="Value(1).result" outgoing="_AIqlM4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlGoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlG4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AIqlHIVqEeKQivIQgUOGDQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIqlHYVqEeKQivIQgUOGDQ" name="Passthru(Passthru(upper))">
                  <structuredNodeInput xmi:id="_AIqlHoVqEeKQivIQgUOGDQ" name="Passthru(Passthru(upper)).input" outgoing="_AIqlJIVqEeKQivIQgUOGDQ" incoming="_AIqlNIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlH4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlIIVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_AIqlIYVqEeKQivIQgUOGDQ" name="Passthru(Passthru(upper)).output" incoming="_AIqlJIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlIoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlI4VqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlJIVqEeKQivIQgUOGDQ" source="_AIqlHoVqEeKQivIQgUOGDQ" target="_AIqlIYVqEeKQivIQgUOGDQ"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlJYVqEeKQivIQgUOGDQ" source="_AIqlSoVqEeKQivIQgUOGDQ" target="_AIpXKoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlJoVqEeKQivIQgUOGDQ" source="_AIqlUIVqEeKQivIQgUOGDQ" target="_AIpXK4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlJ4VqEeKQivIQgUOGDQ" source="_AIqlVoVqEeKQivIQgUOGDQ" target="_AIpXLIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlKIVqEeKQivIQgUOGDQ" source="_AIqlXIVqEeKQivIQgUOGDQ" target="_AIpXLYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlKYVqEeKQivIQgUOGDQ" source="_AIqlYoVqEeKQivIQgUOGDQ" target="_AIpXLoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlKoVqEeKQivIQgUOGDQ" source="_AIqlaIVqEeKQivIQgUOGDQ" target="_AIpXL4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlK4VqEeKQivIQgUOGDQ" source="_AIpXLoVqEeKQivIQgUOGDQ" target="_AIpXMYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlLIVqEeKQivIQgUOGDQ" source="_AIpXL4VqEeKQivIQgUOGDQ" target="_AIpXNIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlLYVqEeKQivIQgUOGDQ" source="_AIqlXIVqEeKQivIQgUOGDQ" target="_AIpXO4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AIqlLoVqEeKQivIQgUOGDQ" source="_AIpXOoVqEeKQivIQgUOGDQ" target="_AIpXPIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlL4VqEeKQivIQgUOGDQ" source="_AIpXO4VqEeKQivIQgUOGDQ" target="_AIp-BIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlMIVqEeKQivIQgUOGDQ" source="_AIpXLYVqEeKQivIQgUOGDQ" target="_AIp-U4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlMYVqEeKQivIQgUOGDQ" source="_AIp-XYVqEeKQivIQgUOGDQ" target="_AIp-VoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlMoVqEeKQivIQgUOGDQ" source="_AIpXLoVqEeKQivIQgUOGDQ" target="_AIp-YoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlM4VqEeKQivIQgUOGDQ" source="_AIqlGYVqEeKQivIQgUOGDQ" target="_AIqlEoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlNIVqEeKQivIQgUOGDQ" source="_AIpXL4VqEeKQivIQgUOGDQ" target="_AIqlHoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlNYVqEeKQivIQgUOGDQ" source="_AIpXKoVqEeKQivIQgUOGDQ" target="_AIp-LYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlNoVqEeKQivIQgUOGDQ" source="_AIpXK4VqEeKQivIQgUOGDQ" target="_AIp-NYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIqlN4VqEeKQivIQgUOGDQ" source="_AIpXLIVqEeKQivIQgUOGDQ" target="_AIp-PYVqEeKQivIQgUOGDQ"/>
                <loopVariableInput xmi:id="_AIqlOIVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariableInput(terminate)" incoming="_AItBn4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlOYVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlOoVqEeKQivIQgUOGDQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_AIqlO4VqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariableInput(arrival3)" incoming="_AItBoIVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlPIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlPYVqEeKQivIQgUOGDQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_AIqlPoVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariableInput(sig)" incoming="_AItBoYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlP4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlQIVqEeKQivIQgUOGDQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_AIqlQYVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariableInput(i)" incoming="_AIrMTIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlQoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlQ4VqEeKQivIQgUOGDQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_AIqlRIVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariableInput(counter)" incoming="_AIrMSoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlRYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlRoVqEeKQivIQgUOGDQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_AIqlR4VqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariableInput(upper)" incoming="_AIrMS4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlSIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlSYVqEeKQivIQgUOGDQ" value="1"/>
                </loopVariableInput>
                <result xmi:id="_AIqlSoVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariable(terminate)" outgoing="_AIqlJYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlS4VqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlTIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqlTYVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlToVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlT4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqlUIVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariable(arrival3)" outgoing="_AIqlJoVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlUYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlUoVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqlU4VqEeKQivIQgUOGDQ" name="ForStatement@290b5757.result(arrival3)" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlVIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlVYVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqlVoVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariable(sig)" outgoing="_AIqlJ4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlV4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlWIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqlWYVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlWoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlW4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqlXIVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariable(i)" outgoing="_AIqlKIVqEeKQivIQgUOGDQ _AIqlLYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlXYVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlXoVqEeKQivIQgUOGDQ" value="*"/>
                </result>
                <result xmi:id="_AIqlX4VqEeKQivIQgUOGDQ" name="ForStatement@290b5757.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlYIVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlYYVqEeKQivIQgUOGDQ" value="*"/>
                </result>
                <result xmi:id="_AIqlYoVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariable(counter)" outgoing="_AIqlKYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlY4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlZIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqlZYVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlZoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlZ4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqlaIVqEeKQivIQgUOGDQ" name="ForStatement@290b5757.loopVariable(upper)" outgoing="_AIqlKoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlaYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlaoVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <result xmi:id="_AIqla4VqEeKQivIQgUOGDQ" name="ForStatement@290b5757.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlbIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlbYVqEeKQivIQgUOGDQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIqlboVqEeKQivIQgUOGDQ" name="LoopVariables(ForStatement@290b5757)" outgoing="_AIrMTYVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIqlb4VqEeKQivIQgUOGDQ" name="Value(1)">
                  <result xmi:id="_AIqlcIVqEeKQivIQgUOGDQ" name="Value(1).result" outgoing="_AIrMSYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIqlcYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIqlcoVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AIrMIIVqEeKQivIQgUOGDQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIrMIYVqEeKQivIQgUOGDQ" name="Value(2)">
                  <result xmi:id="_AIrMIoVqEeKQivIQgUOGDQ" name="Value(2).result" outgoing="_AIrMRYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMI4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMJIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AIrMJYVqEeKQivIQgUOGDQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIrMJoVqEeKQivIQgUOGDQ" name="Fork(Value(1).result)" outgoing="_AIrMTIVqEeKQivIQgUOGDQ _AIrMRoVqEeKQivIQgUOGDQ" incoming="_AIrMSYVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIrMJ4VqEeKQivIQgUOGDQ" name="Call(-)">
                  <argument xmi:id="_AIrMKIVqEeKQivIQgUOGDQ" name="Call(-).argument(x)" incoming="_AIrMRYVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMKYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMKoVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <argument xmi:id="_AIrMK4VqEeKQivIQgUOGDQ" name="Call(-).argument(y)" incoming="_AIrMRoVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMLIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMLYVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AIrMLoVqEeKQivIQgUOGDQ" name="Call(-).result(result)" outgoing="_AIrMR4VqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrML4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMMIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIrMMYVqEeKQivIQgUOGDQ" name="Value(1)">
                  <result xmi:id="_AIrMMoVqEeKQivIQgUOGDQ" name="Value(1).result" outgoing="_AIrMSIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMM4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMNIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AIrMNYVqEeKQivIQgUOGDQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIrMNoVqEeKQivIQgUOGDQ" name="Call(+)">
                  <argument xmi:id="_AIrMN4VqEeKQivIQgUOGDQ" name="Call(+).argument(x)" incoming="_AIrMR4VqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMOIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMOYVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <argument xmi:id="_AIrMOoVqEeKQivIQgUOGDQ" name="Call(+).argument(y)" incoming="_AIrMSIVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMO4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMPIVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AIrMPYVqEeKQivIQgUOGDQ" name="Call(+).result(result)" outgoing="_AIrMS4VqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMPoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMP4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIrMQIVqEeKQivIQgUOGDQ" name="Value(1)">
                  <result xmi:id="_AIrMQYVqEeKQivIQgUOGDQ" name="Value(1).result" outgoing="_AIrMSoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMQoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMQ4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AIrMRIVqEeKQivIQgUOGDQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMRYVqEeKQivIQgUOGDQ" source="_AIrMIoVqEeKQivIQgUOGDQ" target="_AIrMKIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMRoVqEeKQivIQgUOGDQ" source="_AIrMJoVqEeKQivIQgUOGDQ" target="_AIrMK4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMR4VqEeKQivIQgUOGDQ" source="_AIrMLoVqEeKQivIQgUOGDQ" target="_AIrMN4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMSIVqEeKQivIQgUOGDQ" source="_AIrMMoVqEeKQivIQgUOGDQ" target="_AIrMOoVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMSYVqEeKQivIQgUOGDQ" source="_AIqlcIVqEeKQivIQgUOGDQ" target="_AIrMJoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMSoVqEeKQivIQgUOGDQ" source="_AIrMQYVqEeKQivIQgUOGDQ" target="_AIqlRIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMS4VqEeKQivIQgUOGDQ" source="_AIrMPYVqEeKQivIQgUOGDQ" target="_AIqlR4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMTIVqEeKQivIQgUOGDQ" source="_AIrMJoVqEeKQivIQgUOGDQ" target="_AIqlQYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIrMTYVqEeKQivIQgUOGDQ" source="_AIqlboVqEeKQivIQgUOGDQ" target="_AIpXKYVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_AIrMToVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc" outgoing="_AItBqYVqEeKQivIQgUOGDQ" incoming="_AItBqIVqEeKQivIQgUOGDQ" bodyOutput="_AIrzb4VqEeKQivIQgUOGDQ _AIrzcoVqEeKQivIQgUOGDQ _AIrzdYVqEeKQivIQgUOGDQ _AIrzeIVqEeKQivIQgUOGDQ" bodyPart="_AIrMW4VqEeKQivIQgUOGDQ" decider="_AIrMV4VqEeKQivIQgUOGDQ" loopVariable="_AIsaRYVqEeKQivIQgUOGDQ _AIsaS4VqEeKQivIQgUOGDQ _AIsaUYVqEeKQivIQgUOGDQ _AIsaV4VqEeKQivIQgUOGDQ" test="_AIrMU4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ForkNode" xmi:id="_AIrMT4VqEeKQivIQgUOGDQ" name="Fork(DoStatement@3d949ffc.loopVariable(terminate))" outgoing="_AIrzhoVqEeKQivIQgUOGDQ" incoming="_AIrzgoVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AIrMUIVqEeKQivIQgUOGDQ" name="Fork(DoStatement@3d949ffc.loopVariable(s))" incoming="_AIrzg4VqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AIrMUYVqEeKQivIQgUOGDQ" name="Fork(DoStatement@3d949ffc.loopVariable(arrival3))" outgoing="_AIrzh4VqEeKQivIQgUOGDQ" incoming="_AIrzhIVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AIrMUoVqEeKQivIQgUOGDQ" name="Fork(DoStatement@3d949ffc.loopVariable(sig))" outgoing="_AIrziIVqEeKQivIQgUOGDQ" incoming="_AIrzhYVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrMU4VqEeKQivIQgUOGDQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <structuredNodeInput xmi:id="_AIrMVIVqEeKQivIQgUOGDQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" outgoing="_AIrMWoVqEeKQivIQgUOGDQ" incoming="_AItBp4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMVYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMVoVqEeKQivIQgUOGDQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_AIrMV4VqEeKQivIQgUOGDQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_AIrMWoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMWIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMWYVqEeKQivIQgUOGDQ" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMWoVqEeKQivIQgUOGDQ" source="_AIrMVIVqEeKQivIQgUOGDQ" target="_AIrMV4VqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrMW4VqEeKQivIQgUOGDQ" name="BodyPart(DoStatement@3d949ffc)">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrMXIVqEeKQivIQgUOGDQ" name="Body(DoStatement@3d949ffc)" outgoing="_AIrzgIVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrMXYVqEeKQivIQgUOGDQ" name="AcceptStatement@3979d9b8" outgoing="_AIrzRoVqEeKQivIQgUOGDQ">
                    <node xmi:type="uml:ForkNode" xmi:id="_AIrMXoVqEeKQivIQgUOGDQ" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" outgoing="_AIrzf4VqEeKQivIQgUOGDQ _AIrzgYVqEeKQivIQgUOGDQ" incoming="_AIrMZ4VqEeKQivIQgUOGDQ"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_AIrMX4VqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival,SignalTermination)" incoming="_AIrMZoVqEeKQivIQgUOGDQ">
                      <result xmi:id="_AIrMYIVqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_AIrMZ4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMYYVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMYoVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <trigger xmi:id="_AIrMY4VqEeKQivIQgUOGDQ" event="_AIzvDYVqEeKQivIQgUOGDQ"/>
                      <trigger xmi:id="_AIrMZIVqEeKQivIQgUOGDQ" event="_AIzvDoVqEeKQivIQgUOGDQ"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_AIrMZYVqEeKQivIQgUOGDQ" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_AIrMZoVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_AIrMZoVqEeKQivIQgUOGDQ" source="_AIrMZYVqEeKQivIQgUOGDQ" target="_AIrMX4VqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrMZ4VqEeKQivIQgUOGDQ" source="_AIrMYIVqEeKQivIQgUOGDQ" target="_AIrMXoVqEeKQivIQgUOGDQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrMaIVqEeKQivIQgUOGDQ" name="ExpressionStatement@67e1f282" incoming="_AIrzRoVqEeKQivIQgUOGDQ">
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIrMaYVqEeKQivIQgUOGDQ" name="Call(+)">
                      <argument xmi:id="_AIrMaoVqEeKQivIQgUOGDQ" name="Call(+).argument(x)" incoming="_AIrzRYVqEeKQivIQgUOGDQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMa4VqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMbIVqEeKQivIQgUOGDQ" value="1"/>
                      </argument>
                      <argument xmi:id="_AIrMbYVqEeKQivIQgUOGDQ" name="Call(+).argument(y)" incoming="_AIrzPoVqEeKQivIQgUOGDQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMboVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMb4VqEeKQivIQgUOGDQ" value="1"/>
                      </argument>
                      <result xmi:id="_AIrMcIVqEeKQivIQgUOGDQ" name="Call(+).result(result)" outgoing="_AIrzQ4VqEeKQivIQgUOGDQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMcYVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMcoVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIrMc4VqEeKQivIQgUOGDQ" name="Value(1)">
                      <result xmi:id="_AIrMdIVqEeKQivIQgUOGDQ" name="Value(1).result" outgoing="_AIrzPoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMdYVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMdoVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_AIrMd4VqEeKQivIQgUOGDQ" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_AIrMeIVqEeKQivIQgUOGDQ" name="ReadSelf">
                      <result xmi:id="_AIrMeYVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIrzP4VqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMeoVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMe4VqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIrMfIVqEeKQivIQgUOGDQ" name="Read(count)" structuralFeature="_AIoI6oVqEeKQivIQgUOGDQ">
                      <object xmi:id="_AIrMfYVqEeKQivIQgUOGDQ" name="Read(count).object" incoming="_AIrzQIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMfoVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrMf4VqEeKQivIQgUOGDQ" value="1"/>
                      </object>
                      <result xmi:id="_AIrMgIVqEeKQivIQgUOGDQ" name="Read(count).result" outgoing="_AIrzRIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrMgYVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzMIVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_AIrzMYVqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AIrzQIVqEeKQivIQgUOGDQ _AIrzQYVqEeKQivIQgUOGDQ" incoming="_AIrzP4VqEeKQivIQgUOGDQ"/>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIrzMoVqEeKQivIQgUOGDQ" name="Write(count)" structuralFeature="_AIoI6oVqEeKQivIQgUOGDQ" isReplaceAll="true">
                      <object xmi:id="_AIrzM4VqEeKQivIQgUOGDQ" name="Write(count).object" incoming="_AIrzQYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzNIVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzNYVqEeKQivIQgUOGDQ" value="1"/>
                      </object>
                      <result xmi:id="_AIrzNoVqEeKQivIQgUOGDQ" name="Write(count).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzN4VqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzOIVqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                      <value xmi:id="_AIrzOYVqEeKQivIQgUOGDQ" name="Write(count).value" incoming="_AIrzQoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzOoVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzO4VqEeKQivIQgUOGDQ" value="1"/>
                      </value>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_AIrzPIVqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@4052b6b4)" outgoing="_AIrzQoVqEeKQivIQgUOGDQ" incoming="_AIrzQ4VqEeKQivIQgUOGDQ"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_AIrzPYVqEeKQivIQgUOGDQ" name="Fork(Read(count).result)" outgoing="_AIrzRYVqEeKQivIQgUOGDQ" incoming="_AIrzRIVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzPoVqEeKQivIQgUOGDQ" source="_AIrMdIVqEeKQivIQgUOGDQ" target="_AIrMbYVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzP4VqEeKQivIQgUOGDQ" source="_AIrMeYVqEeKQivIQgUOGDQ" target="_AIrzMYVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzQIVqEeKQivIQgUOGDQ" source="_AIrzMYVqEeKQivIQgUOGDQ" target="_AIrMfYVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzQYVqEeKQivIQgUOGDQ" source="_AIrzMYVqEeKQivIQgUOGDQ" target="_AIrzM4VqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzQoVqEeKQivIQgUOGDQ" source="_AIrzPIVqEeKQivIQgUOGDQ" target="_AIrzOYVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzQ4VqEeKQivIQgUOGDQ" source="_AIrMcIVqEeKQivIQgUOGDQ" target="_AIrzPIVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzRIVqEeKQivIQgUOGDQ" source="_AIrMgIVqEeKQivIQgUOGDQ" target="_AIrzPYVqEeKQivIQgUOGDQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzRYVqEeKQivIQgUOGDQ" source="_AIrzPYVqEeKQivIQgUOGDQ" target="_AIrMaoVqEeKQivIQgUOGDQ"/>
                  </node>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_AIrzRoVqEeKQivIQgUOGDQ" source="_AIrMXYVqEeKQivIQgUOGDQ" target="_AIrMaIVqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrzR4VqEeKQivIQgUOGDQ" name="Condition(DoStatement@3d949ffc)" incoming="_AIrzgIVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AIrzSIVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_AIoI0IVqEeKQivIQgUOGDQ" isDirect="true">
                    <object xmi:id="_AIrzSYVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_AIrzf4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzSoVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzS4VqEeKQivIQgUOGDQ" value="1"/>
                    </object>
                    <result xmi:id="_AIrzTIVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_AItBp4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzTYVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzToVqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrzT4VqEeKQivIQgUOGDQ" name="Passthru(Fork(terminate))">
                  <structuredNodeInput xmi:id="_AIrzUIVqEeKQivIQgUOGDQ" name="Passthru(Fork(terminate)).input" outgoing="_AIrzVoVqEeKQivIQgUOGDQ" incoming="_AIrzhoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzUYVqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzUoVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_AIrzU4VqEeKQivIQgUOGDQ" name="Passthru(Fork(terminate)).output" outgoing="_AIrze4VqEeKQivIQgUOGDQ" incoming="_AIrzVoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzVIVqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzVYVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzVoVqEeKQivIQgUOGDQ" source="_AIrzUIVqEeKQivIQgUOGDQ" target="_AIrzU4VqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrzV4VqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <structuredNodeInput xmi:id="_AIrzWIVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" outgoing="_AIrzXoVqEeKQivIQgUOGDQ" incoming="_AIrzgYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzWYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzWoVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_AIrzW4VqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" outgoing="_AIrzfIVqEeKQivIQgUOGDQ" incoming="_AIrzXoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzXIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzXYVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzXoVqEeKQivIQgUOGDQ" source="_AIrzWIVqEeKQivIQgUOGDQ" target="_AIrzW4VqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrzX4VqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <structuredNodeInput xmi:id="_AIrzYIVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" outgoing="_AIrzZoVqEeKQivIQgUOGDQ" incoming="_AIrzh4VqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzYYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzYoVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_AIrzY4VqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" outgoing="_AIrzfYVqEeKQivIQgUOGDQ" incoming="_AIrzZoVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzZIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzZYVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzZoVqEeKQivIQgUOGDQ" source="_AIrzYIVqEeKQivIQgUOGDQ" target="_AIrzY4VqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIrzZ4VqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <structuredNodeInput xmi:id="_AIrzaIVqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" outgoing="_AIrzboVqEeKQivIQgUOGDQ" incoming="_AIrziIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzaYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzaoVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_AIrza4VqEeKQivIQgUOGDQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" outgoing="_AIrzfoVqEeKQivIQgUOGDQ" incoming="_AIrzboVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzbIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzbYVqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzboVqEeKQivIQgUOGDQ" source="_AIrzaIVqEeKQivIQgUOGDQ" target="_AIrza4VqEeKQivIQgUOGDQ"/>
                </node>
                <structuredNodeOutput xmi:id="_AIrzb4VqEeKQivIQgUOGDQ" name="terminate" incoming="_AIrze4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzcIVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzcYVqEeKQivIQgUOGDQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_AIrzcoVqEeKQivIQgUOGDQ" name="s" incoming="_AIrzfIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzc4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzdIVqEeKQivIQgUOGDQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_AIrzdYVqEeKQivIQgUOGDQ" name="arrival3" incoming="_AIrzfYVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzdoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzd4VqEeKQivIQgUOGDQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_AIrzeIVqEeKQivIQgUOGDQ" name="sig" incoming="_AIrzfoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzeYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzeoVqEeKQivIQgUOGDQ" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrze4VqEeKQivIQgUOGDQ" source="_AIrzU4VqEeKQivIQgUOGDQ" target="_AIrzb4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzfIVqEeKQivIQgUOGDQ" source="_AIrzW4VqEeKQivIQgUOGDQ" target="_AIrzcoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzfYVqEeKQivIQgUOGDQ" source="_AIrzY4VqEeKQivIQgUOGDQ" target="_AIrzdYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzfoVqEeKQivIQgUOGDQ" source="_AIrza4VqEeKQivIQgUOGDQ" target="_AIrzeIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzf4VqEeKQivIQgUOGDQ" source="_AIrMXoVqEeKQivIQgUOGDQ" target="_AIrzSYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AIrzgIVqEeKQivIQgUOGDQ" source="_AIrMXIVqEeKQivIQgUOGDQ" target="_AIrzR4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzgYVqEeKQivIQgUOGDQ" source="_AIrMXoVqEeKQivIQgUOGDQ" target="_AIrzWIVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzgoVqEeKQivIQgUOGDQ" source="_AIsaRYVqEeKQivIQgUOGDQ" target="_AIrMT4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzg4VqEeKQivIQgUOGDQ" source="_AIsaS4VqEeKQivIQgUOGDQ" target="_AIrMUIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzhIVqEeKQivIQgUOGDQ" source="_AIsaUYVqEeKQivIQgUOGDQ" target="_AIrMUYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzhYVqEeKQivIQgUOGDQ" source="_AIsaV4VqEeKQivIQgUOGDQ" target="_AIrMUoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzhoVqEeKQivIQgUOGDQ" source="_AIrMT4VqEeKQivIQgUOGDQ" target="_AIrzUIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrzh4VqEeKQivIQgUOGDQ" source="_AIrMUYVqEeKQivIQgUOGDQ" target="_AIrzYIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIrziIVqEeKQivIQgUOGDQ" source="_AIrMUoVqEeKQivIQgUOGDQ" target="_AIrzaIVqEeKQivIQgUOGDQ"/>
              <loopVariableInput xmi:id="_AIrziYVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.loopVariableInput(terminate)" incoming="_AItBo4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzioVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzi4VqEeKQivIQgUOGDQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_AIrzjIVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIrzjYVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIrzjoVqEeKQivIQgUOGDQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_AIrzj4VqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.loopVariableInput(arrival3)" incoming="_AItBpYVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaQIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaQYVqEeKQivIQgUOGDQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_AIsaQoVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.loopVariableInput(sig)" incoming="_AItBpoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaQ4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaRIVqEeKQivIQgUOGDQ" value="1"/>
              </loopVariableInput>
              <result xmi:id="_AIsaRYVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.loopVariable(terminate)" outgoing="_AIrzgoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaRoVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaR4VqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <result xmi:id="_AIsaSIVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaSYVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaSoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <result xmi:id="_AIsaS4VqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.loopVariable(s)" outgoing="_AIrzg4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaTIVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaTYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <result xmi:id="_AIsaToVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.result(s)" outgoing="_AItBpIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaT4VqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaUIVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <result xmi:id="_AIsaUYVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.loopVariable(arrival3)" outgoing="_AIrzhIVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaUoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaU4VqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <result xmi:id="_AIsaVIVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.result(arrival3)" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaVYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaVoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <result xmi:id="_AIsaV4VqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.loopVariable(sig)" outgoing="_AIrzhYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaWIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaWYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <result xmi:id="_AIsaWoVqEeKQivIQgUOGDQ" name="DoStatement@3d949ffc.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaW4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaXIVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AIsaXYVqEeKQivIQgUOGDQ" name="Fork(s)" incoming="_AItBpIVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_AIsaXoVqEeKQivIQgUOGDQ" name="IfStatement@4b7c0ca0" outgoing="_AItBqoVqEeKQivIQgUOGDQ" incoming="_AItBqYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIsaX4VqEeKQivIQgUOGDQ" name="Value(true)">
                <result xmi:id="_AIsaYIVqEeKQivIQgUOGDQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaYYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaYoVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_AIsaY4VqEeKQivIQgUOGDQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIsaZIVqEeKQivIQgUOGDQ" name="AcceptStatement@77f14a98" outgoing="_AItBWoVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:AcceptEventAction" xmi:id="_AIsaZYVqEeKQivIQgUOGDQ" name="Accept(SignalNewArrival)" incoming="_AIsaaIVqEeKQivIQgUOGDQ">
                  <trigger xmi:id="_AIsaZoVqEeKQivIQgUOGDQ" event="_AIzvD4VqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_AIsaZ4VqEeKQivIQgUOGDQ" name="Initial(Accept(SignalNewArrival))" outgoing="_AIsaaIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AIsaaIVqEeKQivIQgUOGDQ" source="_AIsaZ4VqEeKQivIQgUOGDQ" target="_AIsaZYVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIsaaYVqEeKQivIQgUOGDQ" name="ExpressionStatement@27daeb63" incoming="_AItBWoVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIsaaoVqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@2a9e1544)" incoming="_AIsag4VqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_AIsaa4VqEeKQivIQgUOGDQ" name="ReadSelf">
                    <result xmi:id="_AIsabIVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIsagIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsabYVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaboVqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIsab4VqEeKQivIQgUOGDQ" name="Write(flag)" structuralFeature="_AIoI8IVqEeKQivIQgUOGDQ" isReplaceAll="true">
                  <object xmi:id="_AIsacIVqEeKQivIQgUOGDQ" name="Write(flag).object" incoming="_AIsagIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsacYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsacoVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIsac4VqEeKQivIQgUOGDQ" name="Write(flag).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsadIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsadYVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:id="_AIsadoVqEeKQivIQgUOGDQ" name="Write(flag).value" incoming="_AIsagYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsad4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsaeIVqEeKQivIQgUOGDQ" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIsaeYVqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@2a9e1544)" outgoing="_AIsagYVqEeKQivIQgUOGDQ" incoming="_AIsagoVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIsaeoVqEeKQivIQgUOGDQ" name="RightHandSide@65e92149" outgoing="_AIsag4VqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIsae4VqEeKQivIQgUOGDQ" name="Value(true)">
                    <result xmi:id="_AIsafIVqEeKQivIQgUOGDQ" name="Value(true).result" outgoing="_AIsagoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsafYVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsafoVqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_AIsaf4VqEeKQivIQgUOGDQ" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIsagIVqEeKQivIQgUOGDQ" source="_AIsabIVqEeKQivIQgUOGDQ" target="_AIsacIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIsagYVqEeKQivIQgUOGDQ" source="_AIsaeYVqEeKQivIQgUOGDQ" target="_AIsadoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIsagoVqEeKQivIQgUOGDQ" source="_AIsafIVqEeKQivIQgUOGDQ" target="_AIsaeYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AIsag4VqEeKQivIQgUOGDQ" source="_AIsaeoVqEeKQivIQgUOGDQ" target="_AIsaaoVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIsahIVqEeKQivIQgUOGDQ" name="Value(true)">
                <result xmi:id="_AIsahYVqEeKQivIQgUOGDQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsahoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsah4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_AIsaiIVqEeKQivIQgUOGDQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIsaiYVqEeKQivIQgUOGDQ" name="AcceptStatement@714412f1" outgoing="_AItBW4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:AcceptEventAction" xmi:id="_AIsaioVqEeKQivIQgUOGDQ" name="Accept(SignalTermination)" incoming="_AIsajYVqEeKQivIQgUOGDQ">
                  <trigger xmi:id="_AIsai4VqEeKQivIQgUOGDQ" event="_AIzvEIVqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_AIsajIVqEeKQivIQgUOGDQ" name="Initial(Accept(SignalTermination))" outgoing="_AIsajYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AIsajYVqEeKQivIQgUOGDQ" source="_AIsajIVqEeKQivIQgUOGDQ" target="_AIsaioVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIsajoVqEeKQivIQgUOGDQ" name="ExpressionStatement@5bc2fb36" incoming="_AItBW4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIsaj4VqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@443b095b)" incoming="_AItBWYVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_AIsakIVqEeKQivIQgUOGDQ" name="ReadSelf">
                    <result xmi:id="_AIsakYVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AItBVoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsakoVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsak4VqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIsalIVqEeKQivIQgUOGDQ" name="Write(flag)" structuralFeature="_AIoI8IVqEeKQivIQgUOGDQ" isReplaceAll="true">
                  <object xmi:id="_AIsalYVqEeKQivIQgUOGDQ" name="Write(flag).object" incoming="_AItBVoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsaloVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsal4VqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIsamIVqEeKQivIQgUOGDQ" name="Write(flag).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsamYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsamoVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:id="_AIsam4VqEeKQivIQgUOGDQ" name="Write(flag).value" incoming="_AItBV4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIsanIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIsanYVqEeKQivIQgUOGDQ" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIsanoVqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@443b095b)" outgoing="_AItBV4VqEeKQivIQgUOGDQ" incoming="_AItBWIVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItBUIVqEeKQivIQgUOGDQ" name="RightHandSide@1ddefaa6" outgoing="_AItBWYVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AItBUYVqEeKQivIQgUOGDQ" name="Value(false)">
                    <result xmi:id="_AItBUoVqEeKQivIQgUOGDQ" name="Value(false).result" outgoing="_AItBWIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBU4VqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBVIVqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_AItBVYVqEeKQivIQgUOGDQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBVoVqEeKQivIQgUOGDQ" source="_AIsakYVqEeKQivIQgUOGDQ" target="_AIsalYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBV4VqEeKQivIQgUOGDQ" source="_AIsanoVqEeKQivIQgUOGDQ" target="_AIsam4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBWIVqEeKQivIQgUOGDQ" source="_AItBUoVqEeKQivIQgUOGDQ" target="_AIsanoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AItBWYVqEeKQivIQgUOGDQ" source="_AItBUIVqEeKQivIQgUOGDQ" target="_AIsaj4VqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AItBWoVqEeKQivIQgUOGDQ" source="_AIsaZIVqEeKQivIQgUOGDQ" target="_AIsaaYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AItBW4VqEeKQivIQgUOGDQ" source="_AIsaiYVqEeKQivIQgUOGDQ" target="_AIsajoVqEeKQivIQgUOGDQ"/>
              <clause xmi:id="_AItBXIVqEeKQivIQgUOGDQ" body="_AIsaZIVqEeKQivIQgUOGDQ _AIsaaYVqEeKQivIQgUOGDQ" decider="_AIsaYIVqEeKQivIQgUOGDQ" successorClause="_AItBXYVqEeKQivIQgUOGDQ" test="_AIsaX4VqEeKQivIQgUOGDQ"/>
              <clause xmi:id="_AItBXYVqEeKQivIQgUOGDQ" body="_AIsaiYVqEeKQivIQgUOGDQ _AIsajoVqEeKQivIQgUOGDQ" decider="_AIsahYVqEeKQivIQgUOGDQ" predecessorClause="_AItBXIVqEeKQivIQgUOGDQ" test="_AIsahIVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItBXoVqEeKQivIQgUOGDQ" name="AcceptStatement@717d8bfd" outgoing="_AItBrIVqEeKQivIQgUOGDQ" incoming="_AItBqoVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ForkNode" xmi:id="_AItBX4VqEeKQivIQgUOGDQ" name="Fork(Accept(SignalTermination).result)" outgoing="_AItBq4VqEeKQivIQgUOGDQ" incoming="_AItBZ4VqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_AItBYIVqEeKQivIQgUOGDQ" name="Accept(SignalTermination)" incoming="_AItBZoVqEeKQivIQgUOGDQ">
                <result xmi:id="_AItBYYVqEeKQivIQgUOGDQ" name="Accept(SignalTermination).result" outgoing="_AItBZ4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBYoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBY4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <trigger xmi:id="_AItBZIVqEeKQivIQgUOGDQ" event="_AIzvEYVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AItBZYVqEeKQivIQgUOGDQ" name="Initial(Accept(SignalTermination))" outgoing="_AItBZoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AItBZoVqEeKQivIQgUOGDQ" source="_AItBZYVqEeKQivIQgUOGDQ" target="_AItBYIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBZ4VqEeKQivIQgUOGDQ" source="_AItBYYVqEeKQivIQgUOGDQ" target="_AItBX4VqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItBaIVqEeKQivIQgUOGDQ" name="ExpressionStatement@ded6eaf" outgoing="_AItBrYVqEeKQivIQgUOGDQ" incoming="_AItBrIVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItBaYVqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@5efdaa4d)" incoming="_AItBfIVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_AItBaoVqEeKQivIQgUOGDQ" name="ReadSelf">
                  <result xmi:id="_AItBa4VqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AItBeoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBbIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBbYVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AItBboVqEeKQivIQgUOGDQ" name="Write(sig1)" structuralFeature="_AIoI3oVqEeKQivIQgUOGDQ" isReplaceAll="true">
                <object xmi:id="_AItBb4VqEeKQivIQgUOGDQ" name="Write(sig1).object" incoming="_AItBeoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBcIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBcYVqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AItBcoVqEeKQivIQgUOGDQ" name="Write(sig1).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBc4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBdIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:id="_AItBdYVqEeKQivIQgUOGDQ" name="Write(sig1).value" incoming="_AItBe4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBdoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBd4VqEeKQivIQgUOGDQ" value="1"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AItBeIVqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@5efdaa4d)" outgoing="_AItBe4VqEeKQivIQgUOGDQ" incoming="_AItBq4VqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItBeYVqEeKQivIQgUOGDQ" name="RightHandSide@6c64ed81" outgoing="_AItBfIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBeoVqEeKQivIQgUOGDQ" source="_AItBa4VqEeKQivIQgUOGDQ" target="_AItBb4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBe4VqEeKQivIQgUOGDQ" source="_AItBeIVqEeKQivIQgUOGDQ" target="_AItBdYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AItBfIVqEeKQivIQgUOGDQ" source="_AItBeYVqEeKQivIQgUOGDQ" target="_AItBaYVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItBfYVqEeKQivIQgUOGDQ" name="ExpressionStatement@2c77f398" incoming="_AItBrYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AItBfoVqEeKQivIQgUOGDQ" name="SendSignal(Continue)" signal="_AIzvAoVqEeKQivIQgUOGDQ">
                <target xmi:id="_AItBf4VqEeKQivIQgUOGDQ" name="SendSignal(Continue).target" incoming="_AItBjoVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBgIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBgYVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_AItBgoVqEeKQivIQgUOGDQ" name="ReadSelf">
                <result xmi:id="_AItBg4VqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AItBj4VqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBhIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBhYVqEeKQivIQgUOGDQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AItBhoVqEeKQivIQgUOGDQ" name="Read(tester)" structuralFeature="_AIoI84VqEeKQivIQgUOGDQ">
                <object xmi:id="_AItBh4VqEeKQivIQgUOGDQ" name="Read(tester).object" incoming="_AItBkIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBiIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBiYVqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AItBioVqEeKQivIQgUOGDQ" name="Read(tester).result" outgoing="_AItBjoVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItBi4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItBjIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AItBjYVqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AItBkIVqEeKQivIQgUOGDQ" incoming="_AItBj4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBjoVqEeKQivIQgUOGDQ" source="_AItBioVqEeKQivIQgUOGDQ" target="_AItBf4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBj4VqEeKQivIQgUOGDQ" source="_AItBg4VqEeKQivIQgUOGDQ" target="_AItBjYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBkIVqEeKQivIQgUOGDQ" source="_AItBjYVqEeKQivIQgUOGDQ" target="_AItBh4VqEeKQivIQgUOGDQ"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBkYVqEeKQivIQgUOGDQ" source="_AIoI-YVqEeKQivIQgUOGDQ" target="_AIoJE4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBkoVqEeKQivIQgUOGDQ" source="_AIoI-IVqEeKQivIQgUOGDQ" target="_AIoJA4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBk4VqEeKQivIQgUOGDQ" source="_AIoJA4VqEeKQivIQgUOGDQ" target="_AIoJGIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBlIVqEeKQivIQgUOGDQ" source="_AIowJIVqEeKQivIQgUOGDQ" target="_AIov_IVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBlYVqEeKQivIQgUOGDQ" source="_AIowJIVqEeKQivIQgUOGDQ" target="_AIowC4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBloVqEeKQivIQgUOGDQ" source="_AIoJGYVqEeKQivIQgUOGDQ" target="_AIowA4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBl4VqEeKQivIQgUOGDQ" source="_AIowJIVqEeKQivIQgUOGDQ" target="_AIowHYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBmIVqEeKQivIQgUOGDQ" source="_AIoJGIVqEeKQivIQgUOGDQ" target="_AIov4YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBmYVqEeKQivIQgUOGDQ" source="_AIowJYVqEeKQivIQgUOGDQ" target="_AIpW_4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBmoVqEeKQivIQgUOGDQ" source="_AIov4YVqEeKQivIQgUOGDQ" target="_AIowPoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBm4VqEeKQivIQgUOGDQ" source="_AIowPoVqEeKQivIQgUOGDQ" target="_AIpXBIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBnIVqEeKQivIQgUOGDQ" source="_AIpXBIVqEeKQivIQgUOGDQ" target="_AIpXCYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBnYVqEeKQivIQgUOGDQ" source="_AIpXCoVqEeKQivIQgUOGDQ" target="_AIpXI4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBnoVqEeKQivIQgUOGDQ" source="_AIpXCYVqEeKQivIQgUOGDQ" target="_AIpXE4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBn4VqEeKQivIQgUOGDQ" source="_AIowJYVqEeKQivIQgUOGDQ" target="_AIqlOIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBoIVqEeKQivIQgUOGDQ" source="_AIpXCoVqEeKQivIQgUOGDQ" target="_AIqlO4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBoYVqEeKQivIQgUOGDQ" source="_AIoI-YVqEeKQivIQgUOGDQ" target="_AIqlPoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBooVqEeKQivIQgUOGDQ" source="_AIpXE4VqEeKQivIQgUOGDQ" target="_AIpXKIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBo4VqEeKQivIQgUOGDQ" source="_AIowJYVqEeKQivIQgUOGDQ" target="_AIrziYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBpIVqEeKQivIQgUOGDQ" source="_AIsaToVqEeKQivIQgUOGDQ" target="_AIsaXYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBpYVqEeKQivIQgUOGDQ" source="_AIpXCoVqEeKQivIQgUOGDQ" target="_AIrzj4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBpoVqEeKQivIQgUOGDQ" source="_AIoI-YVqEeKQivIQgUOGDQ" target="_AIsaQoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBp4VqEeKQivIQgUOGDQ" source="_AIrzTIVqEeKQivIQgUOGDQ" target="_AIrMVIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBqIVqEeKQivIQgUOGDQ" source="_AIpXKIVqEeKQivIQgUOGDQ" target="_AIrMToVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBqYVqEeKQivIQgUOGDQ" source="_AIrMToVqEeKQivIQgUOGDQ" target="_AIsaXoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBqoVqEeKQivIQgUOGDQ" source="_AIsaXoVqEeKQivIQgUOGDQ" target="_AItBXoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItBq4VqEeKQivIQgUOGDQ" source="_AItBX4VqEeKQivIQgUOGDQ" target="_AItBeIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBrIVqEeKQivIQgUOGDQ" source="_AItBXoVqEeKQivIQgUOGDQ" target="_AItBaIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItBrYVqEeKQivIQgUOGDQ" source="_AItBaIVqEeKQivIQgUOGDQ" target="_AItBfYVqEeKQivIQgUOGDQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AItBroVqEeKQivIQgUOGDQ" name="Test$method$1" specification="_AIuPy4VqEeKQivIQgUOGDQ" group="_AItobIVqEeKQivIQgUOGDQ" node="_AItoaYVqEeKQivIQgUOGDQ _AItoaoVqEeKQivIQgUOGDQ _AItoa4VqEeKQivIQgUOGDQ _AItobIVqEeKQivIQgUOGDQ">
          <ownedParameter xmi:id="_AItoYIVqEeKQivIQgUOGDQ" name="tester" type="_AIu2g4VqEeKQivIQgUOGDQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItoYYVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoYoVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AItoY4VqEeKQivIQgUOGDQ" name="" type="_AIoI1oVqEeKQivIQgUOGDQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItoZIVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoZYVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AItoZoVqEeKQivIQgUOGDQ" source="_AItoaYVqEeKQivIQgUOGDQ" target="_AItoaoVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AItoZ4VqEeKQivIQgUOGDQ" source="_AItoaoVqEeKQivIQgUOGDQ" target="_AItofoVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AItoaIVqEeKQivIQgUOGDQ" source="_AItoh4VqEeKQivIQgUOGDQ" target="_AItoa4VqEeKQivIQgUOGDQ"/>
          <structuredNode xmi:id="_AItobIVqEeKQivIQgUOGDQ" name="Body(Test$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItobYVqEeKQivIQgUOGDQ" name="Body" incoming="_AItorYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItoboVqEeKQivIQgUOGDQ" name="ExpressionStatement@871bc51">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItob4VqEeKQivIQgUOGDQ" name="Expression(LeftHandSide@24823c18)" incoming="_AItogoVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_AItocIVqEeKQivIQgUOGDQ" name="ReadSelf">
                    <result xmi:id="_AItocYVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AItogIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItocoVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoc4VqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AItodIVqEeKQivIQgUOGDQ" name="Write(tester)" structuralFeature="_AIoI84VqEeKQivIQgUOGDQ" isReplaceAll="true">
                  <object xmi:id="_AItodYVqEeKQivIQgUOGDQ" name="Write(tester).object" incoming="_AItogIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItodoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItod4VqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AItoeIVqEeKQivIQgUOGDQ" name="Write(tester).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItoeYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoeoVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:id="_AItoe4VqEeKQivIQgUOGDQ" name="Write(tester).value" incoming="_AItogYVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItofIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItofYVqEeKQivIQgUOGDQ" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AItofoVqEeKQivIQgUOGDQ" name="Fork(LeftHandSide@24823c18)" outgoing="_AItogYVqEeKQivIQgUOGDQ" incoming="_AItoZ4VqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AItof4VqEeKQivIQgUOGDQ" name="RightHandSide@5fc4b3aa" outgoing="_AItogoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AItogIVqEeKQivIQgUOGDQ" source="_AItocYVqEeKQivIQgUOGDQ" target="_AItodYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AItogYVqEeKQivIQgUOGDQ" source="_AItofoVqEeKQivIQgUOGDQ" target="_AItoe4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AItogoVqEeKQivIQgUOGDQ" source="_AItof4VqEeKQivIQgUOGDQ" target="_AItob4VqEeKQivIQgUOGDQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AItog4VqEeKQivIQgUOGDQ" name="ReadSelf">
              <result xmi:id="_AItohIVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AItoq4VqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItohYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItohoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AItoh4VqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AItoaIVqEeKQivIQgUOGDQ _AItorIVqEeKQivIQgUOGDQ _AItoroVqEeKQivIQgUOGDQ" incoming="_AItoq4VqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_AItoiIVqEeKQivIQgUOGDQ" name="Call(Test$initialization$1)" outgoing="_AItorYVqEeKQivIQgUOGDQ" incoming="_AItotIVqEeKQivIQgUOGDQ" operation="_AIuPyoVqEeKQivIQgUOGDQ">
              <target xmi:id="_AItoiYVqEeKQivIQgUOGDQ" name="Call(Test$initialization$1).target" incoming="_AItorIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItoioVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoi4VqEeKQivIQgUOGDQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AItojIVqEeKQivIQgUOGDQ" name="Read(Test$initializationFlag$1)" structuralFeature="_AIoI2IVqEeKQivIQgUOGDQ">
              <object xmi:id="_AItojYVqEeKQivIQgUOGDQ" name="Read(Test$initializationFlag$1).object" incoming="_AItoroVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItojoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoj4VqEeKQivIQgUOGDQ" value="1"/>
              </object>
              <result xmi:id="_AItokIVqEeKQivIQgUOGDQ" name="Read(Test$initializationFlag$1).result" outgoing="_AItor4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItokYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItokoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AItok4VqEeKQivIQgUOGDQ" name="Call(ListSize)">
              <argument xmi:id="_AItolIVqEeKQivIQgUOGDQ" name="Call(ListSize).argument(list)" incoming="_AItor4VqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItolYVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoloVqEeKQivIQgUOGDQ" value="*"/>
              </argument>
              <result xmi:id="_AItol4VqEeKQivIQgUOGDQ" name="Call(ListSize).result(result)" outgoing="_AItosIVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItomIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItomYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AItomoVqEeKQivIQgUOGDQ" name="Value(0)">
              <result xmi:id="_AItom4VqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AItosYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItonIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItonYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_AItonoVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AIton4VqEeKQivIQgUOGDQ" name="Test(Size==0)">
              <first xmi:id="_AItooIVqEeKQivIQgUOGDQ" name="Test(Size==0).first" incoming="_AItosIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItooYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoooVqEeKQivIQgUOGDQ" value="1"/>
              </first>
              <result xmi:id="_AItoo4VqEeKQivIQgUOGDQ" name="Test(Size==0).result" outgoing="_AItos4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItopIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItopYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <second xmi:id="_AItopoVqEeKQivIQgUOGDQ" name="Test(Size==0).second" incoming="_AItosYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AItop4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AItoqIVqEeKQivIQgUOGDQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AItoqYVqEeKQivIQgUOGDQ" name="InitialNode" outgoing="_AItosoVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AItoqoVqEeKQivIQgUOGDQ" name="Decision(Test(Test$initializationFlag$1))" outgoing="_AItotIVqEeKQivIQgUOGDQ" incoming="_AItosoVqEeKQivIQgUOGDQ _AItos4VqEeKQivIQgUOGDQ" decisionInputFlow="_AItos4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItoq4VqEeKQivIQgUOGDQ" source="_AItohIVqEeKQivIQgUOGDQ" target="_AItoh4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItorIVqEeKQivIQgUOGDQ" source="_AItoh4VqEeKQivIQgUOGDQ" target="_AItoiYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItorYVqEeKQivIQgUOGDQ" source="_AItoiIVqEeKQivIQgUOGDQ" target="_AItobYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItoroVqEeKQivIQgUOGDQ" source="_AItoh4VqEeKQivIQgUOGDQ" target="_AItojYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItor4VqEeKQivIQgUOGDQ" source="_AItokIVqEeKQivIQgUOGDQ" target="_AItolIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItosIVqEeKQivIQgUOGDQ" source="_AItol4VqEeKQivIQgUOGDQ" target="_AItooIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItosYVqEeKQivIQgUOGDQ" source="_AItom4VqEeKQivIQgUOGDQ" target="_AItopoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItosoVqEeKQivIQgUOGDQ" source="_AItoqYVqEeKQivIQgUOGDQ" target="_AItoqoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AItos4VqEeKQivIQgUOGDQ" source="_AItoo4VqEeKQivIQgUOGDQ" target="_AItoqoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AItotIVqEeKQivIQgUOGDQ" source="_AItoqoVqEeKQivIQgUOGDQ" target="_AItoiIVqEeKQivIQgUOGDQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AItotYVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_AItoaYVqEeKQivIQgUOGDQ" name="Input(tester)" outgoing="_AItoZoVqEeKQivIQgUOGDQ" parameter="_AItoYIVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_AItoaoVqEeKQivIQgUOGDQ" name="Fork(tester)" outgoing="_AItoZ4VqEeKQivIQgUOGDQ" incoming="_AItoZoVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_AItoa4VqEeKQivIQgUOGDQ" name="Return" incoming="_AItoaIVqEeKQivIQgUOGDQ" parameter="_AItoY4VqEeKQivIQgUOGDQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AItotoVqEeKQivIQgUOGDQ" name="destroy$method$1" specification="_AIu2gYVqEeKQivIQgUOGDQ" group="_AItot4VqEeKQivIQgUOGDQ" node="_AItot4VqEeKQivIQgUOGDQ">
          <structuredNode xmi:id="_AItot4VqEeKQivIQgUOGDQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AItouIVqEeKQivIQgUOGDQ" name="Test$initialization$1" specification="_AIuPyoVqEeKQivIQgUOGDQ" group="_AIuPcIVqEeKQivIQgUOGDQ" node="_AIuPcIVqEeKQivIQgUOGDQ">
          <structuredNode xmi:id="_AIuPcIVqEeKQivIQgUOGDQ" name="Body(Test$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AIuPcYVqEeKQivIQgUOGDQ" name="ReadSelf">
              <result xmi:id="_AIuPcoVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIuPvoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPc4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPdIVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AIuPdYVqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AIuPv4VqEeKQivIQgUOGDQ _AIuPwIVqEeKQivIQgUOGDQ _AIuPwYVqEeKQivIQgUOGDQ _AIuPwoVqEeKQivIQgUOGDQ" incoming="_AIuPvoVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIuPdoVqEeKQivIQgUOGDQ" name="Initialization" incoming="_AIuPyIVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallOperationAction" xmi:id="_AIuPd4VqEeKQivIQgUOGDQ" name="Call(Super$initialization$1)" outgoing="_AIuPnYVqEeKQivIQgUOGDQ" operation="_AIniFYVqEeKQivIQgUOGDQ">
                <target xmi:id="_AIuPeIVqEeKQivIQgUOGDQ" name="Call(Super$initialization$1).target" incoming="_AIuPv4VqEeKQivIQgUOGDQ" type="_AIm63IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPeYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPeoVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIuPe4VqEeKQivIQgUOGDQ" name="Initialize(count)" outgoing="_AIuPnoVqEeKQivIQgUOGDQ" incoming="_AIuPnYVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIuPfIVqEeKQivIQgUOGDQ" name="Value(0)">
                  <result xmi:id="_AIuPfYVqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AIuPi4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPfoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPf4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AIuPgIVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIuPgYVqEeKQivIQgUOGDQ" name="Write(count)" structuralFeature="_AIoI6oVqEeKQivIQgUOGDQ" isReplaceAll="true">
                  <object xmi:id="_AIuPgoVqEeKQivIQgUOGDQ" name="Write(count).object" incoming="_AIuPwIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPg4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPhIVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIuPhYVqEeKQivIQgUOGDQ" name="Write(count).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPhoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPh4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:id="_AIuPiIVqEeKQivIQgUOGDQ" name="Write(count).value" incoming="_AIuPi4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPiYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPioVqEeKQivIQgUOGDQ" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPi4VqEeKQivIQgUOGDQ" source="_AIuPfYVqEeKQivIQgUOGDQ" target="_AIuPiIVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIuPjIVqEeKQivIQgUOGDQ" name="Set(initializationFlag)" incoming="_AIuPnoVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIuPjYVqEeKQivIQgUOGDQ" name="Value(true)">
                  <result xmi:id="_AIuPjoVqEeKQivIQgUOGDQ" name="Value(true).result" outgoing="_AIuPnIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPj4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPkIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_AIuPkYVqEeKQivIQgUOGDQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIuPkoVqEeKQivIQgUOGDQ" name="Write(Test$initializationFlag$1)" structuralFeature="_AIoI2IVqEeKQivIQgUOGDQ" isReplaceAll="true">
                  <object xmi:id="_AIuPk4VqEeKQivIQgUOGDQ" name="Write(Test$initializationFlag$1).object" incoming="_AIuPwYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPlIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPlYVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIuPloVqEeKQivIQgUOGDQ" name="Write(Test$initializationFlag$1).result" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPl4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPmIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:id="_AIuPmYVqEeKQivIQgUOGDQ" name="Write(Test$initializationFlag$1).value" incoming="_AIuPnIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPmoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPm4VqEeKQivIQgUOGDQ" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPnIVqEeKQivIQgUOGDQ" source="_AIuPjoVqEeKQivIQgUOGDQ" target="_AIuPmYVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIuPnYVqEeKQivIQgUOGDQ" source="_AIuPd4VqEeKQivIQgUOGDQ" target="_AIuPe4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIuPnoVqEeKQivIQgUOGDQ" source="_AIuPe4VqEeKQivIQgUOGDQ" target="_AIuPjIVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIuPn4VqEeKQivIQgUOGDQ" name="Read(Test$initializationFlag$1)" structuralFeature="_AIoI2IVqEeKQivIQgUOGDQ">
              <object xmi:id="_AIuPoIVqEeKQivIQgUOGDQ" name="Read(Test$initializationFlag$1).object" incoming="_AIuPwoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPoYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPooVqEeKQivIQgUOGDQ" value="1"/>
              </object>
              <result xmi:id="_AIuPo4VqEeKQivIQgUOGDQ" name="Read(Test$initializationFlag$1).result" outgoing="_AIuPw4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPpIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPpYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIuPpoVqEeKQivIQgUOGDQ" name="Call(ListSize)">
              <argument xmi:id="_AIuPp4VqEeKQivIQgUOGDQ" name="Call(ListSize).argument(list)" incoming="_AIuPw4VqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPqIVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPqYVqEeKQivIQgUOGDQ" value="*"/>
              </argument>
              <result xmi:id="_AIuPqoVqEeKQivIQgUOGDQ" name="Call(ListSize).result(result)" outgoing="_AIuPxIVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPq4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPrIVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIuPrYVqEeKQivIQgUOGDQ" name="Value(0)">
              <result xmi:id="_AIuProVqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AIuPxYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPr4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPsIVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_AIuPsYVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AIuPsoVqEeKQivIQgUOGDQ" name="Test(Size==0)">
              <first xmi:id="_AIuPs4VqEeKQivIQgUOGDQ" name="Test(Size==0).first" incoming="_AIuPxIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPtIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPtYVqEeKQivIQgUOGDQ" value="1"/>
              </first>
              <result xmi:id="_AIuPtoVqEeKQivIQgUOGDQ" name="Test(Size==0).result" outgoing="_AIuPx4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPt4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPuIVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <second xmi:id="_AIuPuYVqEeKQivIQgUOGDQ" name="Test(Size==0).second" incoming="_AIuPxYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPuoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPu4VqEeKQivIQgUOGDQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AIuPvIVqEeKQivIQgUOGDQ" name="InitialNode" outgoing="_AIuPxoVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AIuPvYVqEeKQivIQgUOGDQ" name="Decision(Test(Test$initializationFlag$1))" outgoing="_AIuPyIVqEeKQivIQgUOGDQ" incoming="_AIuPxoVqEeKQivIQgUOGDQ _AIuPx4VqEeKQivIQgUOGDQ" decisionInputFlow="_AIuPx4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPvoVqEeKQivIQgUOGDQ" source="_AIuPcoVqEeKQivIQgUOGDQ" target="_AIuPdYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPv4VqEeKQivIQgUOGDQ" source="_AIuPdYVqEeKQivIQgUOGDQ" target="_AIuPeIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPwIVqEeKQivIQgUOGDQ" source="_AIuPdYVqEeKQivIQgUOGDQ" target="_AIuPgoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPwYVqEeKQivIQgUOGDQ" source="_AIuPdYVqEeKQivIQgUOGDQ" target="_AIuPk4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPwoVqEeKQivIQgUOGDQ" source="_AIuPdYVqEeKQivIQgUOGDQ" target="_AIuPoIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPw4VqEeKQivIQgUOGDQ" source="_AIuPo4VqEeKQivIQgUOGDQ" target="_AIuPp4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPxIVqEeKQivIQgUOGDQ" source="_AIuPqoVqEeKQivIQgUOGDQ" target="_AIuPs4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPxYVqEeKQivIQgUOGDQ" source="_AIuProVqEeKQivIQgUOGDQ" target="_AIuPuYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIuPxoVqEeKQivIQgUOGDQ" source="_AIuPvIVqEeKQivIQgUOGDQ" target="_AIuPvYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIuPx4VqEeKQivIQgUOGDQ" source="_AIuPtoVqEeKQivIQgUOGDQ" target="_AIuPvYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIuPyIVqEeKQivIQgUOGDQ" source="_AIuPvYVqEeKQivIQgUOGDQ" target="_AIuPdoVqEeKQivIQgUOGDQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AIuPyYVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_AIuPyoVqEeKQivIQgUOGDQ" name="Test$initialization$1" visibility="protected" method="_AItouIVqEeKQivIQgUOGDQ"/>
        <ownedOperation xmi:id="_AIuPy4VqEeKQivIQgUOGDQ" name="Test" visibility="public" method="_AItBroVqEeKQivIQgUOGDQ">
          <ownedParameter xmi:id="_AIuPzIVqEeKQivIQgUOGDQ" name="tester" visibility="package" type="_AIu2g4VqEeKQivIQgUOGDQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuPzYVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIuPzoVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_AIuPz4VqEeKQivIQgUOGDQ" name="" visibility="package" type="_AIoI1oVqEeKQivIQgUOGDQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIuP0IVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2gIVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AIu2gYVqEeKQivIQgUOGDQ" name="destroy" visibility="package" method="_AItotoVqEeKQivIQgUOGDQ" redefinedOperation="_AIniGoVqEeKQivIQgUOGDQ"/>
        <ownedReception xmi:id="_AIu2goVqEeKQivIQgUOGDQ" name="SignalNewArrival" visibility="public" signal="_AIoI0IVqEeKQivIQgUOGDQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_AIu2g4VqEeKQivIQgUOGDQ" name="TestRunner" classifierBehavior="_AIu2h4VqEeKQivIQgUOGDQ" isActive="true">
        <ownedAttribute xmi:id="_AIu2hIVqEeKQivIQgUOGDQ" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2hYVqEeKQivIQgUOGDQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2hoVqEeKQivIQgUOGDQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AIu2h4VqEeKQivIQgUOGDQ" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" group="_AIu2iIVqEeKQivIQgUOGDQ" node="_AIu2iIVqEeKQivIQgUOGDQ">
          <structuredNode xmi:id="_AIu2iIVqEeKQivIQgUOGDQ" name="Body(TestRunner$classifierBehavior$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIu2iYVqEeKQivIQgUOGDQ" name="AcceptStatement@40e28492" outgoing="_AIxS1YVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:AcceptEventAction" xmi:id="_AIu2ioVqEeKQivIQgUOGDQ" name="Accept(Start)" incoming="_AIu2jYVqEeKQivIQgUOGDQ">
                <trigger xmi:id="_AIu2i4VqEeKQivIQgUOGDQ" event="_AIzvEoVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AIu2jIVqEeKQivIQgUOGDQ" name="Initial(Accept(Start))" outgoing="_AIu2jYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIu2jYVqEeKQivIQgUOGDQ" source="_AIu2jIVqEeKQivIQgUOGDQ" target="_AIu2ioVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIu2joVqEeKQivIQgUOGDQ" name="ExpressionStatement@725f3b4f" outgoing="_AIxS1oVqEeKQivIQgUOGDQ" incoming="_AIxS1YVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallOperationAction" xmi:id="_AIu2j4VqEeKQivIQgUOGDQ" name="Call(test)" operation="_AIzIT4VqEeKQivIQgUOGDQ">
                <result xmi:id="_AIu2kIVqEeKQivIQgUOGDQ" name="Call(test).result(test)" outgoing="_AIu2m4VqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2kYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2koVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <target xmi:id="_AIu2k4VqEeKQivIQgUOGDQ" name="Call(test).target" incoming="_AIu2nIVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2lIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2lYVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_AIu2loVqEeKQivIQgUOGDQ" name="ReadSelf">
                <result xmi:id="_AIu2l4VqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIu2nIVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2mIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2mYVqEeKQivIQgUOGDQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AIu2moVqEeKQivIQgUOGDQ" name="Fork(test)@38e24289" outgoing="_AIxS14VqEeKQivIQgUOGDQ _AIxS2YVqEeKQivIQgUOGDQ _AIxS24VqEeKQivIQgUOGDQ _AIxS3YVqEeKQivIQgUOGDQ _AIxS34VqEeKQivIQgUOGDQ _AIxS4YVqEeKQivIQgUOGDQ _AIxS44VqEeKQivIQgUOGDQ _AIxS5YVqEeKQivIQgUOGDQ _AIxS54VqEeKQivIQgUOGDQ" incoming="_AIu2m4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIu2m4VqEeKQivIQgUOGDQ" source="_AIu2kIVqEeKQivIQgUOGDQ" target="_AIu2moVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIu2nIVqEeKQivIQgUOGDQ" source="_AIu2l4VqEeKQivIQgUOGDQ" target="_AIu2k4VqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIu2nYVqEeKQivIQgUOGDQ" name="AcceptStatement@421da81a" outgoing="_AIxS2IVqEeKQivIQgUOGDQ" incoming="_AIxS1oVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:AcceptEventAction" xmi:id="_AIu2noVqEeKQivIQgUOGDQ" name="Accept(Continue)" incoming="_AIu2oYVqEeKQivIQgUOGDQ">
                <trigger xmi:id="_AIu2n4VqEeKQivIQgUOGDQ" event="_AIzvE4VqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AIu2oIVqEeKQivIQgUOGDQ" name="Initial(Accept(Continue))" outgoing="_AIu2oYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIu2oYVqEeKQivIQgUOGDQ" source="_AIu2oIVqEeKQivIQgUOGDQ" target="_AIu2noVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIu2ooVqEeKQivIQgUOGDQ" name="ExpressionStatement@6c79eef5" outgoing="_AIxS2oVqEeKQivIQgUOGDQ" incoming="_AIxS2IVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIu2o4VqEeKQivIQgUOGDQ" name="Call(AssertTrue)" incoming="_AIu2w4VqEeKQivIQgUOGDQ" behavior="_AIzvFIVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIu2pIVqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(label)" incoming="_AIu2wYVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2pYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2poVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIu2p4VqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(condition)" incoming="_AIu2woVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2qIVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2qYVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIu2qoVqEeKQivIQgUOGDQ" name="Tuple@58fcf2de" outgoing="_AIu2w4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIu2q4VqEeKQivIQgUOGDQ" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_AIu2rIVqEeKQivIQgUOGDQ" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_AIu2wYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2rYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2roVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIu2r4VqEeKQivIQgUOGDQ" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIu2sIVqEeKQivIQgUOGDQ" name="Read(sig)" structuralFeature="_AIoI24VqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIu2sYVqEeKQivIQgUOGDQ" name="Read(sig).object" incoming="_AIu2v4VqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2soVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2s4VqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIu2tIVqEeKQivIQgUOGDQ" name="Read(sig).result" outgoing="_AIu2wIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2tYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2toVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIu2t4VqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIu2v4VqEeKQivIQgUOGDQ" incoming="_AIxS14VqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AIu2uIVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_AIoI1IVqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIu2uYVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_AIu2wIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2uoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2u4VqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIu2vIVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_AIu2woVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2vYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2voVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIu2v4VqEeKQivIQgUOGDQ" source="_AIu2t4VqEeKQivIQgUOGDQ" target="_AIu2sYVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIu2wIVqEeKQivIQgUOGDQ" source="_AIu2tIVqEeKQivIQgUOGDQ" target="_AIu2uYVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIu2wYVqEeKQivIQgUOGDQ" source="_AIu2rIVqEeKQivIQgUOGDQ" target="_AIu2pIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIu2woVqEeKQivIQgUOGDQ" source="_AIu2vIVqEeKQivIQgUOGDQ" target="_AIu2p4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIu2w4VqEeKQivIQgUOGDQ" source="_AIu2qoVqEeKQivIQgUOGDQ" target="_AIu2o4VqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIu2xIVqEeKQivIQgUOGDQ" name="ExpressionStatement@62a977ed" outgoing="_AIxS3IVqEeKQivIQgUOGDQ" incoming="_AIxS2oVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIu2xYVqEeKQivIQgUOGDQ" name="Call(AssertEqual)" incoming="_AIvdnoVqEeKQivIQgUOGDQ" behavior="_AI0WI4VqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIu2xoVqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(label)" incoming="_AIvdm4VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2x4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2yIVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIu2yYVqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(value1)" incoming="_AIvdnIVqEeKQivIQgUOGDQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2yoVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2y4VqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIu2zIVqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(value2)" incoming="_AIvdnYVqEeKQivIQgUOGDQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu2zYVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu2zoVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIu2z4VqEeKQivIQgUOGDQ" name="Tuple@222fc9f1" outgoing="_AIvdnoVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIu20IVqEeKQivIQgUOGDQ" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_AIu20YVqEeKQivIQgUOGDQ" name="Value(&quot;test.name&quot;).result" outgoing="_AIvdm4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu20oVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIu204VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIu21IVqEeKQivIQgUOGDQ" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIu21YVqEeKQivIQgUOGDQ" name="Read(name)" structuralFeature="_AIoI4YVqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIu21oVqEeKQivIQgUOGDQ" name="Read(name).object" incoming="_AIvdmoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIu214VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdkIVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIvdkYVqEeKQivIQgUOGDQ" name="Read(name).result" outgoing="_AIvdnIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdkoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdk4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIvdlIVqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIvdmoVqEeKQivIQgUOGDQ" incoming="_AIxS2YVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIvdlYVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_AIvdloVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival1&quot;).result" outgoing="_AIvdnYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdl4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdmIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIvdmYVqEeKQivIQgUOGDQ" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvdmoVqEeKQivIQgUOGDQ" source="_AIvdlIVqEeKQivIQgUOGDQ" target="_AIu21oVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvdm4VqEeKQivIQgUOGDQ" source="_AIu20YVqEeKQivIQgUOGDQ" target="_AIu2xoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvdnIVqEeKQivIQgUOGDQ" source="_AIvdkYVqEeKQivIQgUOGDQ" target="_AIu2yYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvdnYVqEeKQivIQgUOGDQ" source="_AIvdloVqEeKQivIQgUOGDQ" target="_AIu2zIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIvdnoVqEeKQivIQgUOGDQ" source="_AIu2z4VqEeKQivIQgUOGDQ" target="_AIu2xYVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIvdn4VqEeKQivIQgUOGDQ" name="ExpressionStatement@11b05b8e" outgoing="_AIxS3oVqEeKQivIQgUOGDQ" incoming="_AIxS3IVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIvdoIVqEeKQivIQgUOGDQ" name="Call(AssertFalse)" incoming="_AIvduIVqEeKQivIQgUOGDQ" behavior="_AI1kb4VqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIvdoYVqEeKQivIQgUOGDQ" name="Call(AssertFalse).argument(label)" incoming="_AIvdtoVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdooVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdo4VqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIvdpIVqEeKQivIQgUOGDQ" name="Call(AssertFalse).argument(condition)" incoming="_AIvdt4VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdpYVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdpoVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIvdp4VqEeKQivIQgUOGDQ" name="Tuple@204b145e" outgoing="_AIvduIVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIvdqIVqEeKQivIQgUOGDQ" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_AIvdqYVqEeKQivIQgUOGDQ" name="Value(&quot;test.terminate&quot;).result" outgoing="_AIvdtoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdqoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdq4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIvdrIVqEeKQivIQgUOGDQ" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIvdrYVqEeKQivIQgUOGDQ" name="Read(terminate)" structuralFeature="_AIoI5IVqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIvdroVqEeKQivIQgUOGDQ" name="Read(terminate).object" incoming="_AIvdtYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdr4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdsIVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIvdsYVqEeKQivIQgUOGDQ" name="Read(terminate).result" outgoing="_AIvdt4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdsoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvds4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIvdtIVqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIvdtYVqEeKQivIQgUOGDQ" incoming="_AIxS24VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvdtYVqEeKQivIQgUOGDQ" source="_AIvdtIVqEeKQivIQgUOGDQ" target="_AIvdroVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvdtoVqEeKQivIQgUOGDQ" source="_AIvdqYVqEeKQivIQgUOGDQ" target="_AIvdoYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvdt4VqEeKQivIQgUOGDQ" source="_AIvdsYVqEeKQivIQgUOGDQ" target="_AIvdpIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIvduIVqEeKQivIQgUOGDQ" source="_AIvdp4VqEeKQivIQgUOGDQ" target="_AIvdoIVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIvduYVqEeKQivIQgUOGDQ" name="ExpressionStatement@3f4dc67d" outgoing="_AIxS4IVqEeKQivIQgUOGDQ" incoming="_AIxS3oVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIvduoVqEeKQivIQgUOGDQ" name="Call(AssertEqual)" incoming="_AIvd5YVqEeKQivIQgUOGDQ" behavior="_AI0WI4VqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIvdu4VqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(label)" incoming="_AIvd4oVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdvIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdvYVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIvdvoVqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(value1)" incoming="_AIvd44VqEeKQivIQgUOGDQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdv4VqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdwIVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIvdwYVqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(value2)" incoming="_AIvd5IVqEeKQivIQgUOGDQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdwoVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdw4VqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIvdxIVqEeKQivIQgUOGDQ" name="Tuple@73bdf402" outgoing="_AIvd5YVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIvdxYVqEeKQivIQgUOGDQ" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_AIvdxoVqEeKQivIQgUOGDQ" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_AIvd4oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdx4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdyIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIvdyYVqEeKQivIQgUOGDQ" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIvdyoVqEeKQivIQgUOGDQ" name="Read(arrival)" structuralFeature="_AIoI54VqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIvdy4VqEeKQivIQgUOGDQ" name="Read(arrival).object" incoming="_AIvd34VqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdzIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvdzYVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIvdzoVqEeKQivIQgUOGDQ" name="Read(arrival).result" outgoing="_AIvd4IVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvdz4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvd0IVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIvd0YVqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIvd34VqEeKQivIQgUOGDQ" incoming="_AIxS3YVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIvd0oVqEeKQivIQgUOGDQ" name="Read(name)" structuralFeature="_AIoI0YVqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIvd04VqEeKQivIQgUOGDQ" name="Read(name).object" incoming="_AIvd4YVqEeKQivIQgUOGDQ" type="_AIoI0IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvd1IVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvd1YVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIvd1oVqEeKQivIQgUOGDQ" name="Read(name).result" outgoing="_AIvd44VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvd14VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvd2IVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIvd2YVqEeKQivIQgUOGDQ" name="Fork(Read(arrival).result)" outgoing="_AIvd4YVqEeKQivIQgUOGDQ" incoming="_AIvd4IVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIvd2oVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_AIvd24VqEeKQivIQgUOGDQ" name="Value(&quot;Arrival3&quot;).result" outgoing="_AIvd5IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvd3IVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvd3YVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIvd3oVqEeKQivIQgUOGDQ" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvd34VqEeKQivIQgUOGDQ" source="_AIvd0YVqEeKQivIQgUOGDQ" target="_AIvdy4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvd4IVqEeKQivIQgUOGDQ" source="_AIvdzoVqEeKQivIQgUOGDQ" target="_AIvd2YVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvd4YVqEeKQivIQgUOGDQ" source="_AIvd2YVqEeKQivIQgUOGDQ" target="_AIvd04VqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvd4oVqEeKQivIQgUOGDQ" source="_AIvdxoVqEeKQivIQgUOGDQ" target="_AIvdu4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvd44VqEeKQivIQgUOGDQ" source="_AIvd1oVqEeKQivIQgUOGDQ" target="_AIvdvoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIvd5IVqEeKQivIQgUOGDQ" source="_AIvd24VqEeKQivIQgUOGDQ" target="_AIvdwYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIvd5YVqEeKQivIQgUOGDQ" source="_AIvdxIVqEeKQivIQgUOGDQ" target="_AIvduoVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIvd5oVqEeKQivIQgUOGDQ" name="ExpressionStatement@1204187c" outgoing="_AIxS4oVqEeKQivIQgUOGDQ" incoming="_AIxS4IVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIvd54VqEeKQivIQgUOGDQ" name="Call(AssertTrue)" incoming="_AIwEyoVqEeKQivIQgUOGDQ" behavior="_AIzvFIVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIvd6IVqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(label)" incoming="_AIwEyIVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvd6YVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvd6oVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIvd64VqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(condition)" incoming="_AIwEyYVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvd7IVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIvd7YVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIvd7oVqEeKQivIQgUOGDQ" name="Tuple@6966347c" outgoing="_AIwEyoVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIvd74VqEeKQivIQgUOGDQ" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_AIvd8IVqEeKQivIQgUOGDQ" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_AIwEyIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIvd8YVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEoIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIwEoYVqEeKQivIQgUOGDQ" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIwEooVqEeKQivIQgUOGDQ" name="Call(At)" incoming="_AIwExYVqEeKQivIQgUOGDQ">
                  <argument xmi:id="_AIwEo4VqEeKQivIQgUOGDQ" name="Call(At).argument(seq)" incoming="_AIwEw4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEpIVqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEpYVqEeKQivIQgUOGDQ" value="*"/>
                  </argument>
                  <argument xmi:id="_AIwEpoVqEeKQivIQgUOGDQ" name="Call(At).argument(index)" incoming="_AIwExoVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEp4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEqIVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AIwEqYVqEeKQivIQgUOGDQ" name="Call(At).result()" outgoing="_AIwEx4VqEeKQivIQgUOGDQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEqoVqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEq4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwErIVqEeKQivIQgUOGDQ" name="Tuple@58f09c33" outgoing="_AIwExYVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIwErYVqEeKQivIQgUOGDQ" name="Read(signals)" structuralFeature="_AIoI7YVqEeKQivIQgUOGDQ">
                    <object xmi:id="_AIwEroVqEeKQivIQgUOGDQ" name="Read(signals).object" incoming="_AIwEuoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEr4VqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEsIVqEeKQivIQgUOGDQ" value="1"/>
                    </object>
                    <result xmi:id="_AIwEsYVqEeKQivIQgUOGDQ" name="Read(signals).result" outgoing="_AIwEw4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEsoVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEs4VqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_AIwEtIVqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIwEuoVqEeKQivIQgUOGDQ" incoming="_AIxS34VqEeKQivIQgUOGDQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIwEtYVqEeKQivIQgUOGDQ" name="Value(1)">
                    <result xmi:id="_AIwEtoVqEeKQivIQgUOGDQ" name="Value(1).result" outgoing="_AIwExIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEt4VqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEuIVqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_AIwEuYVqEeKQivIQgUOGDQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwEuoVqEeKQivIQgUOGDQ" source="_AIwEtIVqEeKQivIQgUOGDQ" target="_AIwEroVqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIwEu4VqEeKQivIQgUOGDQ" name="Fork(Call(At).argument(index))" outgoing="_AIwExoVqEeKQivIQgUOGDQ" incoming="_AIwExIVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AIwEvIVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_AIoI0IVqEeKQivIQgUOGDQ" isDirect="true">
                  <object xmi:id="_AIwEvYVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_AIwEx4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEvoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEv4VqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIwEwIVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_AIwEyYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEwYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEwoVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwEw4VqEeKQivIQgUOGDQ" source="_AIwEsYVqEeKQivIQgUOGDQ" target="_AIwEo4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwExIVqEeKQivIQgUOGDQ" source="_AIwEtoVqEeKQivIQgUOGDQ" target="_AIwEu4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AIwExYVqEeKQivIQgUOGDQ" source="_AIwErIVqEeKQivIQgUOGDQ" target="_AIwEooVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwExoVqEeKQivIQgUOGDQ" source="_AIwEu4VqEeKQivIQgUOGDQ" target="_AIwEpoVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwEx4VqEeKQivIQgUOGDQ" source="_AIwEqYVqEeKQivIQgUOGDQ" target="_AIwEvYVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwEyIVqEeKQivIQgUOGDQ" source="_AIvd8IVqEeKQivIQgUOGDQ" target="_AIvd6IVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwEyYVqEeKQivIQgUOGDQ" source="_AIwEwIVqEeKQivIQgUOGDQ" target="_AIvd64VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIwEyoVqEeKQivIQgUOGDQ" source="_AIvd7oVqEeKQivIQgUOGDQ" target="_AIvd54VqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwEy4VqEeKQivIQgUOGDQ" name="ExpressionStatement@57b3e5fa" outgoing="_AIxS5IVqEeKQivIQgUOGDQ" incoming="_AIxS4oVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIwEzIVqEeKQivIQgUOGDQ" name="Call(AssertTrue)" incoming="_AIwrtoVqEeKQivIQgUOGDQ" behavior="_AIzvFIVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIwEzYVqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(label)" incoming="_AIwrtIVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwEzoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwEz4VqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIwE0IVqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(condition)" incoming="_AIwrtYVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE0YVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE0oVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwE04VqEeKQivIQgUOGDQ" name="Tuple@27b5755b" outgoing="_AIwrtoVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIwE1IVqEeKQivIQgUOGDQ" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_AIwE1YVqEeKQivIQgUOGDQ" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_AIwrtIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE1oVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE14VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIwE2IVqEeKQivIQgUOGDQ" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIwE2YVqEeKQivIQgUOGDQ" name="Call(At)" incoming="_AIwrsYVqEeKQivIQgUOGDQ">
                  <argument xmi:id="_AIwE2oVqEeKQivIQgUOGDQ" name="Call(At).argument(seq)" incoming="_AIwE-oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE24VqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE3IVqEeKQivIQgUOGDQ" value="*"/>
                  </argument>
                  <argument xmi:id="_AIwE3YVqEeKQivIQgUOGDQ" name="Call(At).argument(index)" incoming="_AIwrsoVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE3oVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE34VqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AIwE4IVqEeKQivIQgUOGDQ" name="Call(At).result()" outgoing="_AIwrs4VqEeKQivIQgUOGDQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE4YVqEeKQivIQgUOGDQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE4oVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwE44VqEeKQivIQgUOGDQ" name="Tuple@47f0e53a" outgoing="_AIwrsYVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIwE5IVqEeKQivIQgUOGDQ" name="Read(signals)" structuralFeature="_AIoI7YVqEeKQivIQgUOGDQ">
                    <object xmi:id="_AIwE5YVqEeKQivIQgUOGDQ" name="Read(signals).object" incoming="_AIwE8YVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE5oVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE54VqEeKQivIQgUOGDQ" value="1"/>
                    </object>
                    <result xmi:id="_AIwE6IVqEeKQivIQgUOGDQ" name="Read(signals).result" outgoing="_AIwE-oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE6YVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE6oVqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_AIwE64VqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIwE8YVqEeKQivIQgUOGDQ" incoming="_AIxS4YVqEeKQivIQgUOGDQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIwE7IVqEeKQivIQgUOGDQ" name="Value(2)">
                    <result xmi:id="_AIwE7YVqEeKQivIQgUOGDQ" name="Value(2).result" outgoing="_AIwrsIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE7oVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE74VqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_AIwE8IVqEeKQivIQgUOGDQ" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwE8YVqEeKQivIQgUOGDQ" source="_AIwE64VqEeKQivIQgUOGDQ" target="_AIwE5YVqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIwE8oVqEeKQivIQgUOGDQ" name="Fork(Call(At).argument(index))" outgoing="_AIwrsoVqEeKQivIQgUOGDQ" incoming="_AIwrsIVqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AIwE84VqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_AIoI1IVqEeKQivIQgUOGDQ" isDirect="true">
                  <object xmi:id="_AIwE9IVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_AIwrs4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE9YVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE9oVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIwE94VqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_AIwrtYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwE-IVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwE-YVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwE-oVqEeKQivIQgUOGDQ" source="_AIwE6IVqEeKQivIQgUOGDQ" target="_AIwE2oVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwrsIVqEeKQivIQgUOGDQ" source="_AIwE7YVqEeKQivIQgUOGDQ" target="_AIwE8oVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AIwrsYVqEeKQivIQgUOGDQ" source="_AIwE44VqEeKQivIQgUOGDQ" target="_AIwE2YVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwrsoVqEeKQivIQgUOGDQ" source="_AIwE8oVqEeKQivIQgUOGDQ" target="_AIwE3YVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwrs4VqEeKQivIQgUOGDQ" source="_AIwE4IVqEeKQivIQgUOGDQ" target="_AIwE9IVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwrtIVqEeKQivIQgUOGDQ" source="_AIwE1YVqEeKQivIQgUOGDQ" target="_AIwEzYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwrtYVqEeKQivIQgUOGDQ" source="_AIwE94VqEeKQivIQgUOGDQ" target="_AIwE0IVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIwrtoVqEeKQivIQgUOGDQ" source="_AIwE04VqEeKQivIQgUOGDQ" target="_AIwEzIVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwrt4VqEeKQivIQgUOGDQ" name="ExpressionStatement@3c9ce0e8" outgoing="_AIxS5oVqEeKQivIQgUOGDQ" incoming="_AIxS5IVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIwruIVqEeKQivIQgUOGDQ" name="Call(AssertEqual)" incoming="_AIwr2YVqEeKQivIQgUOGDQ" behavior="_AI0WI4VqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIwruYVqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(label)" incoming="_AIwr1oVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwruoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwru4VqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIwrvIVqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(value1)" incoming="_AIwr14VqEeKQivIQgUOGDQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwrvYVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwrvoVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIwrv4VqEeKQivIQgUOGDQ" name="Call(AssertEqual).argument(value2)" incoming="_AIwr2IVqEeKQivIQgUOGDQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwrwIVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwrwYVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwrwoVqEeKQivIQgUOGDQ" name="Tuple@353d4df" outgoing="_AIwr2YVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIwrw4VqEeKQivIQgUOGDQ" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_AIwrxIVqEeKQivIQgUOGDQ" name="Value(&quot;test.count&quot;).result" outgoing="_AIwr1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwrxYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwrxoVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIwrx4VqEeKQivIQgUOGDQ" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIwryIVqEeKQivIQgUOGDQ" name="Read(count)" structuralFeature="_AIoI6oVqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIwryYVqEeKQivIQgUOGDQ" name="Read(count).object" incoming="_AIwr1YVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwryoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwry4VqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIwrzIVqEeKQivIQgUOGDQ" name="Read(count).result" outgoing="_AIwr14VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwrzYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwrzoVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIwrz4VqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIwr1YVqEeKQivIQgUOGDQ" incoming="_AIxS44VqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIwr0IVqEeKQivIQgUOGDQ" name="Value(3)">
                  <result xmi:id="_AIwr0YVqEeKQivIQgUOGDQ" name="Value(3).result" outgoing="_AIwr2IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr0oVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwr04VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AIwr1IVqEeKQivIQgUOGDQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwr1YVqEeKQivIQgUOGDQ" source="_AIwrz4VqEeKQivIQgUOGDQ" target="_AIwryYVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwr1oVqEeKQivIQgUOGDQ" source="_AIwrxIVqEeKQivIQgUOGDQ" target="_AIwruYVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwr14VqEeKQivIQgUOGDQ" source="_AIwrzIVqEeKQivIQgUOGDQ" target="_AIwrvIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwr2IVqEeKQivIQgUOGDQ" source="_AIwr0YVqEeKQivIQgUOGDQ" target="_AIwrv4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIwr2YVqEeKQivIQgUOGDQ" source="_AIwrwoVqEeKQivIQgUOGDQ" target="_AIwruIVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwr2oVqEeKQivIQgUOGDQ" name="ExpressionStatement@5c786695" outgoing="_AIxS6IVqEeKQivIQgUOGDQ" incoming="_AIxS5oVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIwr24VqEeKQivIQgUOGDQ" name="Call(AssertTrue)" incoming="_AIwr84VqEeKQivIQgUOGDQ" behavior="_AIzvFIVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIwr3IVqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(label)" incoming="_AIwr8YVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr3YVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwr3oVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIwr34VqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(condition)" incoming="_AIwr8oVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr4IVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwr4YVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwr4oVqEeKQivIQgUOGDQ" name="Tuple@4bc01bfa" outgoing="_AIwr84VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIwr44VqEeKQivIQgUOGDQ" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_AIwr5IVqEeKQivIQgUOGDQ" name="Value(&quot;test.flag&quot;).result" outgoing="_AIwr8YVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr5YVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwr5oVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIwr54VqEeKQivIQgUOGDQ" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIwr6IVqEeKQivIQgUOGDQ" name="Read(flag)" structuralFeature="_AIoI8IVqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIwr6YVqEeKQivIQgUOGDQ" name="Read(flag).object" incoming="_AIwr8IVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr6oVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwr64VqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIwr7IVqEeKQivIQgUOGDQ" name="Read(flag).result" outgoing="_AIwr8oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr7YVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwr7oVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIwr74VqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIwr8IVqEeKQivIQgUOGDQ" incoming="_AIxS5YVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwr8IVqEeKQivIQgUOGDQ" source="_AIwr74VqEeKQivIQgUOGDQ" target="_AIwr6YVqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwr8YVqEeKQivIQgUOGDQ" source="_AIwr5IVqEeKQivIQgUOGDQ" target="_AIwr3IVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIwr8oVqEeKQivIQgUOGDQ" source="_AIwr7IVqEeKQivIQgUOGDQ" target="_AIwr34VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIwr84VqEeKQivIQgUOGDQ" source="_AIwr4oVqEeKQivIQgUOGDQ" target="_AIwr24VqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwr9IVqEeKQivIQgUOGDQ" name="ExpressionStatement@322dfce4" outgoing="_AIxS6YVqEeKQivIQgUOGDQ" incoming="_AIxS6IVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIwr9YVqEeKQivIQgUOGDQ" name="Call(AssertTrue)" incoming="_AIxSxIVqEeKQivIQgUOGDQ" behavior="_AIzvFIVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIwr9oVqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(label)" incoming="_AIxSwoVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr94VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwr-IVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIwr-YVqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(condition)" incoming="_AIxSw4VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr-oVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwr-4VqEeKQivIQgUOGDQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIwr_IVqEeKQivIQgUOGDQ" name="Tuple@79fd08b2" outgoing="_AIxSxIVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIwr_YVqEeKQivIQgUOGDQ" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_AIwr_oVqEeKQivIQgUOGDQ" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_AIxSwoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwr_4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwsAIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIwsAYVqEeKQivIQgUOGDQ" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIwsAoVqEeKQivIQgUOGDQ" name="Read(sig1)" structuralFeature="_AIoI3oVqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIwsA4VqEeKQivIQgUOGDQ" name="Read(sig1).object" incoming="_AIxSwIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwsBIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwsBYVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIwsBoVqEeKQivIQgUOGDQ" name="Read(sig1).result" outgoing="_AIxSwYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwsB4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwsCIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AIwsCYVqEeKQivIQgUOGDQ" name="Fork(Fork(test)@38e24289)" outgoing="_AIxSwIVqEeKQivIQgUOGDQ" incoming="_AIxS54VqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AIwsCoVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_AIoI1IVqEeKQivIQgUOGDQ">
                  <object xmi:id="_AIwsC4VqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_AIxSwYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwsDIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwsDYVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIwsDoVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_AIxSw4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIwsD4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIwsEIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxSwIVqEeKQivIQgUOGDQ" source="_AIwsCYVqEeKQivIQgUOGDQ" target="_AIwsA4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxSwYVqEeKQivIQgUOGDQ" source="_AIwsBoVqEeKQivIQgUOGDQ" target="_AIwsC4VqEeKQivIQgUOGDQ"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxSwoVqEeKQivIQgUOGDQ" source="_AIwr_oVqEeKQivIQgUOGDQ" target="_AIwr9oVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxSw4VqEeKQivIQgUOGDQ" source="_AIwsDoVqEeKQivIQgUOGDQ" target="_AIwr-YVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIxSxIVqEeKQivIQgUOGDQ" source="_AIwr_IVqEeKQivIQgUOGDQ" target="_AIwr9YVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIxSxYVqEeKQivIQgUOGDQ" name="ExpressionStatement@28a27a36" incoming="_AIxS6YVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIxSxoVqEeKQivIQgUOGDQ" name="Call(WriteLine)" incoming="_AIxS1IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIxSx4VqEeKQivIQgUOGDQ" name="Call(WriteLine).argument(value)" incoming="_AIxS04VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxSyIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxSyYVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <result xmi:id="_AIxSyoVqEeKQivIQgUOGDQ" name="Call(WriteLine).result(errorStatus)">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxSy4VqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxSzIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="fUML.library.uml#BasicInputOutput-WriteLine"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIxSzYVqEeKQivIQgUOGDQ" name="Tuple@7f41ff36" outgoing="_AIxS1IVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIxSzoVqEeKQivIQgUOGDQ" name="Value(&quot;Done&quot;)">
                  <result xmi:id="_AIxSz4VqEeKQivIQgUOGDQ" name="Value(&quot;Done&quot;).result" outgoing="_AIxS04VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxS0IVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxS0YVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIxS0oVqEeKQivIQgUOGDQ" value="Done">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS04VqEeKQivIQgUOGDQ" source="_AIxSz4VqEeKQivIQgUOGDQ" target="_AIxSx4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS1IVqEeKQivIQgUOGDQ" source="_AIxSzYVqEeKQivIQgUOGDQ" target="_AIxSxoVqEeKQivIQgUOGDQ"/>
            </node>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS1YVqEeKQivIQgUOGDQ" source="_AIu2iYVqEeKQivIQgUOGDQ" target="_AIu2joVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS1oVqEeKQivIQgUOGDQ" source="_AIu2joVqEeKQivIQgUOGDQ" target="_AIu2nYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS14VqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIu2t4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS2IVqEeKQivIQgUOGDQ" source="_AIu2nYVqEeKQivIQgUOGDQ" target="_AIu2ooVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS2YVqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIvdlIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS2oVqEeKQivIQgUOGDQ" source="_AIu2ooVqEeKQivIQgUOGDQ" target="_AIu2xIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS24VqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIvdtIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS3IVqEeKQivIQgUOGDQ" source="_AIu2xIVqEeKQivIQgUOGDQ" target="_AIvdn4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS3YVqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIvd0YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS3oVqEeKQivIQgUOGDQ" source="_AIvdn4VqEeKQivIQgUOGDQ" target="_AIvduYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS34VqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIwEtIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS4IVqEeKQivIQgUOGDQ" source="_AIvduYVqEeKQivIQgUOGDQ" target="_AIvd5oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS4YVqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIwE64VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS4oVqEeKQivIQgUOGDQ" source="_AIvd5oVqEeKQivIQgUOGDQ" target="_AIwEy4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS44VqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIwrz4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS5IVqEeKQivIQgUOGDQ" source="_AIwEy4VqEeKQivIQgUOGDQ" target="_AIwrt4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS5YVqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIwr74VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS5oVqEeKQivIQgUOGDQ" source="_AIwrt4VqEeKQivIQgUOGDQ" target="_AIwr2oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS54VqEeKQivIQgUOGDQ" source="_AIu2moVqEeKQivIQgUOGDQ" target="_AIwsCYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS6IVqEeKQivIQgUOGDQ" source="_AIwr2oVqEeKQivIQgUOGDQ" target="_AIwr9IVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIxS6YVqEeKQivIQgUOGDQ" source="_AIwr9IVqEeKQivIQgUOGDQ" target="_AIxSxYVqEeKQivIQgUOGDQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AIxS6oVqEeKQivIQgUOGDQ" name="test$method$1" specification="_AIzIT4VqEeKQivIQgUOGDQ" group="_AIxS8IVqEeKQivIQgUOGDQ" node="_AIxS74VqEeKQivIQgUOGDQ _AIxS8IVqEeKQivIQgUOGDQ">
          <ownedParameter xmi:id="_AIxS64VqEeKQivIQgUOGDQ" name="test" type="_AIoI1oVqEeKQivIQgUOGDQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxS7IVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxS7YVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxS7oVqEeKQivIQgUOGDQ" source="_AIyhC4VqEeKQivIQgUOGDQ" target="_AIxS74VqEeKQivIQgUOGDQ"/>
          <structuredNode xmi:id="_AIxS8IVqEeKQivIQgUOGDQ" name="Body(test$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIxS8YVqEeKQivIQgUOGDQ" name="ExpressionStatement@67459d1d" outgoing="_AIyhD4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ForkNode" xmi:id="_AIxS8oVqEeKQivIQgUOGDQ" name="Fork(test)@6562c66d" outgoing="_AIyhDoVqEeKQivIQgUOGDQ _AIyhEIVqEeKQivIQgUOGDQ _AIyhEoVqEeKQivIQgUOGDQ _AIyhFIVqEeKQivIQgUOGDQ _AIyhFoVqEeKQivIQgUOGDQ _AIyhGIVqEeKQivIQgUOGDQ _AIyhGoVqEeKQivIQgUOGDQ _AIyhHIVqEeKQivIQgUOGDQ _AIyhHoVqEeKQivIQgUOGDQ _AIyhIIVqEeKQivIQgUOGDQ _AIyhIoVqEeKQivIQgUOGDQ _AIyhJIVqEeKQivIQgUOGDQ _AIyhJoVqEeKQivIQgUOGDQ" incoming="_AIxTFoVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIxS84VqEeKQivIQgUOGDQ" name="RightHandSide@75a252fc">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIxS9IVqEeKQivIQgUOGDQ" name="InstanceCreationExpression@75a252fc">
                  <node xmi:type="uml:CallOperationAction" xmi:id="_AIxS9YVqEeKQivIQgUOGDQ" name="Call(Test)" incoming="_AIxTEoVqEeKQivIQgUOGDQ" operation="_AIuPy4VqEeKQivIQgUOGDQ">
                    <argument xmi:id="_AIxS9oVqEeKQivIQgUOGDQ" name="Call(Test).argument(tester)" incoming="_AIxTEYVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxS94VqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxS-IVqEeKQivIQgUOGDQ" value="1"/>
                    </argument>
                    <result xmi:id="_AIxS-YVqEeKQivIQgUOGDQ" name="Call(Test).result()" outgoing="_AIxTE4VqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxS-oVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxS-4VqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                    <target xmi:id="_AIxS_IVqEeKQivIQgUOGDQ" name="Call(Test).target" incoming="_AIxTEIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxS_YVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxS_oVqEeKQivIQgUOGDQ" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_AIxS_4VqEeKQivIQgUOGDQ" name="Create(Test)" classifier="_AIoI1oVqEeKQivIQgUOGDQ">
                    <result xmi:id="_AIxTAIVqEeKQivIQgUOGDQ" name="Create(Test).result" outgoing="_AIxTEIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxTAYVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxTAoVqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIxTA4VqEeKQivIQgUOGDQ" name="Tuple@568da80f" outgoing="_AIxTEoVqEeKQivIQgUOGDQ">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_AIxTBIVqEeKQivIQgUOGDQ" name="ReadSelf">
                      <result xmi:id="_AIxTBYVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIxTEYVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxTBoVqEeKQivIQgUOGDQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxTB4VqEeKQivIQgUOGDQ" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_AIxTCIVqEeKQivIQgUOGDQ" name="Fork(Call(Test).result())" outgoing="_AIxTFIVqEeKQivIQgUOGDQ _AIxTFYVqEeKQivIQgUOGDQ" incoming="_AIxTE4VqEeKQivIQgUOGDQ"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_AIxTCYVqEeKQivIQgUOGDQ" name="Start(Test)">
                    <object xmi:id="_AIxTCoVqEeKQivIQgUOGDQ" name="Start(Test).object" incoming="_AIxTFIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxTC4VqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxTDIVqEeKQivIQgUOGDQ" value="1"/>
                    </object>
                  </node>
                  <structuredNodeOutput xmi:id="_AIxTDYVqEeKQivIQgUOGDQ" name="Output(Call(Test).result())" outgoing="_AIxTFoVqEeKQivIQgUOGDQ" incoming="_AIxTFYVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxTDoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxTD4VqEeKQivIQgUOGDQ" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxTEIVqEeKQivIQgUOGDQ" source="_AIxTAIVqEeKQivIQgUOGDQ" target="_AIxS_IVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxTEYVqEeKQivIQgUOGDQ" source="_AIxTBYVqEeKQivIQgUOGDQ" target="_AIxS9oVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_AIxTEoVqEeKQivIQgUOGDQ" source="_AIxTA4VqEeKQivIQgUOGDQ" target="_AIxS9YVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxTE4VqEeKQivIQgUOGDQ" source="_AIxS-YVqEeKQivIQgUOGDQ" target="_AIxTCIVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxTFIVqEeKQivIQgUOGDQ" source="_AIxTCIVqEeKQivIQgUOGDQ" target="_AIxTCoVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxTFYVqEeKQivIQgUOGDQ" source="_AIxTCIVqEeKQivIQgUOGDQ" target="_AIxTDYVqEeKQivIQgUOGDQ"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIxTFoVqEeKQivIQgUOGDQ" source="_AIxTDYVqEeKQivIQgUOGDQ" target="_AIxS8oVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIxTF4VqEeKQivIQgUOGDQ" name="ExpressionStatement@6f12d31a" outgoing="_AIyhEYVqEeKQivIQgUOGDQ" incoming="_AIyhD4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIxTGIVqEeKQivIQgUOGDQ" name="SendSignal(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ">
                <target xmi:id="_AIxTGYVqEeKQivIQgUOGDQ" name="SendSignal(SignalTermination).target" incoming="_AIyhDoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIxTGoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIxTG4VqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx50IVqEeKQivIQgUOGDQ" name="ExpressionStatement@61e1a0cf" outgoing="_AIyhE4VqEeKQivIQgUOGDQ" incoming="_AIyhEYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIx50YVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival)" incoming="_AIx534VqEeKQivIQgUOGDQ" signal="_AIoI0IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIx50oVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_AIx53oVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx504VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx51IVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <target xmi:id="_AIx51YVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).target" incoming="_AIyhEIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx51oVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx514VqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx52IVqEeKQivIQgUOGDQ" name="Tuple@45bc1a36" outgoing="_AIx534VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIx52YVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_AIx52oVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival1&quot;).result" outgoing="_AIx53oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx524VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx53IVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIx53YVqEeKQivIQgUOGDQ" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIx53oVqEeKQivIQgUOGDQ" source="_AIx52oVqEeKQivIQgUOGDQ" target="_AIx50oVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIx534VqEeKQivIQgUOGDQ" source="_AIx52IVqEeKQivIQgUOGDQ" target="_AIx50YVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx54IVqEeKQivIQgUOGDQ" name="ExpressionStatement@3dcf57ee" outgoing="_AIyhFYVqEeKQivIQgUOGDQ" incoming="_AIyhE4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIx54YVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival)" incoming="_AIx574VqEeKQivIQgUOGDQ" signal="_AIoI0IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIx54oVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_AIx57oVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx544VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx55IVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <target xmi:id="_AIx55YVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).target" incoming="_AIyhEoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx55oVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx554VqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx56IVqEeKQivIQgUOGDQ" name="Tuple@12657894" outgoing="_AIx574VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIx56YVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_AIx56oVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival2&quot;).result" outgoing="_AIx57oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx564VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx57IVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIx57YVqEeKQivIQgUOGDQ" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIx57oVqEeKQivIQgUOGDQ" source="_AIx56oVqEeKQivIQgUOGDQ" target="_AIx54oVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIx574VqEeKQivIQgUOGDQ" source="_AIx56IVqEeKQivIQgUOGDQ" target="_AIx54YVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx58IVqEeKQivIQgUOGDQ" name="ExpressionStatement@4f736a33" outgoing="_AIyhF4VqEeKQivIQgUOGDQ" incoming="_AIyhFYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIx58YVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival)" incoming="_AIx5_4VqEeKQivIQgUOGDQ" signal="_AIoI0IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIx58oVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_AIx5_oVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx584VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx59IVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <target xmi:id="_AIx59YVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).target" incoming="_AIyhFIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx59oVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx594VqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx5-IVqEeKQivIQgUOGDQ" name="Tuple@356f8b7d" outgoing="_AIx5_4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIx5-YVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_AIx5-oVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival3&quot;).result" outgoing="_AIx5_oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx5-4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx5_IVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIx5_YVqEeKQivIQgUOGDQ" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIx5_oVqEeKQivIQgUOGDQ" source="_AIx5-oVqEeKQivIQgUOGDQ" target="_AIx58oVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIx5_4VqEeKQivIQgUOGDQ" source="_AIx5-IVqEeKQivIQgUOGDQ" target="_AIx58YVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx6AIVqEeKQivIQgUOGDQ" name="ExpressionStatement@388eaebb" outgoing="_AIyhGYVqEeKQivIQgUOGDQ" incoming="_AIyhF4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIx6AYVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival)" incoming="_AIx6D4VqEeKQivIQgUOGDQ" signal="_AIoI0IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIx6AoVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_AIx6DoVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6A4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6BIVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <target xmi:id="_AIx6BYVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).target" incoming="_AIyhFoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6BoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6B4VqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx6CIVqEeKQivIQgUOGDQ" name="Tuple@313961de" outgoing="_AIx6D4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIx6CYVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_AIx6CoVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival4&quot;).result" outgoing="_AIx6DoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6C4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6DIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIx6DYVqEeKQivIQgUOGDQ" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIx6DoVqEeKQivIQgUOGDQ" source="_AIx6CoVqEeKQivIQgUOGDQ" target="_AIx6AoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIx6D4VqEeKQivIQgUOGDQ" source="_AIx6CIVqEeKQivIQgUOGDQ" target="_AIx6AYVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx6EIVqEeKQivIQgUOGDQ" name="ExpressionStatement@7026b1ab" outgoing="_AIyhG4VqEeKQivIQgUOGDQ" incoming="_AIyhGYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIx6EYVqEeKQivIQgUOGDQ" name="SendSignal(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ">
                <target xmi:id="_AIx6EoVqEeKQivIQgUOGDQ" name="SendSignal(SignalTermination).target" incoming="_AIyhGIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6E4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6FIVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx6FYVqEeKQivIQgUOGDQ" name="ExpressionStatement@16d07147" outgoing="_AIyhHYVqEeKQivIQgUOGDQ" incoming="_AIyhG4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIx6FoVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival)" incoming="_AIx6JIVqEeKQivIQgUOGDQ" signal="_AIoI0IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIx6F4VqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_AIx6I4VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6GIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6GYVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <target xmi:id="_AIx6GoVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).target" incoming="_AIyhGoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6G4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6HIVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx6HYVqEeKQivIQgUOGDQ" name="Tuple@2adf3c8b" outgoing="_AIx6JIVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIx6HoVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_AIx6H4VqEeKQivIQgUOGDQ" name="Value(&quot;Arrival5&quot;).result" outgoing="_AIx6I4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6IIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6IYVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIx6IoVqEeKQivIQgUOGDQ" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIx6I4VqEeKQivIQgUOGDQ" source="_AIx6H4VqEeKQivIQgUOGDQ" target="_AIx6F4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIx6JIVqEeKQivIQgUOGDQ" source="_AIx6HYVqEeKQivIQgUOGDQ" target="_AIx6FoVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx6JYVqEeKQivIQgUOGDQ" name="ExpressionStatement@7035db8e" outgoing="_AIyhH4VqEeKQivIQgUOGDQ" incoming="_AIyhHYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIx6JoVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival)" incoming="_AIyg4IVqEeKQivIQgUOGDQ" signal="_AIoI0IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIx6J4VqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_AIx6M4VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6KIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6KYVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <target xmi:id="_AIx6KoVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).target" incoming="_AIyhHIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6K4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6LIVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIx6LYVqEeKQivIQgUOGDQ" name="Tuple@51931963" outgoing="_AIyg4IVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIx6LoVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_AIx6L4VqEeKQivIQgUOGDQ" name="Value(&quot;Arrival6&quot;).result" outgoing="_AIx6M4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIx6MIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIx6MYVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIx6MoVqEeKQivIQgUOGDQ" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIx6M4VqEeKQivIQgUOGDQ" source="_AIx6L4VqEeKQivIQgUOGDQ" target="_AIx6J4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIyg4IVqEeKQivIQgUOGDQ" source="_AIx6LYVqEeKQivIQgUOGDQ" target="_AIx6JoVqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIyg4YVqEeKQivIQgUOGDQ" name="ExpressionStatement@7cb8af38" outgoing="_AIyhIYVqEeKQivIQgUOGDQ" incoming="_AIyhH4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIyg4oVqEeKQivIQgUOGDQ" name="SendSignal(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ">
                <target xmi:id="_AIyg44VqEeKQivIQgUOGDQ" name="SendSignal(SignalTermination).target" incoming="_AIyhHoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyg5IVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyg5YVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIyg5oVqEeKQivIQgUOGDQ" name="ExpressionStatement@7349108" outgoing="_AIyhI4VqEeKQivIQgUOGDQ" incoming="_AIyhIYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIyg54VqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival)" incoming="_AIyg9YVqEeKQivIQgUOGDQ" signal="_AIoI0IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIyg6IVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_AIyg9IVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyg6YVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyg6oVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <target xmi:id="_AIyg64VqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).target" incoming="_AIyhIIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyg7IVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyg7YVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIyg7oVqEeKQivIQgUOGDQ" name="Tuple@7ec641e4" outgoing="_AIyg9YVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIyg74VqEeKQivIQgUOGDQ" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_AIyg8IVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival7&quot;).result" outgoing="_AIyg9IVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyg8YVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyg8oVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIyg84VqEeKQivIQgUOGDQ" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyg9IVqEeKQivIQgUOGDQ" source="_AIyg8IVqEeKQivIQgUOGDQ" target="_AIyg6IVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIyg9YVqEeKQivIQgUOGDQ" source="_AIyg7oVqEeKQivIQgUOGDQ" target="_AIyg54VqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIyg9oVqEeKQivIQgUOGDQ" name="ExpressionStatement@7ada722b" outgoing="_AIyhJYVqEeKQivIQgUOGDQ" incoming="_AIyhI4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIyg94VqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival)" incoming="_AIyhBYVqEeKQivIQgUOGDQ" signal="_AIoI0IVqEeKQivIQgUOGDQ">
                <argument xmi:id="_AIyg-IVqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_AIyhBIVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyg-YVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyg-oVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <target xmi:id="_AIyg-4VqEeKQivIQgUOGDQ" name="SendSignal(SignalNewArrival).target" incoming="_AIyhIoVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyg_IVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyg_YVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIyg_oVqEeKQivIQgUOGDQ" name="Tuple@5f4ca13d" outgoing="_AIyhBYVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIyg_4VqEeKQivIQgUOGDQ" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_AIyhAIVqEeKQivIQgUOGDQ" name="Value(&quot;Arrival8&quot;).result" outgoing="_AIyhBIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhAYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhAoVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AIyhA4VqEeKQivIQgUOGDQ" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhBIVqEeKQivIQgUOGDQ" source="_AIyhAIVqEeKQivIQgUOGDQ" target="_AIyg-IVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhBYVqEeKQivIQgUOGDQ" source="_AIyg_oVqEeKQivIQgUOGDQ" target="_AIyg94VqEeKQivIQgUOGDQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIyhBoVqEeKQivIQgUOGDQ" name="ExpressionStatement@3d77c768" incoming="_AIyhJYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_AIyhB4VqEeKQivIQgUOGDQ" name="SendSignal(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ">
                <target xmi:id="_AIyhCIVqEeKQivIQgUOGDQ" name="SendSignal(SignalTermination).target" incoming="_AIyhJIVqEeKQivIQgUOGDQ" type="_AIoI1oVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhCYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhCoVqEeKQivIQgUOGDQ" value="1"/>
                </target>
              </node>
            </node>
            <structuredNodeOutput xmi:id="_AIyhC4VqEeKQivIQgUOGDQ" name="Output(test)" outgoing="_AIxS7oVqEeKQivIQgUOGDQ" incoming="_AIyhJoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhDIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhDYVqEeKQivIQgUOGDQ" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhDoVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIxTGYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhD4VqEeKQivIQgUOGDQ" source="_AIxS8YVqEeKQivIQgUOGDQ" target="_AIxTF4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhEIVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIx51YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhEYVqEeKQivIQgUOGDQ" source="_AIxTF4VqEeKQivIQgUOGDQ" target="_AIx50IVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhEoVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIx55YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhE4VqEeKQivIQgUOGDQ" source="_AIx50IVqEeKQivIQgUOGDQ" target="_AIx54IVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhFIVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIx59YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhFYVqEeKQivIQgUOGDQ" source="_AIx54IVqEeKQivIQgUOGDQ" target="_AIx58IVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhFoVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIx6BYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhF4VqEeKQivIQgUOGDQ" source="_AIx58IVqEeKQivIQgUOGDQ" target="_AIx6AIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhGIVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIx6EoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhGYVqEeKQivIQgUOGDQ" source="_AIx6AIVqEeKQivIQgUOGDQ" target="_AIx6EIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhGoVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIx6GoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhG4VqEeKQivIQgUOGDQ" source="_AIx6EIVqEeKQivIQgUOGDQ" target="_AIx6FYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhHIVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIx6KoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhHYVqEeKQivIQgUOGDQ" source="_AIx6FYVqEeKQivIQgUOGDQ" target="_AIx6JYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhHoVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIyg44VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhH4VqEeKQivIQgUOGDQ" source="_AIx6JYVqEeKQivIQgUOGDQ" target="_AIyg4YVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhIIVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIyg64VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhIYVqEeKQivIQgUOGDQ" source="_AIyg4YVqEeKQivIQgUOGDQ" target="_AIyg5oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhIoVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIyg-4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhI4VqEeKQivIQgUOGDQ" source="_AIyg5oVqEeKQivIQgUOGDQ" target="_AIyg9oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhJIVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIyhCIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIyhJYVqEeKQivIQgUOGDQ" source="_AIyg9oVqEeKQivIQgUOGDQ" target="_AIyhBoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhJoVqEeKQivIQgUOGDQ" source="_AIxS8oVqEeKQivIQgUOGDQ" target="_AIyhC4VqEeKQivIQgUOGDQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_AIxS74VqEeKQivIQgUOGDQ" name="Output(test)" incoming="_AIxS7oVqEeKQivIQgUOGDQ" parameter="_AIxS64VqEeKQivIQgUOGDQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AIyhJ4VqEeKQivIQgUOGDQ" name="TestRunner$method$1" specification="_AIzIU4VqEeKQivIQgUOGDQ" group="_AIyhLYVqEeKQivIQgUOGDQ" node="_AIyhLIVqEeKQivIQgUOGDQ _AIyhLYVqEeKQivIQgUOGDQ">
          <ownedParameter xmi:id="_AIyhKIVqEeKQivIQgUOGDQ" name="" type="_AIu2g4VqEeKQivIQgUOGDQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhKYVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhKoVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AIyhK4VqEeKQivIQgUOGDQ" source="_AIyhM4VqEeKQivIQgUOGDQ" target="_AIyhLIVqEeKQivIQgUOGDQ"/>
          <structuredNode xmi:id="_AIyhLYVqEeKQivIQgUOGDQ" name="Body(TestRunner$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIyhLoVqEeKQivIQgUOGDQ" name="Body" incoming="_AIzIAYVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AIyhL4VqEeKQivIQgUOGDQ" name="ReadSelf">
              <result xmi:id="_AIyhMIVqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIzH_4VqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhMYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhMoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AIyhM4VqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AIyhK4VqEeKQivIQgUOGDQ _AIzIAIVqEeKQivIQgUOGDQ _AIzIAoVqEeKQivIQgUOGDQ" incoming="_AIzH_4VqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_AIyhNIVqEeKQivIQgUOGDQ" name="Call(TestRunner$initialization$1)" outgoing="_AIzIAYVqEeKQivIQgUOGDQ" incoming="_AIzICIVqEeKQivIQgUOGDQ" operation="_AIzIToVqEeKQivIQgUOGDQ">
              <target xmi:id="_AIyhNYVqEeKQivIQgUOGDQ" name="Call(TestRunner$initialization$1).target" incoming="_AIzIAIVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhNoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhN4VqEeKQivIQgUOGDQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIyhOIVqEeKQivIQgUOGDQ" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_AIu2hIVqEeKQivIQgUOGDQ">
              <object xmi:id="_AIyhOYVqEeKQivIQgUOGDQ" name="Read(TestRunner$initializationFlag$1).object" incoming="_AIzIAoVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhOoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhO4VqEeKQivIQgUOGDQ" value="1"/>
              </object>
              <result xmi:id="_AIyhPIVqEeKQivIQgUOGDQ" name="Read(TestRunner$initializationFlag$1).result" outgoing="_AIzIA4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhPYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhPoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIyhP4VqEeKQivIQgUOGDQ" name="Call(ListSize)">
              <argument xmi:id="_AIyhQIVqEeKQivIQgUOGDQ" name="Call(ListSize).argument(list)" incoming="_AIzIA4VqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhQYVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhQoVqEeKQivIQgUOGDQ" value="*"/>
              </argument>
              <result xmi:id="_AIyhQ4VqEeKQivIQgUOGDQ" name="Call(ListSize).result(result)" outgoing="_AIzIBIVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIyhRIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIyhRYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIyhRoVqEeKQivIQgUOGDQ" name="Value(0)">
              <result xmi:id="_AIyhR4VqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AIzIBYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzH8IVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzH8YVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_AIzH8oVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AIzH84VqEeKQivIQgUOGDQ" name="Test(Size==0)">
              <first xmi:id="_AIzH9IVqEeKQivIQgUOGDQ" name="Test(Size==0).first" incoming="_AIzIBIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzH9YVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzH9oVqEeKQivIQgUOGDQ" value="1"/>
              </first>
              <result xmi:id="_AIzH94VqEeKQivIQgUOGDQ" name="Test(Size==0).result" outgoing="_AIzIB4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzH-IVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzH-YVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <second xmi:id="_AIzH-oVqEeKQivIQgUOGDQ" name="Test(Size==0).second" incoming="_AIzIBYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzH-4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzH_IVqEeKQivIQgUOGDQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AIzH_YVqEeKQivIQgUOGDQ" name="InitialNode" outgoing="_AIzIBoVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AIzH_oVqEeKQivIQgUOGDQ" name="Decision(Test(TestRunner$initializationFlag$1))" outgoing="_AIzICIVqEeKQivIQgUOGDQ" incoming="_AIzIBoVqEeKQivIQgUOGDQ _AIzIB4VqEeKQivIQgUOGDQ" decisionInputFlow="_AIzIB4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzH_4VqEeKQivIQgUOGDQ" source="_AIyhMIVqEeKQivIQgUOGDQ" target="_AIyhM4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIAIVqEeKQivIQgUOGDQ" source="_AIyhM4VqEeKQivIQgUOGDQ" target="_AIyhNYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIzIAYVqEeKQivIQgUOGDQ" source="_AIyhNIVqEeKQivIQgUOGDQ" target="_AIyhLoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIAoVqEeKQivIQgUOGDQ" source="_AIyhM4VqEeKQivIQgUOGDQ" target="_AIyhOYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIA4VqEeKQivIQgUOGDQ" source="_AIyhPIVqEeKQivIQgUOGDQ" target="_AIyhQIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIBIVqEeKQivIQgUOGDQ" source="_AIyhQ4VqEeKQivIQgUOGDQ" target="_AIzH9IVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIBYVqEeKQivIQgUOGDQ" source="_AIyhR4VqEeKQivIQgUOGDQ" target="_AIzH-oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIzIBoVqEeKQivIQgUOGDQ" source="_AIzH_YVqEeKQivIQgUOGDQ" target="_AIzH_oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIB4VqEeKQivIQgUOGDQ" source="_AIzH94VqEeKQivIQgUOGDQ" target="_AIzH_oVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIzICIVqEeKQivIQgUOGDQ" source="_AIzH_oVqEeKQivIQgUOGDQ" target="_AIyhNIVqEeKQivIQgUOGDQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AIzICYVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_AIyhLIVqEeKQivIQgUOGDQ" name="Return" incoming="_AIyhK4VqEeKQivIQgUOGDQ" parameter="_AIyhKIVqEeKQivIQgUOGDQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AIzICoVqEeKQivIQgUOGDQ" name="destroy$method$1" specification="_AIzvAIVqEeKQivIQgUOGDQ" group="_AIzIC4VqEeKQivIQgUOGDQ" node="_AIzIC4VqEeKQivIQgUOGDQ">
          <structuredNode xmi:id="_AIzIC4VqEeKQivIQgUOGDQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AIzIDIVqEeKQivIQgUOGDQ" name="TestRunner$initialization$1" specification="_AIzIToVqEeKQivIQgUOGDQ" group="_AIzIDYVqEeKQivIQgUOGDQ" node="_AIzIDYVqEeKQivIQgUOGDQ">
          <structuredNode xmi:id="_AIzIDYVqEeKQivIQgUOGDQ" name="Body(TestRunner$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AIzIDoVqEeKQivIQgUOGDQ" name="ReadSelf">
              <result xmi:id="_AIzID4VqEeKQivIQgUOGDQ" name="ReadSelf.result" outgoing="_AIzIRIVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIEIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIEYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AIzIEoVqEeKQivIQgUOGDQ" name="Fork(ReadSelf.result)" outgoing="_AIzIRYVqEeKQivIQgUOGDQ _AIzIRoVqEeKQivIQgUOGDQ" incoming="_AIzIRIVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIzIE4VqEeKQivIQgUOGDQ" name="Initialization" incoming="_AIzITIVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIzIFIVqEeKQivIQgUOGDQ" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIzIFYVqEeKQivIQgUOGDQ" name="Value(true)">
                  <result xmi:id="_AIzIFoVqEeKQivIQgUOGDQ" name="Value(true).result" outgoing="_AIzIJIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIF4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIGIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_AIzIGYVqEeKQivIQgUOGDQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AIzIGoVqEeKQivIQgUOGDQ" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_AIu2hIVqEeKQivIQgUOGDQ" isReplaceAll="true">
                  <object xmi:id="_AIzIG4VqEeKQivIQgUOGDQ" name="Write(TestRunner$initializationFlag$1).object" incoming="_AIzIRYVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIHIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIHYVqEeKQivIQgUOGDQ" value="1"/>
                  </object>
                  <result xmi:id="_AIzIHoVqEeKQivIQgUOGDQ" name="Write(TestRunner$initializationFlag$1).result" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIH4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIIIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:id="_AIzIIYVqEeKQivIQgUOGDQ" name="Write(TestRunner$initializationFlag$1).value" incoming="_AIzIJIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIIoVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzII4VqEeKQivIQgUOGDQ" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIJIVqEeKQivIQgUOGDQ" source="_AIzIFoVqEeKQivIQgUOGDQ" target="_AIzIIYVqEeKQivIQgUOGDQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AIzIJYVqEeKQivIQgUOGDQ" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_AIu2hIVqEeKQivIQgUOGDQ">
              <object xmi:id="_AIzIJoVqEeKQivIQgUOGDQ" name="Read(TestRunner$initializationFlag$1).object" incoming="_AIzIRoVqEeKQivIQgUOGDQ" type="_AIu2g4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIJ4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIKIVqEeKQivIQgUOGDQ" value="1"/>
              </object>
              <result xmi:id="_AIzIKYVqEeKQivIQgUOGDQ" name="Read(TestRunner$initializationFlag$1).result" outgoing="_AIzIR4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIKoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIK4VqEeKQivIQgUOGDQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIzILIVqEeKQivIQgUOGDQ" name="Call(ListSize)">
              <argument xmi:id="_AIzILYVqEeKQivIQgUOGDQ" name="Call(ListSize).argument(list)" incoming="_AIzIR4VqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzILoVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIL4VqEeKQivIQgUOGDQ" value="*"/>
              </argument>
              <result xmi:id="_AIzIMIVqEeKQivIQgUOGDQ" name="Call(ListSize).result(result)" outgoing="_AIzISIVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIMYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIMoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIzIM4VqEeKQivIQgUOGDQ" name="Value(0)">
              <result xmi:id="_AIzINIVqEeKQivIQgUOGDQ" name="Value(0).result" outgoing="_AIzISYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzINYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzINoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_AIzIN4VqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AIzIOIVqEeKQivIQgUOGDQ" name="Test(Size==0)">
              <first xmi:id="_AIzIOYVqEeKQivIQgUOGDQ" name="Test(Size==0).first" incoming="_AIzISIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIOoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIO4VqEeKQivIQgUOGDQ" value="1"/>
              </first>
              <result xmi:id="_AIzIPIVqEeKQivIQgUOGDQ" name="Test(Size==0).result" outgoing="_AIzIS4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIPYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIPoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <second xmi:id="_AIzIP4VqEeKQivIQgUOGDQ" name="Test(Size==0).second" incoming="_AIzISYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIQIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIQYVqEeKQivIQgUOGDQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AIzIQoVqEeKQivIQgUOGDQ" name="InitialNode" outgoing="_AIzISoVqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AIzIQ4VqEeKQivIQgUOGDQ" name="Decision(Test(TestRunner$initializationFlag$1))" outgoing="_AIzITIVqEeKQivIQgUOGDQ" incoming="_AIzISoVqEeKQivIQgUOGDQ _AIzIS4VqEeKQivIQgUOGDQ" decisionInputFlow="_AIzIS4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIRIVqEeKQivIQgUOGDQ" source="_AIzID4VqEeKQivIQgUOGDQ" target="_AIzIEoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIRYVqEeKQivIQgUOGDQ" source="_AIzIEoVqEeKQivIQgUOGDQ" target="_AIzIG4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIRoVqEeKQivIQgUOGDQ" source="_AIzIEoVqEeKQivIQgUOGDQ" target="_AIzIJoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIR4VqEeKQivIQgUOGDQ" source="_AIzIKYVqEeKQivIQgUOGDQ" target="_AIzILYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzISIVqEeKQivIQgUOGDQ" source="_AIzIMIVqEeKQivIQgUOGDQ" target="_AIzIOYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzISYVqEeKQivIQgUOGDQ" source="_AIzINIVqEeKQivIQgUOGDQ" target="_AIzIP4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIzISoVqEeKQivIQgUOGDQ" source="_AIzIQoVqEeKQivIQgUOGDQ" target="_AIzIQ4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzIS4VqEeKQivIQgUOGDQ" source="_AIzIPIVqEeKQivIQgUOGDQ" target="_AIzIQ4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AIzITIVqEeKQivIQgUOGDQ" source="_AIzIQ4VqEeKQivIQgUOGDQ" target="_AIzIE4VqEeKQivIQgUOGDQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AIzITYVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_AIzIToVqEeKQivIQgUOGDQ" name="TestRunner$initialization$1" visibility="protected" method="_AIzIDIVqEeKQivIQgUOGDQ"/>
        <ownedOperation xmi:id="_AIzIT4VqEeKQivIQgUOGDQ" name="test" visibility="private" method="_AIxS6oVqEeKQivIQgUOGDQ">
          <ownedParameter xmi:id="_AIzIUIVqEeKQivIQgUOGDQ" name="test" visibility="package" type="_AIoI1oVqEeKQivIQgUOGDQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIUYVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIUoVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AIzIU4VqEeKQivIQgUOGDQ" name="TestRunner" visibility="package" method="_AIyhJ4VqEeKQivIQgUOGDQ">
          <ownedParameter xmi:id="_AIzIVIVqEeKQivIQgUOGDQ" name="" visibility="package" type="_AIu2g4VqEeKQivIQgUOGDQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzIVYVqEeKQivIQgUOGDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzIVoVqEeKQivIQgUOGDQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AIzvAIVqEeKQivIQgUOGDQ" name="destroy" visibility="package" method="_AIzICoVqEeKQivIQgUOGDQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_AIzvAYVqEeKQivIQgUOGDQ" name="Start"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_AIzvAoVqEeKQivIQgUOGDQ" name="Continue"/>
        <ownedReception xmi:id="_AIzvA4VqEeKQivIQgUOGDQ" name="Start" signal="_AIzvAYVqEeKQivIQgUOGDQ"/>
        <ownedReception xmi:id="_AIzvBIVqEeKQivIQgUOGDQ" name="Continue" signal="_AIzvAoVqEeKQivIQgUOGDQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvBYVqEeKQivIQgUOGDQ" name="Event(SignalNewArrival)" signal="_AIoI0IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvBoVqEeKQivIQgUOGDQ" name="Event(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvB4VqEeKQivIQgUOGDQ" name="Event(SignalNewArrival)" signal="_AIoI0IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvCIVqEeKQivIQgUOGDQ" name="Event(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvCYVqEeKQivIQgUOGDQ" name="Event(SignalNewArrival)" signal="_AIoI0IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvCoVqEeKQivIQgUOGDQ" name="Event(SignalNewArrival)" signal="_AIoI0IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvC4VqEeKQivIQgUOGDQ" name="Event(SignalNewArrival)" signal="_AIoI0IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvDIVqEeKQivIQgUOGDQ" name="Event(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvDYVqEeKQivIQgUOGDQ" name="Event(SignalNewArrival)" signal="_AIoI0IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvDoVqEeKQivIQgUOGDQ" name="Event(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvD4VqEeKQivIQgUOGDQ" name="Event(SignalNewArrival)" signal="_AIoI0IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvEIVqEeKQivIQgUOGDQ" name="Event(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvEYVqEeKQivIQgUOGDQ" name="Event(SignalTermination)" signal="_AIoI1IVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvEoVqEeKQivIQgUOGDQ" name="Event(Start)" signal="_AIzvAYVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_AIzvE4VqEeKQivIQgUOGDQ" name="Event(Continue)" signal="_AIzvAoVqEeKQivIQgUOGDQ"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_AIzvFIVqEeKQivIQgUOGDQ" name="AssertTrue" group="_AIzvKYVqEeKQivIQgUOGDQ" node="_AIzvJYVqEeKQivIQgUOGDQ _AIzvJoVqEeKQivIQgUOGDQ _AIzvJ4VqEeKQivIQgUOGDQ _AIzvKIVqEeKQivIQgUOGDQ _AIzvKYVqEeKQivIQgUOGDQ">
      <elementImport xmi:id="_AIzvFYVqEeKQivIQgUOGDQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_AIzvFoVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AIzvF4VqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AIzvGIVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AIzvGYVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AIzvGoVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_AIzvG4VqEeKQivIQgUOGDQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvHIVqEeKQivIQgUOGDQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvHYVqEeKQivIQgUOGDQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_AIzvHoVqEeKQivIQgUOGDQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvH4VqEeKQivIQgUOGDQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvIIVqEeKQivIQgUOGDQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzvIYVqEeKQivIQgUOGDQ" source="_AIzvJYVqEeKQivIQgUOGDQ" target="_AIzvJoVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzvIoVqEeKQivIQgUOGDQ" source="_AIzvJ4VqEeKQivIQgUOGDQ" target="_AIzvKIVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzvI4VqEeKQivIQgUOGDQ" source="_AIzvKIVqEeKQivIQgUOGDQ" target="_AIzvOoVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzvJIVqEeKQivIQgUOGDQ" source="_AIzvJoVqEeKQivIQgUOGDQ" target="_AIzvXoVqEeKQivIQgUOGDQ"/>
      <structuredNode xmi:id="_AIzvKYVqEeKQivIQgUOGDQ" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_AIzvKoVqEeKQivIQgUOGDQ" name="IfStatement@273ccb4a">
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIzvK4VqEeKQivIQgUOGDQ" name="Value(true)">
            <result xmi:id="_AIzvLIVqEeKQivIQgUOGDQ" name="Value(true).result" outgoing="_AI0WH4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvLYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvLoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_AIzvL4VqEeKQivIQgUOGDQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_AIzvMIVqEeKQivIQgUOGDQ" name="Test(==)">
            <first xmi:id="_AIzvMYVqEeKQivIQgUOGDQ" name="Test(==).first" incoming="_AI0WF4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvMoVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvM4VqEeKQivIQgUOGDQ" value="1"/>
            </first>
            <result xmi:id="_AIzvNIVqEeKQivIQgUOGDQ" name="Test(==).result" outgoing="_AI0WGoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvNYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvNoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <second xmi:id="_AIzvN4VqEeKQivIQgUOGDQ" name="Test(==).second" incoming="_AI0WH4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvOIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvOYVqEeKQivIQgUOGDQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AIzvOoVqEeKQivIQgUOGDQ" name="Fork(Fork(condition))" outgoing="_AI0WF4VqEeKQivIQgUOGDQ _AI0WGIVqEeKQivIQgUOGDQ" incoming="_AIzvI4VqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIzvO4VqEeKQivIQgUOGDQ" name="Call(NotEmpty)">
            <argument xmi:id="_AIzvPIVqEeKQivIQgUOGDQ" name="Call(NotEmpty).argument(seq)" incoming="_AI0WGIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvPYVqEeKQivIQgUOGDQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvPoVqEeKQivIQgUOGDQ" value="*"/>
            </argument>
            <result xmi:id="_AIzvP4VqEeKQivIQgUOGDQ" name="Call(NotEmpty).result()" outgoing="_AI0WGYVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvQIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvQYVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AIzvQoVqEeKQivIQgUOGDQ" name="Fork(Call(NotEmpty).result())" outgoing="_AI0WG4VqEeKQivIQgUOGDQ _AI0WHIVqEeKQivIQgUOGDQ" incoming="_AI0WGYVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:MergeNode" xmi:id="_AIzvQ4VqEeKQivIQgUOGDQ" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_AI0WIIVqEeKQivIQgUOGDQ" incoming="_AI0WGoVqEeKQivIQgUOGDQ _AI0WHYVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_AIzvRIVqEeKQivIQgUOGDQ" name="Decision(Call(NotEmpty).result())" outgoing="_AI0WHYVqEeKQivIQgUOGDQ" incoming="_AI0WG4VqEeKQivIQgUOGDQ _AI0WHIVqEeKQivIQgUOGDQ" decisionInputFlow="_AI0WHIVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIzvRYVqEeKQivIQgUOGDQ" name="Call(Not)">
            <argument xmi:id="_AIzvRoVqEeKQivIQgUOGDQ" name="Call(Not).argument(x)" incoming="_AI0WIIVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvR4VqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvSIVqEeKQivIQgUOGDQ" value="1"/>
            </argument>
            <result xmi:id="_AIzvSYVqEeKQivIQgUOGDQ" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvSoVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvS4VqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIzvTIVqEeKQivIQgUOGDQ" name="ExpressionStatement@55da1787">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIzvTYVqEeKQivIQgUOGDQ" name="Call(WriteLine)" incoming="_AI0WEYVqEeKQivIQgUOGDQ">
              <argument xmi:id="_AIzvToVqEeKQivIQgUOGDQ" name="Call(WriteLine).argument(value)" incoming="_AI0WEIVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvT4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvUIVqEeKQivIQgUOGDQ" value="1"/>
              </argument>
              <result xmi:id="_AIzvUYVqEeKQivIQgUOGDQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvUoVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvU4VqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AIzvVIVqEeKQivIQgUOGDQ" name="Tuple@552c1f55" outgoing="_AI0WEYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AIzvVYVqEeKQivIQgUOGDQ" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_AIzvVoVqEeKQivIQgUOGDQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_AIzvZIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvV4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvWIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AIzvWYVqEeKQivIQgUOGDQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AIzvWoVqEeKQivIQgUOGDQ" name="Call(Concat)">
                <argument xmi:id="_AIzvW4VqEeKQivIQgUOGDQ" name="Call(Concat).argument(x)" incoming="_AIzvZIVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvXIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvXYVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AIzvXoVqEeKQivIQgUOGDQ" name="Call(Concat).argument(y)" incoming="_AIzvJIVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvX4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvYIVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <result xmi:id="_AIzvYYVqEeKQivIQgUOGDQ" name="Call(Concat).result(result)" outgoing="_AI0WEIVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AIzvYoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AIzvY4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AIzvZIVqEeKQivIQgUOGDQ" source="_AIzvVoVqEeKQivIQgUOGDQ" target="_AIzvW4VqEeKQivIQgUOGDQ"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WEIVqEeKQivIQgUOGDQ" source="_AIzvYYVqEeKQivIQgUOGDQ" target="_AIzvToVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AI0WEYVqEeKQivIQgUOGDQ" source="_AIzvVIVqEeKQivIQgUOGDQ" target="_AIzvTYVqEeKQivIQgUOGDQ"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI0WEoVqEeKQivIQgUOGDQ" name="Value(true)">
            <result xmi:id="_AI0WE4VqEeKQivIQgUOGDQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WFIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WFYVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_AI0WFoVqEeKQivIQgUOGDQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WF4VqEeKQivIQgUOGDQ" source="_AIzvOoVqEeKQivIQgUOGDQ" target="_AIzvMYVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WGIVqEeKQivIQgUOGDQ" source="_AIzvOoVqEeKQivIQgUOGDQ" target="_AIzvPIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WGYVqEeKQivIQgUOGDQ" source="_AIzvP4VqEeKQivIQgUOGDQ" target="_AIzvQoVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WGoVqEeKQivIQgUOGDQ" source="_AIzvNIVqEeKQivIQgUOGDQ" target="_AIzvQ4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WG4VqEeKQivIQgUOGDQ" source="_AIzvQoVqEeKQivIQgUOGDQ" target="_AIzvRIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WHIVqEeKQivIQgUOGDQ" source="_AIzvQoVqEeKQivIQgUOGDQ" target="_AIzvRIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WHYVqEeKQivIQgUOGDQ" source="_AIzvRIVqEeKQivIQgUOGDQ" target="_AIzvQ4VqEeKQivIQgUOGDQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI0WHoVqEeKQivIQgUOGDQ" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WH4VqEeKQivIQgUOGDQ" source="_AIzvLIVqEeKQivIQgUOGDQ" target="_AIzvN4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WIIVqEeKQivIQgUOGDQ" source="_AIzvQ4VqEeKQivIQgUOGDQ" target="_AIzvRoVqEeKQivIQgUOGDQ"/>
          <clause xmi:id="_AI0WIYVqEeKQivIQgUOGDQ" body="_AIzvTIVqEeKQivIQgUOGDQ" decider="_AIzvSYVqEeKQivIQgUOGDQ" successorClause="_AI0WIoVqEeKQivIQgUOGDQ" test="_AIzvK4VqEeKQivIQgUOGDQ _AIzvMIVqEeKQivIQgUOGDQ _AIzvO4VqEeKQivIQgUOGDQ _AIzvRYVqEeKQivIQgUOGDQ"/>
          <clause xmi:id="_AI0WIoVqEeKQivIQgUOGDQ" decider="_AI0WE4VqEeKQivIQgUOGDQ" predecessorClause="_AI0WIYVqEeKQivIQgUOGDQ" test="_AI0WEoVqEeKQivIQgUOGDQ"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AIzvJYVqEeKQivIQgUOGDQ" name="Input(label)" outgoing="_AIzvIYVqEeKQivIQgUOGDQ" parameter="_AIzvG4VqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AIzvJoVqEeKQivIQgUOGDQ" name="Fork(label)" outgoing="_AIzvJIVqEeKQivIQgUOGDQ" incoming="_AIzvIYVqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AIzvJ4VqEeKQivIQgUOGDQ" name="Input(condition)" outgoing="_AIzvIoVqEeKQivIQgUOGDQ" parameter="_AIzvHoVqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AIzvKIVqEeKQivIQgUOGDQ" name="Fork(condition)" outgoing="_AIzvI4VqEeKQivIQgUOGDQ" incoming="_AIzvIoVqEeKQivIQgUOGDQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_AI0WI4VqEeKQivIQgUOGDQ" name="AssertEqual" group="_AI0WQYVqEeKQivIQgUOGDQ" node="_AI0WO4VqEeKQivIQgUOGDQ _AI0WPIVqEeKQivIQgUOGDQ _AI0WPYVqEeKQivIQgUOGDQ _AI0WPoVqEeKQivIQgUOGDQ _AI0WP4VqEeKQivIQgUOGDQ _AI0WQIVqEeKQivIQgUOGDQ _AI0WQYVqEeKQivIQgUOGDQ">
      <packageImport xmi:id="_AI0WJIVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AI0WJYVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AI0WJoVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AI0WJ4VqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AI0WKIVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_AI0WKYVqEeKQivIQgUOGDQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WKoVqEeKQivIQgUOGDQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WK4VqEeKQivIQgUOGDQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_AI0WLIVqEeKQivIQgUOGDQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WLYVqEeKQivIQgUOGDQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WLoVqEeKQivIQgUOGDQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_AI0WL4VqEeKQivIQgUOGDQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WMIVqEeKQivIQgUOGDQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WMYVqEeKQivIQgUOGDQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WMoVqEeKQivIQgUOGDQ" source="_AI0WO4VqEeKQivIQgUOGDQ" target="_AI0WPIVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WM4VqEeKQivIQgUOGDQ" source="_AI0WPYVqEeKQivIQgUOGDQ" target="_AI0WPoVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WNIVqEeKQivIQgUOGDQ" source="_AI0WP4VqEeKQivIQgUOGDQ" target="_AI0WQIVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WNYVqEeKQivIQgUOGDQ" source="_AI0WPoVqEeKQivIQgUOGDQ" target="_AI0WTYVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WNoVqEeKQivIQgUOGDQ" source="_AI0WQIVqEeKQivIQgUOGDQ" target="_AI0WVYVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WN4VqEeKQivIQgUOGDQ" source="_AI0WPIVqEeKQivIQgUOGDQ" target="_AI09KoVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WOIVqEeKQivIQgUOGDQ" source="_AI0WQIVqEeKQivIQgUOGDQ" target="_AI09S4VqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WOYVqEeKQivIQgUOGDQ" source="_AI0WQIVqEeKQivIQgUOGDQ" target="_AI09aYVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI0WOoVqEeKQivIQgUOGDQ" source="_AI0WQIVqEeKQivIQgUOGDQ" target="_AI09jYVqEeKQivIQgUOGDQ"/>
      <structuredNode xmi:id="_AI0WQYVqEeKQivIQgUOGDQ" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_AI0WQoVqEeKQivIQgUOGDQ" name="IfStatement@3d3a7038">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_AI0WQ4VqEeKQivIQgUOGDQ" name="Test(==)" incoming="_AI1kXYVqEeKQivIQgUOGDQ">
            <first xmi:id="_AI0WRIVqEeKQivIQgUOGDQ" name="Test(==).first" incoming="_AI1kVIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WRYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WRoVqEeKQivIQgUOGDQ" value="1"/>
            </first>
            <result xmi:id="_AI0WR4VqEeKQivIQgUOGDQ" name="Test(==).result" outgoing="_AI1kZ4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WSIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WSYVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <second xmi:id="_AI0WSoVqEeKQivIQgUOGDQ" name="Test(==).second" incoming="_AI1kVoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WS4VqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WTIVqEeKQivIQgUOGDQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AI0WTYVqEeKQivIQgUOGDQ" name="Fork(Fork(value1))" outgoing="_AI1kVIVqEeKQivIQgUOGDQ _AI1kVYVqEeKQivIQgUOGDQ" incoming="_AI0WNYVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI0WToVqEeKQivIQgUOGDQ" name="Call(NotEmpty)">
            <argument xmi:id="_AI0WT4VqEeKQivIQgUOGDQ" name="Call(NotEmpty).argument(seq)" incoming="_AI1kVYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WUIVqEeKQivIQgUOGDQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WUYVqEeKQivIQgUOGDQ" value="*"/>
            </argument>
            <result xmi:id="_AI0WUoVqEeKQivIQgUOGDQ" name="Call(NotEmpty).result()" outgoing="_AI1kWIVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WU4VqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WVIVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AI0WVYVqEeKQivIQgUOGDQ" name="Fork(Fork(value2))" outgoing="_AI1kVoVqEeKQivIQgUOGDQ _AI1kV4VqEeKQivIQgUOGDQ" incoming="_AI0WNoVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI0WVoVqEeKQivIQgUOGDQ" name="Call(NotEmpty)">
            <argument xmi:id="_AI0WV4VqEeKQivIQgUOGDQ" name="Call(NotEmpty).argument(seq)" incoming="_AI1kV4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WWIVqEeKQivIQgUOGDQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WWYVqEeKQivIQgUOGDQ" value="*"/>
            </argument>
            <result xmi:id="_AI0WWoVqEeKQivIQgUOGDQ" name="Call(NotEmpty).result()" outgoing="_AI1kWYVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WW4VqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WXIVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_AI0WXYVqEeKQivIQgUOGDQ" name="Initial(Test(==))" outgoing="_AI1kYYVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_AI0WXoVqEeKQivIQgUOGDQ" name="Fork(Call(NotEmpty).result())" outgoing="_AI1kWoVqEeKQivIQgUOGDQ _AI1kYoVqEeKQivIQgUOGDQ" incoming="_AI1kWIVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_AI0WX4VqEeKQivIQgUOGDQ" name="Fork(Call(NotEmpty).result())" outgoing="_AI1kW4VqEeKQivIQgUOGDQ _AI1kXIVqEeKQivIQgUOGDQ" incoming="_AI1kWYVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI0WYIVqEeKQivIQgUOGDQ" name="Call(Not)" incoming="_AI1kX4VqEeKQivIQgUOGDQ">
            <argument xmi:id="_AI0WYYVqEeKQivIQgUOGDQ" name="Call(Not).argument(x)" incoming="_AI1kWoVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WYoVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WY4VqEeKQivIQgUOGDQ" value="1"/>
            </argument>
            <result xmi:id="_AI0WZIVqEeKQivIQgUOGDQ" name="Call(Not).result(result)" outgoing="_AI1kaIVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WZYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WZoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI0WZ4VqEeKQivIQgUOGDQ" name="Call(Not)" incoming="_AI1kZYVqEeKQivIQgUOGDQ">
            <argument xmi:id="_AI0WaIVqEeKQivIQgUOGDQ" name="Call(Not).argument(x)" incoming="_AI1kW4VqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WaYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WaoVqEeKQivIQgUOGDQ" value="1"/>
            </argument>
            <result xmi:id="_AI0Wa4VqEeKQivIQgUOGDQ" name="Call(Not).result(result)" outgoing="_AI1kaYVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WbIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WbYVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_AI0WboVqEeKQivIQgUOGDQ" name="Decision(Call(NotEmpty).result())" outgoing="_AI1kXYVqEeKQivIQgUOGDQ _AI1kX4VqEeKQivIQgUOGDQ" incoming="_AI1kXIVqEeKQivIQgUOGDQ _AI1kY4VqEeKQivIQgUOGDQ" decisionInputFlow="_AI1kXIVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_AI0Wb4VqEeKQivIQgUOGDQ" name="Decision(Call(NotEmpty).result())" outgoing="_AI1kY4VqEeKQivIQgUOGDQ _AI1kZYVqEeKQivIQgUOGDQ" incoming="_AI1kYYVqEeKQivIQgUOGDQ _AI1kYoVqEeKQivIQgUOGDQ" decisionInputFlow="_AI1kYoVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:MergeNode" xmi:id="_AI0WcIVqEeKQivIQgUOGDQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_AI1kaoVqEeKQivIQgUOGDQ" incoming="_AI1kZ4VqEeKQivIQgUOGDQ _AI1kaIVqEeKQivIQgUOGDQ _AI1kaYVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI0WcYVqEeKQivIQgUOGDQ" name="Call(Not)">
            <argument xmi:id="_AI0WcoVqEeKQivIQgUOGDQ" name="Call(Not).argument(x)" incoming="_AI1kaoVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0Wc4VqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WdIVqEeKQivIQgUOGDQ" value="1"/>
            </argument>
            <result xmi:id="_AI0WdYVqEeKQivIQgUOGDQ" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0WdoVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0Wd4VqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI0WeIVqEeKQivIQgUOGDQ" name="ExpressionStatement@68caecad" outgoing="_AI1ka4VqEeKQivIQgUOGDQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI0WeYVqEeKQivIQgUOGDQ" name="Call(Write)" incoming="_AI09Q4VqEeKQivIQgUOGDQ" behavior="_AI2LaYVqEeKQivIQgUOGDQ">
              <argument xmi:id="_AI0WeoVqEeKQivIQgUOGDQ" name="Call(Write).argument(value)" incoming="_AI09QoVqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI0We4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI0WfIVqEeKQivIQgUOGDQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI09IIVqEeKQivIQgUOGDQ" name="Tuple@40ed5b3d" outgoing="_AI09Q4VqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI09IYVqEeKQivIQgUOGDQ" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_AI09IoVqEeKQivIQgUOGDQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_AI09P4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09I4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09JIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AI09JYVqEeKQivIQgUOGDQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI09JoVqEeKQivIQgUOGDQ" name="Call(Concat)">
                <argument xmi:id="_AI09J4VqEeKQivIQgUOGDQ" name="Call(Concat).argument(x)" incoming="_AI09P4VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09KIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09KYVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AI09KoVqEeKQivIQgUOGDQ" name="Call(Concat).argument(y)" incoming="_AI0WN4VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09K4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09LIVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <result xmi:id="_AI09LYVqEeKQivIQgUOGDQ" name="Call(Concat).result(result)" outgoing="_AI09QIVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09LoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09L4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI09MIVqEeKQivIQgUOGDQ" name="Value(&quot;==&quot;)">
                <result xmi:id="_AI09MYVqEeKQivIQgUOGDQ" name="Value(&quot;==&quot;).result" outgoing="_AI09QYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09MoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09M4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AI09NIVqEeKQivIQgUOGDQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI09NYVqEeKQivIQgUOGDQ" name="Call(Concat)">
                <argument xmi:id="_AI09NoVqEeKQivIQgUOGDQ" name="Call(Concat).argument(x)" incoming="_AI09QIVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09N4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09OIVqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <argument xmi:id="_AI09OYVqEeKQivIQgUOGDQ" name="Call(Concat).argument(y)" incoming="_AI09QYVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09OoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09O4VqEeKQivIQgUOGDQ" value="1"/>
                </argument>
                <result xmi:id="_AI09PIVqEeKQivIQgUOGDQ" name="Call(Concat).result(result)" outgoing="_AI09QoVqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09PYVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09PoVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09P4VqEeKQivIQgUOGDQ" source="_AI09IoVqEeKQivIQgUOGDQ" target="_AI09J4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09QIVqEeKQivIQgUOGDQ" source="_AI09LYVqEeKQivIQgUOGDQ" target="_AI09NoVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09QYVqEeKQivIQgUOGDQ" source="_AI09MYVqEeKQivIQgUOGDQ" target="_AI09OYVqEeKQivIQgUOGDQ"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09QoVqEeKQivIQgUOGDQ" source="_AI09PIVqEeKQivIQgUOGDQ" target="_AI0WeoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AI09Q4VqEeKQivIQgUOGDQ" source="_AI09IIVqEeKQivIQgUOGDQ" target="_AI0WeYVqEeKQivIQgUOGDQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI09RIVqEeKQivIQgUOGDQ" name="ExpressionStatement@3d76fed7" outgoing="_AI1kbIVqEeKQivIQgUOGDQ" incoming="_AI1ka4VqEeKQivIQgUOGDQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI09RYVqEeKQivIQgUOGDQ" name="Call(Write)" incoming="_AI1kPoVqEeKQivIQgUOGDQ" behavior="_AI2LaYVqEeKQivIQgUOGDQ">
              <argument xmi:id="_AI09RoVqEeKQivIQgUOGDQ" name="Call(Write).argument(value)" incoming="_AI1kPYVqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09R4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09SIVqEeKQivIQgUOGDQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI09SYVqEeKQivIQgUOGDQ" name="Tuple@72186e3e" outgoing="_AI1kPoVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AI09SoVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(String)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_AI09S4VqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(String).object" incoming="_AI0WOIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09TIVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09TYVqEeKQivIQgUOGDQ" value="1"/>
                </object>
                <result xmi:id="_AI09ToVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(String).result" outgoing="_AI1kNoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09T4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09UIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI09UYVqEeKQivIQgUOGDQ" name="ConditionalTestExpression@6fc0d094.operand2" incoming="_AI1kN4VqEeKQivIQgUOGDQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI09UoVqEeKQivIQgUOGDQ" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_AI09U4VqEeKQivIQgUOGDQ" name="Value(&quot;&quot;&quot;).result" outgoing="_AI09h4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09VIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09VYVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AI09VoVqEeKQivIQgUOGDQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_AI09V4VqEeKQivIQgUOGDQ" name="CastExpression@147ab325" mode="parallel" outputElement="_AI09aoVqEeKQivIQgUOGDQ" inputElement="_AI09aYVqEeKQivIQgUOGDQ">
                  <node xmi:type="uml:MergeNode" xmi:id="_AI09WIVqEeKQivIQgUOGDQ" name="Merge(CastExpression@147ab325.operand)" outgoing="_AI09aIVqEeKQivIQgUOGDQ" incoming="_AI09ZYVqEeKQivIQgUOGDQ"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AI09WYVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(String)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <object xmi:id="_AI09WoVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(String).object" incoming="_AI09YoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09W4VqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09XIVqEeKQivIQgUOGDQ" value="1"/>
                    </object>
                    <result xmi:id="_AI09XYVqEeKQivIQgUOGDQ" name="ReadIsClassifiedObject(String).result" outgoing="_AI09ZIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09XoVqEeKQivIQgUOGDQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09X4VqEeKQivIQgUOGDQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_AI09YIVqEeKQivIQgUOGDQ" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_AI09YoVqEeKQivIQgUOGDQ _AI09Y4VqEeKQivIQgUOGDQ" incoming="_AI09Z4VqEeKQivIQgUOGDQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_AI09YYVqEeKQivIQgUOGDQ" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_AI09ZYVqEeKQivIQgUOGDQ" incoming="_AI09Y4VqEeKQivIQgUOGDQ _AI09ZIVqEeKQivIQgUOGDQ" decisionInputFlow="_AI09ZIVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09YoVqEeKQivIQgUOGDQ" source="_AI09YIVqEeKQivIQgUOGDQ" target="_AI09WoVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09Y4VqEeKQivIQgUOGDQ" source="_AI09YIVqEeKQivIQgUOGDQ" target="_AI09YYVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09ZIVqEeKQivIQgUOGDQ" source="_AI09XYVqEeKQivIQgUOGDQ" target="_AI09YYVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09ZYVqEeKQivIQgUOGDQ" source="_AI09YYVqEeKQivIQgUOGDQ" target="_AI09WIVqEeKQivIQgUOGDQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI09ZoVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09Z4VqEeKQivIQgUOGDQ" source="_AI09aYVqEeKQivIQgUOGDQ" target="_AI09YIVqEeKQivIQgUOGDQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09aIVqEeKQivIQgUOGDQ" source="_AI09WIVqEeKQivIQgUOGDQ" target="_AI09aoVqEeKQivIQgUOGDQ"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_AI09aYVqEeKQivIQgUOGDQ" name="CastExpression@147ab325.inputElement" outgoing="_AI09Z4VqEeKQivIQgUOGDQ" incoming="_AI0WOYVqEeKQivIQgUOGDQ" regionAsInput="_AI09V4VqEeKQivIQgUOGDQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_AI09aoVqEeKQivIQgUOGDQ" name="CastExpression@147ab325.outputElement" outgoing="_AI09iIVqEeKQivIQgUOGDQ" incoming="_AI09aIVqEeKQivIQgUOGDQ" regionAsOutput="_AI09V4VqEeKQivIQgUOGDQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI09a4VqEeKQivIQgUOGDQ" name="Call(Concat)">
                  <argument xmi:id="_AI09bIVqEeKQivIQgUOGDQ" name="Call(Concat).argument(x)" incoming="_AI09h4VqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09bYVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09boVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <argument xmi:id="_AI09b4VqEeKQivIQgUOGDQ" name="Call(Concat).argument(y)" incoming="_AI09iIVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09cIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09cYVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AI09coVqEeKQivIQgUOGDQ" name="Call(Concat).result(result)" outgoing="_AI09iYVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09c4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09dIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI09dYVqEeKQivIQgUOGDQ" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_AI09doVqEeKQivIQgUOGDQ" name="Value(&quot;&quot;&quot;).result" outgoing="_AI09ioVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09d4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09eIVqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AI09eYVqEeKQivIQgUOGDQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI09eoVqEeKQivIQgUOGDQ" name="Call(Concat)">
                  <argument xmi:id="_AI09e4VqEeKQivIQgUOGDQ" name="Call(Concat).argument(x)" incoming="_AI09iYVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09fIVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09fYVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <argument xmi:id="_AI09foVqEeKQivIQgUOGDQ" name="Call(Concat).argument(y)" incoming="_AI09ioVqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09f4VqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09gIVqEeKQivIQgUOGDQ" value="1"/>
                  </argument>
                  <result xmi:id="_AI09gYVqEeKQivIQgUOGDQ" name="Call(Concat).result(result)" outgoing="_AI09i4VqEeKQivIQgUOGDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09goVqEeKQivIQgUOGDQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09g4VqEeKQivIQgUOGDQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <structuredNodeOutput xmi:id="_AI09hIVqEeKQivIQgUOGDQ" name="ConditionalTestExpression@6fc0d094.operand2.result" outgoing="_AI1kO4VqEeKQivIQgUOGDQ" incoming="_AI09i4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09hYVqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI09hoVqEeKQivIQgUOGDQ" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09h4VqEeKQivIQgUOGDQ" source="_AI09U4VqEeKQivIQgUOGDQ" target="_AI09bIVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09iIVqEeKQivIQgUOGDQ" source="_AI09aoVqEeKQivIQgUOGDQ" target="_AI09b4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09iYVqEeKQivIQgUOGDQ" source="_AI09coVqEeKQivIQgUOGDQ" target="_AI09e4VqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09ioVqEeKQivIQgUOGDQ" source="_AI09doVqEeKQivIQgUOGDQ" target="_AI09foVqEeKQivIQgUOGDQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AI09i4VqEeKQivIQgUOGDQ" source="_AI09gYVqEeKQivIQgUOGDQ" target="_AI09hIVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI09jIVqEeKQivIQgUOGDQ" name="ConditionalTestExpression@6fc0d094.operand3" incoming="_AI1kOYVqEeKQivIQgUOGDQ">
                <node xmi:type="uml:MergeNode" xmi:id="_AI09jYVqEeKQivIQgUOGDQ" name="Merge(Fork(value2))" outgoing="_AI1kMYVqEeKQivIQgUOGDQ" incoming="_AI0WOoVqEeKQivIQgUOGDQ"/>
                <structuredNodeOutput xmi:id="_AI09joVqEeKQivIQgUOGDQ" name="ConditionalTestExpression@6fc0d094.operand3.result" outgoing="_AI1kPIVqEeKQivIQgUOGDQ" incoming="_AI1kMYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI09j4VqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kMIVqEeKQivIQgUOGDQ" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kMYVqEeKQivIQgUOGDQ" source="_AI09jYVqEeKQivIQgUOGDQ" target="_AI09joVqEeKQivIQgUOGDQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AI1kMoVqEeKQivIQgUOGDQ" name="Initial(ConditionalTestExpression@6fc0d094)" outgoing="_AI1kNYVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_AI1kM4VqEeKQivIQgUOGDQ" name="Decision(ConditionalTestExpression@6fc0d094)" outgoing="_AI1kN4VqEeKQivIQgUOGDQ _AI1kOYVqEeKQivIQgUOGDQ" incoming="_AI1kNYVqEeKQivIQgUOGDQ _AI1kNoVqEeKQivIQgUOGDQ" decisionInputFlow="_AI1kNoVqEeKQivIQgUOGDQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_AI1kNIVqEeKQivIQgUOGDQ" name="Merge(ConditionalTestExpression@6fc0d094.result)" outgoing="_AI1kPYVqEeKQivIQgUOGDQ" incoming="_AI1kO4VqEeKQivIQgUOGDQ _AI1kPIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kNYVqEeKQivIQgUOGDQ" source="_AI1kMoVqEeKQivIQgUOGDQ" target="_AI1kM4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kNoVqEeKQivIQgUOGDQ" source="_AI09ToVqEeKQivIQgUOGDQ" target="_AI1kM4VqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kN4VqEeKQivIQgUOGDQ" source="_AI1kM4VqEeKQivIQgUOGDQ" target="_AI09UYVqEeKQivIQgUOGDQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI1kOIVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kOYVqEeKQivIQgUOGDQ" source="_AI1kM4VqEeKQivIQgUOGDQ" target="_AI09jIVqEeKQivIQgUOGDQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI1kOoVqEeKQivIQgUOGDQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kO4VqEeKQivIQgUOGDQ" source="_AI09hIVqEeKQivIQgUOGDQ" target="_AI1kNIVqEeKQivIQgUOGDQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kPIVqEeKQivIQgUOGDQ" source="_AI09joVqEeKQivIQgUOGDQ" target="_AI1kNIVqEeKQivIQgUOGDQ"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kPYVqEeKQivIQgUOGDQ" source="_AI1kNIVqEeKQivIQgUOGDQ" target="_AI09RoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kPoVqEeKQivIQgUOGDQ" source="_AI09SYVqEeKQivIQgUOGDQ" target="_AI09RYVqEeKQivIQgUOGDQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI1kP4VqEeKQivIQgUOGDQ" name="ExpressionStatement@1dfa28ca" incoming="_AI1kbIVqEeKQivIQgUOGDQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI1kQIVqEeKQivIQgUOGDQ" name="Call(WriteLine)" incoming="_AI1kToVqEeKQivIQgUOGDQ">
              <argument xmi:id="_AI1kQYVqEeKQivIQgUOGDQ" name="Call(WriteLine).argument(value)" incoming="_AI1kTYVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1kQoVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kQ4VqEeKQivIQgUOGDQ" value="1"/>
              </argument>
              <result xmi:id="_AI1kRIVqEeKQivIQgUOGDQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1kRYVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kRoVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI1kR4VqEeKQivIQgUOGDQ" name="Tuple@b9b3649" outgoing="_AI1kToVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI1kSIVqEeKQivIQgUOGDQ" name="Value(&quot;&quot;)">
                <result xmi:id="_AI1kSYVqEeKQivIQgUOGDQ" name="Value(&quot;&quot;).result" outgoing="_AI1kTYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1kSoVqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kS4VqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AI1kTIVqEeKQivIQgUOGDQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kTYVqEeKQivIQgUOGDQ" source="_AI1kSYVqEeKQivIQgUOGDQ" target="_AI1kQYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kToVqEeKQivIQgUOGDQ" source="_AI1kR4VqEeKQivIQgUOGDQ" target="_AI1kQIVqEeKQivIQgUOGDQ"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI1kT4VqEeKQivIQgUOGDQ" name="Value(true)">
            <result xmi:id="_AI1kUIVqEeKQivIQgUOGDQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1kUYVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kUoVqEeKQivIQgUOGDQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_AI1kU4VqEeKQivIQgUOGDQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kVIVqEeKQivIQgUOGDQ" source="_AI0WTYVqEeKQivIQgUOGDQ" target="_AI0WRIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kVYVqEeKQivIQgUOGDQ" source="_AI0WTYVqEeKQivIQgUOGDQ" target="_AI0WT4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kVoVqEeKQivIQgUOGDQ" source="_AI0WVYVqEeKQivIQgUOGDQ" target="_AI0WSoVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kV4VqEeKQivIQgUOGDQ" source="_AI0WVYVqEeKQivIQgUOGDQ" target="_AI0WV4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kWIVqEeKQivIQgUOGDQ" source="_AI0WUoVqEeKQivIQgUOGDQ" target="_AI0WXoVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kWYVqEeKQivIQgUOGDQ" source="_AI0WWoVqEeKQivIQgUOGDQ" target="_AI0WX4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kWoVqEeKQivIQgUOGDQ" source="_AI0WXoVqEeKQivIQgUOGDQ" target="_AI0WYYVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kW4VqEeKQivIQgUOGDQ" source="_AI0WX4VqEeKQivIQgUOGDQ" target="_AI0WaIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kXIVqEeKQivIQgUOGDQ" source="_AI0WX4VqEeKQivIQgUOGDQ" target="_AI0WboVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kXYVqEeKQivIQgUOGDQ" source="_AI0WboVqEeKQivIQgUOGDQ" target="_AI0WQ4VqEeKQivIQgUOGDQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI1kXoVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kX4VqEeKQivIQgUOGDQ" source="_AI0WboVqEeKQivIQgUOGDQ" target="_AI0WYIVqEeKQivIQgUOGDQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI1kYIVqEeKQivIQgUOGDQ" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kYYVqEeKQivIQgUOGDQ" source="_AI0WXYVqEeKQivIQgUOGDQ" target="_AI0Wb4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kYoVqEeKQivIQgUOGDQ" source="_AI0WXoVqEeKQivIQgUOGDQ" target="_AI0Wb4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kY4VqEeKQivIQgUOGDQ" source="_AI0Wb4VqEeKQivIQgUOGDQ" target="_AI0WboVqEeKQivIQgUOGDQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI1kZIVqEeKQivIQgUOGDQ" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kZYVqEeKQivIQgUOGDQ" source="_AI0Wb4VqEeKQivIQgUOGDQ" target="_AI0WZ4VqEeKQivIQgUOGDQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI1kZoVqEeKQivIQgUOGDQ" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kZ4VqEeKQivIQgUOGDQ" source="_AI0WR4VqEeKQivIQgUOGDQ" target="_AI0WcIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kaIVqEeKQivIQgUOGDQ" source="_AI0WZIVqEeKQivIQgUOGDQ" target="_AI0WcIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kaYVqEeKQivIQgUOGDQ" source="_AI0Wa4VqEeKQivIQgUOGDQ" target="_AI0WcIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kaoVqEeKQivIQgUOGDQ" source="_AI0WcIVqEeKQivIQgUOGDQ" target="_AI0WcoVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI1ka4VqEeKQivIQgUOGDQ" source="_AI0WeIVqEeKQivIQgUOGDQ" target="_AI09RIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI1kbIVqEeKQivIQgUOGDQ" source="_AI09RIVqEeKQivIQgUOGDQ" target="_AI1kP4VqEeKQivIQgUOGDQ"/>
          <clause xmi:id="_AI1kbYVqEeKQivIQgUOGDQ" body="_AI0WeIVqEeKQivIQgUOGDQ _AI09RIVqEeKQivIQgUOGDQ _AI1kP4VqEeKQivIQgUOGDQ" decider="_AI0WdYVqEeKQivIQgUOGDQ" successorClause="_AI1kboVqEeKQivIQgUOGDQ" test="_AI0WQ4VqEeKQivIQgUOGDQ _AI0WToVqEeKQivIQgUOGDQ _AI0WVoVqEeKQivIQgUOGDQ _AI0WYIVqEeKQivIQgUOGDQ _AI0WZ4VqEeKQivIQgUOGDQ _AI0WcYVqEeKQivIQgUOGDQ"/>
          <clause xmi:id="_AI1kboVqEeKQivIQgUOGDQ" decider="_AI1kUIVqEeKQivIQgUOGDQ" predecessorClause="_AI1kbYVqEeKQivIQgUOGDQ" test="_AI1kT4VqEeKQivIQgUOGDQ"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AI0WO4VqEeKQivIQgUOGDQ" name="Input(label)" outgoing="_AI0WMoVqEeKQivIQgUOGDQ" parameter="_AI0WKYVqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AI0WPIVqEeKQivIQgUOGDQ" name="Fork(label)" outgoing="_AI0WN4VqEeKQivIQgUOGDQ" incoming="_AI0WMoVqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AI0WPYVqEeKQivIQgUOGDQ" name="Input(value1)" outgoing="_AI0WM4VqEeKQivIQgUOGDQ" parameter="_AI0WLIVqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AI0WPoVqEeKQivIQgUOGDQ" name="Fork(value1)" outgoing="_AI0WNYVqEeKQivIQgUOGDQ" incoming="_AI0WM4VqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AI0WP4VqEeKQivIQgUOGDQ" name="Input(value2)" outgoing="_AI0WNIVqEeKQivIQgUOGDQ" parameter="_AI0WL4VqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AI0WQIVqEeKQivIQgUOGDQ" name="Fork(value2)" outgoing="_AI0WNoVqEeKQivIQgUOGDQ _AI0WOIVqEeKQivIQgUOGDQ _AI0WOYVqEeKQivIQgUOGDQ _AI0WOoVqEeKQivIQgUOGDQ" incoming="_AI0WNIVqEeKQivIQgUOGDQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_AI1kb4VqEeKQivIQgUOGDQ" name="AssertFalse" group="_AI1khIVqEeKQivIQgUOGDQ" node="_AI1kgIVqEeKQivIQgUOGDQ _AI1kgYVqEeKQivIQgUOGDQ _AI1kgoVqEeKQivIQgUOGDQ _AI1kg4VqEeKQivIQgUOGDQ _AI1khIVqEeKQivIQgUOGDQ">
      <elementImport xmi:id="_AI1kcIVqEeKQivIQgUOGDQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_AI1kcYVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AI1kcoVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AI1kc4VqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AI1kdIVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AI1kdYVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_AI1kdoVqEeKQivIQgUOGDQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1kd4VqEeKQivIQgUOGDQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1keIVqEeKQivIQgUOGDQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_AI1keYVqEeKQivIQgUOGDQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1keoVqEeKQivIQgUOGDQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1ke4VqEeKQivIQgUOGDQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kfIVqEeKQivIQgUOGDQ" source="_AI1kgIVqEeKQivIQgUOGDQ" target="_AI1kgYVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kfYVqEeKQivIQgUOGDQ" source="_AI1kgoVqEeKQivIQgUOGDQ" target="_AI1kg4VqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kfoVqEeKQivIQgUOGDQ" source="_AI1kgYVqEeKQivIQgUOGDQ" target="_AI1kl4VqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI1kf4VqEeKQivIQgUOGDQ" source="_AI1kg4VqEeKQivIQgUOGDQ" target="_AI2LUYVqEeKQivIQgUOGDQ"/>
      <structuredNode xmi:id="_AI1khIVqEeKQivIQgUOGDQ" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI1khYVqEeKQivIQgUOGDQ" name="ExpressionStatement@37231054">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI1khoVqEeKQivIQgUOGDQ" name="Call(AssertTrue)" incoming="_AI2LaIVqEeKQivIQgUOGDQ" behavior="_AIzvFIVqEeKQivIQgUOGDQ">
            <argument xmi:id="_AI1kh4VqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(label)" incoming="_AI2LZoVqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1kiIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kiYVqEeKQivIQgUOGDQ" value="1"/>
            </argument>
            <argument xmi:id="_AI1kioVqEeKQivIQgUOGDQ" name="Call(AssertTrue).argument(condition)" incoming="_AI2LZ4VqEeKQivIQgUOGDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1ki4VqEeKQivIQgUOGDQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kjIVqEeKQivIQgUOGDQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI1kjYVqEeKQivIQgUOGDQ" name="Tuple@3b4b6765" outgoing="_AI2LaIVqEeKQivIQgUOGDQ">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI1kjoVqEeKQivIQgUOGDQ" name="Value(&quot;! &quot;)">
              <result xmi:id="_AI1kj4VqEeKQivIQgUOGDQ" name="Value(&quot;! &quot;).result" outgoing="_AI2LXIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1kkIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kkYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_AI1kkoVqEeKQivIQgUOGDQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI1kk4VqEeKQivIQgUOGDQ" name="Call(Concat)">
              <argument xmi:id="_AI1klIVqEeKQivIQgUOGDQ" name="Call(Concat).argument(x)" incoming="_AI2LXIVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1klYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kloVqEeKQivIQgUOGDQ" value="1"/>
              </argument>
              <argument xmi:id="_AI1kl4VqEeKQivIQgUOGDQ" name="Call(Concat).argument(y)" incoming="_AI1kfoVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI1kmIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI1kmYVqEeKQivIQgUOGDQ" value="1"/>
              </argument>
              <result xmi:id="_AI1kmoVqEeKQivIQgUOGDQ" name="Call(Concat).result(result)" outgoing="_AI2LZoVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LQIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LQYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI2LQoVqEeKQivIQgUOGDQ" name="Value(false)">
              <result xmi:id="_AI2LQ4VqEeKQivIQgUOGDQ" name="Value(false).result" outgoing="_AI2LZYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LRIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LRYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_AI2LRoVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AI2LR4VqEeKQivIQgUOGDQ" name="Test(==)">
              <first xmi:id="_AI2LSIVqEeKQivIQgUOGDQ" name="Test(==).first" incoming="_AI2LXYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LSYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LSoVqEeKQivIQgUOGDQ" value="1"/>
              </first>
              <result xmi:id="_AI2LS4VqEeKQivIQgUOGDQ" name="Test(==).result" outgoing="_AI2LYIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LTIVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LTYVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <second xmi:id="_AI2LToVqEeKQivIQgUOGDQ" name="Test(==).second" incoming="_AI2LZYVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LT4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LUIVqEeKQivIQgUOGDQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AI2LUYVqEeKQivIQgUOGDQ" name="Fork(Fork(condition))" outgoing="_AI2LXYVqEeKQivIQgUOGDQ _AI2LXoVqEeKQivIQgUOGDQ" incoming="_AI1kf4VqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI2LUoVqEeKQivIQgUOGDQ" name="Call(NotEmpty)">
              <argument xmi:id="_AI2LU4VqEeKQivIQgUOGDQ" name="Call(NotEmpty).argument(seq)" incoming="_AI2LXoVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LVIVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LVYVqEeKQivIQgUOGDQ" value="*"/>
              </argument>
              <result xmi:id="_AI2LVoVqEeKQivIQgUOGDQ" name="Call(NotEmpty).result()" outgoing="_AI2LX4VqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LV4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LWIVqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AI2LWYVqEeKQivIQgUOGDQ" name="Fork(Call(NotEmpty).result())" outgoing="_AI2LYYVqEeKQivIQgUOGDQ _AI2LYoVqEeKQivIQgUOGDQ" incoming="_AI2LX4VqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_AI2LWoVqEeKQivIQgUOGDQ" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_AI2LZ4VqEeKQivIQgUOGDQ" incoming="_AI2LYIVqEeKQivIQgUOGDQ _AI2LY4VqEeKQivIQgUOGDQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AI2LW4VqEeKQivIQgUOGDQ" name="Decision(Call(NotEmpty).result())" outgoing="_AI2LY4VqEeKQivIQgUOGDQ" incoming="_AI2LYYVqEeKQivIQgUOGDQ _AI2LYoVqEeKQivIQgUOGDQ" decisionInputFlow="_AI2LYoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LXIVqEeKQivIQgUOGDQ" source="_AI1kj4VqEeKQivIQgUOGDQ" target="_AI1klIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LXYVqEeKQivIQgUOGDQ" source="_AI2LUYVqEeKQivIQgUOGDQ" target="_AI2LSIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LXoVqEeKQivIQgUOGDQ" source="_AI2LUYVqEeKQivIQgUOGDQ" target="_AI2LU4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LX4VqEeKQivIQgUOGDQ" source="_AI2LVoVqEeKQivIQgUOGDQ" target="_AI2LWYVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LYIVqEeKQivIQgUOGDQ" source="_AI2LS4VqEeKQivIQgUOGDQ" target="_AI2LWoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LYYVqEeKQivIQgUOGDQ" source="_AI2LWYVqEeKQivIQgUOGDQ" target="_AI2LW4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LYoVqEeKQivIQgUOGDQ" source="_AI2LWYVqEeKQivIQgUOGDQ" target="_AI2LW4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LY4VqEeKQivIQgUOGDQ" source="_AI2LW4VqEeKQivIQgUOGDQ" target="_AI2LWoVqEeKQivIQgUOGDQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AI2LZIVqEeKQivIQgUOGDQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LZYVqEeKQivIQgUOGDQ" source="_AI2LQ4VqEeKQivIQgUOGDQ" target="_AI2LToVqEeKQivIQgUOGDQ"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LZoVqEeKQivIQgUOGDQ" source="_AI1kmoVqEeKQivIQgUOGDQ" target="_AI1kh4VqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LZ4VqEeKQivIQgUOGDQ" source="_AI2LWoVqEeKQivIQgUOGDQ" target="_AI1kioVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI2LaIVqEeKQivIQgUOGDQ" source="_AI1kjYVqEeKQivIQgUOGDQ" target="_AI1khoVqEeKQivIQgUOGDQ"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AI1kgIVqEeKQivIQgUOGDQ" name="Input(label)" outgoing="_AI1kfIVqEeKQivIQgUOGDQ" parameter="_AI1kdoVqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AI1kgYVqEeKQivIQgUOGDQ" name="Fork(label)" outgoing="_AI1kfoVqEeKQivIQgUOGDQ" incoming="_AI1kfIVqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AI1kgoVqEeKQivIQgUOGDQ" name="Input(condition)" outgoing="_AI1kfYVqEeKQivIQgUOGDQ" parameter="_AI1keYVqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AI1kg4VqEeKQivIQgUOGDQ" name="Fork(condition)" outgoing="_AI1kf4VqEeKQivIQgUOGDQ" incoming="_AI1kfYVqEeKQivIQgUOGDQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_AI2LaYVqEeKQivIQgUOGDQ" name="Write" group="_AI2LdoVqEeKQivIQgUOGDQ" node="_AI2LdIVqEeKQivIQgUOGDQ _AI2LdYVqEeKQivIQgUOGDQ _AI2LdoVqEeKQivIQgUOGDQ">
      <packageImport xmi:id="_AI2LaoVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AI2La4VqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AI2LbIVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AI2LbYVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AI2LboVqEeKQivIQgUOGDQ" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_AI2Lb4VqEeKQivIQgUOGDQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LcIVqEeKQivIQgUOGDQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LcYVqEeKQivIQgUOGDQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LcoVqEeKQivIQgUOGDQ" source="_AI2LdIVqEeKQivIQgUOGDQ" target="_AI2LdYVqEeKQivIQgUOGDQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2Lc4VqEeKQivIQgUOGDQ" source="_AI2LdYVqEeKQivIQgUOGDQ" target="_AI2Lg4VqEeKQivIQgUOGDQ"/>
      <structuredNode xmi:id="_AI2LdoVqEeKQivIQgUOGDQ" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI2Ld4VqEeKQivIQgUOGDQ" name="ExpressionStatement@34cb151a">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_AI2LeIVqEeKQivIQgUOGDQ" name="Collect(Call(write))" incoming="_AI2LpIVqEeKQivIQgUOGDQ" mode="parallel" inputElement="_AI2LiIVqEeKQivIQgUOGDQ">
            <node xmi:type="uml:CallOperationAction" xmi:id="_AI2LeYVqEeKQivIQgUOGDQ" name="Call(write)">
              <argument xmi:id="_AI2LeoVqEeKQivIQgUOGDQ" name="Call(write).argument(value)" incoming="_AI2LhoVqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2Le4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LfIVqEeKQivIQgUOGDQ" value="1"/>
              </argument>
              <result xmi:id="_AI2LfYVqEeKQivIQgUOGDQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LfoVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2Lf4VqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <operation href="fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_AI2LgIVqEeKQivIQgUOGDQ" name="Call(write).target" incoming="_AI2Lh4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LgYVqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LgoVqEeKQivIQgUOGDQ" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_AI2Lg4VqEeKQivIQgUOGDQ" name="Collect(Call(write)).input(Fork(value))" outgoing="_AI2LhoVqEeKQivIQgUOGDQ" incoming="_AI2Lc4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LhIVqEeKQivIQgUOGDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LhYVqEeKQivIQgUOGDQ" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LhoVqEeKQivIQgUOGDQ" source="_AI2Lg4VqEeKQivIQgUOGDQ" target="_AI2LeoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2Lh4VqEeKQivIQgUOGDQ" source="_AI2LiIVqEeKQivIQgUOGDQ" target="_AI2LgIVqEeKQivIQgUOGDQ"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_AI2LiIVqEeKQivIQgUOGDQ" name="Collect(Call(write)).inputElement" outgoing="_AI2Lh4VqEeKQivIQgUOGDQ" incoming="_AI2Lo4VqEeKQivIQgUOGDQ" regionAsInput="_AI2LeIVqEeKQivIQgUOGDQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI2LiYVqEeKQivIQgUOGDQ" name="Feature(Call(At).result())" outgoing="_AI2LpIVqEeKQivIQgUOGDQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AI2LioVqEeKQivIQgUOGDQ" name="Call(At)" incoming="_AI2LoYVqEeKQivIQgUOGDQ">
              <argument xmi:id="_AI2Li4VqEeKQivIQgUOGDQ" name="Call(At).argument(seq)" incoming="_AI2Ln4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LjIVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LjYVqEeKQivIQgUOGDQ" value="*"/>
              </argument>
              <argument xmi:id="_AI2LjoVqEeKQivIQgUOGDQ" name="Call(At).argument(index)" incoming="_AI2LooVqEeKQivIQgUOGDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2Lj4VqEeKQivIQgUOGDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LkIVqEeKQivIQgUOGDQ" value="1"/>
              </argument>
              <result xmi:id="_AI2LkYVqEeKQivIQgUOGDQ" name="Call(At).result()" outgoing="_AI2Lo4VqEeKQivIQgUOGDQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2LkoVqEeKQivIQgUOGDQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2Lk4VqEeKQivIQgUOGDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AI2LlIVqEeKQivIQgUOGDQ" name="Tuple@32bc6" outgoing="_AI2LoYVqEeKQivIQgUOGDQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_AI2LlYVqEeKQivIQgUOGDQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_AI2LloVqEeKQivIQgUOGDQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_AI2Ln4VqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2Ll4VqEeKQivIQgUOGDQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LmIVqEeKQivIQgUOGDQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AI2LmYVqEeKQivIQgUOGDQ" name="Value(1)">
                <result xmi:id="_AI2LmoVqEeKQivIQgUOGDQ" name="Value(1).result" outgoing="_AI2LoIVqEeKQivIQgUOGDQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AI2Lm4VqEeKQivIQgUOGDQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AI2LnIVqEeKQivIQgUOGDQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_AI2LnYVqEeKQivIQgUOGDQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AI2LnoVqEeKQivIQgUOGDQ" name="Fork(Call(At).argument(index))" outgoing="_AI2LooVqEeKQivIQgUOGDQ" incoming="_AI2LoIVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2Ln4VqEeKQivIQgUOGDQ" source="_AI2LloVqEeKQivIQgUOGDQ" target="_AI2Li4VqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LoIVqEeKQivIQgUOGDQ" source="_AI2LmoVqEeKQivIQgUOGDQ" target="_AI2LnoVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AI2LoYVqEeKQivIQgUOGDQ" source="_AI2LlIVqEeKQivIQgUOGDQ" target="_AI2LioVqEeKQivIQgUOGDQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2LooVqEeKQivIQgUOGDQ" source="_AI2LnoVqEeKQivIQgUOGDQ" target="_AI2LjoVqEeKQivIQgUOGDQ"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AI2Lo4VqEeKQivIQgUOGDQ" source="_AI2LkYVqEeKQivIQgUOGDQ" target="_AI2LiIVqEeKQivIQgUOGDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AI2LpIVqEeKQivIQgUOGDQ" source="_AI2LiYVqEeKQivIQgUOGDQ" target="_AI2LeIVqEeKQivIQgUOGDQ"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AI2LdIVqEeKQivIQgUOGDQ" name="Input(value)" outgoing="_AI2LcoVqEeKQivIQgUOGDQ" parameter="_AI2Lb4VqEeKQivIQgUOGDQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AI2LdYVqEeKQivIQgUOGDQ" name="Fork(value)" outgoing="_AI2Lc4VqEeKQivIQgUOGDQ" incoming="_AI2LcoVqEeKQivIQgUOGDQ"/>
    </packagedElement>
    <profileApplication xmi:id="_AI2LpYVqEeKQivIQgUOGDQ">
      <eAnnotations xmi:id="_AI2yUIVqEeKQivIQgUOGDQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_AI5OkIVqEeKQivIQgUOGDQ" base_BehavioralFeature="_AIniGoVqEeKQivIQgUOGDQ"/>
  <l2:Create xmi:id="_AI7DwIVqEeKQivIQgUOGDQ" base_BehavioralFeature="_AIzIU4VqEeKQivIQgUOGDQ"/>
  <l2:Create xmi:id="_AI7q0IVqEeKQivIQgUOGDQ" base_BehavioralFeature="_AIuPy4VqEeKQivIQgUOGDQ"/>
  <l2:Destroy xmi:id="_AI7q0YVqEeKQivIQgUOGDQ" base_BehavioralFeature="_AIu2gYVqEeKQivIQgUOGDQ"/>
  <l2:Destroy xmi:id="_AI7q0oVqEeKQivIQgUOGDQ" base_BehavioralFeature="_AIzvAIVqEeKQivIQgUOGDQ"/>
  <l2:Destroy xmi:id="_AI7q04VqEeKQivIQgUOGDQ" base_BehavioralFeature="_AIm624VqEeKQivIQgUOGDQ"/>
  <l2:Create xmi:id="_AI7q1IVqEeKQivIQgUOGDQ" base_BehavioralFeature="_AIm614VqEeKQivIQgUOGDQ"/>
  <l2:Create xmi:id="_AI7q1YVqEeKQivIQgUOGDQ" base_BehavioralFeature="_AIniFoVqEeKQivIQgUOGDQ"/>
</xmi:XMI>

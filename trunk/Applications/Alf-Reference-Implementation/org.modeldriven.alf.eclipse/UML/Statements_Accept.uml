<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SOBFcCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SOBFcScoEeSLVrU2ifxtpw" name="Statements_Accept" classifierBehavior="_SOBFeicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_SOBFcicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SOBFcycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SOBFdCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SOBFdScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SOBFdicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SOBFdycoEeSLVrU2ifxtpw" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBFeCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBFeScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOBFeicoEeSLVrU2ifxtpw" name="Statements_Accept$classifierBehavior$1" visibility="private" isActive="true" node="_SOBFeycoEeSLVrU2ifxtpw" group="_SOBFeycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SOBFeycoEeSLVrU2ifxtpw" name="Body(Statements_Accept$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBFfCcoEeSLVrU2ifxtpw" name="ExpressionStatement@201b4f3a">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBFfScoEeSLVrU2ifxtpw" target="_SOBFfycoEeSLVrU2ifxtpw" source="_SOBFhycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:SendSignalAction" xmi:id="_SOBFficoEeSLVrU2ifxtpw" name="SendSignal(Start)" signal="_SOCXcycoEeSLVrU2ifxtpw">
              <target xmi:id="_SOBFfycoEeSLVrU2ifxtpw" name="SendSignal(Start).target" incoming="_SOBFfScoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBFgCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBFgScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBFgicoEeSLVrU2ifxtpw" name="InstanceCreationExpression@1b346aa4">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBFgycoEeSLVrU2ifxtpw" target="_SOBFjicoEeSLVrU2ifxtpw" source="_SOBFkicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBFhCcoEeSLVrU2ifxtpw" target="_SOBFlScoEeSLVrU2ifxtpw" source="_SOBFiycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBFhScoEeSLVrU2ifxtpw" target="_SOBFlycoEeSLVrU2ifxtpw" source="_SOBFlScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBFhicoEeSLVrU2ifxtpw" target="_SOBFhycoEeSLVrU2ifxtpw" source="_SOBFlScoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_SOBFhycoEeSLVrU2ifxtpw" name="Output(Call(TestRunner).result())" incoming="_SOBFhicoEeSLVrU2ifxtpw" outgoing="_SOBFfScoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBFiCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBFiScoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SOBFiicoEeSLVrU2ifxtpw" name="Call(TestRunner)" operation="_SOCXbicoEeSLVrU2ifxtpw">
                <result xmi:id="_SOBFiycoEeSLVrU2ifxtpw" name="Call(TestRunner).result()" outgoing="_SOBFhCcoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBFjCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBFjScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SOBFjicoEeSLVrU2ifxtpw" name="Call(TestRunner).target" incoming="_SOBFgycoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBFjycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBFkCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SOBFkScoEeSLVrU2ifxtpw" name="Create(TestRunner)" classifier="_SOCUcCcoEeSLVrU2ifxtpw">
                <result xmi:id="_SOBFkicoEeSLVrU2ifxtpw" name="Create(TestRunner).result" outgoing="_SOBFgycoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBFkycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBFlCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBFlScoEeSLVrU2ifxtpw" name="Fork(Call(TestRunner).result())" incoming="_SOBFhCcoEeSLVrU2ifxtpw" outgoing="_SOBFhScoEeSLVrU2ifxtpw _SOBFhicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_SOBFlicoEeSLVrU2ifxtpw" name="Start(TestRunner)">
                <object xmi:id="_SOBFlycoEeSLVrU2ifxtpw" name="Start(TestRunner).object" incoming="_SOBFhScoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBFmCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBFmScoEeSLVrU2ifxtpw" value="1"/>
                </object>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOBFmicoEeSLVrU2ifxtpw" name="Statements_Accept$method$1" specification="_SOBs9icoEeSLVrU2ifxtpw" node="_SOBFnycoEeSLVrU2ifxtpw _SOBFoCcoEeSLVrU2ifxtpw" group="_SOBFoCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SOBFmycoEeSLVrU2ifxtpw" name="" type="_SOBFcScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBFnCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBFnScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBFnicoEeSLVrU2ifxtpw" target="_SOBFnycoEeSLVrU2ifxtpw" source="_SOBsjScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SOBFoCcoEeSLVrU2ifxtpw" name="Body(Statements_Accept$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBFoScoEeSLVrU2ifxtpw" target="_SOBsjScoEeSLVrU2ifxtpw" source="_SOBsiicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBFoicoEeSLVrU2ifxtpw" target="_SOBsjycoEeSLVrU2ifxtpw" source="_SOBsjScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOBFoycoEeSLVrU2ifxtpw" target="_SOBsiCcoEeSLVrU2ifxtpw" source="_SOBsjicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsgCcoEeSLVrU2ifxtpw" target="_SOBskycoEeSLVrU2ifxtpw" source="_SOBsjScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsgScoEeSLVrU2ifxtpw" target="_SOBsmicoEeSLVrU2ifxtpw" source="_SOBslicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsgicoEeSLVrU2ifxtpw" target="_SOBspicoEeSLVrU2ifxtpw" source="_SOBsnScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsgycoEeSLVrU2ifxtpw" target="_SOBsrCcoEeSLVrU2ifxtpw" source="_SOBsoScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOBshCcoEeSLVrU2ifxtpw" target="_SOBssCcoEeSLVrU2ifxtpw" source="_SOBsrycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBshScoEeSLVrU2ifxtpw" target="_SOBssCcoEeSLVrU2ifxtpw" source="_SOBsqScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOBshicoEeSLVrU2ifxtpw" target="_SOBsjicoEeSLVrU2ifxtpw" source="_SOBssCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOBshycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBsiCcoEeSLVrU2ifxtpw" name="Body" incoming="_SOBFoycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBsiScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SOBsiicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBFoScoEeSLVrU2ifxtpw" type="_SOBFcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBsiycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsjCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SOBsjScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOBFoScoEeSLVrU2ifxtpw" outgoing="_SOBFnicoEeSLVrU2ifxtpw _SOBFoicoEeSLVrU2ifxtpw _SOBsgCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SOBsjicoEeSLVrU2ifxtpw" name="Call(Statements_Accept$initialization$1)" incoming="_SOBshicoEeSLVrU2ifxtpw" outgoing="_SOBFoycoEeSLVrU2ifxtpw" operation="_SOBs9ScoEeSLVrU2ifxtpw">
            <target xmi:id="_SOBsjycoEeSLVrU2ifxtpw" name="Call(Statements_Accept$initialization$1).target" incoming="_SOBFoicoEeSLVrU2ifxtpw" type="_SOBFcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBskCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBskScoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOBskicoEeSLVrU2ifxtpw" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_SOBFdycoEeSLVrU2ifxtpw">
            <object xmi:id="_SOBskycoEeSLVrU2ifxtpw" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_SOBsgCcoEeSLVrU2ifxtpw" type="_SOBFcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBslCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBslScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SOBslicoEeSLVrU2ifxtpw" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_SOBsgScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBslycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsmCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBsmScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SOBsmicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SOBsgScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBsmycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsnCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SOBsnScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SOBsgicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBsnicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsnycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBsoCcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SOBsoScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOBsgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBsoicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsoycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SOBspCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SOBspScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SOBspicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SOBsgicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBspycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsqCcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SOBsqScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SOBshScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBsqicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsqycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SOBsrCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SOBsgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBsrScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsricoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SOBsrycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SOBshCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SOBssCcoEeSLVrU2ifxtpw" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_SOBshCcoEeSLVrU2ifxtpw _SOBshScoEeSLVrU2ifxtpw" outgoing="_SOBshicoEeSLVrU2ifxtpw" decisionInputFlow="_SOBshScoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOBFnycoEeSLVrU2ifxtpw" name="Return" incoming="_SOBFnicoEeSLVrU2ifxtpw" parameter="_SOBFmycoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOBssScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SOBs-icoEeSLVrU2ifxtpw" node="_SOBssicoEeSLVrU2ifxtpw" group="_SOBssicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SOBssicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOBssycoEeSLVrU2ifxtpw" name="Statements_Accept$initialization$1" specification="_SOBs9ScoEeSLVrU2ifxtpw" node="_SOBstCcoEeSLVrU2ifxtpw" group="_SOBstCcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SOBstCcoEeSLVrU2ifxtpw" name="Body(Statements_Accept$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBstScoEeSLVrU2ifxtpw" target="_SOBswycoEeSLVrU2ifxtpw" source="_SOBswCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsticoEeSLVrU2ifxtpw" target="_SOBszScoEeSLVrU2ifxtpw" source="_SOBswycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBstycoEeSLVrU2ifxtpw" target="_SOBs1ycoEeSLVrU2ifxtpw" source="_SOBswycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsuCcoEeSLVrU2ifxtpw" target="_SOBs3icoEeSLVrU2ifxtpw" source="_SOBs2icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsuScoEeSLVrU2ifxtpw" target="_SOBs6icoEeSLVrU2ifxtpw" source="_SOBs4ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsuicoEeSLVrU2ifxtpw" target="_SOBs8CcoEeSLVrU2ifxtpw" source="_SOBs5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOBsuycoEeSLVrU2ifxtpw" target="_SOBs9CcoEeSLVrU2ifxtpw" source="_SOBs8ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsvCcoEeSLVrU2ifxtpw" target="_SOBs9CcoEeSLVrU2ifxtpw" source="_SOBs7ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOBsvScoEeSLVrU2ifxtpw" target="_SOBsxCcoEeSLVrU2ifxtpw" source="_SOBs9CcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOBsvicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBsvycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SOBswCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBstScoEeSLVrU2ifxtpw" type="_SOBFcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBswScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBswicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SOBswycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOBstScoEeSLVrU2ifxtpw" outgoing="_SOBsticoEeSLVrU2ifxtpw _SOBstycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBsxCcoEeSLVrU2ifxtpw" name="Initialization" incoming="_SOBsvScoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBsxScoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBsxicoEeSLVrU2ifxtpw" target="_SOBs0ycoEeSLVrU2ifxtpw" source="_SOBsyCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBsxycoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SOBsyCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SOBsxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBsyScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBsyicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SOBsyycoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBszCcoEeSLVrU2ifxtpw" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_SOBFdycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SOBszScoEeSLVrU2ifxtpw" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_SOBsticoEeSLVrU2ifxtpw" type="_SOBFcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBszicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBszycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SOBs0CcoEeSLVrU2ifxtpw" name="Write(Statements_Accept$initializationFlag$1).result" type="_SOBFcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs0ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs0icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_SOBs0ycoEeSLVrU2ifxtpw" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_SOBsxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs1CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs1ScoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOBs1icoEeSLVrU2ifxtpw" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_SOBFdycoEeSLVrU2ifxtpw">
            <object xmi:id="_SOBs1ycoEeSLVrU2ifxtpw" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_SOBstycoEeSLVrU2ifxtpw" type="_SOBFcScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs2CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs2ScoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SOBs2icoEeSLVrU2ifxtpw" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_SOBsuCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs2ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs3CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBs3ScoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SOBs3icoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SOBsuCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs3ycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs4CcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SOBs4ScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SOBsuScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs4icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs4ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBs5CcoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SOBs5ScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOBsuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs5icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs5ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SOBs6CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SOBs6ScoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SOBs6icoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SOBsuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs6ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs7CcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SOBs7ScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SOBsvCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs7icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs7ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SOBs8CcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SOBsuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs8ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs8icoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SOBs8ycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SOBsuycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SOBs9CcoEeSLVrU2ifxtpw" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_SOBsuycoEeSLVrU2ifxtpw _SOBsvCcoEeSLVrU2ifxtpw" outgoing="_SOBsvScoEeSLVrU2ifxtpw" decisionInputFlow="_SOBsvCcoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SOBs9ScoEeSLVrU2ifxtpw" name="Statements_Accept$initialization$1" visibility="protected" method="_SOBssycoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SOBs9icoEeSLVrU2ifxtpw" name="Statements_Accept" visibility="package" method="_SOBFmicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SOBs9ycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SOBFcScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs-CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs-ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SOBs-icoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SOBssScoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SOBs-ycoEeSLVrU2ifxtpw" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_SOBs_CcoEeSLVrU2ifxtpw" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBs_ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBs_icoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOBs_ycoEeSLVrU2ifxtpw" name="Super$method$1" specification="_SOBtfycoEeSLVrU2ifxtpw" node="_SOBtBCcoEeSLVrU2ifxtpw _SOBtBScoEeSLVrU2ifxtpw" group="_SOBtBScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SOBtACcoEeSLVrU2ifxtpw" name="" type="_SOBs-ycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtAScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtAicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtAycoEeSLVrU2ifxtpw" target="_SOBtBCcoEeSLVrU2ifxtpw" source="_SOBtFicoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SOBtBScoEeSLVrU2ifxtpw" name="Body(Super$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtBicoEeSLVrU2ifxtpw" target="_SOBtFicoEeSLVrU2ifxtpw" source="_SOBtEycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtBycoEeSLVrU2ifxtpw" target="_SOBtGCcoEeSLVrU2ifxtpw" source="_SOBtFicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtCCcoEeSLVrU2ifxtpw" target="_SOBtEScoEeSLVrU2ifxtpw" source="_SOBtFycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtCScoEeSLVrU2ifxtpw" target="_SOBtHCcoEeSLVrU2ifxtpw" source="_SOBtFicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtCicoEeSLVrU2ifxtpw" target="_SOBtIycoEeSLVrU2ifxtpw" source="_SOBtHycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtCycoEeSLVrU2ifxtpw" target="_SOBtLycoEeSLVrU2ifxtpw" source="_SOBtJicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtDCcoEeSLVrU2ifxtpw" target="_SOBtNScoEeSLVrU2ifxtpw" source="_SOBtKicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtDScoEeSLVrU2ifxtpw" target="_SOBtOScoEeSLVrU2ifxtpw" source="_SOBtOCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtDicoEeSLVrU2ifxtpw" target="_SOBtOScoEeSLVrU2ifxtpw" source="_SOBtMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtDycoEeSLVrU2ifxtpw" target="_SOBtFycoEeSLVrU2ifxtpw" source="_SOBtOScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOBtECcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBtEScoEeSLVrU2ifxtpw" name="Body" incoming="_SOBtCCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBtEicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SOBtEycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBtBicoEeSLVrU2ifxtpw" type="_SOBs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtFCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtFScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOBtFicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOBtBicoEeSLVrU2ifxtpw" outgoing="_SOBtAycoEeSLVrU2ifxtpw _SOBtBycoEeSLVrU2ifxtpw _SOBtCScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SOBtFycoEeSLVrU2ifxtpw" name="Call(Super$initialization$1)" incoming="_SOBtDycoEeSLVrU2ifxtpw" outgoing="_SOBtCCcoEeSLVrU2ifxtpw" operation="_SOBtficoEeSLVrU2ifxtpw">
              <target xmi:id="_SOBtGCcoEeSLVrU2ifxtpw" name="Call(Super$initialization$1).target" incoming="_SOBtBycoEeSLVrU2ifxtpw" type="_SOBs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtGScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtGicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOBtGycoEeSLVrU2ifxtpw" name="Read(Super$initializationFlag$1)" structuralFeature="_SOBs_CcoEeSLVrU2ifxtpw">
              <object xmi:id="_SOBtHCcoEeSLVrU2ifxtpw" name="Read(Super$initializationFlag$1).object" incoming="_SOBtCScoEeSLVrU2ifxtpw" type="_SOBs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtHScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtHicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SOBtHycoEeSLVrU2ifxtpw" name="Read(Super$initializationFlag$1).result" outgoing="_SOBtCicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtICcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtIScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBtIicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SOBtIycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SOBtCicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtJCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtJScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SOBtJicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SOBtCycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtJycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtKCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBtKScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SOBtKicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOBtDCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtKycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtLCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SOBtLScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SOBtLicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SOBtLycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SOBtCycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtMCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtMScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SOBtMicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SOBtDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtMycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtNCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SOBtNScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SOBtDCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtNicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtNycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SOBtOCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SOBtDScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SOBtOScoEeSLVrU2ifxtpw" name="Decision(Test(Super$initializationFlag$1))" incoming="_SOBtDScoEeSLVrU2ifxtpw _SOBtDicoEeSLVrU2ifxtpw" outgoing="_SOBtDycoEeSLVrU2ifxtpw" decisionInputFlow="_SOBtDicoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOBtBCcoEeSLVrU2ifxtpw" name="Return" incoming="_SOBtAycoEeSLVrU2ifxtpw" parameter="_SOBtACcoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOBtOicoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SOBtgycoEeSLVrU2ifxtpw" node="_SOBtOycoEeSLVrU2ifxtpw" group="_SOBtOycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SOBtOycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOBtPCcoEeSLVrU2ifxtpw" name="Super$initialization$1" specification="_SOBtficoEeSLVrU2ifxtpw" node="_SOBtPScoEeSLVrU2ifxtpw" group="_SOBtPScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SOBtPScoEeSLVrU2ifxtpw" name="Body(Super$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtPicoEeSLVrU2ifxtpw" target="_SOBtTCcoEeSLVrU2ifxtpw" source="_SOBtSScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtPycoEeSLVrU2ifxtpw" target="_SOBtVicoEeSLVrU2ifxtpw" source="_SOBtTCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtQCcoEeSLVrU2ifxtpw" target="_SOBtYCcoEeSLVrU2ifxtpw" source="_SOBtTCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtQScoEeSLVrU2ifxtpw" target="_SOBtZycoEeSLVrU2ifxtpw" source="_SOBtYycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtQicoEeSLVrU2ifxtpw" target="_SOBtcycoEeSLVrU2ifxtpw" source="_SOBtaicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtQycoEeSLVrU2ifxtpw" target="_SOBteScoEeSLVrU2ifxtpw" source="_SOBtbicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtRCcoEeSLVrU2ifxtpw" target="_SOBtfScoEeSLVrU2ifxtpw" source="_SOBtfCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtRScoEeSLVrU2ifxtpw" target="_SOBtfScoEeSLVrU2ifxtpw" source="_SOBtdicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtRicoEeSLVrU2ifxtpw" target="_SOBtTScoEeSLVrU2ifxtpw" source="_SOBtfScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOBtRycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBtSCcoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SOBtSScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBtPicoEeSLVrU2ifxtpw" type="_SOBs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtSicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtSycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOBtTCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOBtPicoEeSLVrU2ifxtpw" outgoing="_SOBtPycoEeSLVrU2ifxtpw _SOBtQCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBtTScoEeSLVrU2ifxtpw" name="Initialization" incoming="_SOBtRicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBtTicoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtTycoEeSLVrU2ifxtpw" target="_SOBtXCcoEeSLVrU2ifxtpw" source="_SOBtUScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBtUCcoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SOBtUScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SOBtTycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtUicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtUycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SOBtVCcoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBtVScoEeSLVrU2ifxtpw" name="Write(Super$initializationFlag$1)" structuralFeature="_SOBs_CcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SOBtVicoEeSLVrU2ifxtpw" name="Write(Super$initializationFlag$1).object" incoming="_SOBtPycoEeSLVrU2ifxtpw" type="_SOBs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtVycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtWCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOBtWScoEeSLVrU2ifxtpw" name="Write(Super$initializationFlag$1).result" type="_SOBs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtWicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtWycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SOBtXCcoEeSLVrU2ifxtpw" name="Write(Super$initializationFlag$1).value" incoming="_SOBtTycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtXScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtXicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOBtXycoEeSLVrU2ifxtpw" name="Read(Super$initializationFlag$1)" structuralFeature="_SOBs_CcoEeSLVrU2ifxtpw">
              <object xmi:id="_SOBtYCcoEeSLVrU2ifxtpw" name="Read(Super$initializationFlag$1).object" incoming="_SOBtQCcoEeSLVrU2ifxtpw" type="_SOBs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtYScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtYicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SOBtYycoEeSLVrU2ifxtpw" name="Read(Super$initializationFlag$1).result" outgoing="_SOBtQScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtZScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBtZicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SOBtZycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SOBtQScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtaCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtaScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SOBtaicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SOBtQicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtaycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtbCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBtbScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SOBtbicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOBtQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtbycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtcCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SOBtcScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SOBtcicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SOBtcycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SOBtQicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtdCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtdScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SOBtdicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SOBtRScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtdycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBteCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SOBteScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SOBtQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBteicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBteycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SOBtfCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SOBtRCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SOBtfScoEeSLVrU2ifxtpw" name="Decision(Test(Super$initializationFlag$1))" incoming="_SOBtRCcoEeSLVrU2ifxtpw _SOBtRScoEeSLVrU2ifxtpw" outgoing="_SOBtRicoEeSLVrU2ifxtpw" decisionInputFlow="_SOBtRScoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SOBtficoEeSLVrU2ifxtpw" name="Super$initialization$1" visibility="protected" method="_SOBtPCcoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SOBtfycoEeSLVrU2ifxtpw" name="Super" visibility="package" method="_SOBs_ycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SOBtgCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SOBs-ycoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtgScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtgicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SOBtgycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SOBtOicoEeSLVrU2ifxtpw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SOBthCcoEeSLVrU2ifxtpw" name="SignalNewArrival">
          <ownedAttribute xmi:id="_SOBthScoEeSLVrU2ifxtpw" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBthicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBthycoEeSLVrU2ifxtpw" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SOBtiCcoEeSLVrU2ifxtpw" name="SignalTermination"/>
        <ownedReception xmi:id="_SOBtiScoEeSLVrU2ifxtpw" name="SignalTermination" signal="_SOBtiCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SOBtiicoEeSLVrU2ifxtpw" name="Test" visibility="private" classifierBehavior="_SOBtqicoEeSLVrU2ifxtpw" isActive="true">
        <generalization xmi:id="_SOBtiycoEeSLVrU2ifxtpw" general="_SOBs-ycoEeSLVrU2ifxtpw"/>
        <ownedAttribute xmi:id="_SOBtjCcoEeSLVrU2ifxtpw" name="Test$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtjScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtjicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtjycoEeSLVrU2ifxtpw" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtkCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtkScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtkicoEeSLVrU2ifxtpw" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtkycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtlCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtlScoEeSLVrU2ifxtpw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtlicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtlycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtmCcoEeSLVrU2ifxtpw" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtmScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtmicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtmycoEeSLVrU2ifxtpw" name="arrival" visibility="public" type="_SOBthCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtnCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtnScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtnicoEeSLVrU2ifxtpw" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtnycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtoCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtoScoEeSLVrU2ifxtpw" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtoicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtoycoEeSLVrU2ifxtpw" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtpCcoEeSLVrU2ifxtpw" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtpScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtpicoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SOBtpycoEeSLVrU2ifxtpw" name="tester" visibility="public" type="_SOCUcCcoEeSLVrU2ifxtpw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtqCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBtqScoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOBtqicoEeSLVrU2ifxtpw" name="Test$classifierBehavior$1" visibility="private" isActive="true" node="_SOBtqycoEeSLVrU2ifxtpw" group="_SOBtqycoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SOBtqycoEeSLVrU2ifxtpw" name="Body(Test$classifierBehavior$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtrCcoEeSLVrU2ifxtpw" target="_SOBt5ScoEeSLVrU2ifxtpw" source="_SOBtzCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtrScoEeSLVrU2ifxtpw" target="_SOBt1CcoEeSLVrU2ifxtpw" source="_SOBtyScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtricoEeSLVrU2ifxtpw" target="_SOBt9icoEeSLVrU2ifxtpw" source="_SOBt1CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtrycoEeSLVrU2ifxtpw" target="_SOBuPScoEeSLVrU2ifxtpw" source="_SOBuYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtsCcoEeSLVrU2ifxtpw" target="_SOBuRycoEeSLVrU2ifxtpw" source="_SOBuYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtsScoEeSLVrU2ifxtpw" target="_SOBuQCcoEeSLVrU2ifxtpw" source="_SOBt-CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtsicoEeSLVrU2ifxtpw" target="_SOBuWScoEeSLVrU2ifxtpw" source="_SOBuYCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtsycoEeSLVrU2ifxtpw" target="_SOBt_ycoEeSLVrU2ifxtpw" source="_SOBt9icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBttCcoEeSLVrU2ifxtpw" target="_SOBueicoEeSLVrU2ifxtpw" source="_SOBuYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBttScoEeSLVrU2ifxtpw" target="_SOBuaScoEeSLVrU2ifxtpw" source="_SOBt_ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtticoEeSLVrU2ifxtpw" target="_SOBuiycoEeSLVrU2ifxtpw" source="_SOBuaScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBttycoEeSLVrU2ifxtpw" target="_SOBukCcoEeSLVrU2ifxtpw" source="_SOBuiycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtuCcoEeSLVrU2ifxtpw" target="_SOBuqycoEeSLVrU2ifxtpw" source="_SOBukycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtuScoEeSLVrU2ifxtpw" target="_SOBumicoEeSLVrU2ifxtpw" source="_SOBukCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtuicoEeSLVrU2ifxtpw" target="_SOBvgicoEeSLVrU2ifxtpw" source="_SOBuYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtuycoEeSLVrU2ifxtpw" target="_SOBvhScoEeSLVrU2ifxtpw" source="_SOBukycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtvCcoEeSLVrU2ifxtpw" target="_SOBviCcoEeSLVrU2ifxtpw" source="_SOBtzCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtvScoEeSLVrU2ifxtpw" target="_SOBuvCcoEeSLVrU2ifxtpw" source="_SOBumicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtvicoEeSLVrU2ifxtpw" target="_SOBweicoEeSLVrU2ifxtpw" source="_SOBuYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtvycoEeSLVrU2ifxtpw" target="_SOBwkicoEeSLVrU2ifxtpw" source="_SOBwiScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtwCcoEeSLVrU2ifxtpw" target="_SOBwgCcoEeSLVrU2ifxtpw" source="_SOBukycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtwScoEeSLVrU2ifxtpw" target="_SOBwgycoEeSLVrU2ifxtpw" source="_SOBtzCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtwicoEeSLVrU2ifxtpw" target="_SOBv4icoEeSLVrU2ifxtpw" source="_SOBwSycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtwycoEeSLVrU2ifxtpw" target="_SOBv1CcoEeSLVrU2ifxtpw" source="_SOBuvCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtxCcoEeSLVrU2ifxtpw" target="_SOBwkycoEeSLVrU2ifxtpw" source="_SOBv1CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtxScoEeSLVrU2ifxtpw" target="_SOBw_CcoEeSLVrU2ifxtpw" source="_SOBwkycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtxicoEeSLVrU2ifxtpw" target="_SOBxFycoEeSLVrU2ifxtpw" source="_SOBw_ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtxycoEeSLVrU2ifxtpw" target="_SOBxBicoEeSLVrU2ifxtpw" source="_SOBw_CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtyCcoEeSLVrU2ifxtpw" target="_SOCTkScoEeSLVrU2ifxtpw" source="_SOBxBicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBtyScoEeSLVrU2ifxtpw" name="AcceptStatement@3c344038" outgoing="_SOBtrScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBtyicoEeSLVrU2ifxtpw" target="_SOBtzScoEeSLVrU2ifxtpw" source="_SOBt0ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBtyycoEeSLVrU2ifxtpw" target="_SOBtzCcoEeSLVrU2ifxtpw" source="_SOBtzicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBtzCcoEeSLVrU2ifxtpw" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_SOBtyycoEeSLVrU2ifxtpw" outgoing="_SOBtrCcoEeSLVrU2ifxtpw _SOBtvCcoEeSLVrU2ifxtpw _SOBtwScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBtzScoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival,SignalTermination)" incoming="_SOBtyicoEeSLVrU2ifxtpw">
                <result xmi:id="_SOBtzicoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_SOBtyycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBtzycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt0CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <trigger xmi:id="_SOBt0ScoEeSLVrU2ifxtpw" event="_SOCXdycoEeSLVrU2ifxtpw"/>
                <trigger xmi:id="_SOBt0icoEeSLVrU2ifxtpw" event="_SOCXeCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SOBt0ycoEeSLVrU2ifxtpw" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_SOBtyicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBt1CcoEeSLVrU2ifxtpw" name="ExpressionStatement@4f761a7e" incoming="_SOBtrScoEeSLVrU2ifxtpw" outgoing="_SOBtricoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBt1ScoEeSLVrU2ifxtpw" target="_SOBt3ycoEeSLVrU2ifxtpw" source="_SOBt2ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBt1icoEeSLVrU2ifxtpw" target="_SOBt6CcoEeSLVrU2ifxtpw" source="_SOBt5ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBt1ycoEeSLVrU2ifxtpw" target="_SOBt7CcoEeSLVrU2ifxtpw" source="_SOBt4icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBt2CcoEeSLVrU2ifxtpw" target="_SOBt2ScoEeSLVrU2ifxtpw" source="_SOBt9ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBt2ScoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@52c56ef3)" incoming="_SOBt2CcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBt2icoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_SOBt2ycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBt1ScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBt3CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt3ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOBt3icoEeSLVrU2ifxtpw" name="Clear(sig)" structuralFeature="_SOBtjycoEeSLVrU2ifxtpw">
                <object xmi:id="_SOBt3ycoEeSLVrU2ifxtpw" name="Clear(sig).object" incoming="_SOBt1ScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBt4CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt4ScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SOBt4icoEeSLVrU2ifxtpw" name="Clear(sig).result" outgoing="_SOBt1ycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBt4ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt5CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBt5ScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@52c56ef3)" incoming="_SOBtrCcoEeSLVrU2ifxtpw" outgoing="_SOBt1icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBt5icoEeSLVrU2ifxtpw" name="WriteAll(Test::sig)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBt5ycoEeSLVrU2ifxtpw" target="_SOBt8icoEeSLVrU2ifxtpw" source="_SOBt6CcoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SOBt6CcoEeSLVrU2ifxtpw" name="WriteAll(Test::sig).input(Test::sig)" incoming="_SOBt1icoEeSLVrU2ifxtpw" outgoing="_SOBt5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBt6ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt6icoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBt6ycoEeSLVrU2ifxtpw" name="Write(sig)" structuralFeature="_SOBtjycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SOBt7CcoEeSLVrU2ifxtpw" name="Write(sig).object" incoming="_SOBt1ycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBt7ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt7icoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOBt7ycoEeSLVrU2ifxtpw" name="Write(sig).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBt8CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt8ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SOBt8icoEeSLVrU2ifxtpw" name="Write(sig).value" incoming="_SOBt5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBt8ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt9CcoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBt9ScoEeSLVrU2ifxtpw" name="RightHandSide@dfb530d" outgoing="_SOBt2CcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBt9icoEeSLVrU2ifxtpw" name="ExpressionStatement@9dc8b7d" incoming="_SOBtricoEeSLVrU2ifxtpw" outgoing="_SOBtsycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBt9ycoEeSLVrU2ifxtpw" target="_SOBt-CcoEeSLVrU2ifxtpw" source="_SOBt-ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBt-CcoEeSLVrU2ifxtpw" name="Fork(terminate)@15e32f25" incoming="_SOBt9ycoEeSLVrU2ifxtpw" outgoing="_SOBtsScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBt-ScoEeSLVrU2ifxtpw" name="RightHandSide@762c315c">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBt-icoEeSLVrU2ifxtpw" name="Value(false)">
                  <result xmi:id="_SOBt-ycoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_SOBt9ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBt_CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBt_ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SOBt_icoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBt_ycoEeSLVrU2ifxtpw" name="AcceptStatement@3b4b3547" incoming="_SOBtsycoEeSLVrU2ifxtpw" outgoing="_SOBttScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuACcoEeSLVrU2ifxtpw" target="_SOBuTScoEeSLVrU2ifxtpw" source="_SOBuSicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBuAScoEeSLVrU2ifxtpw" target="_SOBuEScoEeSLVrU2ifxtpw" source="_SOBuTScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOBuAicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuAycoEeSLVrU2ifxtpw" target="_SOBuDicoEeSLVrU2ifxtpw" source="_SOBuQycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuBCcoEeSLVrU2ifxtpw" target="_SOBuXycoEeSLVrU2ifxtpw" source="_SOBuXCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBuBScoEeSLVrU2ifxtpw" target="_SOBuTicoEeSLVrU2ifxtpw" source="_SOBuXycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOBuBicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBuBycoEeSLVrU2ifxtpw" target="_SOBuTScoEeSLVrU2ifxtpw" source="_SOBuXycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOBuCCcoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuCScoEeSLVrU2ifxtpw" target="_SOBuDicoEeSLVrU2ifxtpw" source="_SOBuUScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuCicoEeSLVrU2ifxtpw" target="_SOBuYScoEeSLVrU2ifxtpw" source="_SOBuDicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBuCycoEeSLVrU2ifxtpw" target="_SOBuYicoEeSLVrU2ifxtpw" source="_SOBuaCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBuDCcoEeSLVrU2ifxtpw" target="_SOBuXycoEeSLVrU2ifxtpw" source="_SOBuYicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuDScoEeSLVrU2ifxtpw" target="_SOBuYCcoEeSLVrU2ifxtpw" source="_SOBuYycoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_SOBuDicoEeSLVrU2ifxtpw" name="AcceptStatement@3b4b3547.output(terminate)" incoming="_SOBuAycoEeSLVrU2ifxtpw _SOBuCScoEeSLVrU2ifxtpw" outgoing="_SOBuCicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuDycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuECcoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuEScoEeSLVrU2ifxtpw" name="AcceptBlock(SignalNewArrival)" incoming="_SOBuAScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuEicoEeSLVrU2ifxtpw" name="ExpressionStatement@d74cb28">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuEycoEeSLVrU2ifxtpw" target="_SOBuHicoEeSLVrU2ifxtpw" source="_SOBuGicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuFCcoEeSLVrU2ifxtpw" target="_SOBuJycoEeSLVrU2ifxtpw" source="_SOBuJCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuFScoEeSLVrU2ifxtpw" target="_SOBuKycoEeSLVrU2ifxtpw" source="_SOBuIScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuFicoEeSLVrU2ifxtpw" target="_SOBuJCcoEeSLVrU2ifxtpw" source="_SOBuOicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SOBuFycoEeSLVrU2ifxtpw" target="_SOBuGCcoEeSLVrU2ifxtpw" source="_SOBuNCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuGCcoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@ba5a8da)" incoming="_SOBuFycoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBuGScoEeSLVrU2ifxtpw" name="ReadSelf">
                      <result xmi:id="_SOBuGicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBuEycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuGycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuHCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOBuHScoEeSLVrU2ifxtpw" name="Clear(name)" structuralFeature="_SOBtlScoEeSLVrU2ifxtpw">
                    <object xmi:id="_SOBuHicoEeSLVrU2ifxtpw" name="Clear(name).object" incoming="_SOBuEycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuHycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuICcoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SOBuIScoEeSLVrU2ifxtpw" name="Clear(name).result" outgoing="_SOBuFScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuIicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuIycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SOBuJCcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@ba5a8da)" incoming="_SOBuFicoEeSLVrU2ifxtpw" outgoing="_SOBuFCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuJScoEeSLVrU2ifxtpw" name="WriteAll(Test::name)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuJicoEeSLVrU2ifxtpw" target="_SOBuMScoEeSLVrU2ifxtpw" source="_SOBuJycoEeSLVrU2ifxtpw"/>
                    <structuredNodeInput xmi:id="_SOBuJycoEeSLVrU2ifxtpw" name="WriteAll(Test::name).input(Test::name)" incoming="_SOBuFCcoEeSLVrU2ifxtpw" outgoing="_SOBuJicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuKCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuKScoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeInput>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBuKicoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_SOBtlScoEeSLVrU2ifxtpw" isReplaceAll="true">
                      <object xmi:id="_SOBuKycoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_SOBuFScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuLCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuLScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SOBuLicoEeSLVrU2ifxtpw" name="Write(name).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuLycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuMCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:id="_SOBuMScoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_SOBuJicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuMicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuMycoEeSLVrU2ifxtpw" value="1"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuNCcoEeSLVrU2ifxtpw" name="RightHandSide@6c0893ec" outgoing="_SOBuFycoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuNScoEeSLVrU2ifxtpw" target="_SOBuNycoEeSLVrU2ifxtpw" source="_SOBuPScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOBuNicoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_SOBthScoEeSLVrU2ifxtpw">
                      <object xmi:id="_SOBuNycoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_SOBuNScoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuOCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuOScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SOBuOicoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_SOBuFicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuOycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuPCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOBuPScoEeSLVrU2ifxtpw" name="Fork()" incoming="_SOBtrycoEeSLVrU2ifxtpw" outgoing="_SOBuNScoEeSLVrU2ifxtpw"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuPicoEeSLVrU2ifxtpw" name="Passthru(terminate)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuPycoEeSLVrU2ifxtpw" target="_SOBuQycoEeSLVrU2ifxtpw" source="_SOBuQCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOBuQCcoEeSLVrU2ifxtpw" name="Passthru(terminate).input" incoming="_SOBtsScoEeSLVrU2ifxtpw" outgoing="_SOBuPycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuQScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuQicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SOBuQycoEeSLVrU2ifxtpw" name="Passthru(terminate).output" incoming="_SOBuPycoEeSLVrU2ifxtpw" outgoing="_SOBuAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuRCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuRScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOBuRicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_SOBthCcoEeSLVrU2ifxtpw">
                <object xmi:id="_SOBuRycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_SOBtsCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuSCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuSScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SOBuSicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_SOBuACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuSycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuTCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_SOBuTScoEeSLVrU2ifxtpw" name="Decision(Test(SignalNewArrival))" incoming="_SOBuACcoEeSLVrU2ifxtpw _SOBuBycoEeSLVrU2ifxtpw" outgoing="_SOBuAScoEeSLVrU2ifxtpw" decisionInputFlow="_SOBuACcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuTicoEeSLVrU2ifxtpw" name="AcceptBlock(SignalTermination)" incoming="_SOBuBScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuTycoEeSLVrU2ifxtpw" name="ExpressionStatement@266a10b4">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuUCcoEeSLVrU2ifxtpw" target="_SOBuUScoEeSLVrU2ifxtpw" source="_SOBuVCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_SOBuUScoEeSLVrU2ifxtpw" name="Fork(terminate)@6ab86bf4" incoming="_SOBuUCcoEeSLVrU2ifxtpw" outgoing="_SOBuCScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuUicoEeSLVrU2ifxtpw" name="RightHandSide@71b796e8">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBuUycoEeSLVrU2ifxtpw" name="Value(true)">
                      <result xmi:id="_SOBuVCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SOBuUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuVScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuVicoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_SOBuVycoEeSLVrU2ifxtpw" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOBuWCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination)" classifier="_SOBtiCcoEeSLVrU2ifxtpw">
                <object xmi:id="_SOBuWScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_SOBtsicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuWicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuWycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SOBuXCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_SOBuBCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuXScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuXicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_SOBuXycoEeSLVrU2ifxtpw" name="Decision(Test(SignalTermination))" incoming="_SOBuBCcoEeSLVrU2ifxtpw _SOBuDCcoEeSLVrU2ifxtpw" outgoing="_SOBuBScoEeSLVrU2ifxtpw _SOBuBycoEeSLVrU2ifxtpw" decisionInputFlow="_SOBuBCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBuYCcoEeSLVrU2ifxtpw" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_SOBuDScoEeSLVrU2ifxtpw" outgoing="_SOBtrycoEeSLVrU2ifxtpw _SOBtsCcoEeSLVrU2ifxtpw _SOBtsicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBuYScoEeSLVrU2ifxtpw" name="Fork(terminate)" incoming="_SOBuCicoEeSLVrU2ifxtpw" outgoing="_SOBttCcoEeSLVrU2ifxtpw _SOBtuicoEeSLVrU2ifxtpw _SOBtvicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBuYicoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival,SignalTermination)" incoming="_SOBuCycoEeSLVrU2ifxtpw" outgoing="_SOBuDCcoEeSLVrU2ifxtpw">
                <result xmi:id="_SOBuYycoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_SOBuDScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuZCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuZScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <trigger xmi:id="_SOBuZicoEeSLVrU2ifxtpw" event="_SOCXeScoEeSLVrU2ifxtpw"/>
                <trigger xmi:id="_SOBuZycoEeSLVrU2ifxtpw" event="_SOCXeicoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SOBuaCcoEeSLVrU2ifxtpw" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_SOBuCycoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuaScoEeSLVrU2ifxtpw" name="ExpressionStatement@9f9a46b" incoming="_SOBttScoEeSLVrU2ifxtpw" outgoing="_SOBtticoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuaicoEeSLVrU2ifxtpw" target="_SOBudCcoEeSLVrU2ifxtpw" source="_SOBucCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuaycoEeSLVrU2ifxtpw" target="_SOBufScoEeSLVrU2ifxtpw" source="_SOBueicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBubCcoEeSLVrU2ifxtpw" target="_SOBugScoEeSLVrU2ifxtpw" source="_SOBudycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBubScoEeSLVrU2ifxtpw" target="_SOBubicoEeSLVrU2ifxtpw" source="_SOBuiicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBubicoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@649971ea)" incoming="_SOBubScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBubycoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_SOBucCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBuaicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBucScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBucicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOBucycoEeSLVrU2ifxtpw" name="Clear(terminate)" structuralFeature="_SOBtmCcoEeSLVrU2ifxtpw">
                <object xmi:id="_SOBudCcoEeSLVrU2ifxtpw" name="Clear(terminate).object" incoming="_SOBuaicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBudScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBudicoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SOBudycoEeSLVrU2ifxtpw" name="Clear(terminate).result" outgoing="_SOBubCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBueCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBueScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBueicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@649971ea)" incoming="_SOBttCcoEeSLVrU2ifxtpw" outgoing="_SOBuaycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBueycoEeSLVrU2ifxtpw" name="WriteAll(Test::terminate)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBufCcoEeSLVrU2ifxtpw" target="_SOBuhycoEeSLVrU2ifxtpw" source="_SOBufScoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SOBufScoEeSLVrU2ifxtpw" name="WriteAll(Test::terminate).input(Test::terminate)" incoming="_SOBuaycoEeSLVrU2ifxtpw" outgoing="_SOBufCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuficoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBufycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBugCcoEeSLVrU2ifxtpw" name="Write(terminate)" structuralFeature="_SOBtmCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SOBugScoEeSLVrU2ifxtpw" name="Write(terminate).object" incoming="_SOBubCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBugicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBugycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOBuhCcoEeSLVrU2ifxtpw" name="Write(terminate).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuhScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuhicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SOBuhycoEeSLVrU2ifxtpw" name="Write(terminate).value" incoming="_SOBufCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuiCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuiScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuiicoEeSLVrU2ifxtpw" name="RightHandSide@17737c27" outgoing="_SOBubScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuiycoEeSLVrU2ifxtpw" name="AcceptStatement@59f7cc85" incoming="_SOBtticoEeSLVrU2ifxtpw" outgoing="_SOBttycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBujCcoEeSLVrU2ifxtpw" target="_SOBujScoEeSLVrU2ifxtpw" source="_SOBujycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBujScoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival)" incoming="_SOBujCcoEeSLVrU2ifxtpw">
                <trigger xmi:id="_SOBujicoEeSLVrU2ifxtpw" event="_SOCXeycoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SOBujycoEeSLVrU2ifxtpw" name="Initial(Accept(SignalNewArrival))" outgoing="_SOBujCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBukCcoEeSLVrU2ifxtpw" name="AcceptStatement@38921009" incoming="_SOBttycoEeSLVrU2ifxtpw" outgoing="_SOBtuScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBukScoEeSLVrU2ifxtpw" target="_SOBulCcoEeSLVrU2ifxtpw" source="_SOBumScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBukicoEeSLVrU2ifxtpw" target="_SOBukycoEeSLVrU2ifxtpw" source="_SOBulScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBukycoEeSLVrU2ifxtpw" name="Fork(Accept(SignalNewArrival).result)" incoming="_SOBukicoEeSLVrU2ifxtpw" outgoing="_SOBtuCcoEeSLVrU2ifxtpw _SOBtuycoEeSLVrU2ifxtpw _SOBtwCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBulCcoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival)" incoming="_SOBukScoEeSLVrU2ifxtpw">
                <result xmi:id="_SOBulScoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival).result" outgoing="_SOBukicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBulicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBulycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <trigger xmi:id="_SOBumCcoEeSLVrU2ifxtpw" event="_SOCXfCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SOBumScoEeSLVrU2ifxtpw" name="Initial(Accept(SignalNewArrival))" outgoing="_SOBukScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBumicoEeSLVrU2ifxtpw" name="ExpressionStatement@7fb6c406" incoming="_SOBtuScoEeSLVrU2ifxtpw" outgoing="_SOBtvScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBumycoEeSLVrU2ifxtpw" target="_SOBupScoEeSLVrU2ifxtpw" source="_SOBuoScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBunCcoEeSLVrU2ifxtpw" target="_SOBuricoEeSLVrU2ifxtpw" source="_SOBuqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBunScoEeSLVrU2ifxtpw" target="_SOBusicoEeSLVrU2ifxtpw" source="_SOBuqCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBunicoEeSLVrU2ifxtpw" target="_SOBunycoEeSLVrU2ifxtpw" source="_SOBuuycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBunycoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@37ffa76b)" incoming="_SOBunicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBuoCcoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_SOBuoScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBumycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuoicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuoycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOBupCcoEeSLVrU2ifxtpw" name="Clear(arrival)" structuralFeature="_SOBtmycoEeSLVrU2ifxtpw">
                <object xmi:id="_SOBupScoEeSLVrU2ifxtpw" name="Clear(arrival).object" incoming="_SOBumycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBupicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBupycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SOBuqCcoEeSLVrU2ifxtpw" name="Clear(arrival).result" outgoing="_SOBunScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuqScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuqicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBuqycoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@37ffa76b)" incoming="_SOBtuCcoEeSLVrU2ifxtpw" outgoing="_SOBunCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBurCcoEeSLVrU2ifxtpw" name="WriteAll(Test::arrival)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBurScoEeSLVrU2ifxtpw" target="_SOBuuCcoEeSLVrU2ifxtpw" source="_SOBuricoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SOBuricoEeSLVrU2ifxtpw" name="WriteAll(Test::arrival).input(Test::arrival)" incoming="_SOBunCcoEeSLVrU2ifxtpw" outgoing="_SOBurScoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBurycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBusCcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBusScoEeSLVrU2ifxtpw" name="Write(arrival)" structuralFeature="_SOBtmycoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SOBusicoEeSLVrU2ifxtpw" name="Write(arrival).object" incoming="_SOBunScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBusycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOButCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOButScoEeSLVrU2ifxtpw" name="Write(arrival).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOButicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOButycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SOBuuCcoEeSLVrU2ifxtpw" name="Write(arrival).value" incoming="_SOBurScoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBuuScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBuuicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuuycoEeSLVrU2ifxtpw" name="RightHandSide@2087b9c5" outgoing="_SOBunicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBuvCcoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d" incoming="_SOBtvScoEeSLVrU2ifxtpw" outgoing="_SOBtwycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuvScoEeSLVrU2ifxtpw" target="_SOBvtScoEeSLVrU2ifxtpw" source="_SOBvrCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuvicoEeSLVrU2ifxtpw" target="_SOBvjicoEeSLVrU2ifxtpw" source="_SOBv0CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuvycoEeSLVrU2ifxtpw" target="_SOBvkScoEeSLVrU2ifxtpw" source="_SOBvzCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuwCcoEeSLVrU2ifxtpw" target="_SOBviycoEeSLVrU2ifxtpw" source="_SOBvtScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBuwScoEeSLVrU2ifxtpw" target="_SOBuwicoEeSLVrU2ifxtpw" source="_SOBvpicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:LoopNode" xmi:id="_SOBuwicoEeSLVrU2ifxtpw" name="Loop(ForStatement@8b8c80d)" incoming="_SOBuwScoEeSLVrU2ifxtpw" bodyOutput="_SOBu7icoEeSLVrU2ifxtpw _SOBu8ScoEeSLVrU2ifxtpw _SOBu9CcoEeSLVrU2ifxtpw _SOBvUScoEeSLVrU2ifxtpw _SOBvYCcoEeSLVrU2ifxtpw _SOBvbScoEeSLVrU2ifxtpw" bodyPart="_SOBu5icoEeSLVrU2ifxtpw _SOBu6CcoEeSLVrU2ifxtpw _SOBvSicoEeSLVrU2ifxtpw _SOBvVCcoEeSLVrU2ifxtpw _SOBvWScoEeSLVrU2ifxtpw _SOBvYycoEeSLVrU2ifxtpw _SOBvaCcoEeSLVrU2ifxtpw" decider="_SOBu4ycoEeSLVrU2ifxtpw" isTestedFirst="true" test="_SOBu3CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuwycoEeSLVrU2ifxtpw" target="_SOBu1icoEeSLVrU2ifxtpw" source="_SOBvcCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuxCcoEeSLVrU2ifxtpw" target="_SOBu1ycoEeSLVrU2ifxtpw" source="_SOBvcycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuxScoEeSLVrU2ifxtpw" target="_SOBu2CcoEeSLVrU2ifxtpw" source="_SOBvdicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuxicoEeSLVrU2ifxtpw" target="_SOBu2ScoEeSLVrU2ifxtpw" source="_SOBveScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuxycoEeSLVrU2ifxtpw" target="_SOBu2icoEeSLVrU2ifxtpw" source="_SOBvfCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuyCcoEeSLVrU2ifxtpw" target="_SOBu2ycoEeSLVrU2ifxtpw" source="_SOBvfycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuyScoEeSLVrU2ifxtpw" target="_SOBu3ScoEeSLVrU2ifxtpw" source="_SOBu2icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuyicoEeSLVrU2ifxtpw" target="_SOBu4CcoEeSLVrU2ifxtpw" source="_SOBu2ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuyycoEeSLVrU2ifxtpw" target="_SOBu5ycoEeSLVrU2ifxtpw" source="_SOBveScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOBuzCcoEeSLVrU2ifxtpw" target="_SOBu6CcoEeSLVrU2ifxtpw" source="_SOBu5icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuzScoEeSLVrU2ifxtpw" target="_SOBvEicoEeSLVrU2ifxtpw" source="_SOBu5ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuzicoEeSLVrU2ifxtpw" target="_SOBvSycoEeSLVrU2ifxtpw" source="_SOBu2ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBuzycoEeSLVrU2ifxtpw" target="_SOBvTicoEeSLVrU2ifxtpw" source="_SOBvVScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu0CcoEeSLVrU2ifxtpw" target="_SOBvWicoEeSLVrU2ifxtpw" source="_SOBu2icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu0ScoEeSLVrU2ifxtpw" target="_SOBvXScoEeSLVrU2ifxtpw" source="_SOBvZCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu0icoEeSLVrU2ifxtpw" target="_SOBvaicoEeSLVrU2ifxtpw" source="_SOBu2ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu0ycoEeSLVrU2ifxtpw" target="_SOBvNCcoEeSLVrU2ifxtpw" source="_SOBu1icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu1CcoEeSLVrU2ifxtpw" target="_SOBvPCcoEeSLVrU2ifxtpw" source="_SOBu1ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu1ScoEeSLVrU2ifxtpw" target="_SOBvRCcoEeSLVrU2ifxtpw" source="_SOBu2CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBu1icoEeSLVrU2ifxtpw" name="Fork(ForStatement@8b8c80d.loopVariable(terminate))" incoming="_SOBuwycoEeSLVrU2ifxtpw" outgoing="_SOBu0ycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBu1ycoEeSLVrU2ifxtpw" name="Fork(ForStatement@8b8c80d.loopVariable(arrival3))" incoming="_SOBuxCcoEeSLVrU2ifxtpw" outgoing="_SOBu1CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBu2CcoEeSLVrU2ifxtpw" name="Fork(ForStatement@8b8c80d.loopVariable(sig))" incoming="_SOBuxScoEeSLVrU2ifxtpw" outgoing="_SOBu1ScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBu2ScoEeSLVrU2ifxtpw" name="Fork(ForStatement@8b8c80d.loopVariable(i))" incoming="_SOBuxicoEeSLVrU2ifxtpw" outgoing="_SOBuzicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBu2icoEeSLVrU2ifxtpw" name="Fork(ForStatement@8b8c80d.loopVariable(counter))" incoming="_SOBuxycoEeSLVrU2ifxtpw" outgoing="_SOBuyScoEeSLVrU2ifxtpw _SOBu0CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBu2ycoEeSLVrU2ifxtpw" name="Fork(ForStatement@8b8c80d.loopVariable(upper))" incoming="_SOBuyCcoEeSLVrU2ifxtpw" outgoing="_SOBuyicoEeSLVrU2ifxtpw _SOBu0icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBu3CcoEeSLVrU2ifxtpw" name="Call(&lt;=)">
                  <argument xmi:id="_SOBu3ScoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_SOBuyScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBu3icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBu3ycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SOBu4CcoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_SOBuyicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBu4ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBu4icoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SOBu4ycoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBu5CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBu5ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBu5icoEeSLVrU2ifxtpw" name="Values(ForStatement@8b8c80d)" outgoing="_SOBuzCcoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ForkNode" xmi:id="_SOBu5ycoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_SOBuyycoEeSLVrU2ifxtpw" outgoing="_SOBuzScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBu6CcoEeSLVrU2ifxtpw" name="Body(ForStatement@8b8c80d)" incoming="_SOBuzCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu6ScoEeSLVrU2ifxtpw" target="_SOBu7icoEeSLVrU2ifxtpw" source="_SOBvNycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu6icoEeSLVrU2ifxtpw" target="_SOBu8ScoEeSLVrU2ifxtpw" source="_SOBvPycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu6ycoEeSLVrU2ifxtpw" target="_SOBu9CcoEeSLVrU2ifxtpw" source="_SOBvRycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu7CcoEeSLVrU2ifxtpw" target="_SOBvMCcoEeSLVrU2ifxtpw" source="_SOBu-icoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SOBu7ScoEeSLVrU2ifxtpw" target="_SOBvAicoEeSLVrU2ifxtpw" source="_SOBu9ycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SOBu7icoEeSLVrU2ifxtpw" name="terminate" incoming="_SOBu6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBu7ycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBu8CcoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_SOBu8ScoEeSLVrU2ifxtpw" name="arrival3" incoming="_SOBu6icoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBu8icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBu8ycoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_SOBu9CcoEeSLVrU2ifxtpw" name="sig" incoming="_SOBu6ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBu9ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBu9icoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBu9ycoEeSLVrU2ifxtpw" name="AcceptStatement@50c64d9" outgoing="_SOBu7ScoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SOBu-CcoEeSLVrU2ifxtpw" target="_SOBu-ycoEeSLVrU2ifxtpw" source="_SOBvAScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBu-ScoEeSLVrU2ifxtpw" target="_SOBu-icoEeSLVrU2ifxtpw" source="_SOBu_CcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOBu-icoEeSLVrU2ifxtpw" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_SOBu-ScoEeSLVrU2ifxtpw" outgoing="_SOBu7CcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBu-ycoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival,SignalTermination)" incoming="_SOBu-CcoEeSLVrU2ifxtpw">
                      <result xmi:id="_SOBu_CcoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_SOBu-ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBu_ScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBu_icoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <trigger xmi:id="_SOBu_ycoEeSLVrU2ifxtpw" event="_SOCXfScoEeSLVrU2ifxtpw"/>
                      <trigger xmi:id="_SOBvACcoEeSLVrU2ifxtpw" event="_SOCXficoEeSLVrU2ifxtpw"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_SOBvAScoEeSLVrU2ifxtpw" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_SOBu-CcoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvAicoEeSLVrU2ifxtpw" name="ExpressionStatement@22e557ec" incoming="_SOBu7ScoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SOBvAycoEeSLVrU2ifxtpw" target="_SOBvECcoEeSLVrU2ifxtpw" source="_SOBvCycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvBCcoEeSLVrU2ifxtpw" target="_SOBvGCcoEeSLVrU2ifxtpw" source="_SOBvFScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvBScoEeSLVrU2ifxtpw" target="_SOBvGicoEeSLVrU2ifxtpw" source="_SOBvDScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvBicoEeSLVrU2ifxtpw" target="_SOBvICcoEeSLVrU2ifxtpw" source="_SOBvGCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvBycoEeSLVrU2ifxtpw" target="_SOBvJCcoEeSLVrU2ifxtpw" source="_SOBvHScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvCCcoEeSLVrU2ifxtpw" target="_SOBvLScoEeSLVrU2ifxtpw" source="_SOBvGCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvCScoEeSLVrU2ifxtpw" target="_SOBvKicoEeSLVrU2ifxtpw" source="_SOBvMCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SOBvCicoEeSLVrU2ifxtpw" target="_SOBvCycoEeSLVrU2ifxtpw" source="_SOBvMScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvCycoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@7eef58d9)" incoming="_SOBvCicoEeSLVrU2ifxtpw" outgoing="_SOBvAycoEeSLVrU2ifxtpw">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBvDCcoEeSLVrU2ifxtpw" name="ReadSelf">
                        <result xmi:id="_SOBvDScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBvBScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvDicoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvDycoEeSLVrU2ifxtpw" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvECcoEeSLVrU2ifxtpw" name="Index(LeftHandSide@7eef58d9)" incoming="_SOBvAycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBvEScoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_SOBvEicoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural).argument(x)" incoming="_SOBuzScoEeSLVrU2ifxtpw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvEycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvFCcoEeSLVrU2ifxtpw" value="1"/>
                      </argument>
                      <result xmi:id="_SOBvFScoEeSLVrU2ifxtpw" name="Call(ToUnlimitedNatural).result(result)" outgoing="_SOBvBCcoEeSLVrU2ifxtpw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvFicoEeSLVrU2ifxtpw"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvFycoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOBvGCcoEeSLVrU2ifxtpw" name="Fork(Fork(i))" incoming="_SOBvBCcoEeSLVrU2ifxtpw" outgoing="_SOBvBicoEeSLVrU2ifxtpw _SOBvCCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_SOBvGScoEeSLVrU2ifxtpw" name="Remove(signals)" structuralFeature="_SOBtoScoEeSLVrU2ifxtpw">
                      <object xmi:id="_SOBvGicoEeSLVrU2ifxtpw" name="Remove(signals).object" incoming="_SOBvBScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvGycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvHCcoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SOBvHScoEeSLVrU2ifxtpw" name="Remove(signals).result" outgoing="_SOBvBycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvHicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvHycoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <removeAt xmi:id="_SOBvICcoEeSLVrU2ifxtpw" name="Remove(signals).removeAt" incoming="_SOBvBicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvIScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvIicoEeSLVrU2ifxtpw" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBvIycoEeSLVrU2ifxtpw" name="Write(signals)" structuralFeature="_SOBtoScoEeSLVrU2ifxtpw">
                      <object xmi:id="_SOBvJCcoEeSLVrU2ifxtpw" name="Write(signals).object" incoming="_SOBvBycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvJScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvJicoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SOBvJycoEeSLVrU2ifxtpw" name="Write(signals).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvKCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvKScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:id="_SOBvKicoEeSLVrU2ifxtpw" name="Write(signals).value" incoming="_SOBvCScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvKycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvLCcoEeSLVrU2ifxtpw" value="1"/>
                      </value>
                      <insertAt xmi:id="_SOBvLScoEeSLVrU2ifxtpw" name="Write(signals).insertAt" incoming="_SOBvCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvLicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvLycoEeSLVrU2ifxtpw" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOBvMCcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@7eef58d9)" incoming="_SOBu7CcoEeSLVrU2ifxtpw" outgoing="_SOBvCScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvMScoEeSLVrU2ifxtpw" name="RightHandSide@69f0238d" outgoing="_SOBvCicoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvMicoEeSLVrU2ifxtpw" name="Passthru(Fork(terminate))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvMycoEeSLVrU2ifxtpw" target="_SOBvNycoEeSLVrU2ifxtpw" source="_SOBvNCcoEeSLVrU2ifxtpw"/>
                    <structuredNodeInput xmi:id="_SOBvNCcoEeSLVrU2ifxtpw" name="Passthru(Fork(terminate)).input" incoming="_SOBu0ycoEeSLVrU2ifxtpw" outgoing="_SOBvMycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvNScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvNicoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_SOBvNycoEeSLVrU2ifxtpw" name="Passthru(Fork(terminate)).output" incoming="_SOBvMycoEeSLVrU2ifxtpw" outgoing="_SOBu6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvOCcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvOScoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvOicoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvOycoEeSLVrU2ifxtpw" target="_SOBvPycoEeSLVrU2ifxtpw" source="_SOBvPCcoEeSLVrU2ifxtpw"/>
                    <structuredNodeInput xmi:id="_SOBvPCcoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_SOBu1CcoEeSLVrU2ifxtpw" outgoing="_SOBvOycoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvPScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvPicoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_SOBvPycoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_SOBvOycoEeSLVrU2ifxtpw" outgoing="_SOBu6icoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvQCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvQScoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvQicoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvQycoEeSLVrU2ifxtpw" target="_SOBvRycoEeSLVrU2ifxtpw" source="_SOBvRCcoEeSLVrU2ifxtpw"/>
                    <structuredNodeInput xmi:id="_SOBvRCcoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_SOBu1ScoEeSLVrU2ifxtpw" outgoing="_SOBvQycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvRScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvRicoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_SOBvRycoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_SOBvQycoEeSLVrU2ifxtpw" outgoing="_SOBu6ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvSCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvSScoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBvSicoEeSLVrU2ifxtpw" name="Call(+)">
                  <argument xmi:id="_SOBvSycoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SOBuzicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvTCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvTScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SOBvTicoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SOBuzycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvTycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvUCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SOBvUScoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvUicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvUycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBvVCcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SOBvVScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SOBuzycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvVicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvVycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SOBvWCcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBvWScoEeSLVrU2ifxtpw" name="Call(+)">
                  <argument xmi:id="_SOBvWicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SOBu0CcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvWycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvXCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SOBvXScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SOBu0ScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvXicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvXycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SOBvYCcoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvYScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvYicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBvYycoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SOBvZCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SOBu0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvZScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvZicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SOBvZycoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvaCcoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvaScoEeSLVrU2ifxtpw" target="_SOBvbScoEeSLVrU2ifxtpw" source="_SOBvaicoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOBvaicoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).input" incoming="_SOBu0icoEeSLVrU2ifxtpw" outgoing="_SOBvaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvaycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvbCcoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SOBvbScoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).output" incoming="_SOBvaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvbicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvbycoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <loopVariable xmi:id="_SOBvcCcoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariable(terminate)" outgoing="_SOBuwycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvcScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvcicoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_SOBvcycoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariable(arrival3)" outgoing="_SOBuxCcoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvdCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvdScoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_SOBvdicoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariable(sig)" outgoing="_SOBuxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvdycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBveCcoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_SOBveScoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariable(i)" outgoing="_SOBuxicoEeSLVrU2ifxtpw _SOBuyycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBveicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBveycoEeSLVrU2ifxtpw" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_SOBvfCcoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariable(counter)" outgoing="_SOBuxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvfScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvficoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_SOBvfycoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariable(upper)" outgoing="_SOBuyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvgCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvgScoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_SOBvgicoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariableInput(terminate)" incoming="_SOBtuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvgycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvhCcoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SOBvhScoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariableInput(arrival3)" incoming="_SOBtuycoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvhicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvhycoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SOBviCcoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariableInput(sig)" incoming="_SOBtvCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBviScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBviicoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SOBviycoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariableInput(i)" incoming="_SOBuwCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvjCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvjScoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SOBvjicoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariableInput(counter)" incoming="_SOBuvicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvjycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvkCcoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SOBvkScoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.loopVariableInput(upper)" incoming="_SOBuvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvkicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvkycoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <result xmi:id="_SOBvlCcoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvlScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvlicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SOBvlycoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.result(arrival3)" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvmCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvmScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SOBvmicoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvmycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvnCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SOBvnScoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvnicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvnycoEeSLVrU2ifxtpw" value="*"/>
                </result>
                <result xmi:id="_SOBvoCcoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvoScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvoicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SOBvoycoEeSLVrU2ifxtpw" name="ForStatement@8b8c80d.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvpCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvpScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBvpicoEeSLVrU2ifxtpw" name="LoopVariables(ForStatement@8b8c80d)" outgoing="_SOBuwScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvpycoEeSLVrU2ifxtpw" target="_SOBvtycoEeSLVrU2ifxtpw" source="_SOBvsScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvqCcoEeSLVrU2ifxtpw" target="_SOBvuicoEeSLVrU2ifxtpw" source="_SOBvtScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvqScoEeSLVrU2ifxtpw" target="_SOBvxicoEeSLVrU2ifxtpw" source="_SOBvvScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBvqicoEeSLVrU2ifxtpw" target="_SOBvyScoEeSLVrU2ifxtpw" source="_SOBvwScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBvqycoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SOBvrCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SOBuvScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvrScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvricoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SOBvrycoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBvsCcoEeSLVrU2ifxtpw" name="Value(2)">
                  <result xmi:id="_SOBvsScoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SOBvpycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvsicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvsycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SOBvtCcoEeSLVrU2ifxtpw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBvtScoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_SOBuvScoEeSLVrU2ifxtpw" outgoing="_SOBuwCcoEeSLVrU2ifxtpw _SOBvqCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBvticoEeSLVrU2ifxtpw" name="Call(-)">
                  <argument xmi:id="_SOBvtycoEeSLVrU2ifxtpw" name="Call(-).argument(x)" incoming="_SOBvpycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvuCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvuScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SOBvuicoEeSLVrU2ifxtpw" name="Call(-).argument(y)" incoming="_SOBvqCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvuycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvvCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SOBvvScoEeSLVrU2ifxtpw" name="Call(-).result(result)" outgoing="_SOBvqScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvvicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvvycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBvwCcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SOBvwScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SOBvqicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvwicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvwycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SOBvxCcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBvxScoEeSLVrU2ifxtpw" name="Call(+)">
                  <argument xmi:id="_SOBvxicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SOBvqScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvxycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvyCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SOBvyScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SOBvqicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvyicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvyycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SOBvzCcoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_SOBuvycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBvzScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBvzicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBvzycoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SOBv0CcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SOBuvicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBv0ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBv0icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SOBv0ycoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_SOBv1CcoEeSLVrU2ifxtpw" name="DoStatement@64715749" incoming="_SOBtwycoEeSLVrU2ifxtpw" outgoing="_SOBtxCcoEeSLVrU2ifxtpw" bodyOutput="_SOBv8CcoEeSLVrU2ifxtpw _SOBv8ycoEeSLVrU2ifxtpw _SOBv9icoEeSLVrU2ifxtpw _SOBv-ScoEeSLVrU2ifxtpw" bodyPart="_SOBv6CcoEeSLVrU2ifxtpw" decider="_SOBv5ScoEeSLVrU2ifxtpw" test="_SOBv4CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv1ScoEeSLVrU2ifxtpw" target="_SOBv3CcoEeSLVrU2ifxtpw" source="_SOBwbicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv1icoEeSLVrU2ifxtpw" target="_SOBv3ScoEeSLVrU2ifxtpw" source="_SOBwcScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv1ycoEeSLVrU2ifxtpw" target="_SOBv3icoEeSLVrU2ifxtpw" source="_SOBwdCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv2CcoEeSLVrU2ifxtpw" target="_SOBv3ycoEeSLVrU2ifxtpw" source="_SOBwdycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv2ScoEeSLVrU2ifxtpw" target="_SOBwUCcoEeSLVrU2ifxtpw" source="_SOBv3CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv2icoEeSLVrU2ifxtpw" target="_SOBwYCcoEeSLVrU2ifxtpw" source="_SOBv3icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv2ycoEeSLVrU2ifxtpw" target="_SOBwaCcoEeSLVrU2ifxtpw" source="_SOBv3ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBv3CcoEeSLVrU2ifxtpw" name="Fork(DoStatement@64715749.loopVariable(terminate))" incoming="_SOBv1ScoEeSLVrU2ifxtpw" outgoing="_SOBv2ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBv3ScoEeSLVrU2ifxtpw" name="Fork(DoStatement@64715749.loopVariable(s))" incoming="_SOBv1icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBv3icoEeSLVrU2ifxtpw" name="Fork(DoStatement@64715749.loopVariable(arrival3))" incoming="_SOBv1ycoEeSLVrU2ifxtpw" outgoing="_SOBv2icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBv3ycoEeSLVrU2ifxtpw" name="Fork(DoStatement@64715749.loopVariable(sig))" incoming="_SOBv2CcoEeSLVrU2ifxtpw" outgoing="_SOBv2ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBv4CcoEeSLVrU2ifxtpw" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv4ScoEeSLVrU2ifxtpw" target="_SOBv5ScoEeSLVrU2ifxtpw" source="_SOBv4icoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SOBv4icoEeSLVrU2ifxtpw" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" incoming="_SOBtwicoEeSLVrU2ifxtpw" outgoing="_SOBv4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBv4ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBv5CcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SOBv5ScoEeSLVrU2ifxtpw" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_SOBv4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBv5icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBv5ycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBv6CcoEeSLVrU2ifxtpw" name="BodyPart(DoStatement@64715749)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv6ScoEeSLVrU2ifxtpw" target="_SOBv8CcoEeSLVrU2ifxtpw" source="_SOBwUycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv6icoEeSLVrU2ifxtpw" target="_SOBv8ycoEeSLVrU2ifxtpw" source="_SOBwWycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv6ycoEeSLVrU2ifxtpw" target="_SOBv9icoEeSLVrU2ifxtpw" source="_SOBwYycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv7CcoEeSLVrU2ifxtpw" target="_SOBv-ScoEeSLVrU2ifxtpw" source="_SOBwaycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv7ScoEeSLVrU2ifxtpw" target="_SOBwSCcoEeSLVrU2ifxtpw" source="_SOBwAScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOBv7icoEeSLVrU2ifxtpw" target="_SOBwRicoEeSLVrU2ifxtpw" source="_SOBv_CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBv7ycoEeSLVrU2ifxtpw" target="_SOBwWCcoEeSLVrU2ifxtpw" source="_SOBwAScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SOBv8CcoEeSLVrU2ifxtpw" name="terminate" incoming="_SOBv6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBv8ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBv8icoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_SOBv8ycoEeSLVrU2ifxtpw" name="s" incoming="_SOBv6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBv9CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBv9ScoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_SOBv9icoEeSLVrU2ifxtpw" name="arrival3" incoming="_SOBv6ycoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBv9ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBv-CcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_SOBv-ScoEeSLVrU2ifxtpw" name="sig" incoming="_SOBv7CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBv-icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBv-ycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBv_CcoEeSLVrU2ifxtpw" name="Body(DoStatement@64715749)" outgoing="_SOBv7icoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SOBv_ScoEeSLVrU2ifxtpw" target="_SOBwCScoEeSLVrU2ifxtpw" source="_SOBv_icoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBv_icoEeSLVrU2ifxtpw" name="AcceptStatement@59b154cf" outgoing="_SOBv_ScoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SOBv_ycoEeSLVrU2ifxtpw" target="_SOBwAicoEeSLVrU2ifxtpw" source="_SOBwCCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwACcoEeSLVrU2ifxtpw" target="_SOBwAScoEeSLVrU2ifxtpw" source="_SOBwAycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOBwAScoEeSLVrU2ifxtpw" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_SOBwACcoEeSLVrU2ifxtpw" outgoing="_SOBv7ScoEeSLVrU2ifxtpw _SOBv7ycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBwAicoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival,SignalTermination)" incoming="_SOBv_ycoEeSLVrU2ifxtpw">
                      <result xmi:id="_SOBwAycoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_SOBwACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwBCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwBScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <trigger xmi:id="_SOBwBicoEeSLVrU2ifxtpw" event="_SOCXfycoEeSLVrU2ifxtpw"/>
                      <trigger xmi:id="_SOBwBycoEeSLVrU2ifxtpw" event="_SOCXgCcoEeSLVrU2ifxtpw"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_SOBwCCcoEeSLVrU2ifxtpw" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_SOBv_ycoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwCScoEeSLVrU2ifxtpw" name="ExpressionStatement@61a4c3c0" incoming="_SOBv_ScoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwCicoEeSLVrU2ifxtpw" target="_SOBwFycoEeSLVrU2ifxtpw" source="_SOBwHicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwCycoEeSLVrU2ifxtpw" target="_SOBwLScoEeSLVrU2ifxtpw" source="_SOBwIycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwDCcoEeSLVrU2ifxtpw" target="_SOBwJycoEeSLVrU2ifxtpw" source="_SOBwLScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwDScoEeSLVrU2ifxtpw" target="_SOBwLycoEeSLVrU2ifxtpw" source="_SOBwLScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwDicoEeSLVrU2ifxtpw" target="_SOBwOCcoEeSLVrU2ifxtpw" source="_SOBwNScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwDycoEeSLVrU2ifxtpw" target="_SOBwPCcoEeSLVrU2ifxtpw" source="_SOBwMicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwECcoEeSLVrU2ifxtpw" target="_SOBwNScoEeSLVrU2ifxtpw" source="_SOBwGicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwEScoEeSLVrU2ifxtpw" target="_SOBwRScoEeSLVrU2ifxtpw" source="_SOBwKicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwEicoEeSLVrU2ifxtpw" target="_SOBwFCcoEeSLVrU2ifxtpw" source="_SOBwRScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOBwEycoEeSLVrU2ifxtpw" name="Call(+)">
                      <argument xmi:id="_SOBwFCcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SOBwEicoEeSLVrU2ifxtpw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwFScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwFicoEeSLVrU2ifxtpw" value="1"/>
                      </argument>
                      <argument xmi:id="_SOBwFycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SOBwCicoEeSLVrU2ifxtpw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwGCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwGScoEeSLVrU2ifxtpw" value="1"/>
                      </argument>
                      <result xmi:id="_SOBwGicoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_SOBwECcoEeSLVrU2ifxtpw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwGycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwHCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBwHScoEeSLVrU2ifxtpw" name="Value(1)">
                      <result xmi:id="_SOBwHicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SOBwCicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwHycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwICcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_SOBwIScoEeSLVrU2ifxtpw" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBwIicoEeSLVrU2ifxtpw" name="ReadSelf">
                      <result xmi:id="_SOBwIycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBwCycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwJCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwJScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOBwJicoEeSLVrU2ifxtpw" name="Read(count)" structuralFeature="_SOBtnicoEeSLVrU2ifxtpw">
                      <object xmi:id="_SOBwJycoEeSLVrU2ifxtpw" name="Read(count).object" incoming="_SOBwDCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwKCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwKScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SOBwKicoEeSLVrU2ifxtpw" name="Read(count).result" outgoing="_SOBwEScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwKycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwLCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOBwLScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOBwCycoEeSLVrU2ifxtpw" outgoing="_SOBwDCcoEeSLVrU2ifxtpw _SOBwDScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOBwLicoEeSLVrU2ifxtpw" name="Clear(count)" structuralFeature="_SOBtnicoEeSLVrU2ifxtpw">
                      <object xmi:id="_SOBwLycoEeSLVrU2ifxtpw" name="Clear(count).object" incoming="_SOBwDScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwMCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwMScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SOBwMicoEeSLVrU2ifxtpw" name="Clear(count).result" outgoing="_SOBwDycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwMycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwNCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOBwNScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@b64e155)" incoming="_SOBwECcoEeSLVrU2ifxtpw" outgoing="_SOBwDicoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwNicoEeSLVrU2ifxtpw" name="WriteAll(Test::count)">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwNycoEeSLVrU2ifxtpw" target="_SOBwQicoEeSLVrU2ifxtpw" source="_SOBwOCcoEeSLVrU2ifxtpw"/>
                      <structuredNodeInput xmi:id="_SOBwOCcoEeSLVrU2ifxtpw" name="WriteAll(Test::count).input(Test::count)" incoming="_SOBwDicoEeSLVrU2ifxtpw" outgoing="_SOBwNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwOScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwOicoEeSLVrU2ifxtpw" value="1"/>
                      </structuredNodeInput>
                      <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBwOycoEeSLVrU2ifxtpw" name="Write(count)" structuralFeature="_SOBtnicoEeSLVrU2ifxtpw" isReplaceAll="true">
                        <object xmi:id="_SOBwPCcoEeSLVrU2ifxtpw" name="Write(count).object" incoming="_SOBwDycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwPScoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwPicoEeSLVrU2ifxtpw" value="1"/>
                        </object>
                        <result xmi:id="_SOBwPycoEeSLVrU2ifxtpw" name="Write(count).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwQCcoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwQScoEeSLVrU2ifxtpw" value="1"/>
                        </result>
                        <value xmi:id="_SOBwQicoEeSLVrU2ifxtpw" name="Write(count).value" incoming="_SOBwNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwQycoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwRCcoEeSLVrU2ifxtpw" value="1"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOBwRScoEeSLVrU2ifxtpw" name="Fork(Read(count).result)" incoming="_SOBwEScoEeSLVrU2ifxtpw" outgoing="_SOBwEicoEeSLVrU2ifxtpw"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwRicoEeSLVrU2ifxtpw" name="Condition(DoStatement@64715749)" incoming="_SOBv7icoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOBwRycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_SOBthCcoEeSLVrU2ifxtpw" isDirect="true">
                    <object xmi:id="_SOBwSCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_SOBv7ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwSScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwSicoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SOBwSycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_SOBtwicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwTCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwTScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwTicoEeSLVrU2ifxtpw" name="Passthru(Fork(terminate))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwTycoEeSLVrU2ifxtpw" target="_SOBwUycoEeSLVrU2ifxtpw" source="_SOBwUCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOBwUCcoEeSLVrU2ifxtpw" name="Passthru(Fork(terminate)).input" incoming="_SOBv2ScoEeSLVrU2ifxtpw" outgoing="_SOBwTycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwUScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwUicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SOBwUycoEeSLVrU2ifxtpw" name="Passthru(Fork(terminate)).output" incoming="_SOBwTycoEeSLVrU2ifxtpw" outgoing="_SOBv6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwVCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwVScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwVicoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwVycoEeSLVrU2ifxtpw" target="_SOBwWycoEeSLVrU2ifxtpw" source="_SOBwWCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOBwWCcoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_SOBv7ycoEeSLVrU2ifxtpw" outgoing="_SOBwVycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwWScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwWicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SOBwWycoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_SOBwVycoEeSLVrU2ifxtpw" outgoing="_SOBv6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwXCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwXScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwXicoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwXycoEeSLVrU2ifxtpw" target="_SOBwYycoEeSLVrU2ifxtpw" source="_SOBwYCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOBwYCcoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_SOBv2icoEeSLVrU2ifxtpw" outgoing="_SOBwXycoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwYScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwYicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SOBwYycoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_SOBwXycoEeSLVrU2ifxtpw" outgoing="_SOBv6ycoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwZCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwZScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwZicoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwZycoEeSLVrU2ifxtpw" target="_SOBwaycoEeSLVrU2ifxtpw" source="_SOBwaCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOBwaCcoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_SOBv2ycoEeSLVrU2ifxtpw" outgoing="_SOBwZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwaScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwaicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SOBwaycoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_SOBwZycoEeSLVrU2ifxtpw" outgoing="_SOBv7CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwbCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwbScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <loopVariable xmi:id="_SOBwbicoEeSLVrU2ifxtpw" name="DoStatement@64715749.loopVariable(terminate)" outgoing="_SOBv1ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwbycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwcCcoEeSLVrU2ifxtpw" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_SOBwcScoEeSLVrU2ifxtpw" name="DoStatement@64715749.loopVariable(s)" outgoing="_SOBv1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwcicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwcycoEeSLVrU2ifxtpw" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_SOBwdCcoEeSLVrU2ifxtpw" name="DoStatement@64715749.loopVariable(arrival3)" outgoing="_SOBv1ycoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwdScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwdicoEeSLVrU2ifxtpw" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_SOBwdycoEeSLVrU2ifxtpw" name="DoStatement@64715749.loopVariable(sig)" outgoing="_SOBv2CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBweCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBweScoEeSLVrU2ifxtpw" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_SOBweicoEeSLVrU2ifxtpw" name="DoStatement@64715749.loopVariableInput(terminate)" incoming="_SOBtvicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBweycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwfCcoEeSLVrU2ifxtpw" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_SOBwfScoEeSLVrU2ifxtpw" name="DoStatement@64715749.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwficoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwfycoEeSLVrU2ifxtpw" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_SOBwgCcoEeSLVrU2ifxtpw" name="DoStatement@64715749.loopVariableInput(arrival3)" incoming="_SOBtwCcoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwgScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwgicoEeSLVrU2ifxtpw" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_SOBwgycoEeSLVrU2ifxtpw" name="DoStatement@64715749.loopVariableInput(sig)" incoming="_SOBtwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwhCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwhScoEeSLVrU2ifxtpw" value="1"/>
              </loopVariableInput>
              <result xmi:id="_SOBwhicoEeSLVrU2ifxtpw" name="DoStatement@64715749.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwhycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwiCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SOBwiScoEeSLVrU2ifxtpw" name="DoStatement@64715749.result(s)" outgoing="_SOBtvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwiicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwiycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SOBwjCcoEeSLVrU2ifxtpw" name="DoStatement@64715749.result(arrival3)" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwjScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwjicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SOBwjycoEeSLVrU2ifxtpw" name="DoStatement@64715749.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwkCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwkScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOBwkicoEeSLVrU2ifxtpw" name="Fork(s)" incoming="_SOBtvycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_SOBwkycoEeSLVrU2ifxtpw" name="IfStatement@651551bb" incoming="_SOBtxCcoEeSLVrU2ifxtpw" outgoing="_SOBtxScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBwlCcoEeSLVrU2ifxtpw" target="_SOBwoCcoEeSLVrU2ifxtpw" source="_SOBwmycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBwlScoEeSLVrU2ifxtpw" target="_SOBw0icoEeSLVrU2ifxtpw" source="_SOBwzScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBwlicoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SOBwlycoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwmCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwmScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SOBwmicoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwmycoEeSLVrU2ifxtpw" name="AcceptStatement@18e5c476" outgoing="_SOBwlCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOBwnCcoEeSLVrU2ifxtpw" target="_SOBwnScoEeSLVrU2ifxtpw" source="_SOBwnycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBwnScoEeSLVrU2ifxtpw" name="Accept(SignalNewArrival)" incoming="_SOBwnCcoEeSLVrU2ifxtpw">
                  <trigger xmi:id="_SOBwnicoEeSLVrU2ifxtpw" event="_SOCXgScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SOBwnycoEeSLVrU2ifxtpw" name="Initial(Accept(SignalNewArrival))" outgoing="_SOBwnCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwoCcoEeSLVrU2ifxtpw" name="ExpressionStatement@2505907d" incoming="_SOBwlCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwoScoEeSLVrU2ifxtpw" target="_SOBwrCcoEeSLVrU2ifxtpw" source="_SOBwqCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwoicoEeSLVrU2ifxtpw" target="_SOBwtScoEeSLVrU2ifxtpw" source="_SOBwsicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwoycoEeSLVrU2ifxtpw" target="_SOBwuScoEeSLVrU2ifxtpw" source="_SOBwrycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwpCcoEeSLVrU2ifxtpw" target="_SOBwsicoEeSLVrU2ifxtpw" source="_SOBwxCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOBwpScoEeSLVrU2ifxtpw" target="_SOBwpicoEeSLVrU2ifxtpw" source="_SOBwwicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwpicoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@36c31071)" incoming="_SOBwpScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBwpycoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_SOBwqCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBwoScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwqScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwqicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOBwqycoEeSLVrU2ifxtpw" name="Clear(flag)" structuralFeature="_SOBtpCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOBwrCcoEeSLVrU2ifxtpw" name="Clear(flag).object" incoming="_SOBwoScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwrScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwricoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOBwrycoEeSLVrU2ifxtpw" name="Clear(flag).result" outgoing="_SOBwoycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwsCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwsScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBwsicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@36c31071)" incoming="_SOBwpCcoEeSLVrU2ifxtpw" outgoing="_SOBwoicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwsycoEeSLVrU2ifxtpw" name="WriteAll(Test::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBwtCcoEeSLVrU2ifxtpw" target="_SOBwvycoEeSLVrU2ifxtpw" source="_SOBwtScoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOBwtScoEeSLVrU2ifxtpw" name="WriteAll(Test::flag).input(Test::flag)" incoming="_SOBwoicoEeSLVrU2ifxtpw" outgoing="_SOBwtCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwticoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwtycoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBwuCcoEeSLVrU2ifxtpw" name="Write(flag)" structuralFeature="_SOBtpCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_SOBwuScoEeSLVrU2ifxtpw" name="Write(flag).object" incoming="_SOBwoycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwuicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwuycoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SOBwvCcoEeSLVrU2ifxtpw" name="Write(flag).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwvScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwvicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_SOBwvycoEeSLVrU2ifxtpw" name="Write(flag).value" incoming="_SOBwtCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwwCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwwScoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwwicoEeSLVrU2ifxtpw" name="RightHandSide@2368ce87" outgoing="_SOBwpScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBwwycoEeSLVrU2ifxtpw" name="Value(true)">
                    <result xmi:id="_SOBwxCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SOBwpCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwxScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwxicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_SOBwxycoEeSLVrU2ifxtpw" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBwyCcoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SOBwyScoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBwyicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBwyycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SOBwzCcoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBwzScoEeSLVrU2ifxtpw" name="AcceptStatement@4a882cc2" outgoing="_SOBwlScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOBwzicoEeSLVrU2ifxtpw" target="_SOBwzycoEeSLVrU2ifxtpw" source="_SOBw0ScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBwzycoEeSLVrU2ifxtpw" name="Accept(SignalTermination)" incoming="_SOBwzicoEeSLVrU2ifxtpw">
                  <trigger xmi:id="_SOBw0CcoEeSLVrU2ifxtpw" event="_SOCXgicoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SOBw0ScoEeSLVrU2ifxtpw" name="Initial(Accept(SignalTermination))" outgoing="_SOBwzicoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBw0icoEeSLVrU2ifxtpw" name="ExpressionStatement@55df321" incoming="_SOBwlScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBw0ycoEeSLVrU2ifxtpw" target="_SOBw3icoEeSLVrU2ifxtpw" source="_SOBw2icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBw1CcoEeSLVrU2ifxtpw" target="_SOBw5ycoEeSLVrU2ifxtpw" source="_SOBw5CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBw1ScoEeSLVrU2ifxtpw" target="_SOBw6ycoEeSLVrU2ifxtpw" source="_SOBw4ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBw1icoEeSLVrU2ifxtpw" target="_SOBw5CcoEeSLVrU2ifxtpw" source="_SOBw9icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOBw1ycoEeSLVrU2ifxtpw" target="_SOBw2CcoEeSLVrU2ifxtpw" source="_SOBw9CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBw2CcoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@32af0c94)" incoming="_SOBw1ycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBw2ScoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_SOBw2icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBw0ycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBw2ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBw3CcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOBw3ScoEeSLVrU2ifxtpw" name="Clear(flag)" structuralFeature="_SOBtpCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOBw3icoEeSLVrU2ifxtpw" name="Clear(flag).object" incoming="_SOBw0ycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBw3ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBw4CcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOBw4ScoEeSLVrU2ifxtpw" name="Clear(flag).result" outgoing="_SOBw1ScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBw4icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBw4ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOBw5CcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@32af0c94)" incoming="_SOBw1icoEeSLVrU2ifxtpw" outgoing="_SOBw1CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBw5ScoEeSLVrU2ifxtpw" name="WriteAll(Test::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBw5icoEeSLVrU2ifxtpw" target="_SOBw8ScoEeSLVrU2ifxtpw" source="_SOBw5ycoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOBw5ycoEeSLVrU2ifxtpw" name="WriteAll(Test::flag).input(Test::flag)" incoming="_SOBw1CcoEeSLVrU2ifxtpw" outgoing="_SOBw5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBw6CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBw6ScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBw6icoEeSLVrU2ifxtpw" name="Write(flag)" structuralFeature="_SOBtpCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_SOBw6ycoEeSLVrU2ifxtpw" name="Write(flag).object" incoming="_SOBw1ScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBw7CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBw7ScoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SOBw7icoEeSLVrU2ifxtpw" name="Write(flag).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBw7ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBw8CcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_SOBw8ScoEeSLVrU2ifxtpw" name="Write(flag).value" incoming="_SOBw5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBw8icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBw8ycoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBw9CcoEeSLVrU2ifxtpw" name="RightHandSide@3126eee5" outgoing="_SOBw1ycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOBw9ScoEeSLVrU2ifxtpw" name="Value(false)">
                    <result xmi:id="_SOBw9icoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_SOBw1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBw9ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBw-CcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_SOBw-ScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <clause xmi:id="_SOBw-icoEeSLVrU2ifxtpw" body="_SOBwmycoEeSLVrU2ifxtpw _SOBwoCcoEeSLVrU2ifxtpw" decider="_SOBwlycoEeSLVrU2ifxtpw" successorClause="_SOBw-ycoEeSLVrU2ifxtpw" test="_SOBwlicoEeSLVrU2ifxtpw"/>
              <clause xmi:id="_SOBw-ycoEeSLVrU2ifxtpw" body="_SOBwzScoEeSLVrU2ifxtpw _SOBw0icoEeSLVrU2ifxtpw" decider="_SOBwyScoEeSLVrU2ifxtpw" predecessorClause="_SOBw-icoEeSLVrU2ifxtpw" test="_SOBwyCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBw_CcoEeSLVrU2ifxtpw" name="AcceptStatement@5589a323" incoming="_SOBtxScoEeSLVrU2ifxtpw" outgoing="_SOBtxycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBw_ScoEeSLVrU2ifxtpw" target="_SOBxACcoEeSLVrU2ifxtpw" source="_SOBxBScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBw_icoEeSLVrU2ifxtpw" target="_SOBw_ycoEeSLVrU2ifxtpw" source="_SOBxAScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBw_ycoEeSLVrU2ifxtpw" name="Fork(Accept(SignalTermination).result)" incoming="_SOBw_icoEeSLVrU2ifxtpw" outgoing="_SOBtxicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SOBxACcoEeSLVrU2ifxtpw" name="Accept(SignalTermination)" incoming="_SOBw_ScoEeSLVrU2ifxtpw">
                <result xmi:id="_SOBxAScoEeSLVrU2ifxtpw" name="Accept(SignalTermination).result" outgoing="_SOBw_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBxAicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBxAycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <trigger xmi:id="_SOBxBCcoEeSLVrU2ifxtpw" event="_SOCXgycoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SOBxBScoEeSLVrU2ifxtpw" name="Initial(Accept(SignalTermination))" outgoing="_SOBw_ScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBxBicoEeSLVrU2ifxtpw" name="ExpressionStatement@5b656edc" incoming="_SOBtxycoEeSLVrU2ifxtpw" outgoing="_SOBtyCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBxBycoEeSLVrU2ifxtpw" target="_SOBxEScoEeSLVrU2ifxtpw" source="_SOBxDScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBxCCcoEeSLVrU2ifxtpw" target="_SOBxGicoEeSLVrU2ifxtpw" source="_SOBxFycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBxCScoEeSLVrU2ifxtpw" target="_SOBxHicoEeSLVrU2ifxtpw" source="_SOBxFCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOBxCicoEeSLVrU2ifxtpw" target="_SOBxCycoEeSLVrU2ifxtpw" source="_SOCTkCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBxCycoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@60515c64)" incoming="_SOBxCicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SOBxDCcoEeSLVrU2ifxtpw" name="ReadSelf">
                  <result xmi:id="_SOBxDScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOBxBycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBxDicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBxDycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOBxECcoEeSLVrU2ifxtpw" name="Clear(sig1)" structuralFeature="_SOBtkicoEeSLVrU2ifxtpw">
                <object xmi:id="_SOBxEScoEeSLVrU2ifxtpw" name="Clear(sig1).object" incoming="_SOBxBycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBxEicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBxEycoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SOBxFCcoEeSLVrU2ifxtpw" name="Clear(sig1).result" outgoing="_SOBxCScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBxFScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBxFicoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SOBxFycoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@60515c64)" incoming="_SOBtxicoEeSLVrU2ifxtpw" outgoing="_SOBxCCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOBxGCcoEeSLVrU2ifxtpw" name="WriteAll(Test::sig1)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOBxGScoEeSLVrU2ifxtpw" target="_SOBxJCcoEeSLVrU2ifxtpw" source="_SOBxGicoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SOBxGicoEeSLVrU2ifxtpw" name="WriteAll(Test::sig1).input(Test::sig1)" incoming="_SOBxCCcoEeSLVrU2ifxtpw" outgoing="_SOBxGScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBxGycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBxHCcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOBxHScoEeSLVrU2ifxtpw" name="Write(sig1)" structuralFeature="_SOBtkicoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SOBxHicoEeSLVrU2ifxtpw" name="Write(sig1).object" incoming="_SOBxCScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBxHycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBxICcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOBxIScoEeSLVrU2ifxtpw" name="Write(sig1).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBxIicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBxIycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SOBxJCcoEeSLVrU2ifxtpw" name="Write(sig1).value" incoming="_SOBxGScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOBxJScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOBxJicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCTkCcoEeSLVrU2ifxtpw" name="RightHandSide@1bf5f000" outgoing="_SOBxCicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCTkScoEeSLVrU2ifxtpw" name="ExpressionStatement@5b6c2c78" incoming="_SOBtyCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTkicoEeSLVrU2ifxtpw" target="_SOCTlicoEeSLVrU2ifxtpw" source="_SOCToScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTkycoEeSLVrU2ifxtpw" target="_SOCTpCcoEeSLVrU2ifxtpw" source="_SOCTmicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTlCcoEeSLVrU2ifxtpw" target="_SOCTnicoEeSLVrU2ifxtpw" source="_SOCTpCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCTlScoEeSLVrU2ifxtpw" name="SendSignal(Continue)" signal="_SOCXdCcoEeSLVrU2ifxtpw">
                <target xmi:id="_SOCTlicoEeSLVrU2ifxtpw" name="SendSignal(Continue).target" incoming="_SOCTkicoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCTlycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCTmCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SOCTmScoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_SOCTmicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOCTkycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCTmycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCTnCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCTnScoEeSLVrU2ifxtpw" name="Read(tester)" structuralFeature="_SOBtpycoEeSLVrU2ifxtpw">
                <object xmi:id="_SOCTnicoEeSLVrU2ifxtpw" name="Read(tester).object" incoming="_SOCTlCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCTnycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCToCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SOCToScoEeSLVrU2ifxtpw" name="Read(tester).result" outgoing="_SOCTkicoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCToicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCToycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SOCTpCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOCTkycoEeSLVrU2ifxtpw" outgoing="_SOCTlCcoEeSLVrU2ifxtpw"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOCTpScoEeSLVrU2ifxtpw" name="Test$method$1" specification="_SOCUZycoEeSLVrU2ifxtpw" node="_SOCTrycoEeSLVrU2ifxtpw _SOCTsCcoEeSLVrU2ifxtpw _SOCTsScoEeSLVrU2ifxtpw _SOCTsicoEeSLVrU2ifxtpw" group="_SOCTsicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SOCTpicoEeSLVrU2ifxtpw" name="tester" type="_SOCUcCcoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCTpycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCTqCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SOCTqScoEeSLVrU2ifxtpw" name="" type="_SOBtiicoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCTqicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCTqycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTrCcoEeSLVrU2ifxtpw" target="_SOCTsCcoEeSLVrU2ifxtpw" source="_SOCTrycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTrScoEeSLVrU2ifxtpw" target="_SOCT0CcoEeSLVrU2ifxtpw" source="_SOCTsCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTricoEeSLVrU2ifxtpw" target="_SOCTsScoEeSLVrU2ifxtpw" source="_SOCT5ScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SOCTsicoEeSLVrU2ifxtpw" name="Body(Test$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTsycoEeSLVrU2ifxtpw" target="_SOCT5ScoEeSLVrU2ifxtpw" source="_SOCT4icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTtCcoEeSLVrU2ifxtpw" target="_SOCT5ycoEeSLVrU2ifxtpw" source="_SOCT5ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCTtScoEeSLVrU2ifxtpw" target="_SOCTvicoEeSLVrU2ifxtpw" source="_SOCT5icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTticoEeSLVrU2ifxtpw" target="_SOCT6ycoEeSLVrU2ifxtpw" source="_SOCT5ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTtycoEeSLVrU2ifxtpw" target="_SOCT8icoEeSLVrU2ifxtpw" source="_SOCT7icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTuCcoEeSLVrU2ifxtpw" target="_SOCT_icoEeSLVrU2ifxtpw" source="_SOCT9ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTuScoEeSLVrU2ifxtpw" target="_SOCUBCcoEeSLVrU2ifxtpw" source="_SOCT-ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCTuicoEeSLVrU2ifxtpw" target="_SOCUCCcoEeSLVrU2ifxtpw" source="_SOCUBycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTuycoEeSLVrU2ifxtpw" target="_SOCUCCcoEeSLVrU2ifxtpw" source="_SOCUAScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCTvCcoEeSLVrU2ifxtpw" target="_SOCT5icoEeSLVrU2ifxtpw" source="_SOCUCCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOCTvScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCTvicoEeSLVrU2ifxtpw" name="Body" incoming="_SOCTtScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCTvycoEeSLVrU2ifxtpw" name="ExpressionStatement@248ef7a3">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTwCcoEeSLVrU2ifxtpw" target="_SOCTyicoEeSLVrU2ifxtpw" source="_SOCTxicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTwScoEeSLVrU2ifxtpw" target="_SOCT0ycoEeSLVrU2ifxtpw" source="_SOCT0CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCTwicoEeSLVrU2ifxtpw" target="_SOCT1ycoEeSLVrU2ifxtpw" source="_SOCTzScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOCTwycoEeSLVrU2ifxtpw" target="_SOCTxCcoEeSLVrU2ifxtpw" source="_SOCT4CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCTxCcoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@7ab2064c)" incoming="_SOCTwycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_SOCTxScoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_SOCTxicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOCTwCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCTxycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCTyCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SOCTyScoEeSLVrU2ifxtpw" name="Clear(tester)" structuralFeature="_SOBtpycoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCTyicoEeSLVrU2ifxtpw" name="Clear(tester).object" incoming="_SOCTwCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCTyycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCTzCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCTzScoEeSLVrU2ifxtpw" name="Clear(tester).result" outgoing="_SOCTwicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCTzicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCTzycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCT0CcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@7ab2064c)" incoming="_SOCTrScoEeSLVrU2ifxtpw" outgoing="_SOCTwScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCT0ScoEeSLVrU2ifxtpw" name="WriteAll(Test::tester)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCT0icoEeSLVrU2ifxtpw" target="_SOCT3ScoEeSLVrU2ifxtpw" source="_SOCT0ycoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SOCT0ycoEeSLVrU2ifxtpw" name="WriteAll(Test::tester).input(Test::tester)" incoming="_SOCTwScoEeSLVrU2ifxtpw" outgoing="_SOCT0icoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT1CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT1ScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOCT1icoEeSLVrU2ifxtpw" name="Write(tester)" structuralFeature="_SOBtpycoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_SOCT1ycoEeSLVrU2ifxtpw" name="Write(tester).object" incoming="_SOCTwicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT2CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT2ScoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SOCT2icoEeSLVrU2ifxtpw" name="Write(tester).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT2ycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT3CcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_SOCT3ScoEeSLVrU2ifxtpw" name="Write(tester).value" incoming="_SOCT0icoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT3icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT3ycoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCT4CcoEeSLVrU2ifxtpw" name="RightHandSide@4d612746" outgoing="_SOCTwycoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SOCT4ScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SOCT4icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOCTsycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT4ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT5CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOCT5ScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOCTsycoEeSLVrU2ifxtpw" outgoing="_SOCTricoEeSLVrU2ifxtpw _SOCTtCcoEeSLVrU2ifxtpw _SOCTticoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SOCT5icoEeSLVrU2ifxtpw" name="Call(Test$initialization$1)" incoming="_SOCTvCcoEeSLVrU2ifxtpw" outgoing="_SOCTtScoEeSLVrU2ifxtpw" operation="_SOCUZicoEeSLVrU2ifxtpw">
              <target xmi:id="_SOCT5ycoEeSLVrU2ifxtpw" name="Call(Test$initialization$1).target" incoming="_SOCTtCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT6CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT6ScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCT6icoEeSLVrU2ifxtpw" name="Read(Test$initializationFlag$1)" structuralFeature="_SOBtjCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SOCT6ycoEeSLVrU2ifxtpw" name="Read(Test$initializationFlag$1).object" incoming="_SOCTticoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT7CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT7ScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SOCT7icoEeSLVrU2ifxtpw" name="Read(Test$initializationFlag$1).result" outgoing="_SOCTtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT7ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT8CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCT8ScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SOCT8icoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SOCTtycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT8ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT9CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SOCT9ScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SOCTuCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT9icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT9ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCT-CcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SOCT-ScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOCTuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT-icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCT-ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SOCT_CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SOCT_ScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SOCT_icoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SOCTuCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCT_ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUACcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SOCUAScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SOCTuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUAicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUAycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SOCUBCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SOCTuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUBScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUBicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SOCUBycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SOCTuicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SOCUCCcoEeSLVrU2ifxtpw" name="Decision(Test(Test$initializationFlag$1))" incoming="_SOCTuicoEeSLVrU2ifxtpw _SOCTuycoEeSLVrU2ifxtpw" outgoing="_SOCTvCcoEeSLVrU2ifxtpw" decisionInputFlow="_SOCTuycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOCTrycoEeSLVrU2ifxtpw" name="Input(tester)" outgoing="_SOCTrCcoEeSLVrU2ifxtpw" parameter="_SOCTpicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SOCTsCcoEeSLVrU2ifxtpw" name="Fork(tester)" incoming="_SOCTrCcoEeSLVrU2ifxtpw" outgoing="_SOCTrScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOCTsScoEeSLVrU2ifxtpw" name="Return" incoming="_SOCTricoEeSLVrU2ifxtpw" parameter="_SOCTqScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOCUCScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SOCUbicoEeSLVrU2ifxtpw" node="_SOCUCicoEeSLVrU2ifxtpw" group="_SOCUCicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SOCUCicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOCUCycoEeSLVrU2ifxtpw" name="Test$initialization$1" specification="_SOCUZicoEeSLVrU2ifxtpw" node="_SOCUDCcoEeSLVrU2ifxtpw" group="_SOCUDCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SOCUDCcoEeSLVrU2ifxtpw" name="Body(Test$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUDScoEeSLVrU2ifxtpw" target="_SOCUHScoEeSLVrU2ifxtpw" source="_SOCUGicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUDicoEeSLVrU2ifxtpw" target="_SOCUIicoEeSLVrU2ifxtpw" source="_SOCUHScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUDycoEeSLVrU2ifxtpw" target="_SOCULScoEeSLVrU2ifxtpw" source="_SOCUHScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUECcoEeSLVrU2ifxtpw" target="_SOCUPicoEeSLVrU2ifxtpw" source="_SOCUHScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUEScoEeSLVrU2ifxtpw" target="_SOCUSCcoEeSLVrU2ifxtpw" source="_SOCUHScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUEicoEeSLVrU2ifxtpw" target="_SOCUTycoEeSLVrU2ifxtpw" source="_SOCUSycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUEycoEeSLVrU2ifxtpw" target="_SOCUWycoEeSLVrU2ifxtpw" source="_SOCUUicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUFCcoEeSLVrU2ifxtpw" target="_SOCUYScoEeSLVrU2ifxtpw" source="_SOCUVicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUFScoEeSLVrU2ifxtpw" target="_SOCUZScoEeSLVrU2ifxtpw" source="_SOCUZCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUFicoEeSLVrU2ifxtpw" target="_SOCUZScoEeSLVrU2ifxtpw" source="_SOCUXicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUFycoEeSLVrU2ifxtpw" target="_SOCUHicoEeSLVrU2ifxtpw" source="_SOCUZScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOCUGCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SOCUGScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SOCUGicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOCUDScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUGycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUHCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOCUHScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOCUDScoEeSLVrU2ifxtpw" outgoing="_SOCUDicoEeSLVrU2ifxtpw _SOCUDycoEeSLVrU2ifxtpw _SOCUECcoEeSLVrU2ifxtpw _SOCUEScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUHicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SOCUFycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUHycoEeSLVrU2ifxtpw" target="_SOCUJScoEeSLVrU2ifxtpw" source="_SOCUIScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUICcoEeSLVrU2ifxtpw" target="_SOCUNicoEeSLVrU2ifxtpw" source="_SOCUJScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SOCUIScoEeSLVrU2ifxtpw" name="Call(Super$initialization$1)" outgoing="_SOCUHycoEeSLVrU2ifxtpw" operation="_SOBtficoEeSLVrU2ifxtpw">
                <target xmi:id="_SOCUIicoEeSLVrU2ifxtpw" name="Call(Super$initialization$1).target" incoming="_SOCUDicoEeSLVrU2ifxtpw" type="_SOBs-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUIycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUJCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUJScoEeSLVrU2ifxtpw" name="Initialize(count)" incoming="_SOCUHycoEeSLVrU2ifxtpw" outgoing="_SOCUICcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUJicoEeSLVrU2ifxtpw" target="_SOCUMycoEeSLVrU2ifxtpw" source="_SOCUKCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCUJycoEeSLVrU2ifxtpw" name="Value(0)">
                  <result xmi:id="_SOCUKCcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOCUJicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUKScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUKicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SOCUKycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOCULCcoEeSLVrU2ifxtpw" name="Write(count)" structuralFeature="_SOBtnicoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SOCULScoEeSLVrU2ifxtpw" name="Write(count).object" incoming="_SOCUDycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCULicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCULycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCUMCcoEeSLVrU2ifxtpw" name="Write(count).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUMScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUMicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SOCUMycoEeSLVrU2ifxtpw" name="Write(count).value" incoming="_SOCUJicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUNCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUNScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUNicoEeSLVrU2ifxtpw" name="Set(initializationFlag)" incoming="_SOCUICcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUNycoEeSLVrU2ifxtpw" target="_SOCURCcoEeSLVrU2ifxtpw" source="_SOCUOScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCUOCcoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SOCUOScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SOCUNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUOicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUOycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SOCUPCcoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOCUPScoEeSLVrU2ifxtpw" name="Write(Test$initializationFlag$1)" structuralFeature="_SOBtjCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SOCUPicoEeSLVrU2ifxtpw" name="Write(Test$initializationFlag$1).object" incoming="_SOCUECcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUPycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUQCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCUQScoEeSLVrU2ifxtpw" name="Write(Test$initializationFlag$1).result" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUQicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUQycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SOCURCcoEeSLVrU2ifxtpw" name="Write(Test$initializationFlag$1).value" incoming="_SOCUNycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCURScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCURicoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCURycoEeSLVrU2ifxtpw" name="Read(Test$initializationFlag$1)" structuralFeature="_SOBtjCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SOCUSCcoEeSLVrU2ifxtpw" name="Read(Test$initializationFlag$1).object" incoming="_SOCUEScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUSScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUSicoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SOCUSycoEeSLVrU2ifxtpw" name="Read(Test$initializationFlag$1).result" outgoing="_SOCUEicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUTCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUTScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCUTicoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SOCUTycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SOCUEicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUUCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUUScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SOCUUicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SOCUEycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUUycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUVCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCUVScoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SOCUVicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOCUFCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUVycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUWCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SOCUWScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SOCUWicoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SOCUWycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SOCUEycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUXCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUXScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SOCUXicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SOCUFicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUXycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUYCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SOCUYScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SOCUFCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUYicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUYycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SOCUZCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SOCUFScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SOCUZScoEeSLVrU2ifxtpw" name="Decision(Test(Test$initializationFlag$1))" incoming="_SOCUFScoEeSLVrU2ifxtpw _SOCUFicoEeSLVrU2ifxtpw" outgoing="_SOCUFycoEeSLVrU2ifxtpw" decisionInputFlow="_SOCUFicoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SOCUZicoEeSLVrU2ifxtpw" name="Test$initialization$1" visibility="protected" method="_SOCUCycoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SOCUZycoEeSLVrU2ifxtpw" name="Test" visibility="public" method="_SOCTpScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SOCUaCcoEeSLVrU2ifxtpw" name="tester" visibility="package" type="_SOCUcCcoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUaScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUaicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SOCUaycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SOBtiicoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUbCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUbScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SOCUbicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SOCUCScoEeSLVrU2ifxtpw" redefinedOperation="_SOBtgycoEeSLVrU2ifxtpw"/>
        <ownedReception xmi:id="_SOCUbycoEeSLVrU2ifxtpw" name="SignalNewArrival" visibility="public" signal="_SOBthCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SOCUcCcoEeSLVrU2ifxtpw" name="TestRunner" classifierBehavior="_SOCUdCcoEeSLVrU2ifxtpw" isActive="true">
        <ownedAttribute xmi:id="_SOCUcScoEeSLVrU2ifxtpw" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUcicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUcycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOCUdCcoEeSLVrU2ifxtpw" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_SOCUdScoEeSLVrU2ifxtpw" group="_SOCUdScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SOCUdScoEeSLVrU2ifxtpw" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUdicoEeSLVrU2ifxtpw" target="_SOCUkCcoEeSLVrU2ifxtpw" source="_SOCUiycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUdycoEeSLVrU2ifxtpw" target="_SOCUnycoEeSLVrU2ifxtpw" source="_SOCUkCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUeCcoEeSLVrU2ifxtpw" target="_SOCUvicoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUeScoEeSLVrU2ifxtpw" target="_SOCUpCcoEeSLVrU2ifxtpw" source="_SOCUnycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUeicoEeSLVrU2ifxtpw" target="_SOCU4ycoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUeycoEeSLVrU2ifxtpw" target="_SOCUxicoEeSLVrU2ifxtpw" source="_SOCUpCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUfCcoEeSLVrU2ifxtpw" target="_SOCVAicoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUfScoEeSLVrU2ifxtpw" target="_SOCU6ScoEeSLVrU2ifxtpw" source="_SOCUxicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUficoEeSLVrU2ifxtpw" target="_SOCVIicoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUfycoEeSLVrU2ifxtpw" target="_SOCVAycoEeSLVrU2ifxtpw" source="_SOCU6ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUgCcoEeSLVrU2ifxtpw" target="_SOCVWScoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUgScoEeSLVrU2ifxtpw" target="_SOCVMCcoEeSLVrU2ifxtpw" source="_SOCVAycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUgicoEeSLVrU2ifxtpw" target="_SOCVkCcoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUgycoEeSLVrU2ifxtpw" target="_SOCVZycoEeSLVrU2ifxtpw" source="_SOCVMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUhCcoEeSLVrU2ifxtpw" target="_SOCVuycoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUhScoEeSLVrU2ifxtpw" target="_SOCVnicoEeSLVrU2ifxtpw" source="_SOCVZycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUhicoEeSLVrU2ifxtpw" target="_SOCV2icoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUhycoEeSLVrU2ifxtpw" target="_SOCVwScoEeSLVrU2ifxtpw" source="_SOCVnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUiCcoEeSLVrU2ifxtpw" target="_SOCV9ScoEeSLVrU2ifxtpw" source="_SOCUnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUiScoEeSLVrU2ifxtpw" target="_SOCV2ycoEeSLVrU2ifxtpw" source="_SOCVwScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUiicoEeSLVrU2ifxtpw" target="_SOCV_ScoEeSLVrU2ifxtpw" source="_SOCV2ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUiycoEeSLVrU2ifxtpw" name="AcceptStatement@3597cf84" outgoing="_SOCUdicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUjCcoEeSLVrU2ifxtpw" target="_SOCUjScoEeSLVrU2ifxtpw" source="_SOCUjycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SOCUjScoEeSLVrU2ifxtpw" name="Accept(Start)" incoming="_SOCUjCcoEeSLVrU2ifxtpw">
                <trigger xmi:id="_SOCUjicoEeSLVrU2ifxtpw" event="_SOCXhCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SOCUjycoEeSLVrU2ifxtpw" name="Initial(Accept(Start))" outgoing="_SOCUjCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUkCcoEeSLVrU2ifxtpw" name="ExpressionStatement@7e249b3c" incoming="_SOCUdicoEeSLVrU2ifxtpw" outgoing="_SOCUdycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUkScoEeSLVrU2ifxtpw" target="_SOCUnicoEeSLVrU2ifxtpw" source="_SOCUlCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUkicoEeSLVrU2ifxtpw" target="_SOCUlycoEeSLVrU2ifxtpw" source="_SOCUmycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SOCUkycoEeSLVrU2ifxtpw" name="Call(test)" operation="_SOCXaicoEeSLVrU2ifxtpw">
                <result xmi:id="_SOCUlCcoEeSLVrU2ifxtpw" name="Call(test).result(test)" outgoing="_SOCUkScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUlScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUlicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SOCUlycoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_SOCUkicoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUmCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUmScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SOCUmicoEeSLVrU2ifxtpw" name="ReadSelf">
                <result xmi:id="_SOCUmycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOCUkicoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUnCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUnScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SOCUnicoEeSLVrU2ifxtpw" name="Fork(test)@3319741a" incoming="_SOCUkScoEeSLVrU2ifxtpw" outgoing="_SOCUeCcoEeSLVrU2ifxtpw _SOCUeicoEeSLVrU2ifxtpw _SOCUfCcoEeSLVrU2ifxtpw _SOCUficoEeSLVrU2ifxtpw _SOCUgCcoEeSLVrU2ifxtpw _SOCUgicoEeSLVrU2ifxtpw _SOCUhCcoEeSLVrU2ifxtpw _SOCUhicoEeSLVrU2ifxtpw _SOCUiCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUnycoEeSLVrU2ifxtpw" name="AcceptStatement@1f5e5800" incoming="_SOCUdycoEeSLVrU2ifxtpw" outgoing="_SOCUeScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUoCcoEeSLVrU2ifxtpw" target="_SOCUoScoEeSLVrU2ifxtpw" source="_SOCUoycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SOCUoScoEeSLVrU2ifxtpw" name="Accept(Continue)" incoming="_SOCUoCcoEeSLVrU2ifxtpw">
                <trigger xmi:id="_SOCUoicoEeSLVrU2ifxtpw" event="_SOCXhScoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SOCUoycoEeSLVrU2ifxtpw" name="Initial(Accept(Continue))" outgoing="_SOCUoCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUpCcoEeSLVrU2ifxtpw" name="ExpressionStatement@6f831149" incoming="_SOCUeScoEeSLVrU2ifxtpw" outgoing="_SOCUeycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUpScoEeSLVrU2ifxtpw" target="_SOCUqScoEeSLVrU2ifxtpw" source="_SOCUsycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUpicoEeSLVrU2ifxtpw" target="_SOCUrCcoEeSLVrU2ifxtpw" source="_SOCUwycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUpycoEeSLVrU2ifxtpw" target="_SOCUqCcoEeSLVrU2ifxtpw" source="_SOCUrycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCUqCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SOCUpycoEeSLVrU2ifxtpw" behavior="_SOCXhicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCUqScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SOCUpScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUqicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUqycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCUrCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SOCUpicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUrScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUricoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUrycoEeSLVrU2ifxtpw" name="Tuple@77fc5e70" outgoing="_SOCUpycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUsCcoEeSLVrU2ifxtpw" target="_SOCUuCcoEeSLVrU2ifxtpw" source="_SOCUvicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUsScoEeSLVrU2ifxtpw" target="_SOCUwCcoEeSLVrU2ifxtpw" source="_SOCUuycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCUsicoEeSLVrU2ifxtpw" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_SOCUsycoEeSLVrU2ifxtpw" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_SOCUpScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUtCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUtScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCUticoEeSLVrU2ifxtpw" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCUtycoEeSLVrU2ifxtpw" name="Read(sig)" structuralFeature="_SOBtjycoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCUuCcoEeSLVrU2ifxtpw" name="Read(sig).object" incoming="_SOCUsCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUuScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUuicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCUuycoEeSLVrU2ifxtpw" name="Read(sig).result" outgoing="_SOCUsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUvCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUvScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCUvicoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUeCcoEeSLVrU2ifxtpw" outgoing="_SOCUsCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOCUvycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination)" classifier="_SOBtiCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCUwCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_SOCUsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUwScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUwicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCUwycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_SOCUpicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUxCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUxScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCUxicoEeSLVrU2ifxtpw" name="ExpressionStatement@598030eb" incoming="_SOCUeycoEeSLVrU2ifxtpw" outgoing="_SOCUfScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUxycoEeSLVrU2ifxtpw" target="_SOCUzCcoEeSLVrU2ifxtpw" source="_SOCU2CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUyCcoEeSLVrU2ifxtpw" target="_SOCUzycoEeSLVrU2ifxtpw" source="_SOCU4CcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCUyScoEeSLVrU2ifxtpw" target="_SOCU0icoEeSLVrU2ifxtpw" source="_SOCU5ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCUyicoEeSLVrU2ifxtpw" target="_SOCUyycoEeSLVrU2ifxtpw" source="_SOCU1ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCUyycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SOCUyicoEeSLVrU2ifxtpw" behavior="_SOC6zCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCUzCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SOCUxycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCUzScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCUzicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCUzycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SOCUyCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU0CcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU0ScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCU0icoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SOCUyScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU0ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU1CcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCU1ScoEeSLVrU2ifxtpw" name="Tuple@1faa3004" outgoing="_SOCUyicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCU1icoEeSLVrU2ifxtpw" target="_SOCU3ScoEeSLVrU2ifxtpw" source="_SOCU4ycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCU1ycoEeSLVrU2ifxtpw" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_SOCU2CcoEeSLVrU2ifxtpw" name="Value(&quot;test.name&quot;).result" outgoing="_SOCUxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU2ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU2icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCU2ycoEeSLVrU2ifxtpw" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCU3CcoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_SOBtlScoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCU3ScoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_SOCU1icoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU3icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU3ycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCU4CcoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_SOCUyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU4ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU4icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCU4ycoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUeicoEeSLVrU2ifxtpw" outgoing="_SOCU1icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCU5CcoEeSLVrU2ifxtpw" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_SOCU5ScoEeSLVrU2ifxtpw" name="Value(&quot;Arrival1&quot;).result" outgoing="_SOCUyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU5icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU5ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCU6CcoEeSLVrU2ifxtpw" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCU6ScoEeSLVrU2ifxtpw" name="ExpressionStatement@41255de1" incoming="_SOCUfScoEeSLVrU2ifxtpw" outgoing="_SOCUfycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCU6icoEeSLVrU2ifxtpw" target="_SOCU7icoEeSLVrU2ifxtpw" source="_SOCU9ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCU6ycoEeSLVrU2ifxtpw" target="_SOCU8ScoEeSLVrU2ifxtpw" source="_SOCU_ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCU7CcoEeSLVrU2ifxtpw" target="_SOCU7ScoEeSLVrU2ifxtpw" source="_SOCU9CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCU7ScoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_SOCU7CcoEeSLVrU2ifxtpw" behavior="_SOC79ycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCU7icoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_SOCU6icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU7ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU8CcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCU8ScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_SOCU6ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU8icoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU8ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCU9CcoEeSLVrU2ifxtpw" name="Tuple@3dc7ff43" outgoing="_SOCU7CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCU9ScoEeSLVrU2ifxtpw" target="_SOCU_CcoEeSLVrU2ifxtpw" source="_SOCVAicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCU9icoEeSLVrU2ifxtpw" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_SOCU9ycoEeSLVrU2ifxtpw" name="Value(&quot;test.terminate&quot;).result" outgoing="_SOCU6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU-CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU-ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCU-icoEeSLVrU2ifxtpw" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCU-ycoEeSLVrU2ifxtpw" name="Read(terminate)" structuralFeature="_SOBtmCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCU_CcoEeSLVrU2ifxtpw" name="Read(terminate).object" incoming="_SOCU9ScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCU_ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCU_icoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCU_ycoEeSLVrU2ifxtpw" name="Read(terminate).result" outgoing="_SOCU6ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVACcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVAScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCVAicoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUfCcoEeSLVrU2ifxtpw" outgoing="_SOCU9ScoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVAycoEeSLVrU2ifxtpw" name="ExpressionStatement@1acfecca" incoming="_SOCUfycoEeSLVrU2ifxtpw" outgoing="_SOCUgScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVBCcoEeSLVrU2ifxtpw" target="_SOCVCScoEeSLVrU2ifxtpw" source="_SOCVFycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVBScoEeSLVrU2ifxtpw" target="_SOCVDCcoEeSLVrU2ifxtpw" source="_SOCVJycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVBicoEeSLVrU2ifxtpw" target="_SOCVDycoEeSLVrU2ifxtpw" source="_SOCVLCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCVBycoEeSLVrU2ifxtpw" target="_SOCVCCcoEeSLVrU2ifxtpw" source="_SOCVEicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCVCCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SOCVBycoEeSLVrU2ifxtpw" behavior="_SOC6zCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCVCScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SOCVBCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVCicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVCycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCVDCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SOCVBScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVDScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVDicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCVDycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SOCVBicoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVECcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVEScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVEicoEeSLVrU2ifxtpw" name="Tuple@243446f2" outgoing="_SOCVBycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVEycoEeSLVrU2ifxtpw" target="_SOCVHCcoEeSLVrU2ifxtpw" source="_SOCVIicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVFCcoEeSLVrU2ifxtpw" target="_SOCVKicoEeSLVrU2ifxtpw" source="_SOCVHycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVFScoEeSLVrU2ifxtpw" target="_SOCVJCcoEeSLVrU2ifxtpw" source="_SOCVKicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVFicoEeSLVrU2ifxtpw" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_SOCVFycoEeSLVrU2ifxtpw" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_SOCVBCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVGCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVGScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCVGicoEeSLVrU2ifxtpw" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCVGycoEeSLVrU2ifxtpw" name="Read(arrival)" structuralFeature="_SOBtmycoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCVHCcoEeSLVrU2ifxtpw" name="Read(arrival).object" incoming="_SOCVEycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVHScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVHicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCVHycoEeSLVrU2ifxtpw" name="Read(arrival).result" outgoing="_SOCVFCcoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVICcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVIScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCVIicoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUficoEeSLVrU2ifxtpw" outgoing="_SOCVEycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCVIycoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_SOBthScoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCVJCcoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_SOCVFScoEeSLVrU2ifxtpw" type="_SOBthCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVJScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVJicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCVJycoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_SOCVBScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVKCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVKScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCVKicoEeSLVrU2ifxtpw" name="Fork(Read(arrival).result)" incoming="_SOCVFCcoEeSLVrU2ifxtpw" outgoing="_SOCVFScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVKycoEeSLVrU2ifxtpw" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_SOCVLCcoEeSLVrU2ifxtpw" name="Value(&quot;Arrival3&quot;).result" outgoing="_SOCVBicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVLScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVLicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCVLycoEeSLVrU2ifxtpw" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVMCcoEeSLVrU2ifxtpw" name="ExpressionStatement@7eb5139c" incoming="_SOCUgScoEeSLVrU2ifxtpw" outgoing="_SOCUgycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVMScoEeSLVrU2ifxtpw" target="_SOCVNScoEeSLVrU2ifxtpw" source="_SOCVQicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVMicoEeSLVrU2ifxtpw" target="_SOCVOCcoEeSLVrU2ifxtpw" source="_SOCVZCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCVMycoEeSLVrU2ifxtpw" target="_SOCVNCcoEeSLVrU2ifxtpw" source="_SOCVOycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCVNCcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SOCVMycoEeSLVrU2ifxtpw" behavior="_SOCXhicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCVNScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SOCVMScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVNicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVNycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCVOCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SOCVMicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVOScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVOicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVOycoEeSLVrU2ifxtpw" name="Tuple@6af20853" outgoing="_SOCVMycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVPCcoEeSLVrU2ifxtpw" target="_SOCVRycoEeSLVrU2ifxtpw" source="_SOCVVicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVPScoEeSLVrU2ifxtpw" target="_SOCVXycoEeSLVrU2ifxtpw" source="_SOCVWycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOCVPicoEeSLVrU2ifxtpw" target="_SOCVRicoEeSLVrU2ifxtpw" source="_SOCVUCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVPycoEeSLVrU2ifxtpw" target="_SOCVSicoEeSLVrU2ifxtpw" source="_SOCVXycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVQCcoEeSLVrU2ifxtpw" target="_SOCVYScoEeSLVrU2ifxtpw" source="_SOCVTScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVQScoEeSLVrU2ifxtpw" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_SOCVQicoEeSLVrU2ifxtpw" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_SOCVMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVQycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVRCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCVRScoEeSLVrU2ifxtpw" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCVRicoEeSLVrU2ifxtpw" name="Call(At)" incoming="_SOCVPicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_SOCVRycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SOCVPCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVSCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVSScoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <argument xmi:id="_SOCVSicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SOCVPycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVSycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVTCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SOCVTScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SOCVQCcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVTicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVTycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVUCcoEeSLVrU2ifxtpw" name="Tuple@4945cdbd" outgoing="_SOCVPicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVUScoEeSLVrU2ifxtpw" target="_SOCVUycoEeSLVrU2ifxtpw" source="_SOCVWScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCVUicoEeSLVrU2ifxtpw" name="Read(signals)" structuralFeature="_SOBtoScoEeSLVrU2ifxtpw">
                    <object xmi:id="_SOCVUycoEeSLVrU2ifxtpw" name="Read(signals).object" incoming="_SOCVUScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVVCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVVScoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SOCVVicoEeSLVrU2ifxtpw" name="Read(signals).result" outgoing="_SOCVPCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVVycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVWCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SOCVWScoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUgCcoEeSLVrU2ifxtpw" outgoing="_SOCVUScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVWicoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_SOCVWycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SOCVPScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVXCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVXScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SOCVXicoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCVXycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SOCVPScoEeSLVrU2ifxtpw" outgoing="_SOCVPycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOCVYCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_SOBthCcoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SOCVYScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_SOCVQCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVYicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVYycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCVZCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_SOCVMicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVZScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVZicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVZycoEeSLVrU2ifxtpw" name="ExpressionStatement@2b8d3aad" incoming="_SOCUgycoEeSLVrU2ifxtpw" outgoing="_SOCUhScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVaCcoEeSLVrU2ifxtpw" target="_SOCVbCcoEeSLVrU2ifxtpw" source="_SOCVeScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVaScoEeSLVrU2ifxtpw" target="_SOCVbycoEeSLVrU2ifxtpw" source="_SOCVmycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCVaicoEeSLVrU2ifxtpw" target="_SOCVaycoEeSLVrU2ifxtpw" source="_SOCVcicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCVaycoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SOCVaicoEeSLVrU2ifxtpw" behavior="_SOCXhicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCVbCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SOCVaCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVbScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVbicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCVbycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SOCVaScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVcCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVcScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVcicoEeSLVrU2ifxtpw" name="Tuple@77df7f17" outgoing="_SOCVaicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVcycoEeSLVrU2ifxtpw" target="_SOCVficoEeSLVrU2ifxtpw" source="_SOCVjScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVdCcoEeSLVrU2ifxtpw" target="_SOCVlicoEeSLVrU2ifxtpw" source="_SOCVkicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOCVdScoEeSLVrU2ifxtpw" target="_SOCVfScoEeSLVrU2ifxtpw" source="_SOCVhycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVdicoEeSLVrU2ifxtpw" target="_SOCVgScoEeSLVrU2ifxtpw" source="_SOCVlicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVdycoEeSLVrU2ifxtpw" target="_SOCVmCcoEeSLVrU2ifxtpw" source="_SOCVhCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVeCcoEeSLVrU2ifxtpw" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_SOCVeScoEeSLVrU2ifxtpw" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_SOCVaCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVeicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVeycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCVfCcoEeSLVrU2ifxtpw" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCVfScoEeSLVrU2ifxtpw" name="Call(At)" incoming="_SOCVdScoEeSLVrU2ifxtpw">
                  <argument xmi:id="_SOCVficoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SOCVcycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVfycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVgCcoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <argument xmi:id="_SOCVgScoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SOCVdicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVgicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVgycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SOCVhCcoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SOCVdycoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVhScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVhicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVhycoEeSLVrU2ifxtpw" name="Tuple@39da058b" outgoing="_SOCVdScoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCViCcoEeSLVrU2ifxtpw" target="_SOCViicoEeSLVrU2ifxtpw" source="_SOCVkCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCViScoEeSLVrU2ifxtpw" name="Read(signals)" structuralFeature="_SOBtoScoEeSLVrU2ifxtpw">
                    <object xmi:id="_SOCViicoEeSLVrU2ifxtpw" name="Read(signals).object" incoming="_SOCViCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCViycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVjCcoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SOCVjScoEeSLVrU2ifxtpw" name="Read(signals).result" outgoing="_SOCVcycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVjicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVjycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SOCVkCcoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUgicoEeSLVrU2ifxtpw" outgoing="_SOCViCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVkScoEeSLVrU2ifxtpw" name="Value(2)">
                    <result xmi:id="_SOCVkicoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SOCVdCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVkycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVlCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SOCVlScoEeSLVrU2ifxtpw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCVlicoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SOCVdCcoEeSLVrU2ifxtpw" outgoing="_SOCVdicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOCVlycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination)" classifier="_SOBtiCcoEeSLVrU2ifxtpw" isDirect="true">
                  <object xmi:id="_SOCVmCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_SOCVdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVmScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVmicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCVmycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_SOCVaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVnCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVnScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVnicoEeSLVrU2ifxtpw" name="ExpressionStatement@333e83a3" incoming="_SOCUhScoEeSLVrU2ifxtpw" outgoing="_SOCUhycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVnycoEeSLVrU2ifxtpw" target="_SOCVpCcoEeSLVrU2ifxtpw" source="_SOCVsCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVoCcoEeSLVrU2ifxtpw" target="_SOCVpycoEeSLVrU2ifxtpw" source="_SOCVuCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVoScoEeSLVrU2ifxtpw" target="_SOCVqicoEeSLVrU2ifxtpw" source="_SOCVvScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCVoicoEeSLVrU2ifxtpw" target="_SOCVoycoEeSLVrU2ifxtpw" source="_SOCVrScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCVoycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SOCVoicoEeSLVrU2ifxtpw" behavior="_SOC6zCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCVpCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SOCVnycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVpScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVpicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCVpycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SOCVoCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVqCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVqScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCVqicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SOCVoScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVqycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVrCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVrScoEeSLVrU2ifxtpw" name="Tuple@3da804f1" outgoing="_SOCVoicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVricoEeSLVrU2ifxtpw" target="_SOCVtScoEeSLVrU2ifxtpw" source="_SOCVuycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVrycoEeSLVrU2ifxtpw" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_SOCVsCcoEeSLVrU2ifxtpw" name="Value(&quot;test.count&quot;).result" outgoing="_SOCVnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVsScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVsicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCVsycoEeSLVrU2ifxtpw" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCVtCcoEeSLVrU2ifxtpw" name="Read(count)" structuralFeature="_SOBtnicoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCVtScoEeSLVrU2ifxtpw" name="Read(count).object" incoming="_SOCVricoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVticoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVtycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCVuCcoEeSLVrU2ifxtpw" name="Read(count).result" outgoing="_SOCVoCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVuScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVuicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCVuycoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUhCcoEeSLVrU2ifxtpw" outgoing="_SOCVricoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVvCcoEeSLVrU2ifxtpw" name="Value(3)">
                  <result xmi:id="_SOCVvScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_SOCVoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVvicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVvycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SOCVwCcoEeSLVrU2ifxtpw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVwScoEeSLVrU2ifxtpw" name="ExpressionStatement@b49a66" incoming="_SOCUhycoEeSLVrU2ifxtpw" outgoing="_SOCUiScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVwicoEeSLVrU2ifxtpw" target="_SOCVxicoEeSLVrU2ifxtpw" source="_SOCVzycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVwycoEeSLVrU2ifxtpw" target="_SOCVyScoEeSLVrU2ifxtpw" source="_SOCV1ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCVxCcoEeSLVrU2ifxtpw" target="_SOCVxScoEeSLVrU2ifxtpw" source="_SOCVzCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCVxScoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SOCVxCcoEeSLVrU2ifxtpw" behavior="_SOCXhicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCVxicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SOCVwicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVyCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCVyScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SOCVwycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCVyicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCVyycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCVzCcoEeSLVrU2ifxtpw" name="Tuple@1183cb5a" outgoing="_SOCVxCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCVzScoEeSLVrU2ifxtpw" target="_SOCV1CcoEeSLVrU2ifxtpw" source="_SOCV2icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCVzicoEeSLVrU2ifxtpw" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_SOCVzycoEeSLVrU2ifxtpw" name="Value(&quot;test.flag&quot;).result" outgoing="_SOCVwicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV0CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV0ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCV0icoEeSLVrU2ifxtpw" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCV0ycoEeSLVrU2ifxtpw" name="Read(flag)" structuralFeature="_SOBtpCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCV1CcoEeSLVrU2ifxtpw" name="Read(flag).object" incoming="_SOCVzScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV1ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV1icoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCV1ycoEeSLVrU2ifxtpw" name="Read(flag).result" outgoing="_SOCVwycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV2CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV2ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCV2icoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUhicoEeSLVrU2ifxtpw" outgoing="_SOCVzScoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCV2ycoEeSLVrU2ifxtpw" name="ExpressionStatement@7fd88a92" incoming="_SOCUiScoEeSLVrU2ifxtpw" outgoing="_SOCUiicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCV3CcoEeSLVrU2ifxtpw" target="_SOCV4CcoEeSLVrU2ifxtpw" source="_SOCV6icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCV3ScoEeSLVrU2ifxtpw" target="_SOCV4ycoEeSLVrU2ifxtpw" source="_SOCV-icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCV3icoEeSLVrU2ifxtpw" target="_SOCV3ycoEeSLVrU2ifxtpw" source="_SOCV5icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCV3ycoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SOCV3icoEeSLVrU2ifxtpw" behavior="_SOCXhicoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCV4CcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SOCV3CcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV4ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV4icoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOCV4ycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SOCV3ScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV5CcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV5ScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCV5icoEeSLVrU2ifxtpw" name="Tuple@2044056" outgoing="_SOCV3icoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCV5ycoEeSLVrU2ifxtpw" target="_SOCV7ycoEeSLVrU2ifxtpw" source="_SOCV9ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCV6CcoEeSLVrU2ifxtpw" target="_SOCV9ycoEeSLVrU2ifxtpw" source="_SOCV8icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCV6ScoEeSLVrU2ifxtpw" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_SOCV6icoEeSLVrU2ifxtpw" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_SOCV3CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV6ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV7CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCV7ScoEeSLVrU2ifxtpw" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCV7icoEeSLVrU2ifxtpw" name="Read(sig1)" structuralFeature="_SOBtkicoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCV7ycoEeSLVrU2ifxtpw" name="Read(sig1).object" incoming="_SOCV5ycoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV8CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV8ScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCV8icoEeSLVrU2ifxtpw" name="Read(sig1).result" outgoing="_SOCV6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV8ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV9CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SOCV9ScoEeSLVrU2ifxtpw" name="Fork(Fork(test)@3319741a)" incoming="_SOCUiCcoEeSLVrU2ifxtpw" outgoing="_SOCV5ycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOCV9icoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination)" classifier="_SOBtiCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SOCV9ycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_SOCV6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV-CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV-ScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCV-icoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_SOCV3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCV-ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCV_CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCV_ScoEeSLVrU2ifxtpw" name="ExpressionStatement@131aacc" incoming="_SOCUiicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCV_icoEeSLVrU2ifxtpw" target="_SOCWAScoEeSLVrU2ifxtpw" source="_SOCWCScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCV_ycoEeSLVrU2ifxtpw" target="_SOCWACcoEeSLVrU2ifxtpw" source="_SOCWBycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCWACcoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SOCV_ycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCWAScoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SOCV_icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWAicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWAycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SOCWBCcoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWBScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWBicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWBycoEeSLVrU2ifxtpw" name="Tuple@6ce3c277" outgoing="_SOCV_ycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCWCCcoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                  <result xmi:id="_SOCWCScoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_SOCV_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWCicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWCycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCWDCcoEeSLVrU2ifxtpw" value="Done">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOCWDScoEeSLVrU2ifxtpw" name="test$method$1" specification="_SOCXaicoEeSLVrU2ifxtpw" node="_SOCWEicoEeSLVrU2ifxtpw _SOCWEycoEeSLVrU2ifxtpw" group="_SOCWEycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SOCWDicoEeSLVrU2ifxtpw" name="test" type="_SOBtiicoEeSLVrU2ifxtpw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWDycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWECcoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWEScoEeSLVrU2ifxtpw" target="_SOCWEicoEeSLVrU2ifxtpw" source="_SOCWLScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SOCWEycoEeSLVrU2ifxtpw" name="Body(test$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWFCcoEeSLVrU2ifxtpw" target="_SOCWWCcoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWFScoEeSLVrU2ifxtpw" target="_SOCWVicoEeSLVrU2ifxtpw" source="_SOCWMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWFicoEeSLVrU2ifxtpw" target="_SOCWYicoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWFycoEeSLVrU2ifxtpw" target="_SOCWWycoEeSLVrU2ifxtpw" source="_SOCWVicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWGCcoEeSLVrU2ifxtpw" target="_SOCWcicoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWGScoEeSLVrU2ifxtpw" target="_SOCWaycoEeSLVrU2ifxtpw" source="_SOCWWycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWGicoEeSLVrU2ifxtpw" target="_SOCWgicoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWGycoEeSLVrU2ifxtpw" target="_SOCWeycoEeSLVrU2ifxtpw" source="_SOCWaycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWHCcoEeSLVrU2ifxtpw" target="_SOCWkicoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWHScoEeSLVrU2ifxtpw" target="_SOCWiycoEeSLVrU2ifxtpw" source="_SOCWeycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWHicoEeSLVrU2ifxtpw" target="_SOCWnScoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWHycoEeSLVrU2ifxtpw" target="_SOCWmycoEeSLVrU2ifxtpw" source="_SOCWiycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWICcoEeSLVrU2ifxtpw" target="_SOCWpycoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWIScoEeSLVrU2ifxtpw" target="_SOCWoCcoEeSLVrU2ifxtpw" source="_SOCWmycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWIicoEeSLVrU2ifxtpw" target="_SOCWtycoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWIycoEeSLVrU2ifxtpw" target="_SOCWsCcoEeSLVrU2ifxtpw" source="_SOCWoCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWJCcoEeSLVrU2ifxtpw" target="_SOCWwicoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWJScoEeSLVrU2ifxtpw" target="_SOCWwCcoEeSLVrU2ifxtpw" source="_SOCWsCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWJicoEeSLVrU2ifxtpw" target="_SOCWzCcoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWJycoEeSLVrU2ifxtpw" target="_SOCWxScoEeSLVrU2ifxtpw" source="_SOCWwCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWKCcoEeSLVrU2ifxtpw" target="_SOCW3CcoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWKScoEeSLVrU2ifxtpw" target="_SOCW1ScoEeSLVrU2ifxtpw" source="_SOCWxScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWKicoEeSLVrU2ifxtpw" target="_SOCW5ycoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWKycoEeSLVrU2ifxtpw" target="_SOCW5ScoEeSLVrU2ifxtpw" source="_SOCW1ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWLCcoEeSLVrU2ifxtpw" target="_SOCWLScoEeSLVrU2ifxtpw" source="_SOCWMicoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_SOCWLScoEeSLVrU2ifxtpw" name="Output(test)" incoming="_SOCWLCcoEeSLVrU2ifxtpw" outgoing="_SOCWEScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWLicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWLycoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWMCcoEeSLVrU2ifxtpw" name="ExpressionStatement@5542fad8" outgoing="_SOCWFScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWMScoEeSLVrU2ifxtpw" target="_SOCWMicoEeSLVrU2ifxtpw" source="_SOCWOycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SOCWMicoEeSLVrU2ifxtpw" name="Fork(test)@7decd1e2" incoming="_SOCWMScoEeSLVrU2ifxtpw" outgoing="_SOCWFCcoEeSLVrU2ifxtpw _SOCWFicoEeSLVrU2ifxtpw _SOCWGCcoEeSLVrU2ifxtpw _SOCWGicoEeSLVrU2ifxtpw _SOCWHCcoEeSLVrU2ifxtpw _SOCWHicoEeSLVrU2ifxtpw _SOCWICcoEeSLVrU2ifxtpw _SOCWIicoEeSLVrU2ifxtpw _SOCWJCcoEeSLVrU2ifxtpw _SOCWJicoEeSLVrU2ifxtpw _SOCWKCcoEeSLVrU2ifxtpw _SOCWKicoEeSLVrU2ifxtpw _SOCWLCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWMycoEeSLVrU2ifxtpw" name="RightHandSide@5fe31ced">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWNCcoEeSLVrU2ifxtpw" name="InstanceCreationExpression@5fe31ced">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWNScoEeSLVrU2ifxtpw" target="_SOCWRScoEeSLVrU2ifxtpw" source="_SOCWSScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWNicoEeSLVrU2ifxtpw" target="_SOCWPycoEeSLVrU2ifxtpw" source="_SOCWTicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWNycoEeSLVrU2ifxtpw" target="_SOCWPicoEeSLVrU2ifxtpw" source="_SOCWTCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWOCcoEeSLVrU2ifxtpw" target="_SOCWUScoEeSLVrU2ifxtpw" source="_SOCWQicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWOScoEeSLVrU2ifxtpw" target="_SOCWUycoEeSLVrU2ifxtpw" source="_SOCWUScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWOicoEeSLVrU2ifxtpw" target="_SOCWOycoEeSLVrU2ifxtpw" source="_SOCWUScoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SOCWOycoEeSLVrU2ifxtpw" name="Output(Call(Test).result())" incoming="_SOCWOicoEeSLVrU2ifxtpw" outgoing="_SOCWMScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWPCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWPScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_SOCWPicoEeSLVrU2ifxtpw" name="Call(Test)" incoming="_SOCWNycoEeSLVrU2ifxtpw" operation="_SOCUZycoEeSLVrU2ifxtpw">
                    <argument xmi:id="_SOCWPycoEeSLVrU2ifxtpw" name="Call(Test).argument(tester)" incoming="_SOCWNicoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWQCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWQScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SOCWQicoEeSLVrU2ifxtpw" name="Call(Test).result()" outgoing="_SOCWOCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWQycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWRCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <target xmi:id="_SOCWRScoEeSLVrU2ifxtpw" name="Call(Test).target" incoming="_SOCWNScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWRicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWRycoEeSLVrU2ifxtpw" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_SOCWSCcoEeSLVrU2ifxtpw" name="Create(Test)" classifier="_SOBtiicoEeSLVrU2ifxtpw">
                    <result xmi:id="_SOCWSScoEeSLVrU2ifxtpw" name="Create(Test).result" outgoing="_SOCWNScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWSicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWSycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWTCcoEeSLVrU2ifxtpw" name="Tuple@57d7cb69" outgoing="_SOCWNycoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_SOCWTScoEeSLVrU2ifxtpw" name="ReadSelf">
                      <result xmi:id="_SOCWTicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOCWNicoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWTycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWUCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SOCWUScoEeSLVrU2ifxtpw" name="Fork(Call(Test).result())" incoming="_SOCWOCcoEeSLVrU2ifxtpw" outgoing="_SOCWOScoEeSLVrU2ifxtpw _SOCWOicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_SOCWUicoEeSLVrU2ifxtpw" name="Start(Test)">
                    <object xmi:id="_SOCWUycoEeSLVrU2ifxtpw" name="Start(Test).object" incoming="_SOCWOScoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWVCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWVScoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWVicoEeSLVrU2ifxtpw" name="ExpressionStatement@153c7307" incoming="_SOCWFScoEeSLVrU2ifxtpw" outgoing="_SOCWFycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWVycoEeSLVrU2ifxtpw" name="SendSignal(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw">
                <target xmi:id="_SOCWWCcoEeSLVrU2ifxtpw" name="SendSignal(SignalTermination).target" incoming="_SOCWFCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWWScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWWicoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWWycoEeSLVrU2ifxtpw" name="ExpressionStatement@6a93c73f" incoming="_SOCWFycoEeSLVrU2ifxtpw" outgoing="_SOCWGScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWXCcoEeSLVrU2ifxtpw" target="_SOCWXycoEeSLVrU2ifxtpw" source="_SOCWZycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWXScoEeSLVrU2ifxtpw" target="_SOCWXicoEeSLVrU2ifxtpw" source="_SOCWZScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWXicoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival)" incoming="_SOCWXScoEeSLVrU2ifxtpw" signal="_SOBthCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCWXycoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SOCWXCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWYCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWYScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <target xmi:id="_SOCWYicoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).target" incoming="_SOCWFicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWYycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWZCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWZScoEeSLVrU2ifxtpw" name="Tuple@5d551822" outgoing="_SOCWXScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCWZicoEeSLVrU2ifxtpw" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_SOCWZycoEeSLVrU2ifxtpw" name="Value(&quot;Arrival1&quot;).result" outgoing="_SOCWXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWaCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWaScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCWaicoEeSLVrU2ifxtpw" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWaycoEeSLVrU2ifxtpw" name="ExpressionStatement@3e436b5b" incoming="_SOCWGScoEeSLVrU2ifxtpw" outgoing="_SOCWGycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWbCcoEeSLVrU2ifxtpw" target="_SOCWbycoEeSLVrU2ifxtpw" source="_SOCWdycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWbScoEeSLVrU2ifxtpw" target="_SOCWbicoEeSLVrU2ifxtpw" source="_SOCWdScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWbicoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival)" incoming="_SOCWbScoEeSLVrU2ifxtpw" signal="_SOBthCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCWbycoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SOCWbCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWcCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWcScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <target xmi:id="_SOCWcicoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).target" incoming="_SOCWGCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWcycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWdCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWdScoEeSLVrU2ifxtpw" name="Tuple@3c7892f1" outgoing="_SOCWbScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCWdicoEeSLVrU2ifxtpw" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_SOCWdycoEeSLVrU2ifxtpw" name="Value(&quot;Arrival2&quot;).result" outgoing="_SOCWbCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWeCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWeScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCWeicoEeSLVrU2ifxtpw" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWeycoEeSLVrU2ifxtpw" name="ExpressionStatement@4637a36f" incoming="_SOCWGycoEeSLVrU2ifxtpw" outgoing="_SOCWHScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWfCcoEeSLVrU2ifxtpw" target="_SOCWfycoEeSLVrU2ifxtpw" source="_SOCWhycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWfScoEeSLVrU2ifxtpw" target="_SOCWficoEeSLVrU2ifxtpw" source="_SOCWhScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWficoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival)" incoming="_SOCWfScoEeSLVrU2ifxtpw" signal="_SOBthCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCWfycoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SOCWfCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWgCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWgScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <target xmi:id="_SOCWgicoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).target" incoming="_SOCWGicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWgycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWhCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWhScoEeSLVrU2ifxtpw" name="Tuple@1f8aa3be" outgoing="_SOCWfScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCWhicoEeSLVrU2ifxtpw" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_SOCWhycoEeSLVrU2ifxtpw" name="Value(&quot;Arrival3&quot;).result" outgoing="_SOCWfCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWiCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWiScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCWiicoEeSLVrU2ifxtpw" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWiycoEeSLVrU2ifxtpw" name="ExpressionStatement@591bbcaa" incoming="_SOCWHScoEeSLVrU2ifxtpw" outgoing="_SOCWHycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWjCcoEeSLVrU2ifxtpw" target="_SOCWjycoEeSLVrU2ifxtpw" source="_SOCWlycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWjScoEeSLVrU2ifxtpw" target="_SOCWjicoEeSLVrU2ifxtpw" source="_SOCWlScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWjicoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival)" incoming="_SOCWjScoEeSLVrU2ifxtpw" signal="_SOBthCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCWjycoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SOCWjCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWkCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWkScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <target xmi:id="_SOCWkicoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).target" incoming="_SOCWHCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWkycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWlCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWlScoEeSLVrU2ifxtpw" name="Tuple@43454e28" outgoing="_SOCWjScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCWlicoEeSLVrU2ifxtpw" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_SOCWlycoEeSLVrU2ifxtpw" name="Value(&quot;Arrival4&quot;).result" outgoing="_SOCWjCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWmCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWmScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCWmicoEeSLVrU2ifxtpw" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWmycoEeSLVrU2ifxtpw" name="ExpressionStatement@565de293" incoming="_SOCWHycoEeSLVrU2ifxtpw" outgoing="_SOCWIScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWnCcoEeSLVrU2ifxtpw" name="SendSignal(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw">
                <target xmi:id="_SOCWnScoEeSLVrU2ifxtpw" name="SendSignal(SignalTermination).target" incoming="_SOCWHicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWnicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWnycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWoCcoEeSLVrU2ifxtpw" name="ExpressionStatement@10ca8fc7" incoming="_SOCWIScoEeSLVrU2ifxtpw" outgoing="_SOCWIycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWoScoEeSLVrU2ifxtpw" target="_SOCWpCcoEeSLVrU2ifxtpw" source="_SOCWrCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWoicoEeSLVrU2ifxtpw" target="_SOCWoycoEeSLVrU2ifxtpw" source="_SOCWqicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWoycoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival)" incoming="_SOCWoicoEeSLVrU2ifxtpw" signal="_SOBthCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCWpCcoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SOCWoScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWpScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWpicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <target xmi:id="_SOCWpycoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).target" incoming="_SOCWICcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWqCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWqScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWqicoEeSLVrU2ifxtpw" name="Tuple@362e0807" outgoing="_SOCWoicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCWqycoEeSLVrU2ifxtpw" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_SOCWrCcoEeSLVrU2ifxtpw" name="Value(&quot;Arrival5&quot;).result" outgoing="_SOCWoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWrScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWricoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCWrycoEeSLVrU2ifxtpw" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWsCcoEeSLVrU2ifxtpw" name="ExpressionStatement@6d333fd" incoming="_SOCWIycoEeSLVrU2ifxtpw" outgoing="_SOCWJScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWsScoEeSLVrU2ifxtpw" target="_SOCWtCcoEeSLVrU2ifxtpw" source="_SOCWvCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWsicoEeSLVrU2ifxtpw" target="_SOCWsycoEeSLVrU2ifxtpw" source="_SOCWuicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWsycoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival)" incoming="_SOCWsicoEeSLVrU2ifxtpw" signal="_SOBthCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCWtCcoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SOCWsScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWtScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWticoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <target xmi:id="_SOCWtycoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).target" incoming="_SOCWIicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWuCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWuScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWuicoEeSLVrU2ifxtpw" name="Tuple@5ba1248e" outgoing="_SOCWsicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCWuycoEeSLVrU2ifxtpw" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_SOCWvCcoEeSLVrU2ifxtpw" name="Value(&quot;Arrival6&quot;).result" outgoing="_SOCWsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWvScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWvicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCWvycoEeSLVrU2ifxtpw" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWwCcoEeSLVrU2ifxtpw" name="ExpressionStatement@4669a31a" incoming="_SOCWJScoEeSLVrU2ifxtpw" outgoing="_SOCWJycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWwScoEeSLVrU2ifxtpw" name="SendSignal(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw">
                <target xmi:id="_SOCWwicoEeSLVrU2ifxtpw" name="SendSignal(SignalTermination).target" incoming="_SOCWJCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWwycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWxCcoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWxScoEeSLVrU2ifxtpw" name="ExpressionStatement@ab9e13d" incoming="_SOCWJycoEeSLVrU2ifxtpw" outgoing="_SOCWKScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCWxicoEeSLVrU2ifxtpw" target="_SOCWyScoEeSLVrU2ifxtpw" source="_SOCW0ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCWxycoEeSLVrU2ifxtpw" target="_SOCWyCcoEeSLVrU2ifxtpw" source="_SOCWzycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCWyCcoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival)" incoming="_SOCWxycoEeSLVrU2ifxtpw" signal="_SOBthCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCWyScoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SOCWxicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWyicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWyycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <target xmi:id="_SOCWzCcoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).target" incoming="_SOCWJicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCWzScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCWzicoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCWzycoEeSLVrU2ifxtpw" name="Tuple@4875012d" outgoing="_SOCWxycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCW0CcoEeSLVrU2ifxtpw" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_SOCW0ScoEeSLVrU2ifxtpw" name="Value(&quot;Arrival7&quot;).result" outgoing="_SOCWxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCW0icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCW0ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCW1CcoEeSLVrU2ifxtpw" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCW1ScoEeSLVrU2ifxtpw" name="ExpressionStatement@4154b6be" incoming="_SOCWKScoEeSLVrU2ifxtpw" outgoing="_SOCWKycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW1icoEeSLVrU2ifxtpw" target="_SOCW2ScoEeSLVrU2ifxtpw" source="_SOCW4ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOCW1ycoEeSLVrU2ifxtpw" target="_SOCW2CcoEeSLVrU2ifxtpw" source="_SOCW3ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCW2CcoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival)" incoming="_SOCW1ycoEeSLVrU2ifxtpw" signal="_SOBthCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SOCW2ScoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SOCW1icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCW2icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCW2ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <target xmi:id="_SOCW3CcoEeSLVrU2ifxtpw" name="SendSignal(SignalNewArrival).target" incoming="_SOCWKCcoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCW3ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCW3icoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCW3ycoEeSLVrU2ifxtpw" name="Tuple@422f4736" outgoing="_SOCW1ycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCW4CcoEeSLVrU2ifxtpw" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_SOCW4ScoEeSLVrU2ifxtpw" name="Value(&quot;Arrival8&quot;).result" outgoing="_SOCW1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCW4icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCW4ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOCW5CcoEeSLVrU2ifxtpw" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCW5ScoEeSLVrU2ifxtpw" name="ExpressionStatement@1955811b" incoming="_SOCWKycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:SendSignalAction" xmi:id="_SOCW5icoEeSLVrU2ifxtpw" name="SendSignal(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw">
                <target xmi:id="_SOCW5ycoEeSLVrU2ifxtpw" name="SendSignal(SignalTermination).target" incoming="_SOCWKicoEeSLVrU2ifxtpw" type="_SOBtiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCW6CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCW6ScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOCWEicoEeSLVrU2ifxtpw" name="Output(test)" incoming="_SOCWEScoEeSLVrU2ifxtpw" parameter="_SOCWDicoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOCW6icoEeSLVrU2ifxtpw" name="TestRunner$method$1" specification="_SOCXbicoEeSLVrU2ifxtpw" node="_SOCW7ycoEeSLVrU2ifxtpw _SOCW8CcoEeSLVrU2ifxtpw" group="_SOCW8CcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SOCW6ycoEeSLVrU2ifxtpw" name="" type="_SOCUcCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCW7CcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCW7ScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW7icoEeSLVrU2ifxtpw" target="_SOCW7ycoEeSLVrU2ifxtpw" source="_SOCXAScoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SOCW8CcoEeSLVrU2ifxtpw" name="Body(TestRunner$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW8ScoEeSLVrU2ifxtpw" target="_SOCXAScoEeSLVrU2ifxtpw" source="_SOCW_icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW8icoEeSLVrU2ifxtpw" target="_SOCXAycoEeSLVrU2ifxtpw" source="_SOCXAScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCW8ycoEeSLVrU2ifxtpw" target="_SOCW_CcoEeSLVrU2ifxtpw" source="_SOCXAicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW9CcoEeSLVrU2ifxtpw" target="_SOCXBycoEeSLVrU2ifxtpw" source="_SOCXAScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW9ScoEeSLVrU2ifxtpw" target="_SOCXDicoEeSLVrU2ifxtpw" source="_SOCXCicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW9icoEeSLVrU2ifxtpw" target="_SOCXGicoEeSLVrU2ifxtpw" source="_SOCXEScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW9ycoEeSLVrU2ifxtpw" target="_SOCXICcoEeSLVrU2ifxtpw" source="_SOCXFScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCW-CcoEeSLVrU2ifxtpw" target="_SOCXJCcoEeSLVrU2ifxtpw" source="_SOCXIycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCW-ScoEeSLVrU2ifxtpw" target="_SOCXJCcoEeSLVrU2ifxtpw" source="_SOCXHScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCW-icoEeSLVrU2ifxtpw" target="_SOCXAicoEeSLVrU2ifxtpw" source="_SOCXJCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOCW-ycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCW_CcoEeSLVrU2ifxtpw" name="Body" incoming="_SOCW8ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SOCW_ScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SOCW_icoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOCW8ScoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCW_ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXACcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOCXAScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOCW8ScoEeSLVrU2ifxtpw" outgoing="_SOCW7icoEeSLVrU2ifxtpw _SOCW8icoEeSLVrU2ifxtpw _SOCW9CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SOCXAicoEeSLVrU2ifxtpw" name="Call(TestRunner$initialization$1)" incoming="_SOCW-icoEeSLVrU2ifxtpw" outgoing="_SOCW8ycoEeSLVrU2ifxtpw" operation="_SOCXaScoEeSLVrU2ifxtpw">
              <target xmi:id="_SOCXAycoEeSLVrU2ifxtpw" name="Call(TestRunner$initialization$1).target" incoming="_SOCW8icoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXBCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXBScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCXBicoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_SOCUcScoEeSLVrU2ifxtpw">
              <object xmi:id="_SOCXBycoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1).object" incoming="_SOCW9CcoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXCCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXCScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SOCXCicoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1).result" outgoing="_SOCW9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXCycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXDCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCXDScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SOCXDicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SOCW9ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXDycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXECcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SOCXEScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SOCW9icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXEicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXEycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCXFCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SOCXFScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOCW9ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXFicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXFycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SOCXGCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SOCXGScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SOCXGicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SOCW9icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXGycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXHCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SOCXHScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SOCW-ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXHicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXHycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SOCXICcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SOCW9ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXIScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXIicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SOCXIycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SOCW-CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SOCXJCcoEeSLVrU2ifxtpw" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_SOCW-CcoEeSLVrU2ifxtpw _SOCW-ScoEeSLVrU2ifxtpw" outgoing="_SOCW-icoEeSLVrU2ifxtpw" decisionInputFlow="_SOCW-ScoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOCW7ycoEeSLVrU2ifxtpw" name="Return" incoming="_SOCW7icoEeSLVrU2ifxtpw" parameter="_SOCW6ycoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOCXJScoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SOCXcicoEeSLVrU2ifxtpw" node="_SOCXJicoEeSLVrU2ifxtpw" group="_SOCXJicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SOCXJicoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SOCXJycoEeSLVrU2ifxtpw" name="TestRunner$initialization$1" specification="_SOCXaScoEeSLVrU2ifxtpw" node="_SOCXKCcoEeSLVrU2ifxtpw" group="_SOCXKCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SOCXKCcoEeSLVrU2ifxtpw" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXKScoEeSLVrU2ifxtpw" target="_SOCXNycoEeSLVrU2ifxtpw" source="_SOCXNCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXKicoEeSLVrU2ifxtpw" target="_SOCXQScoEeSLVrU2ifxtpw" source="_SOCXNycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXKycoEeSLVrU2ifxtpw" target="_SOCXSycoEeSLVrU2ifxtpw" source="_SOCXNycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXLCcoEeSLVrU2ifxtpw" target="_SOCXUicoEeSLVrU2ifxtpw" source="_SOCXTicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXLScoEeSLVrU2ifxtpw" target="_SOCXXicoEeSLVrU2ifxtpw" source="_SOCXVScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXLicoEeSLVrU2ifxtpw" target="_SOCXZCcoEeSLVrU2ifxtpw" source="_SOCXWScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCXLycoEeSLVrU2ifxtpw" target="_SOCXaCcoEeSLVrU2ifxtpw" source="_SOCXZycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXMCcoEeSLVrU2ifxtpw" target="_SOCXaCcoEeSLVrU2ifxtpw" source="_SOCXYScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOCXMScoEeSLVrU2ifxtpw" target="_SOCXOCcoEeSLVrU2ifxtpw" source="_SOCXaCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOCXMicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SOCXMycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SOCXNCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SOCXKScoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXNScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXNicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOCXNycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SOCXKScoEeSLVrU2ifxtpw" outgoing="_SOCXKicoEeSLVrU2ifxtpw _SOCXKycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCXOCcoEeSLVrU2ifxtpw" name="Initialization" incoming="_SOCXMScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOCXOScoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXOicoEeSLVrU2ifxtpw" target="_SOCXRycoEeSLVrU2ifxtpw" source="_SOCXPCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCXOycoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SOCXPCcoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SOCXOicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXPScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXPicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SOCXPycoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SOCXQCcoEeSLVrU2ifxtpw" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_SOCUcScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SOCXQScoEeSLVrU2ifxtpw" name="Write(TestRunner$initializationFlag$1).object" incoming="_SOCXKicoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXQicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXQycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOCXRCcoEeSLVrU2ifxtpw" name="Write(TestRunner$initializationFlag$1).result" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXRScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXRicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SOCXRycoEeSLVrU2ifxtpw" name="Write(TestRunner$initializationFlag$1).value" incoming="_SOCXOicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXSCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXSScoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SOCXSicoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_SOCUcScoEeSLVrU2ifxtpw">
              <object xmi:id="_SOCXSycoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1).object" incoming="_SOCXKycoEeSLVrU2ifxtpw" type="_SOCUcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXTCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXTScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SOCXTicoEeSLVrU2ifxtpw" name="Read(TestRunner$initializationFlag$1).result" outgoing="_SOCXLCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXTycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXUCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCXUScoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SOCXUicoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SOCXLCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXUycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXVCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SOCXVScoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SOCXLScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXVicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXVycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCXWCcoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SOCXWScoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SOCXLicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXWicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXWycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SOCXXCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SOCXXScoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SOCXXicoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SOCXLScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXXycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXYCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SOCXYScoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SOCXMCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXYicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXYycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SOCXZCcoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SOCXLicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXZScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXZicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SOCXZycoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SOCXLycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SOCXaCcoEeSLVrU2ifxtpw" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_SOCXLycoEeSLVrU2ifxtpw _SOCXMCcoEeSLVrU2ifxtpw" outgoing="_SOCXMScoEeSLVrU2ifxtpw" decisionInputFlow="_SOCXMCcoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SOCXaScoEeSLVrU2ifxtpw" name="TestRunner$initialization$1" visibility="protected" method="_SOCXJycoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SOCXaicoEeSLVrU2ifxtpw" name="test" visibility="private" method="_SOCWDScoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SOCXaycoEeSLVrU2ifxtpw" name="test" visibility="package" type="_SOBtiicoEeSLVrU2ifxtpw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXbCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXbScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SOCXbicoEeSLVrU2ifxtpw" name="TestRunner" visibility="package" method="_SOCW6icoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SOCXbycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SOCUcCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXcCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXcScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SOCXcicoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SOCXJScoEeSLVrU2ifxtpw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SOCXcycoEeSLVrU2ifxtpw" name="Start"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SOCXdCcoEeSLVrU2ifxtpw" name="Continue"/>
        <ownedReception xmi:id="_SOCXdScoEeSLVrU2ifxtpw" name="Start" signal="_SOCXcycoEeSLVrU2ifxtpw"/>
        <ownedReception xmi:id="_SOCXdicoEeSLVrU2ifxtpw" name="Continue" signal="_SOCXdCcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXdycoEeSLVrU2ifxtpw" name="Event(SignalNewArrival)" signal="_SOBthCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXeCcoEeSLVrU2ifxtpw" name="Event(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXeScoEeSLVrU2ifxtpw" name="Event(SignalNewArrival)" signal="_SOBthCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXeicoEeSLVrU2ifxtpw" name="Event(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXeycoEeSLVrU2ifxtpw" name="Event(SignalNewArrival)" signal="_SOBthCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXfCcoEeSLVrU2ifxtpw" name="Event(SignalNewArrival)" signal="_SOBthCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXfScoEeSLVrU2ifxtpw" name="Event(SignalNewArrival)" signal="_SOBthCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXficoEeSLVrU2ifxtpw" name="Event(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXfycoEeSLVrU2ifxtpw" name="Event(SignalNewArrival)" signal="_SOBthCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXgCcoEeSLVrU2ifxtpw" name="Event(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXgScoEeSLVrU2ifxtpw" name="Event(SignalNewArrival)" signal="_SOBthCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXgicoEeSLVrU2ifxtpw" name="Event(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXgycoEeSLVrU2ifxtpw" name="Event(SignalTermination)" signal="_SOBtiCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXhCcoEeSLVrU2ifxtpw" name="Event(Start)" signal="_SOCXcycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SOCXhScoEeSLVrU2ifxtpw" name="Event(Continue)" signal="_SOCXdCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SOCXhicoEeSLVrU2ifxtpw" name="AssertTrue" node="_SOCXlicoEeSLVrU2ifxtpw _SOCXlycoEeSLVrU2ifxtpw _SOCXmCcoEeSLVrU2ifxtpw _SOCXmScoEeSLVrU2ifxtpw _SOCXmicoEeSLVrU2ifxtpw" group="_SOCXmicoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SOCXhycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SOCXiCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SOCXiScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SOCXiicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SOCXiycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SOCXjCcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXjScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXjicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SOCXjycoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXkCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXkScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXkicoEeSLVrU2ifxtpw" target="_SOCXlycoEeSLVrU2ifxtpw" source="_SOCXlicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXkycoEeSLVrU2ifxtpw" target="_SOCXmScoEeSLVrU2ifxtpw" source="_SOCXmCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXlCcoEeSLVrU2ifxtpw" target="_SOCXtScoEeSLVrU2ifxtpw" source="_SOCXmScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXlScoEeSLVrU2ifxtpw" target="_SOC6vycoEeSLVrU2ifxtpw" source="_SOCXlycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SOCXmicoEeSLVrU2ifxtpw" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SOCXmycoEeSLVrU2ifxtpw" name="IfStatement@5f7704ff">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXnCcoEeSLVrU2ifxtpw" target="_SOCXrCcoEeSLVrU2ifxtpw" source="_SOCXtScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXnScoEeSLVrU2ifxtpw" target="_SOCXtycoEeSLVrU2ifxtpw" source="_SOCXtScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXnicoEeSLVrU2ifxtpw" target="_SOC6oCcoEeSLVrU2ifxtpw" source="_SOCXuicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXnycoEeSLVrU2ifxtpw" target="_SOC6oScoEeSLVrU2ifxtpw" source="_SOCXrycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXoCcoEeSLVrU2ifxtpw" target="_SOC6oicoEeSLVrU2ifxtpw" source="_SOC6oCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXoScoEeSLVrU2ifxtpw" target="_SOC6oicoEeSLVrU2ifxtpw" source="_SOC6oCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXoicoEeSLVrU2ifxtpw" target="_SOC6oScoEeSLVrU2ifxtpw" source="_SOC6oicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOCXoycoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXpCcoEeSLVrU2ifxtpw" target="_SOCXsicoEeSLVrU2ifxtpw" source="_SOCXpycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOCXpScoEeSLVrU2ifxtpw" target="_SOC6pCcoEeSLVrU2ifxtpw" source="_SOC6oScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOCXpicoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SOCXpycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SOCXpCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXqCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXqScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SOCXqicoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SOCXqycoEeSLVrU2ifxtpw" name="Test(==)">
            <first xmi:id="_SOCXrCcoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SOCXnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXrScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXricoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SOCXrycoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SOCXnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXsCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXsScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SOCXsicoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SOCXpCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXsycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXtCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SOCXtScoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_SOCXlCcoEeSLVrU2ifxtpw" outgoing="_SOCXnCcoEeSLVrU2ifxtpw _SOCXnScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOCXticoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SOCXtycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SOCXnScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXuCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXuScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SOCXuicoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SOCXnicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOCXuycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOCXvCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SOC6oCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SOCXnicoEeSLVrU2ifxtpw" outgoing="_SOCXoCcoEeSLVrU2ifxtpw _SOCXoScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SOC6oScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_SOCXnycoEeSLVrU2ifxtpw _SOCXoicoEeSLVrU2ifxtpw" outgoing="_SOCXpScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SOC6oicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SOCXoCcoEeSLVrU2ifxtpw _SOCXoScoEeSLVrU2ifxtpw" outgoing="_SOCXoicoEeSLVrU2ifxtpw" decisionInputFlow="_SOCXoScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC6oycoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_SOC6pCcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SOCXpScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6pScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6picoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SOC6pycoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6qCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6qScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC6qicoEeSLVrU2ifxtpw" name="ExpressionStatement@3548b390">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC6qycoEeSLVrU2ifxtpw" target="_SOC6ricoEeSLVrU2ifxtpw" source="_SOC6wicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOC6rCcoEeSLVrU2ifxtpw" target="_SOC6rScoEeSLVrU2ifxtpw" source="_SOC6tCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC6rScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SOC6rCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SOC6ricoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SOC6qycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6rycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6sCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SOC6sScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6sicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6sycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC6tCcoEeSLVrU2ifxtpw" name="Tuple@547ec1a6" outgoing="_SOC6rCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC6tScoEeSLVrU2ifxtpw" target="_SOC6vCcoEeSLVrU2ifxtpw" source="_SOC6tycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC6ticoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SOC6tycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_SOC6tScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6uCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6uScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SOC6uicoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC6uycoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SOC6vCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SOC6tScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6vScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6vicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOC6vycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SOCXlScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6wCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6wScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SOC6wicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SOC6qycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6wycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6xCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC6xScoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SOC6xicoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC6xycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC6yCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SOC6yScoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_SOC6yicoEeSLVrU2ifxtpw" body="_SOC6qicoEeSLVrU2ifxtpw" decider="_SOC6pycoEeSLVrU2ifxtpw" successorClause="_SOC6yycoEeSLVrU2ifxtpw" test="_SOCXpicoEeSLVrU2ifxtpw _SOCXqycoEeSLVrU2ifxtpw _SOCXticoEeSLVrU2ifxtpw _SOC6oycoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_SOC6yycoEeSLVrU2ifxtpw" decider="_SOC6xicoEeSLVrU2ifxtpw" predecessorClause="_SOC6yicoEeSLVrU2ifxtpw" test="_SOC6xScoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOCXlicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SOCXkicoEeSLVrU2ifxtpw" parameter="_SOCXjCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SOCXlycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SOCXkicoEeSLVrU2ifxtpw" outgoing="_SOCXlScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOCXmCcoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_SOCXkycoEeSLVrU2ifxtpw" parameter="_SOCXjycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SOCXmScoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_SOCXkycoEeSLVrU2ifxtpw" outgoing="_SOCXlCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SOC6zCcoEeSLVrU2ifxtpw" name="AssertEqual" node="_SOC65ScoEeSLVrU2ifxtpw _SOC65icoEeSLVrU2ifxtpw _SOC65ycoEeSLVrU2ifxtpw _SOC66CcoEeSLVrU2ifxtpw _SOC66ScoEeSLVrU2ifxtpw _SOC66icoEeSLVrU2ifxtpw _SOC66ycoEeSLVrU2ifxtpw" group="_SOC66ycoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SOC6zScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SOC6zicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SOC6zycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SOC60CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SOC60ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SOC60icoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC60ycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC61CcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SOC61ScoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC61icoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC61ycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SOC62CcoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC62ScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC62icoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC62ycoEeSLVrU2ifxtpw" target="_SOC65icoEeSLVrU2ifxtpw" source="_SOC65ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC63CcoEeSLVrU2ifxtpw" target="_SOC66CcoEeSLVrU2ifxtpw" source="_SOC65ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC63ScoEeSLVrU2ifxtpw" target="_SOC66icoEeSLVrU2ifxtpw" source="_SOC66ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC63icoEeSLVrU2ifxtpw" target="_SOC7ECcoEeSLVrU2ifxtpw" source="_SOC66CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC63ycoEeSLVrU2ifxtpw" target="_SOC7GCcoEeSLVrU2ifxtpw" source="_SOC66icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC64CcoEeSLVrU2ifxtpw" target="_SOC7TycoEeSLVrU2ifxtpw" source="_SOC65icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC64ScoEeSLVrU2ifxtpw" target="_SOC7dScoEeSLVrU2ifxtpw" source="_SOC66icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC64icoEeSLVrU2ifxtpw" target="_SOC7kycoEeSLVrU2ifxtpw" source="_SOC66icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC64ycoEeSLVrU2ifxtpw" target="_SOC7uScoEeSLVrU2ifxtpw" source="_SOC66icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC65CcoEeSLVrU2ifxtpw" target="_SOC72ScoEeSLVrU2ifxtpw" source="_SOC66icoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SOC66ycoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SOC67CcoEeSLVrU2ifxtpw" name="IfStatement@75f8bf8">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC67ScoEeSLVrU2ifxtpw" target="_SOC7BycoEeSLVrU2ifxtpw" source="_SOC7ECcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC67icoEeSLVrU2ifxtpw" target="_SOC7EicoEeSLVrU2ifxtpw" source="_SOC7ECcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC67ycoEeSLVrU2ifxtpw" target="_SOC7DScoEeSLVrU2ifxtpw" source="_SOC7GCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC68CcoEeSLVrU2ifxtpw" target="_SOC7GicoEeSLVrU2ifxtpw" source="_SOC7GCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC68ScoEeSLVrU2ifxtpw" target="_SOC7IScoEeSLVrU2ifxtpw" source="_SOC7FScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC68icoEeSLVrU2ifxtpw" target="_SOC7IicoEeSLVrU2ifxtpw" source="_SOC7HScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC68ycoEeSLVrU2ifxtpw" target="_SOC7JCcoEeSLVrU2ifxtpw" source="_SOC7IScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC69CcoEeSLVrU2ifxtpw" target="_SOC7KycoEeSLVrU2ifxtpw" source="_SOC7IicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC69ScoEeSLVrU2ifxtpw" target="_SOC7MScoEeSLVrU2ifxtpw" source="_SOC7IicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC69icoEeSLVrU2ifxtpw" target="_SOC7BicoEeSLVrU2ifxtpw" source="_SOC7MScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC69ycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC6-CcoEeSLVrU2ifxtpw" target="_SOC7IycoEeSLVrU2ifxtpw" source="_SOC7MScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC6-ScoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC6-icoEeSLVrU2ifxtpw" target="_SOC7MicoEeSLVrU2ifxtpw" source="_SOC7ICcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC6-ycoEeSLVrU2ifxtpw" target="_SOC7MicoEeSLVrU2ifxtpw" source="_SOC7IScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC6_CcoEeSLVrU2ifxtpw" target="_SOC7MScoEeSLVrU2ifxtpw" source="_SOC7MicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC6_ScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC6_icoEeSLVrU2ifxtpw" target="_SOC7KicoEeSLVrU2ifxtpw" source="_SOC7MicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC6_ycoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7ACcoEeSLVrU2ifxtpw" target="_SOC7MycoEeSLVrU2ifxtpw" source="_SOC7CicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7AScoEeSLVrU2ifxtpw" target="_SOC7MycoEeSLVrU2ifxtpw" source="_SOC7JycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7AicoEeSLVrU2ifxtpw" target="_SOC7MycoEeSLVrU2ifxtpw" source="_SOC7LicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7AycoEeSLVrU2ifxtpw" target="_SOC7NScoEeSLVrU2ifxtpw" source="_SOC7MycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7BCcoEeSLVrU2ifxtpw" target="_SOC7ZCcoEeSLVrU2ifxtpw" source="_SOC7OycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7BScoEeSLVrU2ifxtpw" target="_SOC74CcoEeSLVrU2ifxtpw" source="_SOC7ZCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SOC7BicoEeSLVrU2ifxtpw" name="Test(==)" incoming="_SOC69icoEeSLVrU2ifxtpw">
            <first xmi:id="_SOC7BycoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SOC67ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7CCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7CScoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SOC7CicoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SOC7ACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7CycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7DCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SOC7DScoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SOC67ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7DicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7DycoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SOC7ECcoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_SOC63icoEeSLVrU2ifxtpw" outgoing="_SOC67ScoEeSLVrU2ifxtpw _SOC67icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7EScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SOC7EicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SOC67icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7EycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7FCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SOC7FScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SOC68ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7FicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7FycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SOC7GCcoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_SOC63ycoEeSLVrU2ifxtpw" outgoing="_SOC67ycoEeSLVrU2ifxtpw _SOC68CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7GScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SOC7GicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SOC68CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7GycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7HCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SOC7HScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SOC68icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7HicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7HycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SOC7ICcoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_SOC6-icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SOC7IScoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SOC68ScoEeSLVrU2ifxtpw" outgoing="_SOC68ycoEeSLVrU2ifxtpw _SOC6-ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SOC7IicoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SOC68icoEeSLVrU2ifxtpw" outgoing="_SOC69CcoEeSLVrU2ifxtpw _SOC69ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7IycoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_SOC6-CcoEeSLVrU2ifxtpw">
            <argument xmi:id="_SOC7JCcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SOC68ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7JScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7JicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SOC7JycoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_SOC7AScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7KCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7KScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7KicoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_SOC6_icoEeSLVrU2ifxtpw">
            <argument xmi:id="_SOC7KycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SOC69CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7LCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7LScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SOC7LicoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_SOC7AicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7LycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7MCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_SOC7MScoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SOC69ScoEeSLVrU2ifxtpw _SOC6_CcoEeSLVrU2ifxtpw" outgoing="_SOC69icoEeSLVrU2ifxtpw _SOC6-CcoEeSLVrU2ifxtpw" decisionInputFlow="_SOC69ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SOC7MicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SOC6-icoEeSLVrU2ifxtpw _SOC6-ycoEeSLVrU2ifxtpw" outgoing="_SOC6_CcoEeSLVrU2ifxtpw _SOC6_icoEeSLVrU2ifxtpw" decisionInputFlow="_SOC6-ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SOC7MycoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_SOC7ACcoEeSLVrU2ifxtpw _SOC7AScoEeSLVrU2ifxtpw _SOC7AicoEeSLVrU2ifxtpw" outgoing="_SOC7AycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7NCcoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_SOC7NScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SOC7AycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7NicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7NycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SOC7OCcoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7OScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7OicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC7OycoEeSLVrU2ifxtpw" name="ExpressionStatement@240b13a8" outgoing="_SOC7BCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7PCcoEeSLVrU2ifxtpw" target="_SOC7PycoEeSLVrU2ifxtpw" source="_SOC7YScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7PScoEeSLVrU2ifxtpw" target="_SOC7PicoEeSLVrU2ifxtpw" source="_SOC7QicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7PicoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SOC7PScoEeSLVrU2ifxtpw" behavior="_SOC8TCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SOC7PycoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SOC7PCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7QCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7QScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC7QicoEeSLVrU2ifxtpw" name="Tuple@6a18218" outgoing="_SOC7PScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7QycoEeSLVrU2ifxtpw" target="_SOC7TCcoEeSLVrU2ifxtpw" source="_SOC7RycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7RCcoEeSLVrU2ifxtpw" target="_SOC7WycoEeSLVrU2ifxtpw" source="_SOC7UicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7RScoEeSLVrU2ifxtpw" target="_SOC7XicoEeSLVrU2ifxtpw" source="_SOC7VicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC7RicoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SOC7RycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_SOC7QycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7SCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7SScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SOC7SicoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7SycoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SOC7TCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SOC7QycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7TScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7TicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOC7TycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SOC64CcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7UCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7UScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SOC7UicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SOC7RCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7UycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7VCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC7VScoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_SOC7VicoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_SOC7RScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7VycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7WCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SOC7WScoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7WicoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SOC7WycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SOC7RCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7XCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7XScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SOC7XicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SOC7RScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7XycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7YCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SOC7YScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SOC7PCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7YicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7YycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC7ZCcoEeSLVrU2ifxtpw" name="ExpressionStatement@452f88a2" incoming="_SOC7BCcoEeSLVrU2ifxtpw" outgoing="_SOC7BScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7ZScoEeSLVrU2ifxtpw" target="_SOC7aCcoEeSLVrU2ifxtpw" source="_SOC73ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7ZicoEeSLVrU2ifxtpw" target="_SOC7ZycoEeSLVrU2ifxtpw" source="_SOC7aycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7ZycoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SOC7ZicoEeSLVrU2ifxtpw" behavior="_SOC8TCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SOC7aCcoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SOC7ZScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7aScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7aicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC7aycoEeSLVrU2ifxtpw" name="Tuple@66fbd572" outgoing="_SOC7ZicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7bCcoEeSLVrU2ifxtpw" target="_SOC73icoEeSLVrU2ifxtpw" source="_SOC73ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7bScoEeSLVrU2ifxtpw" target="_SOC73icoEeSLVrU2ifxtpw" source="_SOC7eCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7bicoEeSLVrU2ifxtpw" target="_SOC7eycoEeSLVrU2ifxtpw" source="_SOC73icoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC7bycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7cCcoEeSLVrU2ifxtpw" target="_SOC7hScoEeSLVrU2ifxtpw" source="_SOC73icoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC7cScoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7cicoEeSLVrU2ifxtpw" target="_SOC73ycoEeSLVrU2ifxtpw" source="_SOC7fScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7cycoEeSLVrU2ifxtpw" target="_SOC73ycoEeSLVrU2ifxtpw" source="_SOC7jycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7dCcoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_SOC7dScoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_SOC64ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7dicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7dycoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SOC7eCcoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_SOC7bScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7eScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7eicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC7eycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@20453ed7.operand2" incoming="_SOC7bicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7fCcoEeSLVrU2ifxtpw" target="_SOC7fScoEeSLVrU2ifxtpw" source="_SOC7gScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SOC7fScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@20453ed7.operand2.result" incoming="_SOC7fCcoEeSLVrU2ifxtpw" outgoing="_SOC7cicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7ficoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7fycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC7gCcoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_SOC7gScoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_SOC7fCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7gicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7gycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SOC7hCcoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC7hScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@20453ed7.operand3" incoming="_SOC7cCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7hicoEeSLVrU2ifxtpw" target="_SOC72ycoEeSLVrU2ifxtpw" source="_SOC72icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7hycoEeSLVrU2ifxtpw" target="_SOC72ycoEeSLVrU2ifxtpw" source="_SOC7licoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7iCcoEeSLVrU2ifxtpw" target="_SOC7mScoEeSLVrU2ifxtpw" source="_SOC72ycoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC7iScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SOC7iicoEeSLVrU2ifxtpw" target="_SOC71CcoEeSLVrU2ifxtpw" source="_SOC72ycoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC7iycoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7jCcoEeSLVrU2ifxtpw" target="_SOC73CcoEeSLVrU2ifxtpw" source="_SOC7nycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7jScoEeSLVrU2ifxtpw" target="_SOC73CcoEeSLVrU2ifxtpw" source="_SOC71icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7jicoEeSLVrU2ifxtpw" target="_SOC7jycoEeSLVrU2ifxtpw" source="_SOC73CcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SOC7jycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@20453ed7.operand3.result" incoming="_SOC7jicoEeSLVrU2ifxtpw" outgoing="_SOC7cycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7kCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7kScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOC7kicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_SOC7kycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_SOC64icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7lCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7lScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SOC7licoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_SOC7hycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7lycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7mCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC7mScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@200ae810.operand2" incoming="_SOC7iCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7micoEeSLVrU2ifxtpw" target="_SOC7vCcoEeSLVrU2ifxtpw" source="_SOC7oycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7mycoEeSLVrU2ifxtpw" target="_SOC7vycoEeSLVrU2ifxtpw" source="_SOC7uicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7nCcoEeSLVrU2ifxtpw" target="_SOC7yycoEeSLVrU2ifxtpw" source="_SOC7wicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7nScoEeSLVrU2ifxtpw" target="_SOC7zicoEeSLVrU2ifxtpw" source="_SOC7xicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7nicoEeSLVrU2ifxtpw" target="_SOC7nycoEeSLVrU2ifxtpw" source="_SOC70ScoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SOC7nycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@200ae810.operand2.result" incoming="_SOC7nicoEeSLVrU2ifxtpw" outgoing="_SOC7jCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7oCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7oScoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC7oicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SOC7oycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_SOC7micoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7pCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7pScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SOC7picoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_SOC7pycoEeSLVrU2ifxtpw" name="CastExpression@ded1e69" mode="parallel" outputElement="_SOC7uicoEeSLVrU2ifxtpw" inputElement="_SOC7uScoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7qCcoEeSLVrU2ifxtpw" target="_SOC7sScoEeSLVrU2ifxtpw" source="_SOC7tycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7qScoEeSLVrU2ifxtpw" target="_SOC7uCcoEeSLVrU2ifxtpw" source="_SOC7tycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7qicoEeSLVrU2ifxtpw" target="_SOC7uCcoEeSLVrU2ifxtpw" source="_SOC7tCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7qycoEeSLVrU2ifxtpw" target="_SOC7rycoEeSLVrU2ifxtpw" source="_SOC7uCcoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC7rCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7rScoEeSLVrU2ifxtpw" target="_SOC7tycoEeSLVrU2ifxtpw" source="_SOC7uScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC7ricoEeSLVrU2ifxtpw" target="_SOC7uicoEeSLVrU2ifxtpw" source="_SOC7rycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_SOC7rycoEeSLVrU2ifxtpw" name="Merge(CastExpression@ded1e69.operand)" incoming="_SOC7qycoEeSLVrU2ifxtpw" outgoing="_SOC7ricoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SOC7sCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_SOC7sScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_SOC7qCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7sicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7sycoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SOC7tCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_SOC7qicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7tScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7ticoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SOC7tycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_SOC7rScoEeSLVrU2ifxtpw" outgoing="_SOC7qCcoEeSLVrU2ifxtpw _SOC7qScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_SOC7uCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_SOC7qScoEeSLVrU2ifxtpw _SOC7qicoEeSLVrU2ifxtpw" outgoing="_SOC7qycoEeSLVrU2ifxtpw" decisionInputFlow="_SOC7qicoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SOC7uScoEeSLVrU2ifxtpw" name="CastExpression@ded1e69.inputElement" incoming="_SOC64ycoEeSLVrU2ifxtpw" outgoing="_SOC7rScoEeSLVrU2ifxtpw" regionAsInput="_SOC7pycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SOC7uicoEeSLVrU2ifxtpw" name="CastExpression@ded1e69.outputElement" incoming="_SOC7ricoEeSLVrU2ifxtpw" outgoing="_SOC7mycoEeSLVrU2ifxtpw" regionAsOutput="_SOC7pycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7uycoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SOC7vCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SOC7micoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7vScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7vicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SOC7vycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SOC7mycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7wCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7wScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SOC7wicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SOC7nCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7wycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7xCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC7xScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SOC7xicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_SOC7nScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7xycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7yCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SOC7yScoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC7yicoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SOC7yycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SOC7nCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7zCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC7zScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SOC7zicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SOC7nScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7zycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC70CcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SOC70ScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SOC7nicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC70icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC70ycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC71CcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@200ae810.operand3" incoming="_SOC7iicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC71ScoEeSLVrU2ifxtpw" target="_SOC71icoEeSLVrU2ifxtpw" source="_SOC72ScoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SOC71icoEeSLVrU2ifxtpw" name="ConditionalTestExpression@200ae810.operand3.result" incoming="_SOC71ScoEeSLVrU2ifxtpw" outgoing="_SOC7jScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC71ycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC72CcoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_SOC72ScoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_SOC65CcoEeSLVrU2ifxtpw" outgoing="_SOC71ScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SOC72icoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@200ae810)" outgoing="_SOC7hicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SOC72ycoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@200ae810)" incoming="_SOC7hicoEeSLVrU2ifxtpw _SOC7hycoEeSLVrU2ifxtpw" outgoing="_SOC7iCcoEeSLVrU2ifxtpw _SOC7iicoEeSLVrU2ifxtpw" decisionInputFlow="_SOC7hycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SOC73CcoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@200ae810.result)" incoming="_SOC7jCcoEeSLVrU2ifxtpw _SOC7jScoEeSLVrU2ifxtpw" outgoing="_SOC7jicoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SOC73ScoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@20453ed7)" outgoing="_SOC7bCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SOC73icoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@20453ed7)" incoming="_SOC7bCcoEeSLVrU2ifxtpw _SOC7bScoEeSLVrU2ifxtpw" outgoing="_SOC7bicoEeSLVrU2ifxtpw _SOC7cCcoEeSLVrU2ifxtpw" decisionInputFlow="_SOC7bScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SOC73ycoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@20453ed7.result)" incoming="_SOC7cicoEeSLVrU2ifxtpw _SOC7cycoEeSLVrU2ifxtpw" outgoing="_SOC7ZScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC74CcoEeSLVrU2ifxtpw" name="ExpressionStatement@319268b4" incoming="_SOC7BScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC74ScoEeSLVrU2ifxtpw" target="_SOC75CcoEeSLVrU2ifxtpw" source="_SOC77CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOC74icoEeSLVrU2ifxtpw" target="_SOC74ycoEeSLVrU2ifxtpw" source="_SOC76icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC74ycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SOC74icoEeSLVrU2ifxtpw">
              <argument xmi:id="_SOC75CcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SOC74ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC75ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC75icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SOC75ycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC76CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC76ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC76icoEeSLVrU2ifxtpw" name="Tuple@6393d737" outgoing="_SOC74icoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC76ycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_SOC77CcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_SOC74ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC77ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC77icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SOC77ycoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC78CcoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SOC78ScoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC78icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC78ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SOC79CcoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_SOC79ScoEeSLVrU2ifxtpw" body="_SOC7OycoEeSLVrU2ifxtpw _SOC7ZCcoEeSLVrU2ifxtpw _SOC74CcoEeSLVrU2ifxtpw" decider="_SOC7OCcoEeSLVrU2ifxtpw" successorClause="_SOC79icoEeSLVrU2ifxtpw" test="_SOC7BicoEeSLVrU2ifxtpw _SOC7EScoEeSLVrU2ifxtpw _SOC7GScoEeSLVrU2ifxtpw _SOC7IycoEeSLVrU2ifxtpw _SOC7KicoEeSLVrU2ifxtpw _SOC7NCcoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_SOC79icoEeSLVrU2ifxtpw" decider="_SOC78ScoEeSLVrU2ifxtpw" predecessorClause="_SOC79ScoEeSLVrU2ifxtpw" test="_SOC78CcoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOC65ScoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SOC62ycoEeSLVrU2ifxtpw" parameter="_SOC60icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SOC65icoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SOC62ycoEeSLVrU2ifxtpw" outgoing="_SOC64CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOC65ycoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_SOC63CcoEeSLVrU2ifxtpw" parameter="_SOC61ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SOC66CcoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_SOC63CcoEeSLVrU2ifxtpw" outgoing="_SOC63icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOC66ScoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_SOC63ScoEeSLVrU2ifxtpw" parameter="_SOC62CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SOC66icoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_SOC63ScoEeSLVrU2ifxtpw" outgoing="_SOC63ycoEeSLVrU2ifxtpw _SOC64ScoEeSLVrU2ifxtpw _SOC64icoEeSLVrU2ifxtpw _SOC64ycoEeSLVrU2ifxtpw _SOC65CcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SOC79ycoEeSLVrU2ifxtpw" name="AssertFalse" node="_SOC8CCcoEeSLVrU2ifxtpw _SOC8CScoEeSLVrU2ifxtpw _SOC8CicoEeSLVrU2ifxtpw _SOC8CycoEeSLVrU2ifxtpw _SOC8DCcoEeSLVrU2ifxtpw" group="_SOC8DCcoEeSLVrU2ifxtpw">
      <elementImport xmi:id="_SOC7-CcoEeSLVrU2ifxtpw" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_SOC7-ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SOC7-icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SOC7-ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SOC7_CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SOC7_ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SOC7_icoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC7_ycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8ACcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SOC8AScoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8AicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8AycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8BCcoEeSLVrU2ifxtpw" target="_SOC8CScoEeSLVrU2ifxtpw" source="_SOC8CCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8BScoEeSLVrU2ifxtpw" target="_SOC8CycoEeSLVrU2ifxtpw" source="_SOC8CicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8BicoEeSLVrU2ifxtpw" target="_SOC8LCcoEeSLVrU2ifxtpw" source="_SOC8CScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8BycoEeSLVrU2ifxtpw" target="_SOC8QScoEeSLVrU2ifxtpw" source="_SOC8CycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SOC8DCcoEeSLVrU2ifxtpw" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC8DScoEeSLVrU2ifxtpw" name="ExpressionStatement@1e8025e6">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8DicoEeSLVrU2ifxtpw" target="_SOC8EicoEeSLVrU2ifxtpw" source="_SOC8LycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8DycoEeSLVrU2ifxtpw" target="_SOC8FScoEeSLVrU2ifxtpw" source="_SOC8SicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC8ECcoEeSLVrU2ifxtpw" target="_SOC8EScoEeSLVrU2ifxtpw" source="_SOC8GCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC8EScoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SOC8ECcoEeSLVrU2ifxtpw" behavior="_SOCXhicoEeSLVrU2ifxtpw">
            <argument xmi:id="_SOC8EicoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SOC8DicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8EycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8FCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_SOC8FScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SOC8DycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8FicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8FycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC8GCcoEeSLVrU2ifxtpw" name="Tuple@3bc1cae5" outgoing="_SOC8ECcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8GScoEeSLVrU2ifxtpw" target="_SOC8KScoEeSLVrU2ifxtpw" source="_SOC8JCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8GicoEeSLVrU2ifxtpw" target="_SOC8OCcoEeSLVrU2ifxtpw" source="_SOC8QScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8GycoEeSLVrU2ifxtpw" target="_SOC8QycoEeSLVrU2ifxtpw" source="_SOC8QScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8HCcoEeSLVrU2ifxtpw" target="_SOC8SScoEeSLVrU2ifxtpw" source="_SOC8RicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8HScoEeSLVrU2ifxtpw" target="_SOC8SicoEeSLVrU2ifxtpw" source="_SOC8OycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8HicoEeSLVrU2ifxtpw" target="_SOC8SycoEeSLVrU2ifxtpw" source="_SOC8SScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8HycoEeSLVrU2ifxtpw" target="_SOC8SycoEeSLVrU2ifxtpw" source="_SOC8SScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8ICcoEeSLVrU2ifxtpw" target="_SOC8SicoEeSLVrU2ifxtpw" source="_SOC8SycoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SOC8IScoEeSLVrU2ifxtpw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8IicoEeSLVrU2ifxtpw" target="_SOC8PicoEeSLVrU2ifxtpw" source="_SOC8MycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC8IycoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;)">
              <result xmi:id="_SOC8JCcoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;).result" outgoing="_SOC8GScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8JScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8JicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_SOC8JycoEeSLVrU2ifxtpw" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC8KCcoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_SOC8KScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SOC8GScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8KicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8KycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SOC8LCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SOC8BicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8LScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8LicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SOC8LycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SOC8DicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8MCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8MScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC8MicoEeSLVrU2ifxtpw" name="Value(false)">
              <result xmi:id="_SOC8MycoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_SOC8IicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8NCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8NScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SOC8NicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SOC8NycoEeSLVrU2ifxtpw" name="Test(==)">
              <first xmi:id="_SOC8OCcoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SOC8GicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8OScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8OicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SOC8OycoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SOC8HScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8PCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8PScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SOC8PicoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SOC8IicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8PycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8QCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOC8QScoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_SOC8BycoEeSLVrU2ifxtpw" outgoing="_SOC8GicoEeSLVrU2ifxtpw _SOC8GycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC8QicoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
              <argument xmi:id="_SOC8QycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SOC8GycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8RCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8RScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SOC8RicoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SOC8HCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8RycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8SCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOC8SScoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SOC8HCcoEeSLVrU2ifxtpw" outgoing="_SOC8HicoEeSLVrU2ifxtpw _SOC8HycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SOC8SicoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_SOC8HScoEeSLVrU2ifxtpw _SOC8ICcoEeSLVrU2ifxtpw" outgoing="_SOC8DycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SOC8SycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SOC8HicoEeSLVrU2ifxtpw _SOC8HycoEeSLVrU2ifxtpw" outgoing="_SOC8ICcoEeSLVrU2ifxtpw" decisionInputFlow="_SOC8HycoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOC8CCcoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SOC8BCcoEeSLVrU2ifxtpw" parameter="_SOC7_icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SOC8CScoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SOC8BCcoEeSLVrU2ifxtpw" outgoing="_SOC8BicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOC8CicoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_SOC8BScoEeSLVrU2ifxtpw" parameter="_SOC8AScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SOC8CycoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_SOC8BScoEeSLVrU2ifxtpw" outgoing="_SOC8BycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SOC8TCcoEeSLVrU2ifxtpw" name="Write" node="_SOC8VycoEeSLVrU2ifxtpw _SOC8WCcoEeSLVrU2ifxtpw _SOC8WScoEeSLVrU2ifxtpw" group="_SOC8WScoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SOC8TScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SOC8TicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SOC8TycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SOC8UCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SOC8UScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SOC8UicoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8UycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8VCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8VScoEeSLVrU2ifxtpw" target="_SOC8WCcoEeSLVrU2ifxtpw" source="_SOC8VycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8VicoEeSLVrU2ifxtpw" target="_SOC8YCcoEeSLVrU2ifxtpw" source="_SOC8WCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SOC8WScoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC8WicoEeSLVrU2ifxtpw" name="ExpressionStatement@1ff50ed4">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8WycoEeSLVrU2ifxtpw" target="_SOC8bScoEeSLVrU2ifxtpw" source="_SOC8eicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SOC8XCcoEeSLVrU2ifxtpw" target="_SOC8XScoEeSLVrU2ifxtpw" source="_SOC8bicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SOC8XScoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_SOC8XCcoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SOC8bScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8XicoEeSLVrU2ifxtpw" target="_SOC8ZCcoEeSLVrU2ifxtpw" source="_SOC8YCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8XycoEeSLVrU2ifxtpw" target="_SOC8aicoEeSLVrU2ifxtpw" source="_SOC8bScoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_SOC8YCcoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_SOC8VicoEeSLVrU2ifxtpw" outgoing="_SOC8XicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8YScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8YicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SOC8YycoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_SOC8ZCcoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_SOC8XicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8ZScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8ZicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SOC8ZycoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8aCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8aScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SOC8aicoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_SOC8XycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8aycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8bCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SOC8bScoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_SOC8WycoEeSLVrU2ifxtpw" outgoing="_SOC8XycoEeSLVrU2ifxtpw" regionAsInput="_SOC8XScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC8bicoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_SOC8XCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8bycoEeSLVrU2ifxtpw" target="_SOC8dCcoEeSLVrU2ifxtpw" source="_SOC8fycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8cCcoEeSLVrU2ifxtpw" target="_SOC8hycoEeSLVrU2ifxtpw" source="_SOC8gycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SOC8cScoEeSLVrU2ifxtpw" target="_SOC8cycoEeSLVrU2ifxtpw" source="_SOC8fScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SOC8cicoEeSLVrU2ifxtpw" target="_SOC8dycoEeSLVrU2ifxtpw" source="_SOC8hycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SOC8cycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_SOC8cScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SOC8dCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SOC8bycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8dScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8dicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SOC8dycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SOC8cicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8eCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8eScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SOC8eicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SOC8WycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8eycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8fCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SOC8fScoEeSLVrU2ifxtpw" name="Tuple@5ffa655a" outgoing="_SOC8cScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_SOC8ficoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_SOC8fycoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_SOC8bycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8gCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8gScoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SOC8gicoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SOC8gycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SOC8cCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOC8hCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOC8hScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SOC8hicoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SOC8hycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SOC8cCcoEeSLVrU2ifxtpw" outgoing="_SOC8cicoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SOC8VycoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_SOC8VScoEeSLVrU2ifxtpw" parameter="_SOC8UicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SOC8WCcoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_SOC8VScoEeSLVrU2ifxtpw" outgoing="_SOC8VicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <profileApplication xmi:id="_SOC8iCcoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_SOC8iScoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_SOC8iicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SOBtgycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SOC8iycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SOBs-icoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SOC8jCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SOCUbicoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SOC8jScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SOCUZycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SOC8jicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SOBtfycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SODhsCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SOBs9icoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SODhsScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SOCXbicoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SODhsicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SOCXcicoEeSLVrU2ifxtpw"/>
</xmi:XMI>

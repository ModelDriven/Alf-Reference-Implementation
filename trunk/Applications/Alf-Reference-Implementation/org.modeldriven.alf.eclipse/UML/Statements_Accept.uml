<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_S3w9gK1MEeOdBunZhTRw1w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_S3w9ga1MEeOdBunZhTRw1w" name="Statements_Accept" classifierBehavior="_S3w9iq1MEeOdBunZhTRw1w" isActive="true">
      <packageImport xmi:id="_S3w9gq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S3w9g61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S3w9hK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S3w9ha1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S3w9hq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_S3w9h61MEeOdBunZhTRw1w" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9iK1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9ia1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3w9iq1MEeOdBunZhTRw1w" name="Statements_Accept$classifierBehavior$1" visibility="private" isActive="true" group="_S3w9i61MEeOdBunZhTRw1w" node="_S3w9i61MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_S3w9i61MEeOdBunZhTRw1w" name="Body(Statements_Accept$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3w9jK1MEeOdBunZhTRw1w" name="ExpressionStatement@155f9dc1">
            <node xmi:type="uml:SendSignalAction" xmi:id="_S3w9ja1MEeOdBunZhTRw1w" name="SendSignal(Start)" signal="_S3yysK1MEeOdBunZhTRw1w">
              <target xmi:id="_S3w9jq1MEeOdBunZhTRw1w" name="SendSignal(Start).target" incoming="_S3w9qa1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9j61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9kK1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3w9ka1MEeOdBunZhTRw1w" name="InstanceCreationExpression@4ff76aef">
              <node xmi:type="uml:CallOperationAction" xmi:id="_S3w9kq1MEeOdBunZhTRw1w" name="Call(TestRunner)" operation="_S3yPKa1MEeOdBunZhTRw1w">
                <result xmi:id="_S3w9k61MEeOdBunZhTRw1w" name="Call(TestRunner).result()" outgoing="_S3w9pq1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9lK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9la1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_S3w9lq1MEeOdBunZhTRw1w" name="Call(TestRunner).target" incoming="_S3w9pa1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9l61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9mK1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_S3w9ma1MEeOdBunZhTRw1w" name="Create(TestRunner)" classifier="_S3yMK61MEeOdBunZhTRw1w">
                <result xmi:id="_S3w9mq1MEeOdBunZhTRw1w" name="Create(TestRunner).result" outgoing="_S3w9pa1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9m61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9nK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S3w9na1MEeOdBunZhTRw1w" name="Fork(Call(TestRunner).result())" outgoing="_S3w9p61MEeOdBunZhTRw1w _S3w9qK1MEeOdBunZhTRw1w" incoming="_S3w9pq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_S3w9nq1MEeOdBunZhTRw1w" name="Start(TestRunner)">
                <object xmi:id="_S3w9n61MEeOdBunZhTRw1w" name="Start(TestRunner).object" incoming="_S3w9p61MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9oK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9oa1MEeOdBunZhTRw1w" value="1"/>
                </object>
              </node>
              <structuredNodeOutput xmi:id="_S3w9oq1MEeOdBunZhTRw1w" name="Output(Call(TestRunner).result())" outgoing="_S3w9qa1MEeOdBunZhTRw1w" incoming="_S3w9qK1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9o61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9pK1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9pa1MEeOdBunZhTRw1w" source="_S3w9mq1MEeOdBunZhTRw1w" target="_S3w9lq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9pq1MEeOdBunZhTRw1w" source="_S3w9k61MEeOdBunZhTRw1w" target="_S3w9na1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9p61MEeOdBunZhTRw1w" source="_S3w9na1MEeOdBunZhTRw1w" target="_S3w9n61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9qK1MEeOdBunZhTRw1w" source="_S3w9na1MEeOdBunZhTRw1w" target="_S3w9oq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9qa1MEeOdBunZhTRw1w" source="_S3w9oq1MEeOdBunZhTRw1w" target="_S3w9jq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3w9qq1MEeOdBunZhTRw1w" name="Statements_Accept$method$1" specification="_S3w-Kq1MEeOdBunZhTRw1w" group="_S3w9sK1MEeOdBunZhTRw1w" node="_S3w9r61MEeOdBunZhTRw1w _S3w9sK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_S3w9q61MEeOdBunZhTRw1w" name="" type="_S3w9ga1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9rK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9ra1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9rq1MEeOdBunZhTRw1w" source="_S3w9tq1MEeOdBunZhTRw1w" target="_S3w9r61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_S3w9sK1MEeOdBunZhTRw1w" name="Body(Statements_Accept$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3w9sa1MEeOdBunZhTRw1w" name="Body" incoming="_S3w93K1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_S3w9sq1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_S3w9s61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3w92q1MEeOdBunZhTRw1w" type="_S3w9ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9tK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9ta1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S3w9tq1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3w9rq1MEeOdBunZhTRw1w _S3w9261MEeOdBunZhTRw1w _S3w93a1MEeOdBunZhTRw1w" incoming="_S3w92q1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_S3w9t61MEeOdBunZhTRw1w" name="Call(Statements_Accept$initialization$1)" outgoing="_S3w93K1MEeOdBunZhTRw1w" incoming="_S3w9461MEeOdBunZhTRw1w" operation="_S3w-Ka1MEeOdBunZhTRw1w">
            <target xmi:id="_S3w9uK1MEeOdBunZhTRw1w" name="Call(Statements_Accept$initialization$1).target" incoming="_S3w9261MEeOdBunZhTRw1w" type="_S3w9ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9ua1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9uq1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3w9u61MEeOdBunZhTRw1w" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_S3w9h61MEeOdBunZhTRw1w">
            <object xmi:id="_S3w9vK1MEeOdBunZhTRw1w" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_S3w93a1MEeOdBunZhTRw1w" type="_S3w9ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9va1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9vq1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_S3w9v61MEeOdBunZhTRw1w" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_S3w93q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9wK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9wa1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3w9wq1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_S3w9w61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_S3w93q1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9xK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9xa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_S3w9xq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_S3w9361MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9x61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9yK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3w9ya1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_S3w9yq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3w94K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9y61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9zK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_S3w9za1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_S3w9zq1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_S3w9z61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_S3w9361MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w90K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w90a1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_S3w90q1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_S3w94q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9061MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w91K1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_S3w91a1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_S3w94K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w91q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9161MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_S3w92K1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_S3w94a1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_S3w92a1MEeOdBunZhTRw1w" name="Decision(Test(Statements_Accept$initializationFlag$1))" outgoing="_S3w9461MEeOdBunZhTRw1w" incoming="_S3w94a1MEeOdBunZhTRw1w _S3w94q1MEeOdBunZhTRw1w" decisionInputFlow="_S3w94q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w92q1MEeOdBunZhTRw1w" source="_S3w9s61MEeOdBunZhTRw1w" target="_S3w9tq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9261MEeOdBunZhTRw1w" source="_S3w9tq1MEeOdBunZhTRw1w" target="_S3w9uK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3w93K1MEeOdBunZhTRw1w" source="_S3w9t61MEeOdBunZhTRw1w" target="_S3w9sa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w93a1MEeOdBunZhTRw1w" source="_S3w9tq1MEeOdBunZhTRw1w" target="_S3w9vK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w93q1MEeOdBunZhTRw1w" source="_S3w9v61MEeOdBunZhTRw1w" target="_S3w9w61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9361MEeOdBunZhTRw1w" source="_S3w9xq1MEeOdBunZhTRw1w" target="_S3w9z61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w94K1MEeOdBunZhTRw1w" source="_S3w9yq1MEeOdBunZhTRw1w" target="_S3w91a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3w94a1MEeOdBunZhTRw1w" source="_S3w92K1MEeOdBunZhTRw1w" target="_S3w92a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w94q1MEeOdBunZhTRw1w" source="_S3w90q1MEeOdBunZhTRw1w" target="_S3w92a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3w9461MEeOdBunZhTRw1w" source="_S3w92a1MEeOdBunZhTRw1w" target="_S3w9t61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3w95K1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3w9r61MEeOdBunZhTRw1w" name="Return" incoming="_S3w9rq1MEeOdBunZhTRw1w" parameter="_S3w9q61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3w95a1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_S3w-Lq1MEeOdBunZhTRw1w" group="_S3w95q1MEeOdBunZhTRw1w" node="_S3w95q1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_S3w95q1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3w9561MEeOdBunZhTRw1w" name="Statements_Accept$initialization$1" specification="_S3w-Ka1MEeOdBunZhTRw1w" group="_S3w96K1MEeOdBunZhTRw1w" node="_S3w96K1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_S3w96K1MEeOdBunZhTRw1w" name="Body(Statements_Accept$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_S3w96a1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_S3w96q1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3w-H61MEeOdBunZhTRw1w" type="_S3w9ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9661MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w97K1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S3w97a1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3w-IK1MEeOdBunZhTRw1w _S3w-Ia1MEeOdBunZhTRw1w" incoming="_S3w-H61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3w97q1MEeOdBunZhTRw1w" name="Initialization" incoming="_S3w-J61MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3w9761MEeOdBunZhTRw1w" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3w98K1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_S3w98a1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_S3w9_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w98q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9861MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_S3w99K1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3w99a1MEeOdBunZhTRw1w" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_S3w9h61MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_S3w99q1MEeOdBunZhTRw1w" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_S3w-IK1MEeOdBunZhTRw1w" type="_S3w9ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9961MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9-K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_S3w9-a1MEeOdBunZhTRw1w" name="Write(Statements_Accept$initializationFlag$1).result" type="_S3w9ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9-q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9-61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_S3w9_K1MEeOdBunZhTRw1w" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_S3w9_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w9_a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w9_q1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w9_61MEeOdBunZhTRw1w" source="_S3w98a1MEeOdBunZhTRw1w" target="_S3w9_K1MEeOdBunZhTRw1w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3w-AK1MEeOdBunZhTRw1w" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_S3w9h61MEeOdBunZhTRw1w">
            <object xmi:id="_S3w-Aa1MEeOdBunZhTRw1w" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_S3w-Ia1MEeOdBunZhTRw1w" type="_S3w9ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Aq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-A61MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_S3w-BK1MEeOdBunZhTRw1w" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_S3w-Iq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Ba1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Bq1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3w-B61MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_S3w-CK1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_S3w-Iq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Ca1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Cq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_S3w-C61MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_S3w-I61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-DK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Da1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3w-Dq1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_S3w-D61MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3w-JK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-EK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Ea1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_S3w-Eq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_S3w-E61MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_S3w-FK1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_S3w-I61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Fa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Fq1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_S3w-F61MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_S3w-Jq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-GK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Ga1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_S3w-Gq1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_S3w-JK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-G61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-HK1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_S3w-Ha1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_S3w-Ja1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_S3w-Hq1MEeOdBunZhTRw1w" name="Decision(Test(Statements_Accept$initializationFlag$1))" outgoing="_S3w-J61MEeOdBunZhTRw1w" incoming="_S3w-Ja1MEeOdBunZhTRw1w _S3w-Jq1MEeOdBunZhTRw1w" decisionInputFlow="_S3w-Jq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-H61MEeOdBunZhTRw1w" source="_S3w96q1MEeOdBunZhTRw1w" target="_S3w97a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-IK1MEeOdBunZhTRw1w" source="_S3w97a1MEeOdBunZhTRw1w" target="_S3w99q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-Ia1MEeOdBunZhTRw1w" source="_S3w97a1MEeOdBunZhTRw1w" target="_S3w-Aa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-Iq1MEeOdBunZhTRw1w" source="_S3w-BK1MEeOdBunZhTRw1w" target="_S3w-CK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-I61MEeOdBunZhTRw1w" source="_S3w-C61MEeOdBunZhTRw1w" target="_S3w-FK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-JK1MEeOdBunZhTRw1w" source="_S3w-D61MEeOdBunZhTRw1w" target="_S3w-Gq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3w-Ja1MEeOdBunZhTRw1w" source="_S3w-Ha1MEeOdBunZhTRw1w" target="_S3w-Hq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-Jq1MEeOdBunZhTRw1w" source="_S3w-F61MEeOdBunZhTRw1w" target="_S3w-Hq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3w-J61MEeOdBunZhTRw1w" source="_S3w-Hq1MEeOdBunZhTRw1w" target="_S3w97q1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3w-KK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_S3w-Ka1MEeOdBunZhTRw1w" name="Statements_Accept$initialization$1" visibility="protected" method="_S3w9561MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_S3w-Kq1MEeOdBunZhTRw1w" name="Statements_Accept" visibility="package" method="_S3w9qq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_S3w-K61MEeOdBunZhTRw1w" name="" visibility="package" type="_S3w9ga1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-LK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-La1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_S3w-Lq1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_S3w95a1MEeOdBunZhTRw1w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_S3w-L61MEeOdBunZhTRw1w" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_S3w-MK1MEeOdBunZhTRw1w" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Ma1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Mq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3w-M61MEeOdBunZhTRw1w" name="Super$method$1" specification="_S3w-s61MEeOdBunZhTRw1w" group="_S3w-Oa1MEeOdBunZhTRw1w" node="_S3w-OK1MEeOdBunZhTRw1w _S3w-Oa1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_S3w-NK1MEeOdBunZhTRw1w" name="" type="_S3w-L61MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Na1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Nq1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-N61MEeOdBunZhTRw1w" source="_S3w-P61MEeOdBunZhTRw1w" target="_S3w-OK1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_S3w-Oa1MEeOdBunZhTRw1w" name="Body(Super$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3w-Oq1MEeOdBunZhTRw1w" name="Body" incoming="_S3w-Za1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S3w-O61MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_S3w-PK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3w-Y61MEeOdBunZhTRw1w" type="_S3w-L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Pa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Pq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3w-P61MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3w-N61MEeOdBunZhTRw1w _S3w-ZK1MEeOdBunZhTRw1w _S3w-Zq1MEeOdBunZhTRw1w" incoming="_S3w-Y61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_S3w-QK1MEeOdBunZhTRw1w" name="Call(Super$initialization$1)" outgoing="_S3w-Za1MEeOdBunZhTRw1w" incoming="_S3w-bK1MEeOdBunZhTRw1w" operation="_S3w-sq1MEeOdBunZhTRw1w">
              <target xmi:id="_S3w-Qa1MEeOdBunZhTRw1w" name="Call(Super$initialization$1).target" incoming="_S3w-ZK1MEeOdBunZhTRw1w" type="_S3w-L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Qq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Q61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3w-RK1MEeOdBunZhTRw1w" name="Read(Super$initializationFlag$1)" structuralFeature="_S3w-MK1MEeOdBunZhTRw1w">
              <object xmi:id="_S3w-Ra1MEeOdBunZhTRw1w" name="Read(Super$initializationFlag$1).object" incoming="_S3w-Zq1MEeOdBunZhTRw1w" type="_S3w-L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Rq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-R61MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_S3w-SK1MEeOdBunZhTRw1w" name="Read(Super$initializationFlag$1).result" outgoing="_S3w-Z61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Sa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Sq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3w-S61MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_S3w-TK1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_S3w-Z61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Ta1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Tq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_S3w-T61MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_S3w-aK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-UK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Ua1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3w-Uq1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_S3w-U61MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3w-aa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-VK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Va1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S3w-Vq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S3w-V61MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_S3w-WK1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_S3w-aK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-Wa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Wq1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_S3w-W61MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_S3w-a61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-XK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-Xa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_S3w-Xq1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_S3w-aa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-X61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-YK1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S3w-Ya1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_S3w-aq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S3w-Yq1MEeOdBunZhTRw1w" name="Decision(Test(Super$initializationFlag$1))" outgoing="_S3w-bK1MEeOdBunZhTRw1w" incoming="_S3w-aq1MEeOdBunZhTRw1w _S3w-a61MEeOdBunZhTRw1w" decisionInputFlow="_S3w-a61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-Y61MEeOdBunZhTRw1w" source="_S3w-PK1MEeOdBunZhTRw1w" target="_S3w-P61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-ZK1MEeOdBunZhTRw1w" source="_S3w-P61MEeOdBunZhTRw1w" target="_S3w-Qa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3w-Za1MEeOdBunZhTRw1w" source="_S3w-QK1MEeOdBunZhTRw1w" target="_S3w-Oq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-Zq1MEeOdBunZhTRw1w" source="_S3w-P61MEeOdBunZhTRw1w" target="_S3w-Ra1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-Z61MEeOdBunZhTRw1w" source="_S3w-SK1MEeOdBunZhTRw1w" target="_S3w-TK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-aK1MEeOdBunZhTRw1w" source="_S3w-T61MEeOdBunZhTRw1w" target="_S3w-WK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-aa1MEeOdBunZhTRw1w" source="_S3w-U61MEeOdBunZhTRw1w" target="_S3w-Xq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3w-aq1MEeOdBunZhTRw1w" source="_S3w-Ya1MEeOdBunZhTRw1w" target="_S3w-Yq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-a61MEeOdBunZhTRw1w" source="_S3w-W61MEeOdBunZhTRw1w" target="_S3w-Yq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3w-bK1MEeOdBunZhTRw1w" source="_S3w-Yq1MEeOdBunZhTRw1w" target="_S3w-QK1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3w-ba1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3w-OK1MEeOdBunZhTRw1w" name="Return" incoming="_S3w-N61MEeOdBunZhTRw1w" parameter="_S3w-NK1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3w-bq1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_S3w-t61MEeOdBunZhTRw1w" group="_S3w-b61MEeOdBunZhTRw1w" node="_S3w-b61MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_S3w-b61MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3w-cK1MEeOdBunZhTRw1w" name="Super$initialization$1" specification="_S3w-sq1MEeOdBunZhTRw1w" group="_S3w-ca1MEeOdBunZhTRw1w" node="_S3w-ca1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_S3w-ca1MEeOdBunZhTRw1w" name="Body(Super$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S3w-cq1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_S3w-c61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3w-qK1MEeOdBunZhTRw1w" type="_S3w-L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-dK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-da1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3w-dq1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3w-qa1MEeOdBunZhTRw1w _S3w-qq1MEeOdBunZhTRw1w" incoming="_S3w-qK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3w-d61MEeOdBunZhTRw1w" name="Initialization" incoming="_S3w-sK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3w-eK1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3w-ea1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_S3w-eq1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_S3w-iK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-e61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-fK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_S3w-fa1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3w-fq1MEeOdBunZhTRw1w" name="Write(Super$initializationFlag$1)" structuralFeature="_S3w-MK1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_S3w-f61MEeOdBunZhTRw1w" name="Write(Super$initializationFlag$1).object" incoming="_S3w-qa1MEeOdBunZhTRw1w" type="_S3w-L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-gK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-ga1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3w-gq1MEeOdBunZhTRw1w" name="Write(Super$initializationFlag$1).result" type="_S3w-L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-g61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-hK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_S3w-ha1MEeOdBunZhTRw1w" name="Write(Super$initializationFlag$1).value" incoming="_S3w-iK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-hq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-h61MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-iK1MEeOdBunZhTRw1w" source="_S3w-eq1MEeOdBunZhTRw1w" target="_S3w-ha1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3w-ia1MEeOdBunZhTRw1w" name="Read(Super$initializationFlag$1)" structuralFeature="_S3w-MK1MEeOdBunZhTRw1w">
              <object xmi:id="_S3w-iq1MEeOdBunZhTRw1w" name="Read(Super$initializationFlag$1).object" incoming="_S3w-qq1MEeOdBunZhTRw1w" type="_S3w-L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-i61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-jK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_S3w-ja1MEeOdBunZhTRw1w" name="Read(Super$initializationFlag$1).result" outgoing="_S3w-q61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-jq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-j61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3w-kK1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_S3w-ka1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_S3w-q61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-kq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-k61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_S3w-lK1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_S3w-rK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-la1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-lq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3w-l61MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_S3w-mK1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3w-ra1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-ma1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-mq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S3w-m61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S3w-nK1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_S3w-na1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_S3w-rK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-nq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-n61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_S3w-oK1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_S3w-r61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-oa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-oq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_S3w-o61MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_S3w-ra1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-pK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-pa1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S3w-pq1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_S3w-rq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S3w-p61MEeOdBunZhTRw1w" name="Decision(Test(Super$initializationFlag$1))" outgoing="_S3w-sK1MEeOdBunZhTRw1w" incoming="_S3w-rq1MEeOdBunZhTRw1w _S3w-r61MEeOdBunZhTRw1w" decisionInputFlow="_S3w-r61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-qK1MEeOdBunZhTRw1w" source="_S3w-c61MEeOdBunZhTRw1w" target="_S3w-dq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-qa1MEeOdBunZhTRw1w" source="_S3w-dq1MEeOdBunZhTRw1w" target="_S3w-f61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-qq1MEeOdBunZhTRw1w" source="_S3w-dq1MEeOdBunZhTRw1w" target="_S3w-iq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-q61MEeOdBunZhTRw1w" source="_S3w-ja1MEeOdBunZhTRw1w" target="_S3w-ka1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-rK1MEeOdBunZhTRw1w" source="_S3w-lK1MEeOdBunZhTRw1w" target="_S3w-na1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-ra1MEeOdBunZhTRw1w" source="_S3w-mK1MEeOdBunZhTRw1w" target="_S3w-o61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3w-rq1MEeOdBunZhTRw1w" source="_S3w-pq1MEeOdBunZhTRw1w" target="_S3w-p61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3w-r61MEeOdBunZhTRw1w" source="_S3w-oK1MEeOdBunZhTRw1w" target="_S3w-p61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3w-sK1MEeOdBunZhTRw1w" source="_S3w-p61MEeOdBunZhTRw1w" target="_S3w-d61MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3w-sa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_S3w-sq1MEeOdBunZhTRw1w" name="Super$initialization$1" visibility="protected" method="_S3w-cK1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_S3w-s61MEeOdBunZhTRw1w" name="Super" visibility="package" method="_S3w-M61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_S3w-tK1MEeOdBunZhTRw1w" name="" visibility="package" type="_S3w-L61MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-ta1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-tq1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_S3w-t61MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_S3w-bq1MEeOdBunZhTRw1w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_S3w-uK1MEeOdBunZhTRw1w" name="SignalNewArrival">
          <ownedAttribute xmi:id="_S3w-ua1MEeOdBunZhTRw1w" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3w-uq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3w-u61MEeOdBunZhTRw1w" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_S3w-vK1MEeOdBunZhTRw1w" name="SignalTermination"/>
        <ownedReception xmi:id="_S3w-va1MEeOdBunZhTRw1w" name="SignalTermination" signal="_S3w-vK1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_S3xkkK1MEeOdBunZhTRw1w" name="Test" visibility="private" classifierBehavior="_S3xksK1MEeOdBunZhTRw1w" isActive="true">
        <generalization xmi:id="_S3xkka1MEeOdBunZhTRw1w" general="_S3w-L61MEeOdBunZhTRw1w"/>
        <ownedAttribute xmi:id="_S3xkkq1MEeOdBunZhTRw1w" name="Test$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkk61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xklK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xkla1MEeOdBunZhTRw1w" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xklq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkl61MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xkmK1MEeOdBunZhTRw1w" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkma1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkmq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xkm61MEeOdBunZhTRw1w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xknK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkna1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xknq1MEeOdBunZhTRw1w" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkn61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkoK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xkoa1MEeOdBunZhTRw1w" name="arrival" visibility="public" type="_S3w-uK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkoq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xko61MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xkpK1MEeOdBunZhTRw1w" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkpa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkpq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xkp61MEeOdBunZhTRw1w" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkqK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkqa1MEeOdBunZhTRw1w" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xkqq1MEeOdBunZhTRw1w" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkq61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkrK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S3xkra1MEeOdBunZhTRw1w" name="tester" visibility="public" type="_S3yMK61MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkrq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkr61MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3xksK1MEeOdBunZhTRw1w" name="Test$classifierBehavior$1" visibility="private" isActive="true" group="_S3xksa1MEeOdBunZhTRw1w" node="_S3xksa1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_S3xksa1MEeOdBunZhTRw1w" name="Body(Test$classifierBehavior$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xksq1MEeOdBunZhTRw1w" name="AcceptStatement@277066fb" outgoing="_S3xoJq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_S3xks61MEeOdBunZhTRw1w" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" outgoing="_S3xoJa1MEeOdBunZhTRw1w _S3xoNa1MEeOdBunZhTRw1w _S3xoOq1MEeOdBunZhTRw1w" incoming="_S3xkvK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xktK1MEeOdBunZhTRw1w" name="Accept(SignalNewArrival,SignalTermination)" incoming="_S3xku61MEeOdBunZhTRw1w">
                <result xmi:id="_S3xkta1MEeOdBunZhTRw1w" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_S3xkvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xktq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkt61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <trigger xmi:id="_S3xkuK1MEeOdBunZhTRw1w" event="_S3yytK1MEeOdBunZhTRw1w"/>
                <trigger xmi:id="_S3xkua1MEeOdBunZhTRw1w" event="_S3yyta1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S3xkuq1MEeOdBunZhTRw1w" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_S3xku61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xku61MEeOdBunZhTRw1w" source="_S3xkuq1MEeOdBunZhTRw1w" target="_S3xktK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xkvK1MEeOdBunZhTRw1w" source="_S3xkta1MEeOdBunZhTRw1w" target="_S3xks61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xkva1MEeOdBunZhTRw1w" name="ExpressionStatement@70aab9ed" outgoing="_S3xoJ61MEeOdBunZhTRw1w" incoming="_S3xoJq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xkvq1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@5894b064)" incoming="_S3xk3q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xkv61MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_S3xkwK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xk261MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkwa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkwq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xkw61MEeOdBunZhTRw1w" name="Clear(sig)" structuralFeature="_S3xkla1MEeOdBunZhTRw1w">
                <object xmi:id="_S3xkxK1MEeOdBunZhTRw1w" name="Clear(sig).object" incoming="_S3xk261MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkxa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkxq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_S3xkx61MEeOdBunZhTRw1w" name="Clear(sig).result" outgoing="_S3xk3a1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkyK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkya1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xkyq1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@5894b064)" outgoing="_S3xk3K1MEeOdBunZhTRw1w" incoming="_S3xoJa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xky61MEeOdBunZhTRw1w" name="WriteAll(Test::sig)">
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xkzK1MEeOdBunZhTRw1w" name="Write(sig)" structuralFeature="_S3xkla1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_S3xkza1MEeOdBunZhTRw1w" name="Write(sig).object" incoming="_S3xk3a1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xkzq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xkz61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3xk0K1MEeOdBunZhTRw1w" name="Write(sig).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk0a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk0q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_S3xk061MEeOdBunZhTRw1w" name="Write(sig).value" incoming="_S3xk2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk1K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk1a1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <structuredNodeInput xmi:id="_S3xk1q1MEeOdBunZhTRw1w" name="WriteAll(Test::sig).input(Test::sig)" outgoing="_S3xk2a1MEeOdBunZhTRw1w" incoming="_S3xk3K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk161MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk2K1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xk2a1MEeOdBunZhTRw1w" source="_S3xk1q1MEeOdBunZhTRw1w" target="_S3xk061MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xk2q1MEeOdBunZhTRw1w" name="RightHandSide@6bc9a7b5" outgoing="_S3xk3q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xk261MEeOdBunZhTRw1w" source="_S3xkwK1MEeOdBunZhTRw1w" target="_S3xkxK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xk3K1MEeOdBunZhTRw1w" source="_S3xkyq1MEeOdBunZhTRw1w" target="_S3xk1q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xk3a1MEeOdBunZhTRw1w" source="_S3xkx61MEeOdBunZhTRw1w" target="_S3xkza1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xk3q1MEeOdBunZhTRw1w" source="_S3xk2q1MEeOdBunZhTRw1w" target="_S3xkvq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xk361MEeOdBunZhTRw1w" name="ExpressionStatement@39864ae" outgoing="_S3xoLK1MEeOdBunZhTRw1w" incoming="_S3xoJ61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_S3xk4K1MEeOdBunZhTRw1w" name="Fork(terminate)@4293dd56" outgoing="_S3xoKq1MEeOdBunZhTRw1w" incoming="_S3xk561MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xk4a1MEeOdBunZhTRw1w" name="RightHandSide@79a85b3f">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xk4q1MEeOdBunZhTRw1w" name="Value(false)">
                  <result xmi:id="_S3xk461MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_S3xk561MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk5K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk5a1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_S3xk5q1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xk561MEeOdBunZhTRw1w" source="_S3xk461MEeOdBunZhTRw1w" target="_S3xk4K1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xk6K1MEeOdBunZhTRw1w" name="AcceptStatement@14981055" outgoing="_S3xoLq1MEeOdBunZhTRw1w" incoming="_S3xoLK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xk6a1MEeOdBunZhTRw1w" name="AcceptBlock(SignalNewArrival)" incoming="_S3xlRa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xk6q1MEeOdBunZhTRw1w" name="ExpressionStatement@6822d693">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xk661MEeOdBunZhTRw1w" name="Expression(LeftHandSide@582fbda9)" incoming="_S3xlFa1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xk7K1MEeOdBunZhTRw1w" name="ReadSelf">
                      <result xmi:id="_S3xk7a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xlEa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk7q1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk761MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xk8K1MEeOdBunZhTRw1w" name="Clear(name)" structuralFeature="_S3xkm61MEeOdBunZhTRw1w">
                    <object xmi:id="_S3xk8a1MEeOdBunZhTRw1w" name="Clear(name).object" incoming="_S3xlEa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk8q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk861MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_S3xk9K1MEeOdBunZhTRw1w" name="Clear(name).result" outgoing="_S3xlE61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk9a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk9q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_S3xk961MEeOdBunZhTRw1w" name="Fork(LeftHandSide@582fbda9)" outgoing="_S3xlEq1MEeOdBunZhTRw1w" incoming="_S3xlFK1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xk-K1MEeOdBunZhTRw1w" name="WriteAll(Test::name)">
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xk-a1MEeOdBunZhTRw1w" name="Write(name)" structuralFeature="_S3xkm61MEeOdBunZhTRw1w" isReplaceAll="true">
                      <object xmi:id="_S3xk-q1MEeOdBunZhTRw1w" name="Write(name).object" incoming="_S3xlE61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk-61MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk_K1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_S3xk_a1MEeOdBunZhTRw1w" name="Write(name).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xk_q1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xk_61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:id="_S3xlAK1MEeOdBunZhTRw1w" name="Write(name).value" incoming="_S3xlBq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlAa1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlAq1MEeOdBunZhTRw1w" value="1"/>
                      </value>
                    </node>
                    <structuredNodeInput xmi:id="_S3xlA61MEeOdBunZhTRw1w" name="WriteAll(Test::name).input(Test::name)" outgoing="_S3xlBq1MEeOdBunZhTRw1w" incoming="_S3xlEq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlBK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlBa1MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeInput>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlBq1MEeOdBunZhTRw1w" source="_S3xlA61MEeOdBunZhTRw1w" target="_S3xlAK1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlB61MEeOdBunZhTRw1w" name="RightHandSide@49fba777" outgoing="_S3xlFa1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3xlCK1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_S3w-ua1MEeOdBunZhTRw1w">
                      <object xmi:id="_S3xlCa1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_S3xlEK1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlCq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlC61MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_S3xlDK1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_S3xlFK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlDa1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlDq1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_S3xlD61MEeOdBunZhTRw1w" name="Fork()" outgoing="_S3xlEK1MEeOdBunZhTRw1w" incoming="_S3xoKK1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlEK1MEeOdBunZhTRw1w" source="_S3xlD61MEeOdBunZhTRw1w" target="_S3xlCa1MEeOdBunZhTRw1w"/>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlEa1MEeOdBunZhTRw1w" source="_S3xk7a1MEeOdBunZhTRw1w" target="_S3xk8a1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlEq1MEeOdBunZhTRw1w" source="_S3xk961MEeOdBunZhTRw1w" target="_S3xlA61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlE61MEeOdBunZhTRw1w" source="_S3xk9K1MEeOdBunZhTRw1w" target="_S3xk-q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlFK1MEeOdBunZhTRw1w" source="_S3xlDK1MEeOdBunZhTRw1w" target="_S3xk961MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlFa1MEeOdBunZhTRw1w" source="_S3xlB61MEeOdBunZhTRw1w" target="_S3xk661MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlFq1MEeOdBunZhTRw1w" name="Passthru(terminate)">
                  <structuredNodeInput xmi:id="_S3xlF61MEeOdBunZhTRw1w" name="Passthru(terminate).input" outgoing="_S3xlHa1MEeOdBunZhTRw1w" incoming="_S3xoKq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlGK1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlGa1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_S3xlGq1MEeOdBunZhTRw1w" name="Passthru(terminate).output" outgoing="_S3xlR61MEeOdBunZhTRw1w" incoming="_S3xlHa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlG61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlHK1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlHa1MEeOdBunZhTRw1w" source="_S3xlF61MEeOdBunZhTRw1w" target="_S3xlGq1MEeOdBunZhTRw1w"/>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3xlHq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_S3w-uK1MEeOdBunZhTRw1w">
                <object xmi:id="_S3xlH61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_S3xoKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlIK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlIa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_S3xlIq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_S3xlRK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlI61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlJK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_S3xlJa1MEeOdBunZhTRw1w" name="Decision(Test(SignalNewArrival))" outgoing="_S3xlRa1MEeOdBunZhTRw1w" incoming="_S3xlRK1MEeOdBunZhTRw1w _S3xlS61MEeOdBunZhTRw1w" decisionInputFlow="_S3xlRK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlJq1MEeOdBunZhTRw1w" name="AcceptBlock(SignalTermination)" incoming="_S3xlSa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlJ61MEeOdBunZhTRw1w" name="ExpressionStatement@382ba136">
                  <node xmi:type="uml:ForkNode" xmi:id="_S3xlKK1MEeOdBunZhTRw1w" name="Fork(terminate)@7a8764c" outgoing="_S3xlTa1MEeOdBunZhTRw1w" incoming="_S3xlL61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlKa1MEeOdBunZhTRw1w" name="RightHandSide@44ee7b81">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xlKq1MEeOdBunZhTRw1w" name="Value(true)">
                      <result xmi:id="_S3xlK61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_S3xlL61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlLK1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlLa1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_S3xlLq1MEeOdBunZhTRw1w" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlL61MEeOdBunZhTRw1w" source="_S3xlK61MEeOdBunZhTRw1w" target="_S3xlKK1MEeOdBunZhTRw1w"/>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3xlMK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination)" classifier="_S3w-vK1MEeOdBunZhTRw1w">
                <object xmi:id="_S3xlMa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_S3xoK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlMq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlM61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_S3xlNK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_S3xlSK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlNa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlNq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_S3xlN61MEeOdBunZhTRw1w" name="Decision(Test(SignalTermination))" outgoing="_S3xlSa1MEeOdBunZhTRw1w _S3xlS61MEeOdBunZhTRw1w" incoming="_S3xlSK1MEeOdBunZhTRw1w _S3xlUK1MEeOdBunZhTRw1w" decisionInputFlow="_S3xlSK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xlOK1MEeOdBunZhTRw1w" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" outgoing="_S3xoKK1MEeOdBunZhTRw1w _S3xoKa1MEeOdBunZhTRw1w _S3xoK61MEeOdBunZhTRw1w" incoming="_S3xlUa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xlOa1MEeOdBunZhTRw1w" name="Fork(terminate)" outgoing="_S3xoLa1MEeOdBunZhTRw1w _S3xoM61MEeOdBunZhTRw1w _S3xoN61MEeOdBunZhTRw1w" incoming="_S3xlTq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xlOq1MEeOdBunZhTRw1w" name="Accept(SignalNewArrival,SignalTermination)" outgoing="_S3xlUK1MEeOdBunZhTRw1w" incoming="_S3xlT61MEeOdBunZhTRw1w">
                <result xmi:id="_S3xlO61MEeOdBunZhTRw1w" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_S3xlUa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlPK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlPa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <trigger xmi:id="_S3xlPq1MEeOdBunZhTRw1w" event="_S3yytq1MEeOdBunZhTRw1w"/>
                <trigger xmi:id="_S3xlP61MEeOdBunZhTRw1w" event="_S3yyt61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S3xlQK1MEeOdBunZhTRw1w" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_S3xlT61MEeOdBunZhTRw1w"/>
              <structuredNodeOutput xmi:id="_S3xlQa1MEeOdBunZhTRw1w" name="AcceptStatement@14981055.output(terminate)" outgoing="_S3xlTq1MEeOdBunZhTRw1w" incoming="_S3xlR61MEeOdBunZhTRw1w _S3xlTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlQq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlQ61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlRK1MEeOdBunZhTRw1w" source="_S3xlIq1MEeOdBunZhTRw1w" target="_S3xlJa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlRa1MEeOdBunZhTRw1w" source="_S3xlJa1MEeOdBunZhTRw1w" target="_S3xk6a1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3xlRq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlR61MEeOdBunZhTRw1w" source="_S3xlGq1MEeOdBunZhTRw1w" target="_S3xlQa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlSK1MEeOdBunZhTRw1w" source="_S3xlNK1MEeOdBunZhTRw1w" target="_S3xlN61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlSa1MEeOdBunZhTRw1w" source="_S3xlN61MEeOdBunZhTRw1w" target="_S3xlJq1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3xlSq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlS61MEeOdBunZhTRw1w" source="_S3xlN61MEeOdBunZhTRw1w" target="_S3xlJa1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3xlTK1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlTa1MEeOdBunZhTRw1w" source="_S3xlKK1MEeOdBunZhTRw1w" target="_S3xlQa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlTq1MEeOdBunZhTRw1w" source="_S3xlQa1MEeOdBunZhTRw1w" target="_S3xlOa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlT61MEeOdBunZhTRw1w" source="_S3xlQK1MEeOdBunZhTRw1w" target="_S3xlOq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlUK1MEeOdBunZhTRw1w" source="_S3xlOq1MEeOdBunZhTRw1w" target="_S3xlN61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlUa1MEeOdBunZhTRw1w" source="_S3xlO61MEeOdBunZhTRw1w" target="_S3xlOK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlUq1MEeOdBunZhTRw1w" name="ExpressionStatement@42e9d5a8" outgoing="_S3xoL61MEeOdBunZhTRw1w" incoming="_S3xoLq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlU61MEeOdBunZhTRw1w" name="Expression(LeftHandSide@5ca2aea)" incoming="_S3xlc61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xlVK1MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_S3xlVa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xlcK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlVq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlV61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xlWK1MEeOdBunZhTRw1w" name="Clear(terminate)" structuralFeature="_S3xknq1MEeOdBunZhTRw1w">
                <object xmi:id="_S3xlWa1MEeOdBunZhTRw1w" name="Clear(terminate).object" incoming="_S3xlcK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlWq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlW61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_S3xlXK1MEeOdBunZhTRw1w" name="Clear(terminate).result" outgoing="_S3xlcq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlXa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlXq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xlX61MEeOdBunZhTRw1w" name="Fork(LeftHandSide@5ca2aea)" outgoing="_S3xlca1MEeOdBunZhTRw1w" incoming="_S3xoLa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlYK1MEeOdBunZhTRw1w" name="WriteAll(Test::terminate)">
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xlYa1MEeOdBunZhTRw1w" name="Write(terminate)" structuralFeature="_S3xknq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_S3xlYq1MEeOdBunZhTRw1w" name="Write(terminate).object" incoming="_S3xlcq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlY61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlZK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3xlZa1MEeOdBunZhTRw1w" name="Write(terminate).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlZq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlZ61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_S3xlaK1MEeOdBunZhTRw1w" name="Write(terminate).value" incoming="_S3xlbq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlaa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlaq1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <structuredNodeInput xmi:id="_S3xla61MEeOdBunZhTRw1w" name="WriteAll(Test::terminate).input(Test::terminate)" outgoing="_S3xlbq1MEeOdBunZhTRw1w" incoming="_S3xlca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlbK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlba1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlbq1MEeOdBunZhTRw1w" source="_S3xla61MEeOdBunZhTRw1w" target="_S3xlaK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlb61MEeOdBunZhTRw1w" name="RightHandSide@74d54d1e" outgoing="_S3xlc61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlcK1MEeOdBunZhTRw1w" source="_S3xlVa1MEeOdBunZhTRw1w" target="_S3xlWa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlca1MEeOdBunZhTRw1w" source="_S3xlX61MEeOdBunZhTRw1w" target="_S3xla61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlcq1MEeOdBunZhTRw1w" source="_S3xlXK1MEeOdBunZhTRw1w" target="_S3xlYq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlc61MEeOdBunZhTRw1w" source="_S3xlb61MEeOdBunZhTRw1w" target="_S3xlU61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xldK1MEeOdBunZhTRw1w" name="AcceptStatement@53d2f8be" outgoing="_S3xoMK1MEeOdBunZhTRw1w" incoming="_S3xoL61MEeOdBunZhTRw1w">
              <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xlda1MEeOdBunZhTRw1w" name="Accept(SignalNewArrival)" incoming="_S3xleK1MEeOdBunZhTRw1w">
                <trigger xmi:id="_S3xldq1MEeOdBunZhTRw1w" event="_S3yyuK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S3xld61MEeOdBunZhTRw1w" name="Initial(Accept(SignalNewArrival))" outgoing="_S3xleK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xleK1MEeOdBunZhTRw1w" source="_S3xld61MEeOdBunZhTRw1w" target="_S3xlda1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlea1MEeOdBunZhTRw1w" name="AcceptStatement@5372c403" outgoing="_S3xoMq1MEeOdBunZhTRw1w" incoming="_S3xoMK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_S3xleq1MEeOdBunZhTRw1w" name="Fork(Accept(SignalNewArrival).result)" outgoing="_S3xoMa1MEeOdBunZhTRw1w _S3xoNK1MEeOdBunZhTRw1w _S3xoOa1MEeOdBunZhTRw1w" incoming="_S3xlgq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xle61MEeOdBunZhTRw1w" name="Accept(SignalNewArrival)" incoming="_S3xlga1MEeOdBunZhTRw1w">
                <result xmi:id="_S3xlfK1MEeOdBunZhTRw1w" name="Accept(SignalNewArrival).result" outgoing="_S3xlgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlfa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlfq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <trigger xmi:id="_S3xlf61MEeOdBunZhTRw1w" event="_S3yyua1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S3xlgK1MEeOdBunZhTRw1w" name="Initial(Accept(SignalNewArrival))" outgoing="_S3xlga1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlga1MEeOdBunZhTRw1w" source="_S3xlgK1MEeOdBunZhTRw1w" target="_S3xle61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlgq1MEeOdBunZhTRw1w" source="_S3xlfK1MEeOdBunZhTRw1w" target="_S3xleq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlg61MEeOdBunZhTRw1w" name="ExpressionStatement@3bc8d406" outgoing="_S3xoNq1MEeOdBunZhTRw1w" incoming="_S3xoMq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlhK1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@7dd7f493)" incoming="_S3xlpK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xlha1MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_S3xlhq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xloa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlh61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xliK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xlia1MEeOdBunZhTRw1w" name="Clear(arrival)" structuralFeature="_S3xkoa1MEeOdBunZhTRw1w">
                <object xmi:id="_S3xliq1MEeOdBunZhTRw1w" name="Clear(arrival).object" incoming="_S3xloa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xli61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xljK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_S3xlja1MEeOdBunZhTRw1w" name="Clear(arrival).result" outgoing="_S3xlo61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xljq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlj61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xlkK1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@7dd7f493)" outgoing="_S3xloq1MEeOdBunZhTRw1w" incoming="_S3xoMa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlka1MEeOdBunZhTRw1w" name="WriteAll(Test::arrival)">
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xlkq1MEeOdBunZhTRw1w" name="Write(arrival)" structuralFeature="_S3xkoa1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_S3xlk61MEeOdBunZhTRw1w" name="Write(arrival).object" incoming="_S3xlo61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xllK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlla1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3xllq1MEeOdBunZhTRw1w" name="Write(arrival).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xll61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlmK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_S3xlma1MEeOdBunZhTRw1w" name="Write(arrival).value" incoming="_S3xln61MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlmq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlm61MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <structuredNodeInput xmi:id="_S3xlnK1MEeOdBunZhTRw1w" name="WriteAll(Test::arrival).input(Test::arrival)" outgoing="_S3xln61MEeOdBunZhTRw1w" incoming="_S3xloq1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlna1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlnq1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xln61MEeOdBunZhTRw1w" source="_S3xlnK1MEeOdBunZhTRw1w" target="_S3xlma1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xloK1MEeOdBunZhTRw1w" name="RightHandSide@1fe52643" outgoing="_S3xlpK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xloa1MEeOdBunZhTRw1w" source="_S3xlhq1MEeOdBunZhTRw1w" target="_S3xliq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xloq1MEeOdBunZhTRw1w" source="_S3xlkK1MEeOdBunZhTRw1w" target="_S3xlnK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlo61MEeOdBunZhTRw1w" source="_S3xlja1MEeOdBunZhTRw1w" target="_S3xlk61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlpK1MEeOdBunZhTRw1w" source="_S3xloK1MEeOdBunZhTRw1w" target="_S3xlhK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlpa1MEeOdBunZhTRw1w" name="ForStatement@5442df0b" outgoing="_S3xoPK1MEeOdBunZhTRw1w" incoming="_S3xoNq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:LoopNode" xmi:id="_S3xlpq1MEeOdBunZhTRw1w" name="Loop(ForStatement@5442df0b)" incoming="_S3xmvK1MEeOdBunZhTRw1w" bodyOutput="_S3xmDa1MEeOdBunZhTRw1w _S3xmEK1MEeOdBunZhTRw1w _S3xmE61MEeOdBunZhTRw1w _S3xmIq1MEeOdBunZhTRw1w _S3xmMa1MEeOdBunZhTRw1w _S3xmPa1MEeOdBunZhTRw1w" bodyPart="_S3xlt61MEeOdBunZhTRw1w _S3xlua1MEeOdBunZhTRw1w _S3xmG61MEeOdBunZhTRw1w _S3xmJa1MEeOdBunZhTRw1w _S3xmKq1MEeOdBunZhTRw1w _S3xmNK1MEeOdBunZhTRw1w _S3xmOa1MEeOdBunZhTRw1w" decider="_S3xltK1MEeOdBunZhTRw1w" isTestedFirst="true" test="_S3xlra1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ForkNode" xmi:id="_S3xlp61MEeOdBunZhTRw1w" name="Fork(ForStatement@5442df0b.loopVariable(terminate))" outgoing="_S3xmUa1MEeOdBunZhTRw1w" incoming="_S3xmQa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xlqK1MEeOdBunZhTRw1w" name="Fork(ForStatement@5442df0b.loopVariable(arrival3))" outgoing="_S3xmUq1MEeOdBunZhTRw1w" incoming="_S3xmQq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xlqa1MEeOdBunZhTRw1w" name="Fork(ForStatement@5442df0b.loopVariable(sig))" outgoing="_S3xmU61MEeOdBunZhTRw1w" incoming="_S3xmQ61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xlqq1MEeOdBunZhTRw1w" name="Fork(ForStatement@5442df0b.loopVariable(i))" outgoing="_S3xmTK1MEeOdBunZhTRw1w" incoming="_S3xmRK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xlq61MEeOdBunZhTRw1w" name="Fork(ForStatement@5442df0b.loopVariable(counter))" outgoing="_S3xmR61MEeOdBunZhTRw1w _S3xmTq1MEeOdBunZhTRw1w" incoming="_S3xmRa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xlrK1MEeOdBunZhTRw1w" name="Fork(ForStatement@5442df0b.loopVariable(upper))" outgoing="_S3xmSK1MEeOdBunZhTRw1w _S3xmUK1MEeOdBunZhTRw1w" incoming="_S3xmRq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3xlra1MEeOdBunZhTRw1w" name="Call(&lt;=)">
                  <argument xmi:id="_S3xlrq1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(x)" incoming="_S3xmR61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlr61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlsK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_S3xlsa1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(y)" incoming="_S3xmSK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlsq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xls61MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_S3xltK1MEeOdBunZhTRw1w" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlta1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xltq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlt61MEeOdBunZhTRw1w" name="Values(ForStatement@5442df0b)" outgoing="_S3xmSq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ForkNode" xmi:id="_S3xluK1MEeOdBunZhTRw1w" name="Fork(i)" outgoing="_S3xmS61MEeOdBunZhTRw1w" incoming="_S3xmSa1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlua1MEeOdBunZhTRw1w" name="Body(ForStatement@5442df0b)" incoming="_S3xmSq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xluq1MEeOdBunZhTRw1w" name="AcceptStatement@7e938eae" outgoing="_S3xmGq1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ForkNode" xmi:id="_S3xlu61MEeOdBunZhTRw1w" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" outgoing="_S3xmGa1MEeOdBunZhTRw1w" incoming="_S3xlxK1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xlvK1MEeOdBunZhTRw1w" name="Accept(SignalNewArrival,SignalTermination)" incoming="_S3xlw61MEeOdBunZhTRw1w">
                      <result xmi:id="_S3xlva1MEeOdBunZhTRw1w" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_S3xlxK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlvq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlv61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <trigger xmi:id="_S3xlwK1MEeOdBunZhTRw1w" event="_S3yyuq1MEeOdBunZhTRw1w"/>
                      <trigger xmi:id="_S3xlwa1MEeOdBunZhTRw1w" event="_S3yyu61MEeOdBunZhTRw1w"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_S3xlwq1MEeOdBunZhTRw1w" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_S3xlw61MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_S3xlw61MEeOdBunZhTRw1w" source="_S3xlwq1MEeOdBunZhTRw1w" target="_S3xlvK1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xlxK1MEeOdBunZhTRw1w" source="_S3xlva1MEeOdBunZhTRw1w" target="_S3xlu61MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlxa1MEeOdBunZhTRw1w" name="ExpressionStatement@631e7edd" incoming="_S3xmGq1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xlxq1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@671b1201)" outgoing="_S3xl7a1MEeOdBunZhTRw1w" incoming="_S3xl9K1MEeOdBunZhTRw1w">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xlx61MEeOdBunZhTRw1w" name="ReadSelf">
                        <result xmi:id="_S3xlyK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xl761MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlya1MEeOdBunZhTRw1w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlyq1MEeOdBunZhTRw1w" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xly61MEeOdBunZhTRw1w" name="Index(LeftHandSide@671b1201)" incoming="_S3xl7a1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3xlzK1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_S3xlza1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).argument(x)" incoming="_S3xmS61MEeOdBunZhTRw1w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xlzq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xlz61MEeOdBunZhTRw1w" value="1"/>
                      </argument>
                      <result xmi:id="_S3xl0K1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).result(result)" outgoing="_S3xl7q1MEeOdBunZhTRw1w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl0a1MEeOdBunZhTRw1w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl0q1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_S3xl061MEeOdBunZhTRw1w" name="Fork(Fork(i))" outgoing="_S3xl8K1MEeOdBunZhTRw1w _S3xl8q1MEeOdBunZhTRw1w" incoming="_S3xl7q1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_S3xl1K1MEeOdBunZhTRw1w" name="Remove(signals)" structuralFeature="_S3xkp61MEeOdBunZhTRw1w">
                      <object xmi:id="_S3xl1a1MEeOdBunZhTRw1w" name="Remove(signals).object" incoming="_S3xl761MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl1q1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl161MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_S3xl2K1MEeOdBunZhTRw1w" name="Remove(signals).result" outgoing="_S3xl8a1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl2a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl2q1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <removeAt xmi:id="_S3xl261MEeOdBunZhTRw1w" name="Remove(signals).removeAt" incoming="_S3xl8K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl3K1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl3a1MEeOdBunZhTRw1w" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xl3q1MEeOdBunZhTRw1w" name="Write(signals)" structuralFeature="_S3xkp61MEeOdBunZhTRw1w">
                      <object xmi:id="_S3xl361MEeOdBunZhTRw1w" name="Write(signals).object" incoming="_S3xl8a1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl4K1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl4a1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_S3xl4q1MEeOdBunZhTRw1w" name="Write(signals).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl461MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl5K1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:id="_S3xl5a1MEeOdBunZhTRw1w" name="Write(signals).value" incoming="_S3xl861MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl5q1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl561MEeOdBunZhTRw1w" value="1"/>
                      </value>
                      <insertAt xmi:id="_S3xl6K1MEeOdBunZhTRw1w" name="Write(signals).insertAt" incoming="_S3xl8q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl6a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl6q1MEeOdBunZhTRw1w" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_S3xl661MEeOdBunZhTRw1w" name="Fork(LeftHandSide@671b1201)" outgoing="_S3xl861MEeOdBunZhTRw1w" incoming="_S3xmGa1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xl7K1MEeOdBunZhTRw1w" name="RightHandSide@143e3de9" outgoing="_S3xl9K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_S3xl7a1MEeOdBunZhTRw1w" source="_S3xlxq1MEeOdBunZhTRw1w" target="_S3xly61MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xl7q1MEeOdBunZhTRw1w" source="_S3xl0K1MEeOdBunZhTRw1w" target="_S3xl061MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xl761MEeOdBunZhTRw1w" source="_S3xlyK1MEeOdBunZhTRw1w" target="_S3xl1a1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xl8K1MEeOdBunZhTRw1w" source="_S3xl061MEeOdBunZhTRw1w" target="_S3xl261MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xl8a1MEeOdBunZhTRw1w" source="_S3xl2K1MEeOdBunZhTRw1w" target="_S3xl361MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xl8q1MEeOdBunZhTRw1w" source="_S3xl061MEeOdBunZhTRw1w" target="_S3xl6K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xl861MEeOdBunZhTRw1w" source="_S3xl661MEeOdBunZhTRw1w" target="_S3xl5a1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_S3xl9K1MEeOdBunZhTRw1w" source="_S3xl7K1MEeOdBunZhTRw1w" target="_S3xlxq1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xl9a1MEeOdBunZhTRw1w" name="Passthru(Fork(terminate))">
                    <structuredNodeInput xmi:id="_S3xl9q1MEeOdBunZhTRw1w" name="Passthru(Fork(terminate)).input" outgoing="_S3xl_K1MEeOdBunZhTRw1w" incoming="_S3xmUa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl961MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl-K1MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_S3xl-a1MEeOdBunZhTRw1w" name="Passthru(Fork(terminate)).output" outgoing="_S3xmFq1MEeOdBunZhTRw1w" incoming="_S3xl_K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl-q1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xl-61MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeOutput>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xl_K1MEeOdBunZhTRw1w" source="_S3xl9q1MEeOdBunZhTRw1w" target="_S3xl-a1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xl_a1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <structuredNodeInput xmi:id="_S3xl_q1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" outgoing="_S3xmBK1MEeOdBunZhTRw1w" incoming="_S3xmUq1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xl_61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmAK1MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_S3xmAa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" outgoing="_S3xmF61MEeOdBunZhTRw1w" incoming="_S3xmBK1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmAq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmA61MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeOutput>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmBK1MEeOdBunZhTRw1w" source="_S3xl_q1MEeOdBunZhTRw1w" target="_S3xmAa1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xmBa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                    <structuredNodeInput xmi:id="_S3xmBq1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" outgoing="_S3xmDK1MEeOdBunZhTRw1w" incoming="_S3xmU61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmB61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmCK1MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_S3xmCa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" outgoing="_S3xmGK1MEeOdBunZhTRw1w" incoming="_S3xmDK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmCq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmC61MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeOutput>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmDK1MEeOdBunZhTRw1w" source="_S3xmBq1MEeOdBunZhTRw1w" target="_S3xmCa1MEeOdBunZhTRw1w"/>
                  </node>
                  <structuredNodeOutput xmi:id="_S3xmDa1MEeOdBunZhTRw1w" name="terminate" incoming="_S3xmFq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmDq1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmD61MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_S3xmEK1MEeOdBunZhTRw1w" name="arrival3" incoming="_S3xmF61MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmEa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmEq1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_S3xmE61MEeOdBunZhTRw1w" name="sig" incoming="_S3xmGK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmFK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmFa1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmFq1MEeOdBunZhTRw1w" source="_S3xl-a1MEeOdBunZhTRw1w" target="_S3xmDa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmF61MEeOdBunZhTRw1w" source="_S3xmAa1MEeOdBunZhTRw1w" target="_S3xmEK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmGK1MEeOdBunZhTRw1w" source="_S3xmCa1MEeOdBunZhTRw1w" target="_S3xmE61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmGa1MEeOdBunZhTRw1w" source="_S3xlu61MEeOdBunZhTRw1w" target="_S3xl661MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S3xmGq1MEeOdBunZhTRw1w" source="_S3xluq1MEeOdBunZhTRw1w" target="_S3xlxa1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3xmG61MEeOdBunZhTRw1w" name="Call(+)">
                  <argument xmi:id="_S3xmHK1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_S3xmTK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmHa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmHq1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_S3xmH61MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_S3xmTa1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmIK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmIa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_S3xmIq1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmI61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmJK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xmJa1MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_S3xmJq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_S3xmTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmJ61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmKK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S3xmKa1MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3xmKq1MEeOdBunZhTRw1w" name="Call(+)">
                  <argument xmi:id="_S3xmK61MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_S3xmTq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmLK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmLa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_S3xmLq1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_S3xmT61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmL61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmMK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_S3xmMa1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmMq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmM61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xmNK1MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_S3xmNa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_S3xmT61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmNq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmN61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S3xmOK1MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xmOa1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper))">
                  <structuredNodeInput xmi:id="_S3xmOq1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).input" outgoing="_S3xmQK1MEeOdBunZhTRw1w" incoming="_S3xmUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmO61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmPK1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_S3xmPa1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).output" incoming="_S3xmQK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmPq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmP61MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmQK1MEeOdBunZhTRw1w" source="_S3xmOq1MEeOdBunZhTRw1w" target="_S3xmPa1MEeOdBunZhTRw1w"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmQa1MEeOdBunZhTRw1w" source="_S3xmVK1MEeOdBunZhTRw1w" target="_S3xlp61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmQq1MEeOdBunZhTRw1w" source="_S3xmV61MEeOdBunZhTRw1w" target="_S3xlqK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmQ61MEeOdBunZhTRw1w" source="_S3xmWq1MEeOdBunZhTRw1w" target="_S3xlqa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmRK1MEeOdBunZhTRw1w" source="_S3xmXa1MEeOdBunZhTRw1w" target="_S3xlqq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmRa1MEeOdBunZhTRw1w" source="_S3xmYK1MEeOdBunZhTRw1w" target="_S3xlq61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmRq1MEeOdBunZhTRw1w" source="_S3xmY61MEeOdBunZhTRw1w" target="_S3xlrK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmR61MEeOdBunZhTRw1w" source="_S3xlq61MEeOdBunZhTRw1w" target="_S3xlrq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmSK1MEeOdBunZhTRw1w" source="_S3xlrK1MEeOdBunZhTRw1w" target="_S3xlsa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmSa1MEeOdBunZhTRw1w" source="_S3xmXa1MEeOdBunZhTRw1w" target="_S3xluK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3xmSq1MEeOdBunZhTRw1w" source="_S3xlt61MEeOdBunZhTRw1w" target="_S3xlua1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmS61MEeOdBunZhTRw1w" source="_S3xluK1MEeOdBunZhTRw1w" target="_S3xlza1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmTK1MEeOdBunZhTRw1w" source="_S3xlqq1MEeOdBunZhTRw1w" target="_S3xmHK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmTa1MEeOdBunZhTRw1w" source="_S3xmJq1MEeOdBunZhTRw1w" target="_S3xmH61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmTq1MEeOdBunZhTRw1w" source="_S3xlq61MEeOdBunZhTRw1w" target="_S3xmK61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmT61MEeOdBunZhTRw1w" source="_S3xmNa1MEeOdBunZhTRw1w" target="_S3xmLq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmUK1MEeOdBunZhTRw1w" source="_S3xlrK1MEeOdBunZhTRw1w" target="_S3xmOq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmUa1MEeOdBunZhTRw1w" source="_S3xlp61MEeOdBunZhTRw1w" target="_S3xl9q1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmUq1MEeOdBunZhTRw1w" source="_S3xlqK1MEeOdBunZhTRw1w" target="_S3xl_q1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmU61MEeOdBunZhTRw1w" source="_S3xlqa1MEeOdBunZhTRw1w" target="_S3xmBq1MEeOdBunZhTRw1w"/>
                <loopVariable xmi:id="_S3xmVK1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariable(terminate)" outgoing="_S3xmQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmVa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmVq1MEeOdBunZhTRw1w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_S3xmV61MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariable(arrival3)" outgoing="_S3xmQq1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmWK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmWa1MEeOdBunZhTRw1w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_S3xmWq1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariable(sig)" outgoing="_S3xmQ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmW61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmXK1MEeOdBunZhTRw1w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_S3xmXa1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariable(i)" outgoing="_S3xmRK1MEeOdBunZhTRw1w _S3xmSa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmXq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmX61MEeOdBunZhTRw1w" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_S3xmYK1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariable(counter)" outgoing="_S3xmRa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmYa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmYq1MEeOdBunZhTRw1w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_S3xmY61MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariable(upper)" outgoing="_S3xmRq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmZK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmZa1MEeOdBunZhTRw1w" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_S3xmZq1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariableInput(terminate)" incoming="_S3xoM61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmZ61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmaK1MEeOdBunZhTRw1w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_S3xmaa1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariableInput(arrival3)" incoming="_S3xoNK1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmaq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xma61MEeOdBunZhTRw1w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_S3xmbK1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariableInput(sig)" incoming="_S3xoNa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmba1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmbq1MEeOdBunZhTRw1w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_S3xmb61MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariableInput(i)" incoming="_S3xmu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmcK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmca1MEeOdBunZhTRw1w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_S3xmcq1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariableInput(counter)" incoming="_S3xmua1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmc61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmdK1MEeOdBunZhTRw1w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_S3xmda1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.loopVariableInput(upper)" incoming="_S3xmuq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmdq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmd61MEeOdBunZhTRw1w" value="1"/>
                </loopVariableInput>
                <result xmi:id="_S3xmeK1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmea1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmeq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <result xmi:id="_S3xme61MEeOdBunZhTRw1w" name="ForStatement@5442df0b.result(arrival3)" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmfK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmfa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <result xmi:id="_S3xmfq1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmf61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmgK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <result xmi:id="_S3xmga1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmgq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmg61MEeOdBunZhTRw1w" value="*"/>
                </result>
                <result xmi:id="_S3xmhK1MEeOdBunZhTRw1w" name="ForStatement@5442df0b.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmha1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmhq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <result xmi:id="_S3xmh61MEeOdBunZhTRw1w" name="ForStatement@5442df0b.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmiK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmia1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xmiq1MEeOdBunZhTRw1w" name="LoopVariables(ForStatement@5442df0b)" outgoing="_S3xmvK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xmi61MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_S3xmjK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_S3xmuK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmja1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmjq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S3xmj61MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xmkK1MEeOdBunZhTRw1w" name="Value(2)">
                  <result xmi:id="_S3xmka1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_S3xmtK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmkq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmk61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S3xmlK1MEeOdBunZhTRw1w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xmla1MEeOdBunZhTRw1w" name="Fork(Value(1).result)" outgoing="_S3xmu61MEeOdBunZhTRw1w _S3xmta1MEeOdBunZhTRw1w" incoming="_S3xmuK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3xmlq1MEeOdBunZhTRw1w" name="Call(-)">
                  <argument xmi:id="_S3xml61MEeOdBunZhTRw1w" name="Call(-).argument(x)" incoming="_S3xmtK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmmK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmma1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_S3xmmq1MEeOdBunZhTRw1w" name="Call(-).argument(y)" incoming="_S3xmta1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmm61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmnK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_S3xmna1MEeOdBunZhTRw1w" name="Call(-).result(result)" outgoing="_S3xmtq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmnq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmn61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xmoK1MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_S3xmoa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_S3xmt61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmoq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmo61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S3xmpK1MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3xmpa1MEeOdBunZhTRw1w" name="Call(+)">
                  <argument xmi:id="_S3xmpq1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_S3xmtq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmp61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmqK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_S3xmqa1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_S3xmt61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmqq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmq61MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_S3xmrK1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_S3xmuq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmra1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmrq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xmr61MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_S3xmsK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_S3xmua1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmsa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmsq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S3xms61MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmtK1MEeOdBunZhTRw1w" source="_S3xmka1MEeOdBunZhTRw1w" target="_S3xml61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmta1MEeOdBunZhTRw1w" source="_S3xmla1MEeOdBunZhTRw1w" target="_S3xmmq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmtq1MEeOdBunZhTRw1w" source="_S3xmna1MEeOdBunZhTRw1w" target="_S3xmpq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmt61MEeOdBunZhTRw1w" source="_S3xmoa1MEeOdBunZhTRw1w" target="_S3xmqa1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmuK1MEeOdBunZhTRw1w" source="_S3xmjK1MEeOdBunZhTRw1w" target="_S3xmla1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmua1MEeOdBunZhTRw1w" source="_S3xmsK1MEeOdBunZhTRw1w" target="_S3xmcq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmuq1MEeOdBunZhTRw1w" source="_S3xmrK1MEeOdBunZhTRw1w" target="_S3xmda1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmu61MEeOdBunZhTRw1w" source="_S3xmla1MEeOdBunZhTRw1w" target="_S3xmb61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xmvK1MEeOdBunZhTRw1w" source="_S3xmiq1MEeOdBunZhTRw1w" target="_S3xlpq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_S3xmva1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c" outgoing="_S3xoPa1MEeOdBunZhTRw1w" incoming="_S3xoPK1MEeOdBunZhTRw1w" bodyOutput="_S3xnPa1MEeOdBunZhTRw1w _S3xnQK1MEeOdBunZhTRw1w _S3xnQ61MEeOdBunZhTRw1w _S3xnRq1MEeOdBunZhTRw1w" bodyPart="_S3xmyq1MEeOdBunZhTRw1w" decider="_S3xmxq1MEeOdBunZhTRw1w" test="_S3xmwq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_S3xmvq1MEeOdBunZhTRw1w" name="Fork(DoStatement@3822ee3c.loopVariable(terminate))" outgoing="_S3xnVK1MEeOdBunZhTRw1w" incoming="_S3xnUK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xmv61MEeOdBunZhTRw1w" name="Fork(DoStatement@3822ee3c.loopVariable(s))" incoming="_S3xnUa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xmwK1MEeOdBunZhTRw1w" name="Fork(DoStatement@3822ee3c.loopVariable(arrival3))" outgoing="_S3xnVa1MEeOdBunZhTRw1w" incoming="_S3xnUq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xmwa1MEeOdBunZhTRw1w" name="Fork(DoStatement@3822ee3c.loopVariable(sig))" outgoing="_S3xnVq1MEeOdBunZhTRw1w" incoming="_S3xnU61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xmwq1MEeOdBunZhTRw1w" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <structuredNodeInput xmi:id="_S3xmw61MEeOdBunZhTRw1w" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" outgoing="_S3xmya1MEeOdBunZhTRw1w" incoming="_S3xoO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmxK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmxa1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_S3xmxq1MEeOdBunZhTRw1w" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_S3xmya1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xmx61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xmyK1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xmya1MEeOdBunZhTRw1w" source="_S3xmw61MEeOdBunZhTRw1w" target="_S3xmxq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xmyq1MEeOdBunZhTRw1w" name="BodyPart(DoStatement@3822ee3c)">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xmy61MEeOdBunZhTRw1w" name="Body(DoStatement@3822ee3c)" outgoing="_S3xnTq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xmzK1MEeOdBunZhTRw1w" name="AcceptStatement@6f4db3b9" outgoing="_S3xnFK1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ForkNode" xmi:id="_S3xmza1MEeOdBunZhTRw1w" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" outgoing="_S3xnTa1MEeOdBunZhTRw1w _S3xnT61MEeOdBunZhTRw1w" incoming="_S3xm1q1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xmzq1MEeOdBunZhTRw1w" name="Accept(SignalNewArrival,SignalTermination)" incoming="_S3xm1a1MEeOdBunZhTRw1w">
                      <result xmi:id="_S3xmz61MEeOdBunZhTRw1w" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_S3xm1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm0K1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm0a1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <trigger xmi:id="_S3xm0q1MEeOdBunZhTRw1w" event="_S3yyvK1MEeOdBunZhTRw1w"/>
                      <trigger xmi:id="_S3xm061MEeOdBunZhTRw1w" event="_S3yyva1MEeOdBunZhTRw1w"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_S3xm1K1MEeOdBunZhTRw1w" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_S3xm1a1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_S3xm1a1MEeOdBunZhTRw1w" source="_S3xm1K1MEeOdBunZhTRw1w" target="_S3xmzq1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xm1q1MEeOdBunZhTRw1w" source="_S3xmz61MEeOdBunZhTRw1w" target="_S3xmza1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xm161MEeOdBunZhTRw1w" name="ExpressionStatement@30708f42" incoming="_S3xnFK1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3xm2K1MEeOdBunZhTRw1w" name="Call(+)">
                      <argument xmi:id="_S3xm2a1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_S3xnE61MEeOdBunZhTRw1w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm2q1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm261MEeOdBunZhTRw1w" value="1"/>
                      </argument>
                      <argument xmi:id="_S3xm3K1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_S3xnC61MEeOdBunZhTRw1w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm3a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm3q1MEeOdBunZhTRw1w" value="1"/>
                      </argument>
                      <result xmi:id="_S3xm361MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_S3xnEa1MEeOdBunZhTRw1w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm4K1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm4a1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xm4q1MEeOdBunZhTRw1w" name="Value(1)">
                      <result xmi:id="_S3xm461MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_S3xnC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm5K1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm5a1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_S3xm5q1MEeOdBunZhTRw1w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xm561MEeOdBunZhTRw1w" name="ReadSelf">
                      <result xmi:id="_S3xm6K1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xnDK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm6a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm6q1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3xm661MEeOdBunZhTRw1w" name="Read(count)" structuralFeature="_S3xkpK1MEeOdBunZhTRw1w">
                      <object xmi:id="_S3xm7K1MEeOdBunZhTRw1w" name="Read(count).object" incoming="_S3xnDa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm7a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm7q1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_S3xm761MEeOdBunZhTRw1w" name="Read(count).result" outgoing="_S3xnEq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm8K1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm8a1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_S3xm8q1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3xnDa1MEeOdBunZhTRw1w _S3xnDq1MEeOdBunZhTRw1w" incoming="_S3xnDK1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xm861MEeOdBunZhTRw1w" name="Clear(count)" structuralFeature="_S3xkpK1MEeOdBunZhTRw1w">
                      <object xmi:id="_S3xm9K1MEeOdBunZhTRw1w" name="Clear(count).object" incoming="_S3xnDq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm9a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm9q1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_S3xm961MEeOdBunZhTRw1w" name="Clear(count).result" outgoing="_S3xnEK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm-K1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm-a1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_S3xm-q1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@dc86904)" outgoing="_S3xnD61MEeOdBunZhTRw1w" incoming="_S3xnEa1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xm-61MEeOdBunZhTRw1w" name="WriteAll(Test::count)">
                      <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xm_K1MEeOdBunZhTRw1w" name="Write(count)" structuralFeature="_S3xkpK1MEeOdBunZhTRw1w" isReplaceAll="true">
                        <object xmi:id="_S3xm_a1MEeOdBunZhTRw1w" name="Write(count).object" incoming="_S3xnEK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xm_q1MEeOdBunZhTRw1w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xm_61MEeOdBunZhTRw1w" value="1"/>
                        </object>
                        <result xmi:id="_S3xnAK1MEeOdBunZhTRw1w" name="Write(count).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnAa1MEeOdBunZhTRw1w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnAq1MEeOdBunZhTRw1w" value="1"/>
                        </result>
                        <value xmi:id="_S3xnA61MEeOdBunZhTRw1w" name="Write(count).value" incoming="_S3xnCa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnBK1MEeOdBunZhTRw1w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnBa1MEeOdBunZhTRw1w" value="1"/>
                        </value>
                      </node>
                      <structuredNodeInput xmi:id="_S3xnBq1MEeOdBunZhTRw1w" name="WriteAll(Test::count).input(Test::count)" outgoing="_S3xnCa1MEeOdBunZhTRw1w" incoming="_S3xnD61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnB61MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnCK1MEeOdBunZhTRw1w" value="1"/>
                      </structuredNodeInput>
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnCa1MEeOdBunZhTRw1w" source="_S3xnBq1MEeOdBunZhTRw1w" target="_S3xnA61MEeOdBunZhTRw1w"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_S3xnCq1MEeOdBunZhTRw1w" name="Fork(Read(count).result)" outgoing="_S3xnE61MEeOdBunZhTRw1w" incoming="_S3xnEq1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnC61MEeOdBunZhTRw1w" source="_S3xm461MEeOdBunZhTRw1w" target="_S3xm3K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnDK1MEeOdBunZhTRw1w" source="_S3xm6K1MEeOdBunZhTRw1w" target="_S3xm8q1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnDa1MEeOdBunZhTRw1w" source="_S3xm8q1MEeOdBunZhTRw1w" target="_S3xm7K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnDq1MEeOdBunZhTRw1w" source="_S3xm8q1MEeOdBunZhTRw1w" target="_S3xm9K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnD61MEeOdBunZhTRw1w" source="_S3xm-q1MEeOdBunZhTRw1w" target="_S3xnBq1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnEK1MEeOdBunZhTRw1w" source="_S3xm961MEeOdBunZhTRw1w" target="_S3xm_a1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnEa1MEeOdBunZhTRw1w" source="_S3xm361MEeOdBunZhTRw1w" target="_S3xm-q1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnEq1MEeOdBunZhTRw1w" source="_S3xm761MEeOdBunZhTRw1w" target="_S3xnCq1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnE61MEeOdBunZhTRw1w" source="_S3xnCq1MEeOdBunZhTRw1w" target="_S3xm2a1MEeOdBunZhTRw1w"/>
                  </node>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S3xnFK1MEeOdBunZhTRw1w" source="_S3xmzK1MEeOdBunZhTRw1w" target="_S3xm161MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnFa1MEeOdBunZhTRw1w" name="Condition(DoStatement@3822ee3c)" incoming="_S3xnTq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3xnFq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_S3w-uK1MEeOdBunZhTRw1w" isDirect="true">
                    <object xmi:id="_S3xnF61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_S3xnTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnGK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnGa1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_S3xnGq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_S3xoO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnG61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnHK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnHa1MEeOdBunZhTRw1w" name="Passthru(Fork(terminate))">
                  <structuredNodeInput xmi:id="_S3xnHq1MEeOdBunZhTRw1w" name="Passthru(Fork(terminate)).input" outgoing="_S3xnJK1MEeOdBunZhTRw1w" incoming="_S3xnVK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnH61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnIK1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_S3xnIa1MEeOdBunZhTRw1w" name="Passthru(Fork(terminate)).output" outgoing="_S3xnSa1MEeOdBunZhTRw1w" incoming="_S3xnJK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnIq1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnI61MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnJK1MEeOdBunZhTRw1w" source="_S3xnHq1MEeOdBunZhTRw1w" target="_S3xnIa1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnJa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <structuredNodeInput xmi:id="_S3xnJq1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" outgoing="_S3xnLK1MEeOdBunZhTRw1w" incoming="_S3xnT61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnJ61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnKK1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_S3xnKa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" outgoing="_S3xnSq1MEeOdBunZhTRw1w" incoming="_S3xnLK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnKq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnK61MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnLK1MEeOdBunZhTRw1w" source="_S3xnJq1MEeOdBunZhTRw1w" target="_S3xnKa1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnLa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <structuredNodeInput xmi:id="_S3xnLq1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" outgoing="_S3xnNK1MEeOdBunZhTRw1w" incoming="_S3xnVa1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnL61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnMK1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_S3xnMa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" outgoing="_S3xnS61MEeOdBunZhTRw1w" incoming="_S3xnNK1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnMq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnM61MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnNK1MEeOdBunZhTRw1w" source="_S3xnLq1MEeOdBunZhTRw1w" target="_S3xnMa1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnNa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <structuredNodeInput xmi:id="_S3xnNq1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" outgoing="_S3xnPK1MEeOdBunZhTRw1w" incoming="_S3xnVq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnN61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnOK1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_S3xnOa1MEeOdBunZhTRw1w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" outgoing="_S3xnTK1MEeOdBunZhTRw1w" incoming="_S3xnPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnOq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnO61MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnPK1MEeOdBunZhTRw1w" source="_S3xnNq1MEeOdBunZhTRw1w" target="_S3xnOa1MEeOdBunZhTRw1w"/>
                </node>
                <structuredNodeOutput xmi:id="_S3xnPa1MEeOdBunZhTRw1w" name="terminate" incoming="_S3xnSa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnPq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnP61MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_S3xnQK1MEeOdBunZhTRw1w" name="s" incoming="_S3xnSq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnQa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnQq1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_S3xnQ61MEeOdBunZhTRw1w" name="arrival3" incoming="_S3xnS61MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnRK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnRa1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_S3xnRq1MEeOdBunZhTRw1w" name="sig" incoming="_S3xnTK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnR61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnSK1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnSa1MEeOdBunZhTRw1w" source="_S3xnIa1MEeOdBunZhTRw1w" target="_S3xnPa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnSq1MEeOdBunZhTRw1w" source="_S3xnKa1MEeOdBunZhTRw1w" target="_S3xnQK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnS61MEeOdBunZhTRw1w" source="_S3xnMa1MEeOdBunZhTRw1w" target="_S3xnQ61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnTK1MEeOdBunZhTRw1w" source="_S3xnOa1MEeOdBunZhTRw1w" target="_S3xnRq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnTa1MEeOdBunZhTRw1w" source="_S3xmza1MEeOdBunZhTRw1w" target="_S3xnF61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3xnTq1MEeOdBunZhTRw1w" source="_S3xmy61MEeOdBunZhTRw1w" target="_S3xnFa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnT61MEeOdBunZhTRw1w" source="_S3xmza1MEeOdBunZhTRw1w" target="_S3xnJq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnUK1MEeOdBunZhTRw1w" source="_S3xnV61MEeOdBunZhTRw1w" target="_S3xmvq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnUa1MEeOdBunZhTRw1w" source="_S3xnWq1MEeOdBunZhTRw1w" target="_S3xmv61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnUq1MEeOdBunZhTRw1w" source="_S3xnXa1MEeOdBunZhTRw1w" target="_S3xmwK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnU61MEeOdBunZhTRw1w" source="_S3xnYK1MEeOdBunZhTRw1w" target="_S3xmwa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnVK1MEeOdBunZhTRw1w" source="_S3xmvq1MEeOdBunZhTRw1w" target="_S3xnHq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnVa1MEeOdBunZhTRw1w" source="_S3xmwK1MEeOdBunZhTRw1w" target="_S3xnLq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnVq1MEeOdBunZhTRw1w" source="_S3xmwa1MEeOdBunZhTRw1w" target="_S3xnNq1MEeOdBunZhTRw1w"/>
              <loopVariable xmi:id="_S3xnV61MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.loopVariable(terminate)" outgoing="_S3xnUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnWK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnWa1MEeOdBunZhTRw1w" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_S3xnWq1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.loopVariable(s)" outgoing="_S3xnUa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnW61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnXK1MEeOdBunZhTRw1w" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_S3xnXa1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.loopVariable(arrival3)" outgoing="_S3xnUq1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnXq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnX61MEeOdBunZhTRw1w" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_S3xnYK1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.loopVariable(sig)" outgoing="_S3xnU61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnYa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnYq1MEeOdBunZhTRw1w" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_S3xnY61MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.loopVariableInput(terminate)" incoming="_S3xoN61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnZK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnZa1MEeOdBunZhTRw1w" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_S3xnZq1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnZ61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnaK1MEeOdBunZhTRw1w" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_S3xnaa1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.loopVariableInput(arrival3)" incoming="_S3xoOa1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnaq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xna61MEeOdBunZhTRw1w" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_S3xnbK1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.loopVariableInput(sig)" incoming="_S3xoOq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnba1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnbq1MEeOdBunZhTRw1w" value="1"/>
              </loopVariableInput>
              <result xmi:id="_S3xnb61MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xncK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnca1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_S3xncq1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.result(s)" outgoing="_S3xoOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnc61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xndK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_S3xnda1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.result(arrival3)" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xndq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnd61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_S3xneK1MEeOdBunZhTRw1w" name="DoStatement@3822ee3c.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnea1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xneq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3xne61MEeOdBunZhTRw1w" name="Fork(s)" incoming="_S3xoOK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_S3xnfK1MEeOdBunZhTRw1w" name="IfStatement@a58c3c1" outgoing="_S3xoPq1MEeOdBunZhTRw1w" incoming="_S3xoPa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xnfa1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_S3xnfq1MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnf61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xngK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_S3xnga1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xngq1MEeOdBunZhTRw1w" name="AcceptStatement@76768bd0" outgoing="_S3xn4a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xng61MEeOdBunZhTRw1w" name="Accept(SignalNewArrival)" incoming="_S3xnhq1MEeOdBunZhTRw1w">
                  <trigger xmi:id="_S3xnhK1MEeOdBunZhTRw1w" event="_S3yyvq1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_S3xnha1MEeOdBunZhTRw1w" name="Initial(Accept(SignalNewArrival))" outgoing="_S3xnhq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3xnhq1MEeOdBunZhTRw1w" source="_S3xnha1MEeOdBunZhTRw1w" target="_S3xng61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnh61MEeOdBunZhTRw1w" name="ExpressionStatement@207ca11f" incoming="_S3xn4a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xniK1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@3ab4ce9f)" incoming="_S3xnrq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xnia1MEeOdBunZhTRw1w" name="ReadSelf">
                    <result xmi:id="_S3xniq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xnqq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xni61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnjK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xnja1MEeOdBunZhTRw1w" name="Clear(flag)" structuralFeature="_S3xkqq1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3xnjq1MEeOdBunZhTRw1w" name="Clear(flag).object" incoming="_S3xnqq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnj61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnkK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3xnka1MEeOdBunZhTRw1w" name="Clear(flag).result" outgoing="_S3xnrK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnkq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnk61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xnlK1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@3ab4ce9f)" outgoing="_S3xnq61MEeOdBunZhTRw1w" incoming="_S3xnra1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnla1MEeOdBunZhTRw1w" name="WriteAll(Test::flag)">
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xnlq1MEeOdBunZhTRw1w" name="Write(flag)" structuralFeature="_S3xkqq1MEeOdBunZhTRw1w" isReplaceAll="true">
                    <object xmi:id="_S3xnl61MEeOdBunZhTRw1w" name="Write(flag).object" incoming="_S3xnrK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnmK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnma1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_S3xnmq1MEeOdBunZhTRw1w" name="Write(flag).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnm61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnnK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:id="_S3xnna1MEeOdBunZhTRw1w" name="Write(flag).value" incoming="_S3xno61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnnq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnn61MEeOdBunZhTRw1w" value="1"/>
                    </value>
                  </node>
                  <structuredNodeInput xmi:id="_S3xnoK1MEeOdBunZhTRw1w" name="WriteAll(Test::flag).input(Test::flag)" outgoing="_S3xno61MEeOdBunZhTRw1w" incoming="_S3xnq61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnoa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnoq1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xno61MEeOdBunZhTRw1w" source="_S3xnoK1MEeOdBunZhTRw1w" target="_S3xnna1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnpK1MEeOdBunZhTRw1w" name="RightHandSide@781a3492" outgoing="_S3xnrq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xnpa1MEeOdBunZhTRw1w" name="Value(true)">
                    <result xmi:id="_S3xnpq1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_S3xnra1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnp61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnqK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_S3xnqa1MEeOdBunZhTRw1w" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnqq1MEeOdBunZhTRw1w" source="_S3xniq1MEeOdBunZhTRw1w" target="_S3xnjq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnq61MEeOdBunZhTRw1w" source="_S3xnlK1MEeOdBunZhTRw1w" target="_S3xnoK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnrK1MEeOdBunZhTRw1w" source="_S3xnka1MEeOdBunZhTRw1w" target="_S3xnl61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xnra1MEeOdBunZhTRw1w" source="_S3xnpq1MEeOdBunZhTRw1w" target="_S3xnlK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3xnrq1MEeOdBunZhTRw1w" source="_S3xnpK1MEeOdBunZhTRw1w" target="_S3xniK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xnr61MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_S3xnsK1MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnsa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnsq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_S3xns61MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xntK1MEeOdBunZhTRw1w" name="AcceptStatement@229a0711" outgoing="_S3xn4q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xnta1MEeOdBunZhTRw1w" name="Accept(SignalTermination)" incoming="_S3xnuK1MEeOdBunZhTRw1w">
                  <trigger xmi:id="_S3xntq1MEeOdBunZhTRw1w" event="_S3yyv61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_S3xnt61MEeOdBunZhTRw1w" name="Initial(Accept(SignalTermination))" outgoing="_S3xnuK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3xnuK1MEeOdBunZhTRw1w" source="_S3xnt61MEeOdBunZhTRw1w" target="_S3xnta1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnua1MEeOdBunZhTRw1w" name="ExpressionStatement@40538b30" incoming="_S3xn4q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnuq1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@69615c85)" incoming="_S3xn4K1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xnu61MEeOdBunZhTRw1w" name="ReadSelf">
                    <result xmi:id="_S3xnvK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xn3K1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnva1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnvq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xnv61MEeOdBunZhTRw1w" name="Clear(flag)" structuralFeature="_S3xkqq1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3xnwK1MEeOdBunZhTRw1w" name="Clear(flag).object" incoming="_S3xn3K1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnwa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnwq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3xnw61MEeOdBunZhTRw1w" name="Clear(flag).result" outgoing="_S3xn3q1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnxK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnxa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xnxq1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@69615c85)" outgoing="_S3xn3a1MEeOdBunZhTRw1w" incoming="_S3xn361MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xnx61MEeOdBunZhTRw1w" name="WriteAll(Test::flag)">
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xnyK1MEeOdBunZhTRw1w" name="Write(flag)" structuralFeature="_S3xkqq1MEeOdBunZhTRw1w" isReplaceAll="true">
                    <object xmi:id="_S3xnya1MEeOdBunZhTRw1w" name="Write(flag).object" incoming="_S3xn3q1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnyq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xny61MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_S3xnzK1MEeOdBunZhTRw1w" name="Write(flag).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xnza1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xnzq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:id="_S3xnz61MEeOdBunZhTRw1w" name="Write(flag).value" incoming="_S3xn1a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xn0K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xn0a1MEeOdBunZhTRw1w" value="1"/>
                    </value>
                  </node>
                  <structuredNodeInput xmi:id="_S3xn0q1MEeOdBunZhTRw1w" name="WriteAll(Test::flag).input(Test::flag)" outgoing="_S3xn1a1MEeOdBunZhTRw1w" incoming="_S3xn3a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xn061MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xn1K1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xn1a1MEeOdBunZhTRw1w" source="_S3xn0q1MEeOdBunZhTRw1w" target="_S3xnz61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xn1q1MEeOdBunZhTRw1w" name="RightHandSide@5ecbaf30" outgoing="_S3xn4K1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3xn161MEeOdBunZhTRw1w" name="Value(false)">
                    <result xmi:id="_S3xn2K1MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_S3xn361MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xn2a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xn2q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_S3xn261MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xn3K1MEeOdBunZhTRw1w" source="_S3xnvK1MEeOdBunZhTRw1w" target="_S3xnwK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xn3a1MEeOdBunZhTRw1w" source="_S3xnxq1MEeOdBunZhTRw1w" target="_S3xn0q1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xn3q1MEeOdBunZhTRw1w" source="_S3xnw61MEeOdBunZhTRw1w" target="_S3xnya1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xn361MEeOdBunZhTRw1w" source="_S3xn2K1MEeOdBunZhTRw1w" target="_S3xnxq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3xn4K1MEeOdBunZhTRw1w" source="_S3xn1q1MEeOdBunZhTRw1w" target="_S3xnuq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xn4a1MEeOdBunZhTRw1w" source="_S3xngq1MEeOdBunZhTRw1w" target="_S3xnh61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xn4q1MEeOdBunZhTRw1w" source="_S3xntK1MEeOdBunZhTRw1w" target="_S3xnua1MEeOdBunZhTRw1w"/>
              <clause xmi:id="_S3xn461MEeOdBunZhTRw1w" body="_S3xngq1MEeOdBunZhTRw1w _S3xnh61MEeOdBunZhTRw1w" decider="_S3xnfq1MEeOdBunZhTRw1w" successorClause="_S3xn5K1MEeOdBunZhTRw1w" test="_S3xnfa1MEeOdBunZhTRw1w"/>
              <clause xmi:id="_S3xn5K1MEeOdBunZhTRw1w" body="_S3xntK1MEeOdBunZhTRw1w _S3xnua1MEeOdBunZhTRw1w" decider="_S3xnsK1MEeOdBunZhTRw1w" predecessorClause="_S3xn461MEeOdBunZhTRw1w" test="_S3xnr61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xn5a1MEeOdBunZhTRw1w" name="AcceptStatement@18c77f2a" outgoing="_S3xoQK1MEeOdBunZhTRw1w" incoming="_S3xoPq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_S3xn5q1MEeOdBunZhTRw1w" name="Fork(Accept(SignalTermination).result)" outgoing="_S3xoP61MEeOdBunZhTRw1w" incoming="_S3xn7q1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_S3xn561MEeOdBunZhTRw1w" name="Accept(SignalTermination)" incoming="_S3xn7a1MEeOdBunZhTRw1w">
                <result xmi:id="_S3xn6K1MEeOdBunZhTRw1w" name="Accept(SignalTermination).result" outgoing="_S3xn7q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xn6a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xn6q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <trigger xmi:id="_S3xn661MEeOdBunZhTRw1w" event="_S3yywK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S3xn7K1MEeOdBunZhTRw1w" name="Initial(Accept(SignalTermination))" outgoing="_S3xn7a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xn7a1MEeOdBunZhTRw1w" source="_S3xn7K1MEeOdBunZhTRw1w" target="_S3xn561MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xn7q1MEeOdBunZhTRw1w" source="_S3xn6K1MEeOdBunZhTRw1w" target="_S3xn5q1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xn761MEeOdBunZhTRw1w" name="ExpressionStatement@2b112f72" outgoing="_S3xoQa1MEeOdBunZhTRw1w" incoming="_S3xoQK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xn8K1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@7541fb74)" incoming="_S3xoEK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xn8a1MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_S3xn8q1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xoDa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xn861MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xn9K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xn9a1MEeOdBunZhTRw1w" name="Clear(sig1)" structuralFeature="_S3xkmK1MEeOdBunZhTRw1w">
                <object xmi:id="_S3xn9q1MEeOdBunZhTRw1w" name="Clear(sig1).object" incoming="_S3xoDa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xn961MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xn-K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_S3xn-a1MEeOdBunZhTRw1w" name="Clear(sig1).result" outgoing="_S3xoD61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xn-q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xn-61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xn_K1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@7541fb74)" outgoing="_S3xoDq1MEeOdBunZhTRw1w" incoming="_S3xoP61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xn_a1MEeOdBunZhTRw1w" name="WriteAll(Test::sig1)">
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xn_q1MEeOdBunZhTRw1w" name="Write(sig1)" structuralFeature="_S3xkmK1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_S3xn_61MEeOdBunZhTRw1w" name="Write(sig1).object" incoming="_S3xoD61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoAK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoAa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3xoAq1MEeOdBunZhTRw1w" name="Write(sig1).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoA61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoBK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_S3xoBa1MEeOdBunZhTRw1w" name="Write(sig1).value" incoming="_S3xoC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoBq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoB61MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <structuredNodeInput xmi:id="_S3xoCK1MEeOdBunZhTRw1w" name="WriteAll(Test::sig1).input(Test::sig1)" outgoing="_S3xoC61MEeOdBunZhTRw1w" incoming="_S3xoDq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoCa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoCq1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoC61MEeOdBunZhTRw1w" source="_S3xoCK1MEeOdBunZhTRw1w" target="_S3xoBa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xoDK1MEeOdBunZhTRw1w" name="RightHandSide@15c734b8" outgoing="_S3xoEK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoDa1MEeOdBunZhTRw1w" source="_S3xn8q1MEeOdBunZhTRw1w" target="_S3xn9q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoDq1MEeOdBunZhTRw1w" source="_S3xn_K1MEeOdBunZhTRw1w" target="_S3xoCK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoD61MEeOdBunZhTRw1w" source="_S3xn-a1MEeOdBunZhTRw1w" target="_S3xn_61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoEK1MEeOdBunZhTRw1w" source="_S3xoDK1MEeOdBunZhTRw1w" target="_S3xn8K1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xoEa1MEeOdBunZhTRw1w" name="ExpressionStatement@2f43cbcc" incoming="_S3xoQa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3xoEq1MEeOdBunZhTRw1w" name="SendSignal(Continue)" signal="_S3yysa1MEeOdBunZhTRw1w">
                <target xmi:id="_S3xoE61MEeOdBunZhTRw1w" name="SendSignal(Continue).target" incoming="_S3xoIq1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoFK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoFa1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xoFq1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_S3xoF61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xoI61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoGK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoGa1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3xoGq1MEeOdBunZhTRw1w" name="Read(tester)" structuralFeature="_S3xkra1MEeOdBunZhTRw1w">
                <object xmi:id="_S3xoG61MEeOdBunZhTRw1w" name="Read(tester).object" incoming="_S3xoJK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoHK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoHa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_S3xoHq1MEeOdBunZhTRw1w" name="Read(tester).result" outgoing="_S3xoIq1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoH61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoIK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S3xoIa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3xoJK1MEeOdBunZhTRw1w" incoming="_S3xoI61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoIq1MEeOdBunZhTRw1w" source="_S3xoHq1MEeOdBunZhTRw1w" target="_S3xoE61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoI61MEeOdBunZhTRw1w" source="_S3xoF61MEeOdBunZhTRw1w" target="_S3xoIa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoJK1MEeOdBunZhTRw1w" source="_S3xoIa1MEeOdBunZhTRw1w" target="_S3xoG61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoJa1MEeOdBunZhTRw1w" source="_S3xks61MEeOdBunZhTRw1w" target="_S3xkyq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoJq1MEeOdBunZhTRw1w" source="_S3xksq1MEeOdBunZhTRw1w" target="_S3xkva1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoJ61MEeOdBunZhTRw1w" source="_S3xkva1MEeOdBunZhTRw1w" target="_S3xk361MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoKK1MEeOdBunZhTRw1w" source="_S3xlOK1MEeOdBunZhTRw1w" target="_S3xlD61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoKa1MEeOdBunZhTRw1w" source="_S3xlOK1MEeOdBunZhTRw1w" target="_S3xlH61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoKq1MEeOdBunZhTRw1w" source="_S3xk4K1MEeOdBunZhTRw1w" target="_S3xlF61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoK61MEeOdBunZhTRw1w" source="_S3xlOK1MEeOdBunZhTRw1w" target="_S3xlMa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoLK1MEeOdBunZhTRw1w" source="_S3xk361MEeOdBunZhTRw1w" target="_S3xk6K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoLa1MEeOdBunZhTRw1w" source="_S3xlOa1MEeOdBunZhTRw1w" target="_S3xlX61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoLq1MEeOdBunZhTRw1w" source="_S3xk6K1MEeOdBunZhTRw1w" target="_S3xlUq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoL61MEeOdBunZhTRw1w" source="_S3xlUq1MEeOdBunZhTRw1w" target="_S3xldK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoMK1MEeOdBunZhTRw1w" source="_S3xldK1MEeOdBunZhTRw1w" target="_S3xlea1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoMa1MEeOdBunZhTRw1w" source="_S3xleq1MEeOdBunZhTRw1w" target="_S3xlkK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoMq1MEeOdBunZhTRw1w" source="_S3xlea1MEeOdBunZhTRw1w" target="_S3xlg61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoM61MEeOdBunZhTRw1w" source="_S3xlOa1MEeOdBunZhTRw1w" target="_S3xmZq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoNK1MEeOdBunZhTRw1w" source="_S3xleq1MEeOdBunZhTRw1w" target="_S3xmaa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoNa1MEeOdBunZhTRw1w" source="_S3xks61MEeOdBunZhTRw1w" target="_S3xmbK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoNq1MEeOdBunZhTRw1w" source="_S3xlg61MEeOdBunZhTRw1w" target="_S3xlpa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoN61MEeOdBunZhTRw1w" source="_S3xlOa1MEeOdBunZhTRw1w" target="_S3xnY61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoOK1MEeOdBunZhTRw1w" source="_S3xncq1MEeOdBunZhTRw1w" target="_S3xne61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoOa1MEeOdBunZhTRw1w" source="_S3xleq1MEeOdBunZhTRw1w" target="_S3xnaa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoOq1MEeOdBunZhTRw1w" source="_S3xks61MEeOdBunZhTRw1w" target="_S3xnbK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoO61MEeOdBunZhTRw1w" source="_S3xnGq1MEeOdBunZhTRw1w" target="_S3xmw61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoPK1MEeOdBunZhTRw1w" source="_S3xlpa1MEeOdBunZhTRw1w" target="_S3xmva1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoPa1MEeOdBunZhTRw1w" source="_S3xmva1MEeOdBunZhTRw1w" target="_S3xnfK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoPq1MEeOdBunZhTRw1w" source="_S3xnfK1MEeOdBunZhTRw1w" target="_S3xn5a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoP61MEeOdBunZhTRw1w" source="_S3xn5q1MEeOdBunZhTRw1w" target="_S3xn_K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoQK1MEeOdBunZhTRw1w" source="_S3xn5a1MEeOdBunZhTRw1w" target="_S3xn761MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3xoQa1MEeOdBunZhTRw1w" source="_S3xn761MEeOdBunZhTRw1w" target="_S3xoEa1MEeOdBunZhTRw1w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3xoQq1MEeOdBunZhTRw1w" name="Test$method$1" specification="_S3yMIq1MEeOdBunZhTRw1w" group="_S3xoT61MEeOdBunZhTRw1w" node="_S3xoTK1MEeOdBunZhTRw1w _S3xoTa1MEeOdBunZhTRw1w _S3xoTq1MEeOdBunZhTRw1w _S3xoT61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_S3xoQ61MEeOdBunZhTRw1w" name="tester" type="_S3yMK61MEeOdBunZhTRw1w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoRK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoRa1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_S3xoRq1MEeOdBunZhTRw1w" name="" type="_S3xkkK1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoR61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoSK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoSa1MEeOdBunZhTRw1w" source="_S3xoTK1MEeOdBunZhTRw1w" target="_S3xoTa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoSq1MEeOdBunZhTRw1w" source="_S3xoTa1MEeOdBunZhTRw1w" target="_S3xoXq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoS61MEeOdBunZhTRw1w" source="_S3xod61MEeOdBunZhTRw1w" target="_S3xoTq1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_S3xoT61MEeOdBunZhTRw1w" name="Body(Test$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xoUK1MEeOdBunZhTRw1w" name="Body" incoming="_S3yLu61MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xoUa1MEeOdBunZhTRw1w" name="ExpressionStatement@55cce3da">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xoUq1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@460a4b8a)" incoming="_S3xocq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xoU61MEeOdBunZhTRw1w" name="ReadSelf">
                    <result xmi:id="_S3xoVK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3xob61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoVa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoVq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S3xoV61MEeOdBunZhTRw1w" name="Clear(tester)" structuralFeature="_S3xkra1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3xoWK1MEeOdBunZhTRw1w" name="Clear(tester).object" incoming="_S3xob61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoWa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoWq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3xoW61MEeOdBunZhTRw1w" name="Clear(tester).result" outgoing="_S3xoca1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoXK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoXa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3xoXq1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@460a4b8a)" outgoing="_S3xocK1MEeOdBunZhTRw1w" incoming="_S3xoSq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xoX61MEeOdBunZhTRw1w" name="WriteAll(Test::tester)">
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3xoYK1MEeOdBunZhTRw1w" name="Write(tester)" structuralFeature="_S3xkra1MEeOdBunZhTRw1w" isReplaceAll="true">
                    <object xmi:id="_S3xoYa1MEeOdBunZhTRw1w" name="Write(tester).object" incoming="_S3xoca1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoYq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoY61MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_S3xoZK1MEeOdBunZhTRw1w" name="Write(tester).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoZa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoZq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:id="_S3xoZ61MEeOdBunZhTRw1w" name="Write(tester).value" incoming="_S3xoba1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoaK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoaa1MEeOdBunZhTRw1w" value="1"/>
                    </value>
                  </node>
                  <structuredNodeInput xmi:id="_S3xoaq1MEeOdBunZhTRw1w" name="WriteAll(Test::tester).input(Test::tester)" outgoing="_S3xoba1MEeOdBunZhTRw1w" incoming="_S3xocK1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoa61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xobK1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoba1MEeOdBunZhTRw1w" source="_S3xoaq1MEeOdBunZhTRw1w" target="_S3xoZ61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3xobq1MEeOdBunZhTRw1w" name="RightHandSide@84f441e" outgoing="_S3xocq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xob61MEeOdBunZhTRw1w" source="_S3xoVK1MEeOdBunZhTRw1w" target="_S3xoWK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xocK1MEeOdBunZhTRw1w" source="_S3xoXq1MEeOdBunZhTRw1w" target="_S3xoaq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3xoca1MEeOdBunZhTRw1w" source="_S3xoW61MEeOdBunZhTRw1w" target="_S3xoYa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3xocq1MEeOdBunZhTRw1w" source="_S3xobq1MEeOdBunZhTRw1w" target="_S3xoUq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S3xoc61MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_S3xodK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3yLua1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoda1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xodq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3xod61MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3xoS61MEeOdBunZhTRw1w _S3yLuq1MEeOdBunZhTRw1w _S3yLvK1MEeOdBunZhTRw1w" incoming="_S3yLua1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_S3xoeK1MEeOdBunZhTRw1w" name="Call(Test$initialization$1)" outgoing="_S3yLu61MEeOdBunZhTRw1w" incoming="_S3yLwq1MEeOdBunZhTRw1w" operation="_S3yMIa1MEeOdBunZhTRw1w">
              <target xmi:id="_S3xoea1MEeOdBunZhTRw1w" name="Call(Test$initialization$1).target" incoming="_S3yLuq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoeq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xoe61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3xofK1MEeOdBunZhTRw1w" name="Read(Test$initializationFlag$1)" structuralFeature="_S3xkkq1MEeOdBunZhTRw1w">
              <object xmi:id="_S3xofa1MEeOdBunZhTRw1w" name="Read(Test$initializationFlag$1).object" incoming="_S3yLvK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xofq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3xof61MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_S3xogK1MEeOdBunZhTRw1w" name="Read(Test$initializationFlag$1).result" outgoing="_S3yLva1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3xoga1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yLoK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yLoa1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_S3yLoq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_S3yLva1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yLo61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yLpK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_S3yLpa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_S3yLvq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yLpq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yLp61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yLqK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_S3yLqa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3yLv61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yLqq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yLq61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S3yLrK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S3yLra1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_S3yLrq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_S3yLvq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yLr61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yLsK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_S3yLsa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_S3yLwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yLsq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yLs61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_S3yLtK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_S3yLv61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yLta1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yLtq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S3yLt61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_S3yLwK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S3yLuK1MEeOdBunZhTRw1w" name="Decision(Test(Test$initializationFlag$1))" outgoing="_S3yLwq1MEeOdBunZhTRw1w" incoming="_S3yLwK1MEeOdBunZhTRw1w _S3yLwa1MEeOdBunZhTRw1w" decisionInputFlow="_S3yLwa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yLua1MEeOdBunZhTRw1w" source="_S3xodK1MEeOdBunZhTRw1w" target="_S3xod61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yLuq1MEeOdBunZhTRw1w" source="_S3xod61MEeOdBunZhTRw1w" target="_S3xoea1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yLu61MEeOdBunZhTRw1w" source="_S3xoeK1MEeOdBunZhTRw1w" target="_S3xoUK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yLvK1MEeOdBunZhTRw1w" source="_S3xod61MEeOdBunZhTRw1w" target="_S3xofa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yLva1MEeOdBunZhTRw1w" source="_S3xogK1MEeOdBunZhTRw1w" target="_S3yLoq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yLvq1MEeOdBunZhTRw1w" source="_S3yLpa1MEeOdBunZhTRw1w" target="_S3yLrq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yLv61MEeOdBunZhTRw1w" source="_S3yLqa1MEeOdBunZhTRw1w" target="_S3yLtK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yLwK1MEeOdBunZhTRw1w" source="_S3yLt61MEeOdBunZhTRw1w" target="_S3yLuK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yLwa1MEeOdBunZhTRw1w" source="_S3yLsa1MEeOdBunZhTRw1w" target="_S3yLuK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yLwq1MEeOdBunZhTRw1w" source="_S3yLuK1MEeOdBunZhTRw1w" target="_S3xoeK1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3yLw61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3xoTK1MEeOdBunZhTRw1w" name="Input(tester)" outgoing="_S3xoSa1MEeOdBunZhTRw1w" parameter="_S3xoQ61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_S3xoTa1MEeOdBunZhTRw1w" name="Fork(tester)" outgoing="_S3xoSq1MEeOdBunZhTRw1w" incoming="_S3xoSa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3xoTq1MEeOdBunZhTRw1w" name="Return" incoming="_S3xoS61MEeOdBunZhTRw1w" parameter="_S3xoRq1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3yLxK1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_S3yMKa1MEeOdBunZhTRw1w" group="_S3yLxa1MEeOdBunZhTRw1w" node="_S3yLxa1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_S3yLxa1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3yLxq1MEeOdBunZhTRw1w" name="Test$initialization$1" specification="_S3yMIa1MEeOdBunZhTRw1w" group="_S3yLx61MEeOdBunZhTRw1w" node="_S3yLx61MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_S3yLx61MEeOdBunZhTRw1w" name="Body(Test$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S3yLyK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_S3yLya1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3yMFa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yLyq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yLy61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3yLzK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3yMFq1MEeOdBunZhTRw1w _S3yMF61MEeOdBunZhTRw1w _S3yMGK1MEeOdBunZhTRw1w _S3yMGa1MEeOdBunZhTRw1w" incoming="_S3yMFa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yLza1MEeOdBunZhTRw1w" name="Initialization" incoming="_S3yMH61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallOperationAction" xmi:id="_S3yLzq1MEeOdBunZhTRw1w" name="Call(Super$initialization$1)" outgoing="_S3yL9K1MEeOdBunZhTRw1w" operation="_S3w-sq1MEeOdBunZhTRw1w">
                <target xmi:id="_S3yLz61MEeOdBunZhTRw1w" name="Call(Super$initialization$1).target" incoming="_S3yMFq1MEeOdBunZhTRw1w" type="_S3w-L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL0K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL0a1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yL0q1MEeOdBunZhTRw1w" name="Initialize(count)" outgoing="_S3yL9a1MEeOdBunZhTRw1w" incoming="_S3yL9K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yL061MEeOdBunZhTRw1w" name="Value(0)">
                  <result xmi:id="_S3yL1K1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3yL4q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL1a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL1q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S3yL161MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3yL2K1MEeOdBunZhTRw1w" name="Write(count)" structuralFeature="_S3xkpK1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_S3yL2a1MEeOdBunZhTRw1w" name="Write(count).object" incoming="_S3yMF61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL2q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL261MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yL3K1MEeOdBunZhTRw1w" name="Write(count).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL3a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL3q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_S3yL361MEeOdBunZhTRw1w" name="Write(count).value" incoming="_S3yL4q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL4K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL4a1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yL4q1MEeOdBunZhTRw1w" source="_S3yL1K1MEeOdBunZhTRw1w" target="_S3yL361MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yL461MEeOdBunZhTRw1w" name="Set(initializationFlag)" incoming="_S3yL9a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yL5K1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_S3yL5a1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_S3yL861MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL5q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL561MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_S3yL6K1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3yL6a1MEeOdBunZhTRw1w" name="Write(Test$initializationFlag$1)" structuralFeature="_S3xkkq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_S3yL6q1MEeOdBunZhTRw1w" name="Write(Test$initializationFlag$1).object" incoming="_S3yMGK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL661MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL7K1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yL7a1MEeOdBunZhTRw1w" name="Write(Test$initializationFlag$1).result" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL7q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL761MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_S3yL8K1MEeOdBunZhTRw1w" name="Write(Test$initializationFlag$1).value" incoming="_S3yL861MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL8a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL8q1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yL861MEeOdBunZhTRw1w" source="_S3yL5a1MEeOdBunZhTRw1w" target="_S3yL8K1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yL9K1MEeOdBunZhTRw1w" source="_S3yLzq1MEeOdBunZhTRw1w" target="_S3yL0q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yL9a1MEeOdBunZhTRw1w" source="_S3yL0q1MEeOdBunZhTRw1w" target="_S3yL461MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yL9q1MEeOdBunZhTRw1w" name="Read(Test$initializationFlag$1)" structuralFeature="_S3xkkq1MEeOdBunZhTRw1w">
              <object xmi:id="_S3yL961MEeOdBunZhTRw1w" name="Read(Test$initializationFlag$1).object" incoming="_S3yMGa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL-K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL-a1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_S3yL-q1MEeOdBunZhTRw1w" name="Read(Test$initializationFlag$1).result" outgoing="_S3yMGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL-61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yL_K1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yL_a1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_S3yL_q1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_S3yMGq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yL_61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMAK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_S3yMAa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_S3yMG61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMAq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMA61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yMBK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_S3yMBa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3yMHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMBq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMB61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S3yMCK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S3yMCa1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_S3yMCq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_S3yMG61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMC61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMDK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_S3yMDa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_S3yMHq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMDq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMD61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_S3yMEK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_S3yMHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMEa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMEq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S3yME61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_S3yMHa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S3yMFK1MEeOdBunZhTRw1w" name="Decision(Test(Test$initializationFlag$1))" outgoing="_S3yMH61MEeOdBunZhTRw1w" incoming="_S3yMHa1MEeOdBunZhTRw1w _S3yMHq1MEeOdBunZhTRw1w" decisionInputFlow="_S3yMHq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMFa1MEeOdBunZhTRw1w" source="_S3yLya1MEeOdBunZhTRw1w" target="_S3yLzK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMFq1MEeOdBunZhTRw1w" source="_S3yLzK1MEeOdBunZhTRw1w" target="_S3yLz61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMF61MEeOdBunZhTRw1w" source="_S3yLzK1MEeOdBunZhTRw1w" target="_S3yL2a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMGK1MEeOdBunZhTRw1w" source="_S3yLzK1MEeOdBunZhTRw1w" target="_S3yL6q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMGa1MEeOdBunZhTRw1w" source="_S3yLzK1MEeOdBunZhTRw1w" target="_S3yL961MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMGq1MEeOdBunZhTRw1w" source="_S3yL-q1MEeOdBunZhTRw1w" target="_S3yL_q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMG61MEeOdBunZhTRw1w" source="_S3yMAa1MEeOdBunZhTRw1w" target="_S3yMCq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMHK1MEeOdBunZhTRw1w" source="_S3yMBa1MEeOdBunZhTRw1w" target="_S3yMEK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yMHa1MEeOdBunZhTRw1w" source="_S3yME61MEeOdBunZhTRw1w" target="_S3yMFK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMHq1MEeOdBunZhTRw1w" source="_S3yMDa1MEeOdBunZhTRw1w" target="_S3yMFK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yMH61MEeOdBunZhTRw1w" source="_S3yMFK1MEeOdBunZhTRw1w" target="_S3yLza1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3yMIK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_S3yMIa1MEeOdBunZhTRw1w" name="Test$initialization$1" visibility="protected" method="_S3yLxq1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_S3yMIq1MEeOdBunZhTRw1w" name="Test" visibility="public" method="_S3xoQq1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_S3yMI61MEeOdBunZhTRw1w" name="tester" visibility="package" type="_S3yMK61MEeOdBunZhTRw1w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMJK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMJa1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_S3yMJq1MEeOdBunZhTRw1w" name="" visibility="package" type="_S3xkkK1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMJ61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMKK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_S3yMKa1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_S3yLxK1MEeOdBunZhTRw1w" redefinedOperation="_S3w-t61MEeOdBunZhTRw1w"/>
        <ownedReception xmi:id="_S3yMKq1MEeOdBunZhTRw1w" name="SignalNewArrival" visibility="public" signal="_S3w-uK1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_S3yMK61MEeOdBunZhTRw1w" name="TestRunner" classifierBehavior="_S3yML61MEeOdBunZhTRw1w" isActive="true">
        <ownedAttribute xmi:id="_S3yMLK1MEeOdBunZhTRw1w" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMLa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMLq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3yML61MEeOdBunZhTRw1w" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" group="_S3yMMK1MEeOdBunZhTRw1w" node="_S3yMMK1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_S3yMMK1MEeOdBunZhTRw1w" name="Body(TestRunner$classifierBehavior$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMMa1MEeOdBunZhTRw1w" name="AcceptStatement@2daa8957" outgoing="_S3yNs61MEeOdBunZhTRw1w">
              <node xmi:type="uml:AcceptEventAction" xmi:id="_S3yMMq1MEeOdBunZhTRw1w" name="Accept(Start)" incoming="_S3yMNa1MEeOdBunZhTRw1w">
                <trigger xmi:id="_S3yMM61MEeOdBunZhTRw1w" event="_S3yywa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S3yMNK1MEeOdBunZhTRw1w" name="Initial(Accept(Start))" outgoing="_S3yMNa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yMNa1MEeOdBunZhTRw1w" source="_S3yMNK1MEeOdBunZhTRw1w" target="_S3yMMq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMNq1MEeOdBunZhTRw1w" name="ExpressionStatement@2c39220f" outgoing="_S3yNtK1MEeOdBunZhTRw1w" incoming="_S3yNs61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallOperationAction" xmi:id="_S3yMN61MEeOdBunZhTRw1w" name="Call(test)" operation="_S3yPJa1MEeOdBunZhTRw1w">
                <result xmi:id="_S3yMOK1MEeOdBunZhTRw1w" name="Call(test).result(test)" outgoing="_S3yMQ61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMOa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMOq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_S3yMO61MEeOdBunZhTRw1w" name="Call(test).target" incoming="_S3yMRK1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMPK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMPa1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_S3yMPq1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_S3yMP61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3yMRK1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMQK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMQa1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S3yMQq1MEeOdBunZhTRw1w" name="Fork(test)@778a7d6" outgoing="_S3yNta1MEeOdBunZhTRw1w _S3yNt61MEeOdBunZhTRw1w _S3yNua1MEeOdBunZhTRw1w _S3yNu61MEeOdBunZhTRw1w _S3yNva1MEeOdBunZhTRw1w _S3yNv61MEeOdBunZhTRw1w _S3yNwa1MEeOdBunZhTRw1w _S3yNw61MEeOdBunZhTRw1w _S3yNxa1MEeOdBunZhTRw1w" incoming="_S3yMQ61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMQ61MEeOdBunZhTRw1w" source="_S3yMOK1MEeOdBunZhTRw1w" target="_S3yMQq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMRK1MEeOdBunZhTRw1w" source="_S3yMP61MEeOdBunZhTRw1w" target="_S3yMO61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMRa1MEeOdBunZhTRw1w" name="AcceptStatement@54997996" outgoing="_S3yNtq1MEeOdBunZhTRw1w" incoming="_S3yNtK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:AcceptEventAction" xmi:id="_S3yMRq1MEeOdBunZhTRw1w" name="Accept(Continue)" incoming="_S3yMSa1MEeOdBunZhTRw1w">
                <trigger xmi:id="_S3yMR61MEeOdBunZhTRw1w" event="_S3yywq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S3yMSK1MEeOdBunZhTRw1w" name="Initial(Accept(Continue))" outgoing="_S3yMSa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yMSa1MEeOdBunZhTRw1w" source="_S3yMSK1MEeOdBunZhTRw1w" target="_S3yMRq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMSq1MEeOdBunZhTRw1w" name="ExpressionStatement@1d7ad394" outgoing="_S3yNuK1MEeOdBunZhTRw1w" incoming="_S3yNtq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yMS61MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_S3yMa61MEeOdBunZhTRw1w" behavior="_S3yyw61MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yMTK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_S3yMaa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMTa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMTq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yMT61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_S3yMaq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMUK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMUa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMUq1MEeOdBunZhTRw1w" name="Tuple@762c3ffa" outgoing="_S3yMa61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yMU61MEeOdBunZhTRw1w" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_S3yMVK1MEeOdBunZhTRw1w" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_S3yMaa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMVa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMVq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yMV61MEeOdBunZhTRw1w" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yMWK1MEeOdBunZhTRw1w" name="Read(sig)" structuralFeature="_S3xkla1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yMWa1MEeOdBunZhTRw1w" name="Read(sig).object" incoming="_S3yMZ61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMWq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMW61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yMXK1MEeOdBunZhTRw1w" name="Read(sig).result" outgoing="_S3yMaK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMXa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMXq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yMX61MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yMZ61MEeOdBunZhTRw1w" incoming="_S3yNta1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3yMYK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination)" classifier="_S3w-vK1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yMYa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_S3yMaK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMYq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMY61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yMZK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_S3yMaq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMZa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMZq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMZ61MEeOdBunZhTRw1w" source="_S3yMX61MEeOdBunZhTRw1w" target="_S3yMWa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMaK1MEeOdBunZhTRw1w" source="_S3yMXK1MEeOdBunZhTRw1w" target="_S3yMYa1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMaa1MEeOdBunZhTRw1w" source="_S3yMVK1MEeOdBunZhTRw1w" target="_S3yMTK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMaq1MEeOdBunZhTRw1w" source="_S3yMZK1MEeOdBunZhTRw1w" target="_S3yMT61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yMa61MEeOdBunZhTRw1w" source="_S3yMUq1MEeOdBunZhTRw1w" target="_S3yMS61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMbK1MEeOdBunZhTRw1w" name="ExpressionStatement@4a295990" outgoing="_S3yNuq1MEeOdBunZhTRw1w" incoming="_S3yNuK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yMba1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_S3yMjq1MEeOdBunZhTRw1w" behavior="_S3yzJq1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yMbq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_S3yMi61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMb61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMcK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yMca1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_S3yMjK1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMcq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMc61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yMdK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_S3yMja1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMda1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMdq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMd61MEeOdBunZhTRw1w" name="Tuple@20f2869f" outgoing="_S3yMjq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yMeK1MEeOdBunZhTRw1w" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_S3yMea1MEeOdBunZhTRw1w" name="Value(&quot;test.name&quot;).result" outgoing="_S3yMi61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMeq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMe61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yMfK1MEeOdBunZhTRw1w" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yMfa1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_S3xkm61MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yMfq1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_S3yMiq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMf61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMgK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yMga1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_S3yMjK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMgq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMg61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yMhK1MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yMiq1MEeOdBunZhTRw1w" incoming="_S3yNt61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yMha1MEeOdBunZhTRw1w" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_S3yMhq1MEeOdBunZhTRw1w" name="Value(&quot;Arrival1&quot;).result" outgoing="_S3yMja1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMh61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMiK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yMia1MEeOdBunZhTRw1w" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMiq1MEeOdBunZhTRw1w" source="_S3yMhK1MEeOdBunZhTRw1w" target="_S3yMfq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMi61MEeOdBunZhTRw1w" source="_S3yMea1MEeOdBunZhTRw1w" target="_S3yMbq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMjK1MEeOdBunZhTRw1w" source="_S3yMga1MEeOdBunZhTRw1w" target="_S3yMca1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMja1MEeOdBunZhTRw1w" source="_S3yMhq1MEeOdBunZhTRw1w" target="_S3yMdK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yMjq1MEeOdBunZhTRw1w" source="_S3yMd61MEeOdBunZhTRw1w" target="_S3yMba1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMj61MEeOdBunZhTRw1w" name="ExpressionStatement@c34feaf" outgoing="_S3yNvK1MEeOdBunZhTRw1w" incoming="_S3yNuq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yMkK1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_S3yMqK1MEeOdBunZhTRw1w" behavior="_S3y0Ua1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yMka1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_S3yMpq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMkq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMk61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yMlK1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_S3yMp61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMla1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMlq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMl61MEeOdBunZhTRw1w" name="Tuple@72c09161" outgoing="_S3yMqK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yMmK1MEeOdBunZhTRw1w" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_S3yMma1MEeOdBunZhTRw1w" name="Value(&quot;test.terminate&quot;).result" outgoing="_S3yMpq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMmq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMm61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yMnK1MEeOdBunZhTRw1w" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yMna1MEeOdBunZhTRw1w" name="Read(terminate)" structuralFeature="_S3xknq1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yMnq1MEeOdBunZhTRw1w" name="Read(terminate).object" incoming="_S3yMpa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMn61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMoK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yMoa1MEeOdBunZhTRw1w" name="Read(terminate).result" outgoing="_S3yMp61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMoq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMo61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yMpK1MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yMpa1MEeOdBunZhTRw1w" incoming="_S3yNua1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMpa1MEeOdBunZhTRw1w" source="_S3yMpK1MEeOdBunZhTRw1w" target="_S3yMnq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMpq1MEeOdBunZhTRw1w" source="_S3yMma1MEeOdBunZhTRw1w" target="_S3yMka1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMp61MEeOdBunZhTRw1w" source="_S3yMoa1MEeOdBunZhTRw1w" target="_S3yMlK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yMqK1MEeOdBunZhTRw1w" source="_S3yMl61MEeOdBunZhTRw1w" target="_S3yMkK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMqa1MEeOdBunZhTRw1w" name="ExpressionStatement@2a974feb" outgoing="_S3yNvq1MEeOdBunZhTRw1w" incoming="_S3yNvK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yMqq1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_S3yM1a1MEeOdBunZhTRw1w" behavior="_S3yzJq1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yMq61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_S3yM0q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMrK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMra1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yMrq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_S3yM061MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMr61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMsK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yMsa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_S3yM1K1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMsq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMs61MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yMtK1MEeOdBunZhTRw1w" name="Tuple@37439b36" outgoing="_S3yM1a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yMta1MEeOdBunZhTRw1w" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_S3yMtq1MEeOdBunZhTRw1w" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_S3yM0q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMt61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMuK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yMua1MEeOdBunZhTRw1w" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yMuq1MEeOdBunZhTRw1w" name="Read(arrival)" structuralFeature="_S3xkoa1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yMu61MEeOdBunZhTRw1w" name="Read(arrival).object" incoming="_S3yMz61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMvK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMva1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yMvq1MEeOdBunZhTRw1w" name="Read(arrival).result" outgoing="_S3yM0K1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMv61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMwK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yMwa1MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yMz61MEeOdBunZhTRw1w" incoming="_S3yNu61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yMwq1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_S3w-ua1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yMw61MEeOdBunZhTRw1w" name="Read(name).object" incoming="_S3yM0a1MEeOdBunZhTRw1w" type="_S3w-uK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMxK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMxa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yMxq1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_S3yM061MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMx61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMyK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yMya1MEeOdBunZhTRw1w" name="Fork(Read(arrival).result)" outgoing="_S3yM0a1MEeOdBunZhTRw1w" incoming="_S3yM0K1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yMyq1MEeOdBunZhTRw1w" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_S3yMy61MEeOdBunZhTRw1w" name="Value(&quot;Arrival3&quot;).result" outgoing="_S3yM1K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yMzK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yMza1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yMzq1MEeOdBunZhTRw1w" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yMz61MEeOdBunZhTRw1w" source="_S3yMwa1MEeOdBunZhTRw1w" target="_S3yMu61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yM0K1MEeOdBunZhTRw1w" source="_S3yMvq1MEeOdBunZhTRw1w" target="_S3yMya1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yM0a1MEeOdBunZhTRw1w" source="_S3yMya1MEeOdBunZhTRw1w" target="_S3yMw61MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yM0q1MEeOdBunZhTRw1w" source="_S3yMtq1MEeOdBunZhTRw1w" target="_S3yMq61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yM061MEeOdBunZhTRw1w" source="_S3yMxq1MEeOdBunZhTRw1w" target="_S3yMrq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yM1K1MEeOdBunZhTRw1w" source="_S3yMy61MEeOdBunZhTRw1w" target="_S3yMsa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yM1a1MEeOdBunZhTRw1w" source="_S3yMtK1MEeOdBunZhTRw1w" target="_S3yMqq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yM1q1MEeOdBunZhTRw1w" name="ExpressionStatement@639ca35c" outgoing="_S3yNwK1MEeOdBunZhTRw1w" incoming="_S3yNvq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yM161MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_S3yNDK1MEeOdBunZhTRw1w" behavior="_S3yyw61MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yM2K1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_S3yNCq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM2a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM2q1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yM261MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_S3yNC61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM3K1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM3a1MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yM3q1MEeOdBunZhTRw1w" name="Tuple@7b805606" outgoing="_S3yNDK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yM361MEeOdBunZhTRw1w" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_S3yM4K1MEeOdBunZhTRw1w" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_S3yNCq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM4a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM4q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yM461MEeOdBunZhTRw1w" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yM5K1MEeOdBunZhTRw1w" name="Call(At)" incoming="_S3yNB61MEeOdBunZhTRw1w">
                  <argument xmi:id="_S3yM5a1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_S3yNBa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM5q1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM561MEeOdBunZhTRw1w" value="*"/>
                  </argument>
                  <argument xmi:id="_S3yM6K1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_S3yNCK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM6a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM6q1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_S3yM661MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_S3yNCa1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM7K1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM7a1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yM7q1MEeOdBunZhTRw1w" name="Tuple@21e75513" outgoing="_S3yNB61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yM761MEeOdBunZhTRw1w" name="Read(signals)" structuralFeature="_S3xkp61MEeOdBunZhTRw1w">
                    <object xmi:id="_S3yM8K1MEeOdBunZhTRw1w" name="Read(signals).object" incoming="_S3yM_K1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM8a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM8q1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_S3yM861MEeOdBunZhTRw1w" name="Read(signals).result" outgoing="_S3yNBa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM9K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM9a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_S3yM9q1MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yM_K1MEeOdBunZhTRw1w" incoming="_S3yNva1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yM961MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_S3yM-K1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_S3yNBq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yM-a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yM-q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_S3yM-61MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yM_K1MEeOdBunZhTRw1w" source="_S3yM9q1MEeOdBunZhTRw1w" target="_S3yM8K1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yM_a1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_S3yNCK1MEeOdBunZhTRw1w" incoming="_S3yNBq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3yM_q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_S3w-uK1MEeOdBunZhTRw1w" isDirect="true">
                  <object xmi:id="_S3yM_61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_S3yNCa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNAK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNAa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yNAq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_S3yNC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNA61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNBK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNBa1MEeOdBunZhTRw1w" source="_S3yM861MEeOdBunZhTRw1w" target="_S3yM5a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNBq1MEeOdBunZhTRw1w" source="_S3yM-K1MEeOdBunZhTRw1w" target="_S3yM_a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNB61MEeOdBunZhTRw1w" source="_S3yM7q1MEeOdBunZhTRw1w" target="_S3yM5K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNCK1MEeOdBunZhTRw1w" source="_S3yM_a1MEeOdBunZhTRw1w" target="_S3yM6K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNCa1MEeOdBunZhTRw1w" source="_S3yM661MEeOdBunZhTRw1w" target="_S3yM_61MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNCq1MEeOdBunZhTRw1w" source="_S3yM4K1MEeOdBunZhTRw1w" target="_S3yM2K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNC61MEeOdBunZhTRw1w" source="_S3yNAq1MEeOdBunZhTRw1w" target="_S3yM261MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNDK1MEeOdBunZhTRw1w" source="_S3yM3q1MEeOdBunZhTRw1w" target="_S3yM161MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNDa1MEeOdBunZhTRw1w" name="ExpressionStatement@b9d6104" outgoing="_S3yNwq1MEeOdBunZhTRw1w" incoming="_S3yNwK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yNDq1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_S3yNQ61MEeOdBunZhTRw1w" behavior="_S3yyw61MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yND61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_S3yNQa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNEK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNEa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yNEq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_S3yNQq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNE61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNFK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNFa1MEeOdBunZhTRw1w" name="Tuple@911834e" outgoing="_S3yNQ61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yNFq1MEeOdBunZhTRw1w" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_S3yNF61MEeOdBunZhTRw1w" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_S3yNQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNGK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNGa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yNGq1MEeOdBunZhTRw1w" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yNG61MEeOdBunZhTRw1w" name="Call(At)" incoming="_S3yNPq1MEeOdBunZhTRw1w">
                  <argument xmi:id="_S3yNHK1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_S3yNPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNHa1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNHq1MEeOdBunZhTRw1w" value="*"/>
                  </argument>
                  <argument xmi:id="_S3yNH61MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_S3yNP61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNIK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNIa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_S3yNIq1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_S3yNQK1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNI61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNJK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNJa1MEeOdBunZhTRw1w" name="Tuple@2c9b45f7" outgoing="_S3yNPq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yNJq1MEeOdBunZhTRw1w" name="Read(signals)" structuralFeature="_S3xkp61MEeOdBunZhTRw1w">
                    <object xmi:id="_S3yNJ61MEeOdBunZhTRw1w" name="Read(signals).object" incoming="_S3yNM61MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNKK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNKa1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_S3yNKq1MEeOdBunZhTRw1w" name="Read(signals).result" outgoing="_S3yNPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNK61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNLK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_S3yNLa1MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yNM61MEeOdBunZhTRw1w" incoming="_S3yNv61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yNLq1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_S3yNL61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_S3yNPa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNMK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNMa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_S3yNMq1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNM61MEeOdBunZhTRw1w" source="_S3yNLa1MEeOdBunZhTRw1w" target="_S3yNJ61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yNNK1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_S3yNP61MEeOdBunZhTRw1w" incoming="_S3yNPa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3yNNa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination)" classifier="_S3w-vK1MEeOdBunZhTRw1w" isDirect="true">
                  <object xmi:id="_S3yNNq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_S3yNQK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNN61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNOK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yNOa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_S3yNQq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNOq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNO61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNPK1MEeOdBunZhTRw1w" source="_S3yNKq1MEeOdBunZhTRw1w" target="_S3yNHK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNPa1MEeOdBunZhTRw1w" source="_S3yNL61MEeOdBunZhTRw1w" target="_S3yNNK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNPq1MEeOdBunZhTRw1w" source="_S3yNJa1MEeOdBunZhTRw1w" target="_S3yNG61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNP61MEeOdBunZhTRw1w" source="_S3yNNK1MEeOdBunZhTRw1w" target="_S3yNH61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNQK1MEeOdBunZhTRw1w" source="_S3yNIq1MEeOdBunZhTRw1w" target="_S3yNNq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNQa1MEeOdBunZhTRw1w" source="_S3yNF61MEeOdBunZhTRw1w" target="_S3yND61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNQq1MEeOdBunZhTRw1w" source="_S3yNOa1MEeOdBunZhTRw1w" target="_S3yNEq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNQ61MEeOdBunZhTRw1w" source="_S3yNFa1MEeOdBunZhTRw1w" target="_S3yNDq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNRK1MEeOdBunZhTRw1w" name="ExpressionStatement@72f9842d" outgoing="_S3yNxK1MEeOdBunZhTRw1w" incoming="_S3yNwq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yNRa1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_S3yNZq1MEeOdBunZhTRw1w" behavior="_S3yzJq1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yNRq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_S3yNY61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNR61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNSK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yNSa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_S3yNZK1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNSq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNS61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yNTK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_S3yNZa1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNTa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNTq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNT61MEeOdBunZhTRw1w" name="Tuple@73d6086b" outgoing="_S3yNZq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yNUK1MEeOdBunZhTRw1w" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_S3yNUa1MEeOdBunZhTRw1w" name="Value(&quot;test.count&quot;).result" outgoing="_S3yNY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNUq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNU61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yNVK1MEeOdBunZhTRw1w" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yNVa1MEeOdBunZhTRw1w" name="Read(count)" structuralFeature="_S3xkpK1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yNVq1MEeOdBunZhTRw1w" name="Read(count).object" incoming="_S3yNYq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNV61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNWK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yNWa1MEeOdBunZhTRw1w" name="Read(count).result" outgoing="_S3yNZK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNWq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNW61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yNXK1MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yNYq1MEeOdBunZhTRw1w" incoming="_S3yNwa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yNXa1MEeOdBunZhTRw1w" name="Value(3)">
                  <result xmi:id="_S3yNXq1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_S3yNZa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNX61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNYK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S3yNYa1MEeOdBunZhTRw1w" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNYq1MEeOdBunZhTRw1w" source="_S3yNXK1MEeOdBunZhTRw1w" target="_S3yNVq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNY61MEeOdBunZhTRw1w" source="_S3yNUa1MEeOdBunZhTRw1w" target="_S3yNRq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNZK1MEeOdBunZhTRw1w" source="_S3yNWa1MEeOdBunZhTRw1w" target="_S3yNSa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNZa1MEeOdBunZhTRw1w" source="_S3yNXq1MEeOdBunZhTRw1w" target="_S3yNTK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNZq1MEeOdBunZhTRw1w" source="_S3yNT61MEeOdBunZhTRw1w" target="_S3yNRa1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNZ61MEeOdBunZhTRw1w" name="ExpressionStatement@608a9d0" outgoing="_S3yNxq1MEeOdBunZhTRw1w" incoming="_S3yNxK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yNaK1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_S3yNgK1MEeOdBunZhTRw1w" behavior="_S3yyw61MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yNaa1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_S3yNfq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNaq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNa61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yNbK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_S3yNf61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNba1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNbq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNb61MEeOdBunZhTRw1w" name="Tuple@712344d8" outgoing="_S3yNgK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yNcK1MEeOdBunZhTRw1w" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_S3yNca1MEeOdBunZhTRw1w" name="Value(&quot;test.flag&quot;).result" outgoing="_S3yNfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNcq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNc61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yNdK1MEeOdBunZhTRw1w" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yNda1MEeOdBunZhTRw1w" name="Read(flag)" structuralFeature="_S3xkqq1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yNdq1MEeOdBunZhTRw1w" name="Read(flag).object" incoming="_S3yNfa1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNd61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNeK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yNea1MEeOdBunZhTRw1w" name="Read(flag).result" outgoing="_S3yNf61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNeq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNe61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yNfK1MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yNfa1MEeOdBunZhTRw1w" incoming="_S3yNw61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNfa1MEeOdBunZhTRw1w" source="_S3yNfK1MEeOdBunZhTRw1w" target="_S3yNdq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNfq1MEeOdBunZhTRw1w" source="_S3yNca1MEeOdBunZhTRw1w" target="_S3yNaa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNf61MEeOdBunZhTRw1w" source="_S3yNea1MEeOdBunZhTRw1w" target="_S3yNbK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNgK1MEeOdBunZhTRw1w" source="_S3yNb61MEeOdBunZhTRw1w" target="_S3yNaK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNga1MEeOdBunZhTRw1w" name="ExpressionStatement@ced7f7" outgoing="_S3yNx61MEeOdBunZhTRw1w" incoming="_S3yNxq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yNgq1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_S3yNoq1MEeOdBunZhTRw1w" behavior="_S3yyw61MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yNg61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_S3yNoK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNhK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNha1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yNhq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_S3yNoa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNh61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNiK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNia1MEeOdBunZhTRw1w" name="Tuple@38e583e3" outgoing="_S3yNoq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yNiq1MEeOdBunZhTRw1w" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_S3yNi61MEeOdBunZhTRw1w" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_S3yNoK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNjK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNja1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yNjq1MEeOdBunZhTRw1w" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yNj61MEeOdBunZhTRw1w" name="Read(sig1)" structuralFeature="_S3xkmK1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yNkK1MEeOdBunZhTRw1w" name="Read(sig1).object" incoming="_S3yNnq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNka1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNkq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yNk61MEeOdBunZhTRw1w" name="Read(sig1).result" outgoing="_S3yNn61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNlK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNla1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S3yNlq1MEeOdBunZhTRw1w" name="Fork(Fork(test)@778a7d6)" outgoing="_S3yNnq1MEeOdBunZhTRw1w" incoming="_S3yNxa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3yNl61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination)" classifier="_S3w-vK1MEeOdBunZhTRw1w">
                  <object xmi:id="_S3yNmK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_S3yNn61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNma1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNmq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yNm61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_S3yNoa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNnK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNna1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNnq1MEeOdBunZhTRw1w" source="_S3yNlq1MEeOdBunZhTRw1w" target="_S3yNkK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNn61MEeOdBunZhTRw1w" source="_S3yNk61MEeOdBunZhTRw1w" target="_S3yNmK1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNoK1MEeOdBunZhTRw1w" source="_S3yNi61MEeOdBunZhTRw1w" target="_S3yNg61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNoa1MEeOdBunZhTRw1w" source="_S3yNm61MEeOdBunZhTRw1w" target="_S3yNhq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNoq1MEeOdBunZhTRw1w" source="_S3yNia1MEeOdBunZhTRw1w" target="_S3yNgq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNo61MEeOdBunZhTRw1w" name="ExpressionStatement@349f8f89" incoming="_S3yNx61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yNpK1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_S3yNsq1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yNpa1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_S3yNsa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNpq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNp61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_S3yNqK1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNqa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNqq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNq61MEeOdBunZhTRw1w" name="Tuple@1eeaf073" outgoing="_S3yNsq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yNrK1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;)">
                  <result xmi:id="_S3yNra1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;).result" outgoing="_S3yNsa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNrq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNr61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yNsK1MEeOdBunZhTRw1w" value="Done">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNsa1MEeOdBunZhTRw1w" source="_S3yNra1MEeOdBunZhTRw1w" target="_S3yNpa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNsq1MEeOdBunZhTRw1w" source="_S3yNq61MEeOdBunZhTRw1w" target="_S3yNpK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNs61MEeOdBunZhTRw1w" source="_S3yMMa1MEeOdBunZhTRw1w" target="_S3yMNq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNtK1MEeOdBunZhTRw1w" source="_S3yMNq1MEeOdBunZhTRw1w" target="_S3yMRa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNta1MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yMX61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNtq1MEeOdBunZhTRw1w" source="_S3yMRa1MEeOdBunZhTRw1w" target="_S3yMSq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNt61MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yMhK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNuK1MEeOdBunZhTRw1w" source="_S3yMSq1MEeOdBunZhTRw1w" target="_S3yMbK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNua1MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yMpK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNuq1MEeOdBunZhTRw1w" source="_S3yMbK1MEeOdBunZhTRw1w" target="_S3yMj61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNu61MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yMwa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNvK1MEeOdBunZhTRw1w" source="_S3yMj61MEeOdBunZhTRw1w" target="_S3yMqa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNva1MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yM9q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNvq1MEeOdBunZhTRw1w" source="_S3yMqa1MEeOdBunZhTRw1w" target="_S3yM1q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNv61MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yNLa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNwK1MEeOdBunZhTRw1w" source="_S3yM1q1MEeOdBunZhTRw1w" target="_S3yNDa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNwa1MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yNXK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNwq1MEeOdBunZhTRw1w" source="_S3yNDa1MEeOdBunZhTRw1w" target="_S3yNRK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNw61MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yNfK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNxK1MEeOdBunZhTRw1w" source="_S3yNRK1MEeOdBunZhTRw1w" target="_S3yNZ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNxa1MEeOdBunZhTRw1w" source="_S3yMQq1MEeOdBunZhTRw1w" target="_S3yNlq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNxq1MEeOdBunZhTRw1w" source="_S3yNZ61MEeOdBunZhTRw1w" target="_S3yNga1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yNx61MEeOdBunZhTRw1w" source="_S3yNga1MEeOdBunZhTRw1w" target="_S3yNo61MEeOdBunZhTRw1w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3yNyK1MEeOdBunZhTRw1w" name="test$method$1" specification="_S3yPJa1MEeOdBunZhTRw1w" group="_S3yNzq1MEeOdBunZhTRw1w" node="_S3yNza1MEeOdBunZhTRw1w _S3yNzq1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_S3yNya1MEeOdBunZhTRw1w" name="test" type="_S3xkkK1MEeOdBunZhTRw1w" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yNyq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yNy61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yNzK1MEeOdBunZhTRw1w" source="_S3yOia1MEeOdBunZhTRw1w" target="_S3yNza1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_S3yNzq1MEeOdBunZhTRw1w" name="Body(test$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yNz61MEeOdBunZhTRw1w" name="ExpressionStatement@188c6c4f" outgoing="_S3yOja1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_S3yN0K1MEeOdBunZhTRw1w" name="Fork(test)@22007b4" outgoing="_S3yOjK1MEeOdBunZhTRw1w _S3yOjq1MEeOdBunZhTRw1w _S3yOkK1MEeOdBunZhTRw1w _S3yOkq1MEeOdBunZhTRw1w _S3yOlK1MEeOdBunZhTRw1w _S3yOlq1MEeOdBunZhTRw1w _S3yOmK1MEeOdBunZhTRw1w _S3yOmq1MEeOdBunZhTRw1w _S3yOnK1MEeOdBunZhTRw1w _S3yOnq1MEeOdBunZhTRw1w _S3yOoK1MEeOdBunZhTRw1w _S3yOoq1MEeOdBunZhTRw1w _S3yOpK1MEeOdBunZhTRw1w" incoming="_S3yN9K1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yN0a1MEeOdBunZhTRw1w" name="RightHandSide@48f86ea3">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yN0q1MEeOdBunZhTRw1w" name="InstanceCreationExpression@48f86ea3">
                  <node xmi:type="uml:CallOperationAction" xmi:id="_S3yN061MEeOdBunZhTRw1w" name="Call(Test)" incoming="_S3yN8K1MEeOdBunZhTRw1w" operation="_S3yMIq1MEeOdBunZhTRw1w">
                    <argument xmi:id="_S3yN1K1MEeOdBunZhTRw1w" name="Call(Test).argument(tester)" incoming="_S3yN761MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN1a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN1q1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_S3yN161MEeOdBunZhTRw1w" name="Call(Test).result()" outgoing="_S3yN8a1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN2K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN2a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <target xmi:id="_S3yN2q1MEeOdBunZhTRw1w" name="Call(Test).target" incoming="_S3yN7q1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN261MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN3K1MEeOdBunZhTRw1w" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_S3yN3a1MEeOdBunZhTRw1w" name="Create(Test)" classifier="_S3xkkK1MEeOdBunZhTRw1w">
                    <result xmi:id="_S3yN3q1MEeOdBunZhTRw1w" name="Create(Test).result" outgoing="_S3yN7q1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN361MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN4K1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yN4a1MEeOdBunZhTRw1w" name="Tuple@6bcd1b7c" outgoing="_S3yN8K1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_S3yN4q1MEeOdBunZhTRw1w" name="ReadSelf">
                      <result xmi:id="_S3yN461MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3yN761MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN5K1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN5a1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_S3yN5q1MEeOdBunZhTRw1w" name="Fork(Call(Test).result())" outgoing="_S3yN8q1MEeOdBunZhTRw1w _S3yN861MEeOdBunZhTRw1w" incoming="_S3yN8a1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_S3yN561MEeOdBunZhTRw1w" name="Start(Test)">
                    <object xmi:id="_S3yN6K1MEeOdBunZhTRw1w" name="Start(Test).object" incoming="_S3yN8q1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN6a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN6q1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                  </node>
                  <structuredNodeOutput xmi:id="_S3yN661MEeOdBunZhTRw1w" name="Output(Call(Test).result())" outgoing="_S3yN9K1MEeOdBunZhTRw1w" incoming="_S3yN861MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN7K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN7a1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yN7q1MEeOdBunZhTRw1w" source="_S3yN3q1MEeOdBunZhTRw1w" target="_S3yN2q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yN761MEeOdBunZhTRw1w" source="_S3yN461MEeOdBunZhTRw1w" target="_S3yN1K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S3yN8K1MEeOdBunZhTRw1w" source="_S3yN4a1MEeOdBunZhTRw1w" target="_S3yN061MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yN8a1MEeOdBunZhTRw1w" source="_S3yN161MEeOdBunZhTRw1w" target="_S3yN5q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yN8q1MEeOdBunZhTRw1w" source="_S3yN5q1MEeOdBunZhTRw1w" target="_S3yN6K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yN861MEeOdBunZhTRw1w" source="_S3yN5q1MEeOdBunZhTRw1w" target="_S3yN661MEeOdBunZhTRw1w"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yN9K1MEeOdBunZhTRw1w" source="_S3yN661MEeOdBunZhTRw1w" target="_S3yN0K1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yN9a1MEeOdBunZhTRw1w" name="ExpressionStatement@14db3884" outgoing="_S3yOj61MEeOdBunZhTRw1w" incoming="_S3yOja1MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yN9q1MEeOdBunZhTRw1w" name="SendSignal(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w">
                <target xmi:id="_S3yN961MEeOdBunZhTRw1w" name="SendSignal(SignalTermination).target" incoming="_S3yOjK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN-K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN-a1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yN-q1MEeOdBunZhTRw1w" name="ExpressionStatement@39199ee0" outgoing="_S3yOka1MEeOdBunZhTRw1w" incoming="_S3yOj61MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yN-61MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival)" incoming="_S3yOCa1MEeOdBunZhTRw1w" signal="_S3w-uK1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yN_K1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_S3yOCK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yN_a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yN_q1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_S3yN_61MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).target" incoming="_S3yOjq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOAK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOAa1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOAq1MEeOdBunZhTRw1w" name="Tuple@3ab1384b" outgoing="_S3yOCa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOA61MEeOdBunZhTRw1w" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_S3yOBK1MEeOdBunZhTRw1w" name="Value(&quot;Arrival1&quot;).result" outgoing="_S3yOCK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOBa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOBq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yOB61MEeOdBunZhTRw1w" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOCK1MEeOdBunZhTRw1w" source="_S3yOBK1MEeOdBunZhTRw1w" target="_S3yN_K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOCa1MEeOdBunZhTRw1w" source="_S3yOAq1MEeOdBunZhTRw1w" target="_S3yN-61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOCq1MEeOdBunZhTRw1w" name="ExpressionStatement@56ffc188" outgoing="_S3yOk61MEeOdBunZhTRw1w" incoming="_S3yOka1MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOC61MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival)" incoming="_S3yOGa1MEeOdBunZhTRw1w" signal="_S3w-uK1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yODK1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_S3yOGK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yODa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yODq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_S3yOD61MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).target" incoming="_S3yOkK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOEK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOEa1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOEq1MEeOdBunZhTRw1w" name="Tuple@4dd0ec82" outgoing="_S3yOGa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOE61MEeOdBunZhTRw1w" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_S3yOFK1MEeOdBunZhTRw1w" name="Value(&quot;Arrival2&quot;).result" outgoing="_S3yOGK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOFa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOFq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yOF61MEeOdBunZhTRw1w" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOGK1MEeOdBunZhTRw1w" source="_S3yOFK1MEeOdBunZhTRw1w" target="_S3yODK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOGa1MEeOdBunZhTRw1w" source="_S3yOEq1MEeOdBunZhTRw1w" target="_S3yOC61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOGq1MEeOdBunZhTRw1w" name="ExpressionStatement@8b55819" outgoing="_S3yOla1MEeOdBunZhTRw1w" incoming="_S3yOk61MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOG61MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival)" incoming="_S3yOKa1MEeOdBunZhTRw1w" signal="_S3w-uK1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yOHK1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_S3yOKK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOHa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOHq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_S3yOH61MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).target" incoming="_S3yOkq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOIK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOIa1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOIq1MEeOdBunZhTRw1w" name="Tuple@36781c1e" outgoing="_S3yOKa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOI61MEeOdBunZhTRw1w" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_S3yOJK1MEeOdBunZhTRw1w" name="Value(&quot;Arrival3&quot;).result" outgoing="_S3yOKK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOJa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOJq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yOJ61MEeOdBunZhTRw1w" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOKK1MEeOdBunZhTRw1w" source="_S3yOJK1MEeOdBunZhTRw1w" target="_S3yOHK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOKa1MEeOdBunZhTRw1w" source="_S3yOIq1MEeOdBunZhTRw1w" target="_S3yOG61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOKq1MEeOdBunZhTRw1w" name="ExpressionStatement@5268b451" outgoing="_S3yOl61MEeOdBunZhTRw1w" incoming="_S3yOla1MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOK61MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival)" incoming="_S3yOOa1MEeOdBunZhTRw1w" signal="_S3w-uK1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yOLK1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_S3yOOK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOLa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOLq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_S3yOL61MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).target" incoming="_S3yOlK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOMK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOMa1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOMq1MEeOdBunZhTRw1w" name="Tuple@38cbc95c" outgoing="_S3yOOa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOM61MEeOdBunZhTRw1w" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_S3yONK1MEeOdBunZhTRw1w" name="Value(&quot;Arrival4&quot;).result" outgoing="_S3yOOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yONa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yONq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yON61MEeOdBunZhTRw1w" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOOK1MEeOdBunZhTRw1w" source="_S3yONK1MEeOdBunZhTRw1w" target="_S3yOLK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOOa1MEeOdBunZhTRw1w" source="_S3yOMq1MEeOdBunZhTRw1w" target="_S3yOK61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOOq1MEeOdBunZhTRw1w" name="ExpressionStatement@3d45468d" outgoing="_S3yOma1MEeOdBunZhTRw1w" incoming="_S3yOl61MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOO61MEeOdBunZhTRw1w" name="SendSignal(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w">
                <target xmi:id="_S3yOPK1MEeOdBunZhTRw1w" name="SendSignal(SignalTermination).target" incoming="_S3yOlq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOPa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOPq1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOP61MEeOdBunZhTRw1w" name="ExpressionStatement@383e3871" outgoing="_S3yOm61MEeOdBunZhTRw1w" incoming="_S3yOma1MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOQK1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival)" incoming="_S3yOTq1MEeOdBunZhTRw1w" signal="_S3w-uK1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yOQa1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_S3yOTa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOQq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOQ61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_S3yORK1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).target" incoming="_S3yOmK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yORa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yORq1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOR61MEeOdBunZhTRw1w" name="Tuple@66bc5a71" outgoing="_S3yOTq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOSK1MEeOdBunZhTRw1w" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_S3yOSa1MEeOdBunZhTRw1w" name="Value(&quot;Arrival5&quot;).result" outgoing="_S3yOTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOSq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOS61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yOTK1MEeOdBunZhTRw1w" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOTa1MEeOdBunZhTRw1w" source="_S3yOSa1MEeOdBunZhTRw1w" target="_S3yOQa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOTq1MEeOdBunZhTRw1w" source="_S3yOR61MEeOdBunZhTRw1w" target="_S3yOQK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOT61MEeOdBunZhTRw1w" name="ExpressionStatement@394f967e" outgoing="_S3yOna1MEeOdBunZhTRw1w" incoming="_S3yOm61MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOUK1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival)" incoming="_S3yOXq1MEeOdBunZhTRw1w" signal="_S3w-uK1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yOUa1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_S3yOXa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOUq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOU61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_S3yOVK1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).target" incoming="_S3yOmq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOVa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOVq1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOV61MEeOdBunZhTRw1w" name="Tuple@6b6ac06c" outgoing="_S3yOXq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOWK1MEeOdBunZhTRw1w" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_S3yOWa1MEeOdBunZhTRw1w" name="Value(&quot;Arrival6&quot;).result" outgoing="_S3yOXa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOWq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOW61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yOXK1MEeOdBunZhTRw1w" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOXa1MEeOdBunZhTRw1w" source="_S3yOWa1MEeOdBunZhTRw1w" target="_S3yOUa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOXq1MEeOdBunZhTRw1w" source="_S3yOV61MEeOdBunZhTRw1w" target="_S3yOUK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOX61MEeOdBunZhTRw1w" name="ExpressionStatement@3d4f6712" outgoing="_S3yOn61MEeOdBunZhTRw1w" incoming="_S3yOna1MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOYK1MEeOdBunZhTRw1w" name="SendSignal(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w">
                <target xmi:id="_S3yOYa1MEeOdBunZhTRw1w" name="SendSignal(SignalTermination).target" incoming="_S3yOnK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOYq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOY61MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOZK1MEeOdBunZhTRw1w" name="ExpressionStatement@81c3431" outgoing="_S3yOoa1MEeOdBunZhTRw1w" incoming="_S3yOn61MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOZa1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival)" incoming="_S3yOc61MEeOdBunZhTRw1w" signal="_S3w-uK1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yOZq1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_S3yOcq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOZ61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOaK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_S3yOaa1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).target" incoming="_S3yOnq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOaq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOa61MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yObK1MEeOdBunZhTRw1w" name="Tuple@700e4f96" outgoing="_S3yOc61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOba1MEeOdBunZhTRw1w" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_S3yObq1MEeOdBunZhTRw1w" name="Value(&quot;Arrival7&quot;).result" outgoing="_S3yOcq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOb61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOcK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yOca1MEeOdBunZhTRw1w" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOcq1MEeOdBunZhTRw1w" source="_S3yObq1MEeOdBunZhTRw1w" target="_S3yOZq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOc61MEeOdBunZhTRw1w" source="_S3yObK1MEeOdBunZhTRw1w" target="_S3yOZa1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOdK1MEeOdBunZhTRw1w" name="ExpressionStatement@19010acc" outgoing="_S3yOo61MEeOdBunZhTRw1w" incoming="_S3yOoa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOda1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival)" incoming="_S3yOg61MEeOdBunZhTRw1w" signal="_S3w-uK1MEeOdBunZhTRw1w">
                <argument xmi:id="_S3yOdq1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_S3yOgq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOd61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOeK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_S3yOea1MEeOdBunZhTRw1w" name="SendSignal(SignalNewArrival).target" incoming="_S3yOoK1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOeq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOe61MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOfK1MEeOdBunZhTRw1w" name="Tuple@7a26593e" outgoing="_S3yOg61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOfa1MEeOdBunZhTRw1w" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_S3yOfq1MEeOdBunZhTRw1w" name="Value(&quot;Arrival8&quot;).result" outgoing="_S3yOgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOf61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOgK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yOga1MEeOdBunZhTRw1w" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOgq1MEeOdBunZhTRw1w" source="_S3yOfq1MEeOdBunZhTRw1w" target="_S3yOdq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOg61MEeOdBunZhTRw1w" source="_S3yOfK1MEeOdBunZhTRw1w" target="_S3yOda1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOhK1MEeOdBunZhTRw1w" name="ExpressionStatement@1027728a" incoming="_S3yOo61MEeOdBunZhTRw1w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_S3yOha1MEeOdBunZhTRw1w" name="SendSignal(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w">
                <target xmi:id="_S3yOhq1MEeOdBunZhTRw1w" name="SendSignal(SignalTermination).target" incoming="_S3yOoq1MEeOdBunZhTRw1w" type="_S3xkkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOh61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOiK1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
            </node>
            <structuredNodeOutput xmi:id="_S3yOia1MEeOdBunZhTRw1w" name="Output(test)" outgoing="_S3yNzK1MEeOdBunZhTRw1w" incoming="_S3yOpK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOiq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOi61MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOjK1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yN961MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOja1MEeOdBunZhTRw1w" source="_S3yNz61MEeOdBunZhTRw1w" target="_S3yN9a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOjq1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yN_61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOj61MEeOdBunZhTRw1w" source="_S3yN9a1MEeOdBunZhTRw1w" target="_S3yN-q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOkK1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOD61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOka1MEeOdBunZhTRw1w" source="_S3yN-q1MEeOdBunZhTRw1w" target="_S3yOCq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOkq1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOH61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOk61MEeOdBunZhTRw1w" source="_S3yOCq1MEeOdBunZhTRw1w" target="_S3yOGq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOlK1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOL61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOla1MEeOdBunZhTRw1w" source="_S3yOGq1MEeOdBunZhTRw1w" target="_S3yOKq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOlq1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOPK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOl61MEeOdBunZhTRw1w" source="_S3yOKq1MEeOdBunZhTRw1w" target="_S3yOOq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOmK1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yORK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOma1MEeOdBunZhTRw1w" source="_S3yOOq1MEeOdBunZhTRw1w" target="_S3yOP61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOmq1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOVK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOm61MEeOdBunZhTRw1w" source="_S3yOP61MEeOdBunZhTRw1w" target="_S3yOT61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOnK1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOYa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOna1MEeOdBunZhTRw1w" source="_S3yOT61MEeOdBunZhTRw1w" target="_S3yOX61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOnq1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOaa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOn61MEeOdBunZhTRw1w" source="_S3yOX61MEeOdBunZhTRw1w" target="_S3yOZK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOoK1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOea1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOoa1MEeOdBunZhTRw1w" source="_S3yOZK1MEeOdBunZhTRw1w" target="_S3yOdK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOoq1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOhq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yOo61MEeOdBunZhTRw1w" source="_S3yOdK1MEeOdBunZhTRw1w" target="_S3yOhK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOpK1MEeOdBunZhTRw1w" source="_S3yN0K1MEeOdBunZhTRw1w" target="_S3yOia1MEeOdBunZhTRw1w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3yNza1MEeOdBunZhTRw1w" name="Output(test)" incoming="_S3yNzK1MEeOdBunZhTRw1w" parameter="_S3yNya1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3yOpa1MEeOdBunZhTRw1w" name="TestRunner$method$1" specification="_S3yPKa1MEeOdBunZhTRw1w" group="_S3yOq61MEeOdBunZhTRw1w" node="_S3yOqq1MEeOdBunZhTRw1w _S3yOq61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_S3yOpq1MEeOdBunZhTRw1w" name="" type="_S3yMK61MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOp61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOqK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yOqa1MEeOdBunZhTRw1w" source="_S3yOsa1MEeOdBunZhTRw1w" target="_S3yOqq1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_S3yOq61MEeOdBunZhTRw1w" name="Body(TestRunner$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yOrK1MEeOdBunZhTRw1w" name="Body" incoming="_S3yO161MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S3yOra1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_S3yOrq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3yO1a1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOr61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOsK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3yOsa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3yOqa1MEeOdBunZhTRw1w _S3yO1q1MEeOdBunZhTRw1w _S3yO2K1MEeOdBunZhTRw1w" incoming="_S3yO1a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_S3yOsq1MEeOdBunZhTRw1w" name="Call(TestRunner$initialization$1)" outgoing="_S3yO161MEeOdBunZhTRw1w" incoming="_S3yO3q1MEeOdBunZhTRw1w" operation="_S3yPJK1MEeOdBunZhTRw1w">
              <target xmi:id="_S3yOs61MEeOdBunZhTRw1w" name="Call(TestRunner$initialization$1).target" incoming="_S3yO1q1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOtK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOta1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yOtq1MEeOdBunZhTRw1w" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_S3yMLK1MEeOdBunZhTRw1w">
              <object xmi:id="_S3yOt61MEeOdBunZhTRw1w" name="Read(TestRunner$initializationFlag$1).object" incoming="_S3yO2K1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOuK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOua1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_S3yOuq1MEeOdBunZhTRw1w" name="Read(TestRunner$initializationFlag$1).result" outgoing="_S3yO2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOu61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOvK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yOva1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_S3yOvq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_S3yO2a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOv61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOwK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_S3yOwa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_S3yO2q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOwq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOw61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yOxK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_S3yOxa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3yO261MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOxq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOx61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S3yOyK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S3yOya1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_S3yOyq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_S3yO2q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOy61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOzK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_S3yOza1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_S3yO3a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yOzq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yOz61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_S3yO0K1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_S3yO261MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yO0a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yO0q1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S3yO061MEeOdBunZhTRw1w" name="InitialNode" outgoing="_S3yO3K1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S3yO1K1MEeOdBunZhTRw1w" name="Decision(Test(TestRunner$initializationFlag$1))" outgoing="_S3yO3q1MEeOdBunZhTRw1w" incoming="_S3yO3K1MEeOdBunZhTRw1w _S3yO3a1MEeOdBunZhTRw1w" decisionInputFlow="_S3yO3a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yO1a1MEeOdBunZhTRw1w" source="_S3yOrq1MEeOdBunZhTRw1w" target="_S3yOsa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yO1q1MEeOdBunZhTRw1w" source="_S3yOsa1MEeOdBunZhTRw1w" target="_S3yOs61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yO161MEeOdBunZhTRw1w" source="_S3yOsq1MEeOdBunZhTRw1w" target="_S3yOrK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yO2K1MEeOdBunZhTRw1w" source="_S3yOsa1MEeOdBunZhTRw1w" target="_S3yOt61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yO2a1MEeOdBunZhTRw1w" source="_S3yOuq1MEeOdBunZhTRw1w" target="_S3yOvq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yO2q1MEeOdBunZhTRw1w" source="_S3yOwa1MEeOdBunZhTRw1w" target="_S3yOyq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yO261MEeOdBunZhTRw1w" source="_S3yOxa1MEeOdBunZhTRw1w" target="_S3yO0K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yO3K1MEeOdBunZhTRw1w" source="_S3yO061MEeOdBunZhTRw1w" target="_S3yO1K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yO3a1MEeOdBunZhTRw1w" source="_S3yOza1MEeOdBunZhTRw1w" target="_S3yO1K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yO3q1MEeOdBunZhTRw1w" source="_S3yO1K1MEeOdBunZhTRw1w" target="_S3yOsq1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3yO361MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3yOqq1MEeOdBunZhTRw1w" name="Return" incoming="_S3yOqa1MEeOdBunZhTRw1w" parameter="_S3yOpq1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3yO4K1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_S3yPLa1MEeOdBunZhTRw1w" group="_S3yO4a1MEeOdBunZhTRw1w" node="_S3yO4a1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_S3yO4a1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S3yO4q1MEeOdBunZhTRw1w" name="TestRunner$initialization$1" specification="_S3yPJK1MEeOdBunZhTRw1w" group="_S3yO461MEeOdBunZhTRw1w" node="_S3yO461MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_S3yO461MEeOdBunZhTRw1w" name="Body(TestRunner$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S3yO5K1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_S3yO5a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_S3yPGq1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yO5q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yO561MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3yO6K1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_S3yPG61MEeOdBunZhTRw1w _S3yPHK1MEeOdBunZhTRw1w" incoming="_S3yPGq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yO6a1MEeOdBunZhTRw1w" name="Initialization" incoming="_S3yPIq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yO6q1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yO661MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_S3yO7K1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_S3yO-q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yO7a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yO7q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_S3yO761MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S3yO8K1MEeOdBunZhTRw1w" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_S3yMLK1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_S3yO8a1MEeOdBunZhTRw1w" name="Write(TestRunner$initializationFlag$1).object" incoming="_S3yPG61MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yO8q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yO861MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yO9K1MEeOdBunZhTRw1w" name="Write(TestRunner$initializationFlag$1).result" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yO9a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yO9q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_S3yO961MEeOdBunZhTRw1w" name="Write(TestRunner$initializationFlag$1).value" incoming="_S3yO-q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yO-K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yO-a1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yO-q1MEeOdBunZhTRw1w" source="_S3yO7K1MEeOdBunZhTRw1w" target="_S3yO961MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S3yO-61MEeOdBunZhTRw1w" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_S3yMLK1MEeOdBunZhTRw1w">
              <object xmi:id="_S3yO_K1MEeOdBunZhTRw1w" name="Read(TestRunner$initializationFlag$1).object" incoming="_S3yPHK1MEeOdBunZhTRw1w" type="_S3yMK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yO_a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yO_q1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_S3yO_61MEeOdBunZhTRw1w" name="Read(TestRunner$initializationFlag$1).result" outgoing="_S3yPHa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPAK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPAa1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yPAq1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_S3yPA61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_S3yPHa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPBK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPBa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_S3yPBq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_S3yPHq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPB61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPCK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yPCa1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_S3yPCq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_S3yPH61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPC61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPDK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S3yPDa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S3yPDq1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_S3yPD61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_S3yPHq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPEK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPEa1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_S3yPEq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_S3yPIa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPE61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPFK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_S3yPFa1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_S3yPH61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPFq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPF61MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S3yPGK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_S3yPIK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S3yPGa1MEeOdBunZhTRw1w" name="Decision(Test(TestRunner$initializationFlag$1))" outgoing="_S3yPIq1MEeOdBunZhTRw1w" incoming="_S3yPIK1MEeOdBunZhTRw1w _S3yPIa1MEeOdBunZhTRw1w" decisionInputFlow="_S3yPIa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yPGq1MEeOdBunZhTRw1w" source="_S3yO5a1MEeOdBunZhTRw1w" target="_S3yO6K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yPG61MEeOdBunZhTRw1w" source="_S3yO6K1MEeOdBunZhTRw1w" target="_S3yO8a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yPHK1MEeOdBunZhTRw1w" source="_S3yO6K1MEeOdBunZhTRw1w" target="_S3yO_K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yPHa1MEeOdBunZhTRw1w" source="_S3yO_61MEeOdBunZhTRw1w" target="_S3yPA61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yPHq1MEeOdBunZhTRw1w" source="_S3yPBq1MEeOdBunZhTRw1w" target="_S3yPD61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yPH61MEeOdBunZhTRw1w" source="_S3yPCq1MEeOdBunZhTRw1w" target="_S3yPFa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yPIK1MEeOdBunZhTRw1w" source="_S3yPGK1MEeOdBunZhTRw1w" target="_S3yPGa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yPIa1MEeOdBunZhTRw1w" source="_S3yPEq1MEeOdBunZhTRw1w" target="_S3yPGa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yPIq1MEeOdBunZhTRw1w" source="_S3yPGa1MEeOdBunZhTRw1w" target="_S3yO6a1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3yPI61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_S3yPJK1MEeOdBunZhTRw1w" name="TestRunner$initialization$1" visibility="protected" method="_S3yO4q1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_S3yPJa1MEeOdBunZhTRw1w" name="test" visibility="private" method="_S3yNyK1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_S3yPJq1MEeOdBunZhTRw1w" name="test" visibility="package" type="_S3xkkK1MEeOdBunZhTRw1w" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPJ61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPKK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_S3yPKa1MEeOdBunZhTRw1w" name="TestRunner" visibility="package" method="_S3yOpa1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_S3yPKq1MEeOdBunZhTRw1w" name="" visibility="package" type="_S3yMK61MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yPK61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yPLK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_S3yPLa1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_S3yO4K1MEeOdBunZhTRw1w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_S3yysK1MEeOdBunZhTRw1w" name="Start"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_S3yysa1MEeOdBunZhTRw1w" name="Continue"/>
        <ownedReception xmi:id="_S3yysq1MEeOdBunZhTRw1w" name="Start" signal="_S3yysK1MEeOdBunZhTRw1w"/>
        <ownedReception xmi:id="_S3yys61MEeOdBunZhTRw1w" name="Continue" signal="_S3yysa1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yytK1MEeOdBunZhTRw1w" name="Event(SignalNewArrival)" signal="_S3w-uK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyta1MEeOdBunZhTRw1w" name="Event(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yytq1MEeOdBunZhTRw1w" name="Event(SignalNewArrival)" signal="_S3w-uK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyt61MEeOdBunZhTRw1w" name="Event(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyuK1MEeOdBunZhTRw1w" name="Event(SignalNewArrival)" signal="_S3w-uK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyua1MEeOdBunZhTRw1w" name="Event(SignalNewArrival)" signal="_S3w-uK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyuq1MEeOdBunZhTRw1w" name="Event(SignalNewArrival)" signal="_S3w-uK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyu61MEeOdBunZhTRw1w" name="Event(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyvK1MEeOdBunZhTRw1w" name="Event(SignalNewArrival)" signal="_S3w-uK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyva1MEeOdBunZhTRw1w" name="Event(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyvq1MEeOdBunZhTRw1w" name="Event(SignalNewArrival)" signal="_S3w-uK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yyv61MEeOdBunZhTRw1w" name="Event(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yywK1MEeOdBunZhTRw1w" name="Event(SignalTermination)" signal="_S3w-vK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yywa1MEeOdBunZhTRw1w" name="Event(Start)" signal="_S3yysK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_S3yywq1MEeOdBunZhTRw1w" name="Event(Continue)" signal="_S3yysa1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S3yyw61MEeOdBunZhTRw1w" name="AssertTrue" group="_S3yy161MEeOdBunZhTRw1w" node="_S3yy061MEeOdBunZhTRw1w _S3yy1K1MEeOdBunZhTRw1w _S3yy1a1MEeOdBunZhTRw1w _S3yy1q1MEeOdBunZhTRw1w _S3yy161MEeOdBunZhTRw1w">
      <packageImport xmi:id="_S3yyxK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S3yyxa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S3yyxq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S3yyx61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S3yyyK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S3yyya1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yyyq1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yyy61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S3yyzK1MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yyza1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yyzq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yyz61MEeOdBunZhTRw1w" source="_S3yy061MEeOdBunZhTRw1w" target="_S3yy1K1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yy0K1MEeOdBunZhTRw1w" source="_S3yy1a1MEeOdBunZhTRw1w" target="_S3yy1q1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yy0a1MEeOdBunZhTRw1w" source="_S3yy1q1MEeOdBunZhTRw1w" target="_S3yy6K1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yy0q1MEeOdBunZhTRw1w" source="_S3yy1K1MEeOdBunZhTRw1w" target="_S3yzDK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_S3yy161MEeOdBunZhTRw1w" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_S3yy2K1MEeOdBunZhTRw1w" name="IfStatement@24401b6b">
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yy2a1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_S3yy2q1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_S3yzIq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy261MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy3K1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_S3yy3a1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_S3yy3q1MEeOdBunZhTRw1w" name="Test(==)">
            <first xmi:id="_S3yy361MEeOdBunZhTRw1w" name="Test(==).first" incoming="_S3yzGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy4K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy4a1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_S3yy4q1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_S3yzHa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy461MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy5K1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_S3yy5a1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_S3yzIq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy5q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy561MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S3yy6K1MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_S3yzGq1MEeOdBunZhTRw1w _S3yzG61MEeOdBunZhTRw1w" incoming="_S3yy0a1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yy6a1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_S3yy6q1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_S3yzG61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy661MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy7K1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_S3yy7a1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_S3yzHK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy7q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy761MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S3yy8K1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_S3yzHq1MEeOdBunZhTRw1w _S3yzH61MEeOdBunZhTRw1w" incoming="_S3yzHK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_S3yy8a1MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_S3yzI61MEeOdBunZhTRw1w" incoming="_S3yzHa1MEeOdBunZhTRw1w _S3yzIK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_S3yy8q1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_S3yzIK1MEeOdBunZhTRw1w" incoming="_S3yzHq1MEeOdBunZhTRw1w _S3yzH61MEeOdBunZhTRw1w" decisionInputFlow="_S3yzH61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yy861MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_S3yy9K1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_S3yzI61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy9a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy9q1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_S3yy961MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy-K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy-a1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yy-q1MEeOdBunZhTRw1w" name="ExpressionStatement@12ecfa93">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yy-61MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_S3yzFK1MEeOdBunZhTRw1w">
              <argument xmi:id="_S3yy_K1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_S3yzE61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yy_a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yy_q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_S3yy_61MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzAK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzAa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yzAq1MEeOdBunZhTRw1w" name="Tuple@6003fca2" outgoing="_S3yzFK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yzA61MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_S3yzBK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_S3yzEq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzBa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzBq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S3yzB61MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzCK1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_S3yzCa1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_S3yzEq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzCq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzC61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yzDK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_S3yy0q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzDa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzDq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_S3yzD61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_S3yzE61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzEK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzEa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzEq1MEeOdBunZhTRw1w" source="_S3yzBK1MEeOdBunZhTRw1w" target="_S3yzCa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzE61MEeOdBunZhTRw1w" source="_S3yzD61MEeOdBunZhTRw1w" target="_S3yy_K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yzFK1MEeOdBunZhTRw1w" source="_S3yzAq1MEeOdBunZhTRw1w" target="_S3yy-61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yzFa1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_S3yzFq1MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzF61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzGK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_S3yzGa1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzGq1MEeOdBunZhTRw1w" source="_S3yy6K1MEeOdBunZhTRw1w" target="_S3yy361MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzG61MEeOdBunZhTRw1w" source="_S3yy6K1MEeOdBunZhTRw1w" target="_S3yy6q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzHK1MEeOdBunZhTRw1w" source="_S3yy7a1MEeOdBunZhTRw1w" target="_S3yy8K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzHa1MEeOdBunZhTRw1w" source="_S3yy4q1MEeOdBunZhTRw1w" target="_S3yy8a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzHq1MEeOdBunZhTRw1w" source="_S3yy8K1MEeOdBunZhTRw1w" target="_S3yy8q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzH61MEeOdBunZhTRw1w" source="_S3yy8K1MEeOdBunZhTRw1w" target="_S3yy8q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzIK1MEeOdBunZhTRw1w" source="_S3yy8q1MEeOdBunZhTRw1w" target="_S3yy8a1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3yzIa1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzIq1MEeOdBunZhTRw1w" source="_S3yy2q1MEeOdBunZhTRw1w" target="_S3yy5a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzI61MEeOdBunZhTRw1w" source="_S3yy8a1MEeOdBunZhTRw1w" target="_S3yy9K1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_S3yzJK1MEeOdBunZhTRw1w" body="_S3yy-q1MEeOdBunZhTRw1w" decider="_S3yy961MEeOdBunZhTRw1w" successorClause="_S3yzJa1MEeOdBunZhTRw1w" test="_S3yy2a1MEeOdBunZhTRw1w _S3yy3q1MEeOdBunZhTRw1w _S3yy6a1MEeOdBunZhTRw1w _S3yy861MEeOdBunZhTRw1w"/>
          <clause xmi:id="_S3yzJa1MEeOdBunZhTRw1w" decider="_S3yzFq1MEeOdBunZhTRw1w" predecessorClause="_S3yzJK1MEeOdBunZhTRw1w" test="_S3yzFa1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3yy061MEeOdBunZhTRw1w" name="Input(label)" outgoing="_S3yyz61MEeOdBunZhTRw1w" parameter="_S3yyya1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S3yy1K1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_S3yy0q1MEeOdBunZhTRw1w" incoming="_S3yyz61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3yy1a1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_S3yy0K1MEeOdBunZhTRw1w" parameter="_S3yyzK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S3yy1q1MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_S3yy0a1MEeOdBunZhTRw1w" incoming="_S3yy0K1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S3yzJq1MEeOdBunZhTRw1w" name="AssertEqual" group="_S3yzRa1MEeOdBunZhTRw1w" node="_S3yzP61MEeOdBunZhTRw1w _S3yzQK1MEeOdBunZhTRw1w _S3yzQa1MEeOdBunZhTRw1w _S3yzQq1MEeOdBunZhTRw1w _S3yzQ61MEeOdBunZhTRw1w _S3yzRK1MEeOdBunZhTRw1w _S3yzRa1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_S3yzJ61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S3yzKK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S3yzKa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S3yzKq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S3yzK61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S3yzLK1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzLa1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzLq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S3yzL61MEeOdBunZhTRw1w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzMK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzMa1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S3yzMq1MEeOdBunZhTRw1w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzM61MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzNK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzNa1MEeOdBunZhTRw1w" source="_S3yzP61MEeOdBunZhTRw1w" target="_S3yzQK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzNq1MEeOdBunZhTRw1w" source="_S3yzQa1MEeOdBunZhTRw1w" target="_S3yzQq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzN61MEeOdBunZhTRw1w" source="_S3yzQ61MEeOdBunZhTRw1w" target="_S3yzRK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzOK1MEeOdBunZhTRw1w" source="_S3yzQq1MEeOdBunZhTRw1w" target="_S3yzUa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzOa1MEeOdBunZhTRw1w" source="_S3yzRK1MEeOdBunZhTRw1w" target="_S3yzWa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzOq1MEeOdBunZhTRw1w" source="_S3yzQK1MEeOdBunZhTRw1w" target="_S3yzi61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzO61MEeOdBunZhTRw1w" source="_S3yzRK1MEeOdBunZhTRw1w" target="_S3yzrK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzPK1MEeOdBunZhTRw1w" source="_S3yzRK1MEeOdBunZhTRw1w" target="_S3yzvq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzPa1MEeOdBunZhTRw1w" source="_S3yzRK1MEeOdBunZhTRw1w" target="_S3yz3K1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzPq1MEeOdBunZhTRw1w" source="_S3yzRK1MEeOdBunZhTRw1w" target="_S3y0AK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_S3yzRa1MEeOdBunZhTRw1w" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_S3yzRq1MEeOdBunZhTRw1w" name="IfStatement@587acb54">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_S3yzR61MEeOdBunZhTRw1w" name="Test(==)" incoming="_S3y0P61MEeOdBunZhTRw1w">
            <first xmi:id="_S3yzSK1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_S3y0Nq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzSa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzSq1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_S3yzS61MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_S3y0Sa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzTK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzTa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_S3yzTq1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_S3y0OK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzT61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzUK1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S3yzUa1MEeOdBunZhTRw1w" name="Fork(Fork(value1))" outgoing="_S3y0Nq1MEeOdBunZhTRw1w _S3y0N61MEeOdBunZhTRw1w" incoming="_S3yzOK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzUq1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_S3yzU61MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_S3y0N61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzVK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzVa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_S3yzVq1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_S3y0Oq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzV61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzWK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S3yzWa1MEeOdBunZhTRw1w" name="Fork(Fork(value2))" outgoing="_S3y0OK1MEeOdBunZhTRw1w _S3y0Oa1MEeOdBunZhTRw1w" incoming="_S3yzOa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzWq1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_S3yzW61MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_S3y0Oa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzXK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzXa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_S3yzXq1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_S3y0O61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzX61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzYK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_S3yzYa1MEeOdBunZhTRw1w" name="Initial(Test(==))" outgoing="_S3y0Q61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_S3yzYq1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_S3y0PK1MEeOdBunZhTRw1w _S3y0RK1MEeOdBunZhTRw1w" incoming="_S3y0Oq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_S3yzY61MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_S3y0Pa1MEeOdBunZhTRw1w _S3y0Pq1MEeOdBunZhTRw1w" incoming="_S3y0O61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzZK1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_S3y0Qa1MEeOdBunZhTRw1w">
            <argument xmi:id="_S3yzZa1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_S3y0PK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzZq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzZ61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_S3yzaK1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_S3y0Sq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzaa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzaq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yza61MEeOdBunZhTRw1w" name="Call(Not)" incoming="_S3y0R61MEeOdBunZhTRw1w">
            <argument xmi:id="_S3yzbK1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_S3y0Pa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzba1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzbq1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_S3yzb61MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_S3y0S61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzcK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzca1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_S3yzcq1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_S3y0P61MEeOdBunZhTRw1w _S3y0Qa1MEeOdBunZhTRw1w" incoming="_S3y0Pq1MEeOdBunZhTRw1w _S3y0Ra1MEeOdBunZhTRw1w" decisionInputFlow="_S3y0Pq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_S3yzc61MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_S3y0Ra1MEeOdBunZhTRw1w _S3y0R61MEeOdBunZhTRw1w" incoming="_S3y0Q61MEeOdBunZhTRw1w _S3y0RK1MEeOdBunZhTRw1w" decisionInputFlow="_S3y0RK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_S3yzdK1MEeOdBunZhTRw1w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_S3y0TK1MEeOdBunZhTRw1w" incoming="_S3y0Sa1MEeOdBunZhTRw1w _S3y0Sq1MEeOdBunZhTRw1w _S3y0S61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzda1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_S3yzdq1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_S3y0TK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzd61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzeK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_S3yzea1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzeq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yze61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yzfK1MEeOdBunZhTRw1w" name="ExpressionStatement@27b1136e" outgoing="_S3y0Ta1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzfa1MEeOdBunZhTRw1w" name="Call(Write)" incoming="_S3yzpK1MEeOdBunZhTRw1w" behavior="_S3y0pq1MEeOdBunZhTRw1w">
              <argument xmi:id="_S3yzfq1MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_S3yzo61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzf61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzgK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yzga1MEeOdBunZhTRw1w" name="Tuple@1b16d7d3" outgoing="_S3yzpK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yzgq1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_S3yzg61MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_S3yzoK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzhK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzha1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S3yzhq1MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzh61MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_S3yziK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_S3yzoK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzia1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yziq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yzi61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_S3yzOq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzjK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzja1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_S3yzjq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_S3yzoa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzj61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzkK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yzka1MEeOdBunZhTRw1w" name="Value(&quot;==&quot;)">
                <result xmi:id="_S3yzkq1MEeOdBunZhTRw1w" name="Value(&quot;==&quot;).result" outgoing="_S3yzoq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzk61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzlK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S3yzla1MEeOdBunZhTRw1w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzlq1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_S3yzl61MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_S3yzoa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzmK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzma1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_S3yzmq1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_S3yzoq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzm61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yznK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_S3yzna1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_S3yzo61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yznq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzn61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzoK1MEeOdBunZhTRw1w" source="_S3yzg61MEeOdBunZhTRw1w" target="_S3yziK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzoa1MEeOdBunZhTRw1w" source="_S3yzjq1MEeOdBunZhTRw1w" target="_S3yzl61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzoq1MEeOdBunZhTRw1w" source="_S3yzkq1MEeOdBunZhTRw1w" target="_S3yzmq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzo61MEeOdBunZhTRw1w" source="_S3yzna1MEeOdBunZhTRw1w" target="_S3yzfq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3yzpK1MEeOdBunZhTRw1w" source="_S3yzga1MEeOdBunZhTRw1w" target="_S3yzfa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yzpa1MEeOdBunZhTRw1w" name="ExpressionStatement@57712f3d" outgoing="_S3y0Tq1MEeOdBunZhTRw1w" incoming="_S3y0Ta1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzpq1MEeOdBunZhTRw1w" name="Call(Write)" incoming="_S3y0IK1MEeOdBunZhTRw1w" behavior="_S3y0pq1MEeOdBunZhTRw1w">
              <argument xmi:id="_S3yzp61MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_S3y0H61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzqK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzqa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yzqq1MEeOdBunZhTRw1w" name="Tuple@4fdf5f4" outgoing="_S3y0IK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yzq61MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_S3yzrK1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_S3yzO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzra1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzrq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_S3yzr61MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_S3y0GK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzsK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzsa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yzsq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@7d2bc3e5.operand2" incoming="_S3y0Ga1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yzs61MEeOdBunZhTRw1w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_S3yztK1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;).result" outgoing="_S3yzu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzta1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yztq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S3yzt61MEeOdBunZhTRw1w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_S3yzuK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@7d2bc3e5.operand2.result" outgoing="_S3y0Ha1MEeOdBunZhTRw1w" incoming="_S3yzu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzua1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzuq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yzu61MEeOdBunZhTRw1w" source="_S3yztK1MEeOdBunZhTRw1w" target="_S3yzuK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yzvK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@7d2bc3e5.operand3" incoming="_S3y0G61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3yzva1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_S3yzvq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_S3yzPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzv61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzwK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_S3yzwa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_S3y0DK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzwq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzw61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yzxK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@194a2ba0.operand2" incoming="_S3y0Da1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yzxa1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_S3yzxq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_S3yz-q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzx61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzyK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_S3yzya1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_S3yzyq1MEeOdBunZhTRw1w" name="CastExpression@7763c298" mode="parallel" outputElement="_S3yz3a1MEeOdBunZhTRw1w" inputElement="_S3yz3K1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:MergeNode" xmi:id="_S3yzy61MEeOdBunZhTRw1w" name="Merge(CastExpression@7763c298.operand)" outgoing="_S3yz261MEeOdBunZhTRw1w" incoming="_S3yz2K1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S3yzzK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_S3yzza1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_S3yz1a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yzzq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yzz61MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_S3yz0K1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_S3yz161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz0a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz0q1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_S3yz061MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_S3yz1a1MEeOdBunZhTRw1w _S3yz1q1MEeOdBunZhTRw1w" incoming="_S3yz2q1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_S3yz1K1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_S3yz2K1MEeOdBunZhTRw1w" incoming="_S3yz1q1MEeOdBunZhTRw1w _S3yz161MEeOdBunZhTRw1w" decisionInputFlow="_S3yz161MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz1a1MEeOdBunZhTRw1w" source="_S3yz061MEeOdBunZhTRw1w" target="_S3yzza1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz1q1MEeOdBunZhTRw1w" source="_S3yz061MEeOdBunZhTRw1w" target="_S3yz1K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz161MEeOdBunZhTRw1w" source="_S3yz0K1MEeOdBunZhTRw1w" target="_S3yz1K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz2K1MEeOdBunZhTRw1w" source="_S3yz1K1MEeOdBunZhTRw1w" target="_S3yzy61MEeOdBunZhTRw1w">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3yz2a1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz2q1MEeOdBunZhTRw1w" source="_S3yz3K1MEeOdBunZhTRw1w" target="_S3yz061MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz261MEeOdBunZhTRw1w" source="_S3yzy61MEeOdBunZhTRw1w" target="_S3yz3a1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_S3yz3K1MEeOdBunZhTRw1w" name="CastExpression@7763c298.inputElement" outgoing="_S3yz2q1MEeOdBunZhTRw1w" incoming="_S3yzPa1MEeOdBunZhTRw1w" regionAsInput="_S3yzyq1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_S3yz3a1MEeOdBunZhTRw1w" name="CastExpression@7763c298.outputElement" outgoing="_S3yz-61MEeOdBunZhTRw1w" incoming="_S3yz261MEeOdBunZhTRw1w" regionAsOutput="_S3yzyq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yz3q1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_S3yz361MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_S3yz-q1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz4K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz4a1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_S3yz4q1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_S3yz-61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz461MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz5K1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_S3yz5a1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_S3yz_K1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz5q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz561MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3yz6K1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_S3yz6a1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_S3yz_a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz6q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz661MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_S3yz7K1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3yz7a1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_S3yz7q1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_S3yz_K1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz761MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz8K1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_S3yz8a1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_S3yz_a1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz8q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz861MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_S3yz9K1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_S3yz_q1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz9a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz9q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <structuredNodeOutput xmi:id="_S3yz961MEeOdBunZhTRw1w" name="ConditionalTestExpression@194a2ba0.operand2.result" outgoing="_S3y0Ea1MEeOdBunZhTRw1w" incoming="_S3yz_q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3yz-K1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3yz-a1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz-q1MEeOdBunZhTRw1w" source="_S3yzxq1MEeOdBunZhTRw1w" target="_S3yz361MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz-61MEeOdBunZhTRw1w" source="_S3yz3a1MEeOdBunZhTRw1w" target="_S3yz4q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz_K1MEeOdBunZhTRw1w" source="_S3yz5a1MEeOdBunZhTRw1w" target="_S3yz7q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz_a1MEeOdBunZhTRw1w" source="_S3yz6a1MEeOdBunZhTRw1w" target="_S3yz8a1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3yz_q1MEeOdBunZhTRw1w" source="_S3yz9K1MEeOdBunZhTRw1w" target="_S3yz961MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3yz_61MEeOdBunZhTRw1w" name="ConditionalTestExpression@194a2ba0.operand3" incoming="_S3y0D61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:MergeNode" xmi:id="_S3y0AK1MEeOdBunZhTRw1w" name="Merge(Fork(value2))" outgoing="_S3y0BK1MEeOdBunZhTRw1w" incoming="_S3yzPq1MEeOdBunZhTRw1w"/>
                  <structuredNodeOutput xmi:id="_S3y0Aa1MEeOdBunZhTRw1w" name="ConditionalTestExpression@194a2ba0.operand3.result" outgoing="_S3y0Eq1MEeOdBunZhTRw1w" incoming="_S3y0BK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0Aq1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0A61MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0BK1MEeOdBunZhTRw1w" source="_S3y0AK1MEeOdBunZhTRw1w" target="_S3y0Aa1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_S3y0Ba1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@194a2ba0)" outgoing="_S3y0C61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_S3y0Bq1MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@194a2ba0)" outgoing="_S3y0Da1MEeOdBunZhTRw1w _S3y0D61MEeOdBunZhTRw1w" incoming="_S3y0C61MEeOdBunZhTRw1w _S3y0DK1MEeOdBunZhTRw1w" decisionInputFlow="_S3y0DK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_S3y0B61MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@194a2ba0.result)" outgoing="_S3y0E61MEeOdBunZhTRw1w" incoming="_S3y0Ea1MEeOdBunZhTRw1w _S3y0Eq1MEeOdBunZhTRw1w"/>
                <structuredNodeOutput xmi:id="_S3y0CK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@7d2bc3e5.operand3.result" outgoing="_S3y0Hq1MEeOdBunZhTRw1w" incoming="_S3y0E61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0Ca1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0Cq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0C61MEeOdBunZhTRw1w" source="_S3y0Ba1MEeOdBunZhTRw1w" target="_S3y0Bq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0DK1MEeOdBunZhTRw1w" source="_S3yzwa1MEeOdBunZhTRw1w" target="_S3y0Bq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0Da1MEeOdBunZhTRw1w" source="_S3y0Bq1MEeOdBunZhTRw1w" target="_S3yzxK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0Dq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0D61MEeOdBunZhTRw1w" source="_S3y0Bq1MEeOdBunZhTRw1w" target="_S3yz_61MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0EK1MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Ea1MEeOdBunZhTRw1w" source="_S3yz961MEeOdBunZhTRw1w" target="_S3y0B61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Eq1MEeOdBunZhTRw1w" source="_S3y0Aa1MEeOdBunZhTRw1w" target="_S3y0B61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0E61MEeOdBunZhTRw1w" source="_S3y0B61MEeOdBunZhTRw1w" target="_S3y0CK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S3y0FK1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@7d2bc3e5)" outgoing="_S3y0F61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_S3y0Fa1MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@7d2bc3e5)" outgoing="_S3y0Ga1MEeOdBunZhTRw1w _S3y0G61MEeOdBunZhTRw1w" incoming="_S3y0F61MEeOdBunZhTRw1w _S3y0GK1MEeOdBunZhTRw1w" decisionInputFlow="_S3y0GK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_S3y0Fq1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@7d2bc3e5.result)" outgoing="_S3y0H61MEeOdBunZhTRw1w" incoming="_S3y0Ha1MEeOdBunZhTRw1w _S3y0Hq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0F61MEeOdBunZhTRw1w" source="_S3y0FK1MEeOdBunZhTRw1w" target="_S3y0Fa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0GK1MEeOdBunZhTRw1w" source="_S3yzr61MEeOdBunZhTRw1w" target="_S3y0Fa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0Ga1MEeOdBunZhTRw1w" source="_S3y0Fa1MEeOdBunZhTRw1w" target="_S3yzsq1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0Gq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0G61MEeOdBunZhTRw1w" source="_S3y0Fa1MEeOdBunZhTRw1w" target="_S3yzvK1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0HK1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Ha1MEeOdBunZhTRw1w" source="_S3yzuK1MEeOdBunZhTRw1w" target="_S3y0Fq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Hq1MEeOdBunZhTRw1w" source="_S3y0CK1MEeOdBunZhTRw1w" target="_S3y0Fq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0H61MEeOdBunZhTRw1w" source="_S3y0Fq1MEeOdBunZhTRw1w" target="_S3yzp61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0IK1MEeOdBunZhTRw1w" source="_S3yzqq1MEeOdBunZhTRw1w" target="_S3yzpq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3y0Ia1MEeOdBunZhTRw1w" name="ExpressionStatement@3cb70bf2" incoming="_S3y0Tq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3y0Iq1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_S3y0MK1MEeOdBunZhTRw1w">
              <argument xmi:id="_S3y0I61MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_S3y0L61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0JK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0Ja1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_S3y0Jq1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0J61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0KK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3y0Ka1MEeOdBunZhTRw1w" name="Tuple@2bdb921a" outgoing="_S3y0MK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3y0Kq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;)">
                <result xmi:id="_S3y0K61MEeOdBunZhTRw1w" name="Value(&quot;&quot;).result" outgoing="_S3y0L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0LK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0La1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S3y0Lq1MEeOdBunZhTRw1w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0L61MEeOdBunZhTRw1w" source="_S3y0K61MEeOdBunZhTRw1w" target="_S3y0I61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0MK1MEeOdBunZhTRw1w" source="_S3y0Ka1MEeOdBunZhTRw1w" target="_S3y0Iq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3y0Ma1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_S3y0Mq1MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0M61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0NK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_S3y0Na1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Nq1MEeOdBunZhTRw1w" source="_S3yzUa1MEeOdBunZhTRw1w" target="_S3yzSK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0N61MEeOdBunZhTRw1w" source="_S3yzUa1MEeOdBunZhTRw1w" target="_S3yzU61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0OK1MEeOdBunZhTRw1w" source="_S3yzWa1MEeOdBunZhTRw1w" target="_S3yzTq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Oa1MEeOdBunZhTRw1w" source="_S3yzWa1MEeOdBunZhTRw1w" target="_S3yzW61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Oq1MEeOdBunZhTRw1w" source="_S3yzVq1MEeOdBunZhTRw1w" target="_S3yzYq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0O61MEeOdBunZhTRw1w" source="_S3yzXq1MEeOdBunZhTRw1w" target="_S3yzY61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0PK1MEeOdBunZhTRw1w" source="_S3yzYq1MEeOdBunZhTRw1w" target="_S3yzZa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Pa1MEeOdBunZhTRw1w" source="_S3yzY61MEeOdBunZhTRw1w" target="_S3yzbK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Pq1MEeOdBunZhTRw1w" source="_S3yzY61MEeOdBunZhTRw1w" target="_S3yzcq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0P61MEeOdBunZhTRw1w" source="_S3yzcq1MEeOdBunZhTRw1w" target="_S3yzR61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0QK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0Qa1MEeOdBunZhTRw1w" source="_S3yzcq1MEeOdBunZhTRw1w" target="_S3yzZK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0Qq1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0Q61MEeOdBunZhTRw1w" source="_S3yzYa1MEeOdBunZhTRw1w" target="_S3yzc61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0RK1MEeOdBunZhTRw1w" source="_S3yzYq1MEeOdBunZhTRw1w" target="_S3yzc61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0Ra1MEeOdBunZhTRw1w" source="_S3yzc61MEeOdBunZhTRw1w" target="_S3yzcq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0Rq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0R61MEeOdBunZhTRw1w" source="_S3yzc61MEeOdBunZhTRw1w" target="_S3yza61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0SK1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Sa1MEeOdBunZhTRw1w" source="_S3yzS61MEeOdBunZhTRw1w" target="_S3yzdK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Sq1MEeOdBunZhTRw1w" source="_S3yzaK1MEeOdBunZhTRw1w" target="_S3yzdK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0S61MEeOdBunZhTRw1w" source="_S3yzb61MEeOdBunZhTRw1w" target="_S3yzdK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0TK1MEeOdBunZhTRw1w" source="_S3yzdK1MEeOdBunZhTRw1w" target="_S3yzdq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0Ta1MEeOdBunZhTRw1w" source="_S3yzfK1MEeOdBunZhTRw1w" target="_S3yzpa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0Tq1MEeOdBunZhTRw1w" source="_S3yzpa1MEeOdBunZhTRw1w" target="_S3y0Ia1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_S3y0T61MEeOdBunZhTRw1w" body="_S3yzfK1MEeOdBunZhTRw1w _S3yzpa1MEeOdBunZhTRw1w _S3y0Ia1MEeOdBunZhTRw1w" decider="_S3yzea1MEeOdBunZhTRw1w" successorClause="_S3y0UK1MEeOdBunZhTRw1w" test="_S3yzR61MEeOdBunZhTRw1w _S3yzUq1MEeOdBunZhTRw1w _S3yzWq1MEeOdBunZhTRw1w _S3yzZK1MEeOdBunZhTRw1w _S3yza61MEeOdBunZhTRw1w _S3yzda1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_S3y0UK1MEeOdBunZhTRw1w" decider="_S3y0Mq1MEeOdBunZhTRw1w" predecessorClause="_S3y0T61MEeOdBunZhTRw1w" test="_S3y0Ma1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3yzP61MEeOdBunZhTRw1w" name="Input(label)" outgoing="_S3yzNa1MEeOdBunZhTRw1w" parameter="_S3yzLK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S3yzQK1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_S3yzOq1MEeOdBunZhTRw1w" incoming="_S3yzNa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3yzQa1MEeOdBunZhTRw1w" name="Input(value1)" outgoing="_S3yzNq1MEeOdBunZhTRw1w" parameter="_S3yzL61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S3yzQq1MEeOdBunZhTRw1w" name="Fork(value1)" outgoing="_S3yzOK1MEeOdBunZhTRw1w" incoming="_S3yzNq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3yzQ61MEeOdBunZhTRw1w" name="Input(value2)" outgoing="_S3yzN61MEeOdBunZhTRw1w" parameter="_S3yzMq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S3yzRK1MEeOdBunZhTRw1w" name="Fork(value2)" outgoing="_S3yzOa1MEeOdBunZhTRw1w _S3yzO61MEeOdBunZhTRw1w _S3yzPK1MEeOdBunZhTRw1w _S3yzPa1MEeOdBunZhTRw1w _S3yzPq1MEeOdBunZhTRw1w" incoming="_S3yzN61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S3y0Ua1MEeOdBunZhTRw1w" name="AssertFalse" group="_S3y0Zq1MEeOdBunZhTRw1w" node="_S3y0Yq1MEeOdBunZhTRw1w _S3y0Y61MEeOdBunZhTRw1w _S3y0ZK1MEeOdBunZhTRw1w _S3y0Za1MEeOdBunZhTRw1w _S3y0Zq1MEeOdBunZhTRw1w">
      <elementImport xmi:id="_S3y0Uq1MEeOdBunZhTRw1w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_S3y0U61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S3y0VK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S3y0Va1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S3y0Vq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S3y0V61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S3y0WK1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0Wa1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0Wq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S3y0W61MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0XK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0Xa1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Xq1MEeOdBunZhTRw1w" source="_S3y0Yq1MEeOdBunZhTRw1w" target="_S3y0Y61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0X61MEeOdBunZhTRw1w" source="_S3y0ZK1MEeOdBunZhTRw1w" target="_S3y0Za1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0YK1MEeOdBunZhTRw1w" source="_S3y0Y61MEeOdBunZhTRw1w" target="_S3y0ea1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0Ya1MEeOdBunZhTRw1w" source="_S3y0Za1MEeOdBunZhTRw1w" target="_S3y0jq1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_S3y0Zq1MEeOdBunZhTRw1w" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3y0Z61MEeOdBunZhTRw1w" name="ExpressionStatement@51539622">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3y0aK1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_S3y0pa1MEeOdBunZhTRw1w" behavior="_S3yyw61MEeOdBunZhTRw1w">
            <argument xmi:id="_S3y0aa1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_S3y0o61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0aq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0a61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_S3y0bK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_S3y0pK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0ba1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0bq1MEeOdBunZhTRw1w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3y0b61MEeOdBunZhTRw1w" name="Tuple@288e5f6" outgoing="_S3y0pa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3y0cK1MEeOdBunZhTRw1w" name="Value(&quot;! &quot;)">
              <result xmi:id="_S3y0ca1MEeOdBunZhTRw1w" name="Value(&quot;! &quot;).result" outgoing="_S3y0ma1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0cq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0c61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_S3y0dK1MEeOdBunZhTRw1w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3y0da1MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_S3y0dq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_S3y0ma1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0d61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0eK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_S3y0ea1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_S3y0YK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0eq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0e61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_S3y0fK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_S3y0o61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0fa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0fq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3y0f61MEeOdBunZhTRw1w" name="Value(false)">
              <result xmi:id="_S3y0gK1MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_S3y0oq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0ga1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0gq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_S3y0g61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S3y0hK1MEeOdBunZhTRw1w" name="Test(==)">
              <first xmi:id="_S3y0ha1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_S3y0mq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0hq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0h61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_S3y0iK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_S3y0na1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0ia1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0iq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_S3y0i61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_S3y0oq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0jK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0ja1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3y0jq1MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_S3y0mq1MEeOdBunZhTRw1w _S3y0m61MEeOdBunZhTRw1w" incoming="_S3y0Ya1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3y0j61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
              <argument xmi:id="_S3y0kK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_S3y0m61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0ka1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0kq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_S3y0k61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_S3y0nK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0lK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0la1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3y0lq1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_S3y0nq1MEeOdBunZhTRw1w _S3y0n61MEeOdBunZhTRw1w" incoming="_S3y0nK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_S3y0l61MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_S3y0pK1MEeOdBunZhTRw1w" incoming="_S3y0na1MEeOdBunZhTRw1w _S3y0oK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S3y0mK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_S3y0oK1MEeOdBunZhTRw1w" incoming="_S3y0nq1MEeOdBunZhTRw1w _S3y0n61MEeOdBunZhTRw1w" decisionInputFlow="_S3y0n61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0ma1MEeOdBunZhTRw1w" source="_S3y0ca1MEeOdBunZhTRw1w" target="_S3y0dq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0mq1MEeOdBunZhTRw1w" source="_S3y0jq1MEeOdBunZhTRw1w" target="_S3y0ha1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0m61MEeOdBunZhTRw1w" source="_S3y0jq1MEeOdBunZhTRw1w" target="_S3y0kK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0nK1MEeOdBunZhTRw1w" source="_S3y0k61MEeOdBunZhTRw1w" target="_S3y0lq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0na1MEeOdBunZhTRw1w" source="_S3y0iK1MEeOdBunZhTRw1w" target="_S3y0l61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0nq1MEeOdBunZhTRw1w" source="_S3y0lq1MEeOdBunZhTRw1w" target="_S3y0mK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0n61MEeOdBunZhTRw1w" source="_S3y0lq1MEeOdBunZhTRw1w" target="_S3y0mK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0oK1MEeOdBunZhTRw1w" source="_S3y0mK1MEeOdBunZhTRw1w" target="_S3y0l61MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S3y0oa1MEeOdBunZhTRw1w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0oq1MEeOdBunZhTRw1w" source="_S3y0gK1MEeOdBunZhTRw1w" target="_S3y0i61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0o61MEeOdBunZhTRw1w" source="_S3y0fK1MEeOdBunZhTRw1w" target="_S3y0aa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0pK1MEeOdBunZhTRw1w" source="_S3y0l61MEeOdBunZhTRw1w" target="_S3y0bK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y0pa1MEeOdBunZhTRw1w" source="_S3y0b61MEeOdBunZhTRw1w" target="_S3y0aK1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3y0Yq1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_S3y0Xq1MEeOdBunZhTRw1w" parameter="_S3y0WK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S3y0Y61MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_S3y0YK1MEeOdBunZhTRw1w" incoming="_S3y0Xq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3y0ZK1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_S3y0X61MEeOdBunZhTRw1w" parameter="_S3y0W61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S3y0Za1MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_S3y0Ya1MEeOdBunZhTRw1w" incoming="_S3y0X61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S3y0pq1MEeOdBunZhTRw1w" name="Write" group="_S3y0s61MEeOdBunZhTRw1w" node="_S3y0sa1MEeOdBunZhTRw1w _S3y0sq1MEeOdBunZhTRw1w _S3y0s61MEeOdBunZhTRw1w">
      <packageImport xmi:id="_S3y0p61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S3y0qK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S3y0qa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S3y0qq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S3y0q61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S3y0rK1MEeOdBunZhTRw1w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0ra1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0rq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0r61MEeOdBunZhTRw1w" source="_S3y0sa1MEeOdBunZhTRw1w" target="_S3y0sq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0sK1MEeOdBunZhTRw1w" source="_S3y0sq1MEeOdBunZhTRw1w" target="_S3y0wK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_S3y0s61MEeOdBunZhTRw1w" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3y0tK1MEeOdBunZhTRw1w" name="ExpressionStatement@13a2c0d7">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_S3y0ta1MEeOdBunZhTRw1w" name="Collect(Call(write))" incoming="_S3y04a1MEeOdBunZhTRw1w" mode="parallel" inputElement="_S3y0xa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_S3y0tq1MEeOdBunZhTRw1w" name="Call(write)">
              <argument xmi:id="_S3y0t61MEeOdBunZhTRw1w" name="Call(write).argument(value)" incoming="_S3y0w61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0uK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0ua1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_S3y0uq1MEeOdBunZhTRw1w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0u61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0vK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_S3y0va1MEeOdBunZhTRw1w" name="Call(write).target" incoming="_S3y0xK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0vq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0v61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_S3y0wK1MEeOdBunZhTRw1w" name="Collect(Call(write)).input(Fork(value))" outgoing="_S3y0w61MEeOdBunZhTRw1w" incoming="_S3y0sK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0wa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0wq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0w61MEeOdBunZhTRw1w" source="_S3y0wK1MEeOdBunZhTRw1w" target="_S3y0t61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0xK1MEeOdBunZhTRw1w" source="_S3y0xa1MEeOdBunZhTRw1w" target="_S3y0va1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_S3y0xa1MEeOdBunZhTRw1w" name="Collect(Call(write)).inputElement" outgoing="_S3y0xK1MEeOdBunZhTRw1w" incoming="_S3y04K1MEeOdBunZhTRw1w" regionAsInput="_S3y0ta1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3y0xq1MEeOdBunZhTRw1w" name="Feature(Call(At).result())" outgoing="_S3y04a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S3y0x61MEeOdBunZhTRw1w" name="Call(At)" incoming="_S3y03q1MEeOdBunZhTRw1w">
              <argument xmi:id="_S3y0yK1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_S3y03K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0ya1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0yq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_S3y0y61MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_S3y0361MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0zK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y0za1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_S3y0zq1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_S3y04K1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y0z61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y00K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S3y00a1MEeOdBunZhTRw1w" name="Tuple@5c7439c6" outgoing="_S3y03q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_S3y00q1MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_S3y0061MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel).result" outgoing="_S3y03K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y01K1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y01a1MEeOdBunZhTRw1w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S3y01q1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_S3y0161MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_S3y03a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S3y02K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S3y02a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_S3y02q1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S3y0261MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_S3y0361MEeOdBunZhTRw1w" incoming="_S3y03a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y03K1MEeOdBunZhTRw1w" source="_S3y0061MEeOdBunZhTRw1w" target="_S3y0yK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y03a1MEeOdBunZhTRw1w" source="_S3y0161MEeOdBunZhTRw1w" target="_S3y0261MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S3y03q1MEeOdBunZhTRw1w" source="_S3y00a1MEeOdBunZhTRw1w" target="_S3y0x61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y0361MEeOdBunZhTRw1w" source="_S3y0261MEeOdBunZhTRw1w" target="_S3y0y61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S3y04K1MEeOdBunZhTRw1w" source="_S3y0zq1MEeOdBunZhTRw1w" target="_S3y0xa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S3y04a1MEeOdBunZhTRw1w" source="_S3y0xq1MEeOdBunZhTRw1w" target="_S3y0ta1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S3y0sa1MEeOdBunZhTRw1w" name="Input(value)" outgoing="_S3y0r61MEeOdBunZhTRw1w" parameter="_S3y0rK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S3y0sq1MEeOdBunZhTRw1w" name="Fork(value)" outgoing="_S3y0sK1MEeOdBunZhTRw1w" incoming="_S3y0r61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <profileApplication xmi:id="_S3y04q1MEeOdBunZhTRw1w">
      <eAnnotations xmi:id="_S3y0461MEeOdBunZhTRw1w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_S3y05K1MEeOdBunZhTRw1w" base_BehavioralFeature="_S3yPLa1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_S3y05a1MEeOdBunZhTRw1w" base_BehavioralFeature="_S3w-Lq1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_S3y05q1MEeOdBunZhTRw1w" base_BehavioralFeature="_S3w-Kq1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_S3zZwK1MEeOdBunZhTRw1w" base_BehavioralFeature="_S3yPKa1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_S3zZwa1MEeOdBunZhTRw1w" base_BehavioralFeature="_S3yMKa1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_S3zZwq1MEeOdBunZhTRw1w" base_BehavioralFeature="_S3yMIq1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_S3zZw61MEeOdBunZhTRw1w" base_BehavioralFeature="_S3w-s61MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_S3zZxK1MEeOdBunZhTRw1w" base_BehavioralFeature="_S3w-t61MEeOdBunZhTRw1w"/>
</xmi:XMI>

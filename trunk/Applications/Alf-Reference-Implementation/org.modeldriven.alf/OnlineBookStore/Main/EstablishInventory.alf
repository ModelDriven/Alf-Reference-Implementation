namespace Main;

private import DomainDataTypes::*;
private import ProductSpecification::*;

activity EstablishInventory() {

  pc1 = new ProductCategory("Books");
  pc2 = new ProductCategory("Recordings");
  pc3 = new ProductCategory("Software");
  
  p1 = new Publisher(
    groupCode => 0,
    publisherCode => 201,
    name => "Addison-Wesley",
    address => new MailingAddress(
      addressLine1 => "75 Arlington Street, Suite 300",
      city => "Boston",
      stateOrProvince => "MA",
      country => "USA",
      postalCode => "02116"
    ),
    website => "http://www.aw.com"
  );
  
  bp1 = new BookProduct(
    productID => "780201748048",
    title => "Executable UML",
    subtitle => "A Foundation for Model-Driven Architecture",
    copyright => 2002,
    unitPrice => new Money(44,99),
    description => "Executable UML is a major innovation in the field of software development. It is designed to produce " +
    "a comprehensive and understandable model of a solution independent of the organization of "+
    "the software implementation. It is a highly abstract thinking tool that aids in the formalization of " +
    "knowledge, and is also a way of describing the concepts that make up abstract solutions to software " +
    "development problems.\n" +
    "This timely book thoroughly introduces, documents, and explains this important new technology. The " +
    "authors show UML can formalize requirements and use cases into a rich set of verifiable diagrams, how " +
    "it can be used to produce executable and testable models, and how these models can be translated directly " +
    "into code. In addition, the book explains how individual system domains are woven together by an " +
    "executable UML model compiler.",
    website => "http://www.executableumlbook.com",
    titleCode => 74804,
    isStocked => true,
    publisher => p1,
    productCategory => pc1
  );
  
  a1 = new Author(new PersonalName(
    firstName => "Stephen", 
    middleName => "J", 
    lastName => "Mellor"));
  a2 = new Author(new PersonalName(
    firstName => "Marc",
    middleName => "J",
    lastName => "Balcer"));
  a3 = new Author(new PersonalName(
    firstName => "Ivar",
    lastName => "Jacobson"));
  
  as1 = new Authorship(
    preCredit => "",
    postCredit => "",
    book => bp1,
    author => a1);
  as2 = new Authorship(
    preCredit => "",
    postCredit => "",
    book => bp1,
    author => a2,
    follows => as1);
  as3 = new Authorship(
    preCredit => "Forward by",
    postCredit => "",
    book => bp1,
    author => a3,
    follows => as2);    

}
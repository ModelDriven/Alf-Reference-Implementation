namespace Ordering1;

/**
From Executable UML, Figure B.2, with statechart from Figure B.3
*/
active class Order1
{
  public orderID:         arbitrary_id;
  public dateOrderPlaced: date;
  public totalValue:      Money; // Note: fUML does not allow derived values
  public recipient:       PersonalName;
  public deliveryAddress: MailingAddress;
  public contactPhone:    TelephoneNumber;

  public receive signal CheckOut
  {
    public cart:               ShoppingCart;
    public accountNumber:      BankCardAccountNumber;
    public billingAddress:     MailingAddress;
    public cardExpirationDate: MonthYear;
    public cardholderName:     PersonalName;
    public customerEmail:      InternetEmailAddress;
    public customerName:       PersonalName;
    public customerPhone:      TelephoneNumber;
    public shippingAddress:    MailingAddress;
  }

  public receive signal SubmitCharge
  {
    public accountNumber:      BankCardAccountNumber;
    public billingAddress:     MailingAddress;
    public cardExpirationDate: MonthYear;
    public cardholderName:     PersonalName;
  }

  public receive signal PaymentDeclined{}
  public receive signal PaymentApproved{}
  public receive signal OrderDelivered{}

  private establishCustomer(in rcvd_evt: CheckOut) { }
  private processCharge(in rcvd_evt: SubmitCharge) { }
  private declineCharge() { }
  private packAndShip() { }
  private notifyOfDelivery() { }

} do Order_Behavior

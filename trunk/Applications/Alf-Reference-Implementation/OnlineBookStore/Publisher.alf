active class Publisher specializes ActiveChannel {
  private publisherID: Integer = Publisher->size();
  private listeners: Listener[*];
  
  public register(in listener: Listener) {
    this.listeners->add(listener);
  }
  
  public unregister(in listener: Listener) {
    this.listeners->remove(listener);
  }
  
  public notify(in content: any[0..1]) {
    this.listeners.Notification(content);
  }
  
  public getName(): String {
    return "Publisher#" + IntegerFunctions::ToString(this.publisherID);
  }
  
  public open(out errorStatus: Status[0..1]) {
  }
  
  public close(out errorStatus: Status[0..1]) {
  }
  
  public isOpen(): Boolean {
    return true;
  }
  
  public getStatus(): Status {
    return new Status(
      context => "Publisher",
      code => 0,
      description => "Normal"
    );
  }
  
} do {
}


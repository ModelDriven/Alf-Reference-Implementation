namespace OnlineBookstoreUI;

active class CheckOutView specializes View {

  @Create
  public CheckOutView(in controller: CheckOutController) {
    super(
      title => "Shopping Cart > Check Out > Customer Information",
      prompt => "Select a field to change, n for next, s for shopping cart, h for home or x to exit",
      controller => controller
    );
  }
  
  public getController(): CheckOutController {
    return (CheckOutController)this.controller;
  }
  
  protected display(): String[*] sequence {
    controller = (CheckOutController)this.controller;
    
    WriteLine("1. Customer Email: " + controller.customerEmail);
    WriteLine("2. Customer Name: " + NullToString(ToNameString(controller.customerName)));
    WriteLine("3. Customer Phone: " + NullToString(controller.customerPhone));
    WriteLine("4. Shipping Address:");
    WriteLine("");
    Write(ToAddressString(controller.shippingAddress));
    
    return String[]{"1", "2", "3", "4", "n", "s", "h", "x"};
  }
  
  protected handle(in choice: String) {
    switch (choice) {
      case "1": this.updateCustomerEmail();
      case "2": this.updateCustomerName();
      case "3": this.updateCustomerPhone();
      case "4": this.updateShippingAddress();
      case "n": this.next();
      case "s": this.showShoppingCart();
      case "h": this.home();
      case "x": this.exit();
    }
  }
  
  private updateCustomerEmail() {
    this.getController().Update(
      customerEmail => GetCustomerEmail());
  }
  
  private updateCustomerName() {
    WriteLine("Enter your name:");
    this.getController().Update(
      customerName => GetPersonalName());
  }
  
  private updateCustomerPhone() {
    Write("Enter your phone number:");
    this.getController().Update(
      customerPhone => ReadLine());
  }
  
  private updateShippingAddress() {
    WriteLine("Enter your shipping address:");
    this.getController().Update(
      shippingAddress => GetMailingAddress());
  }
  
  private next() {
    this.getController().Next();
  }
  
  private showShoppingCart() {
    this.getController().ShowShoppingCart();
  }
  
  private home() {
    this.getController().Home();
  }
  
  private exit() {
    this.getController().Exit();
  }
  
} do {
}
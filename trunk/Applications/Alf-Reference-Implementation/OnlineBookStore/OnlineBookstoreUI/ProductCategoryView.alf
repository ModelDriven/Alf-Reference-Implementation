namespace OnlineBookstoreUI;

private import ProductSpecification::*;

active class ProductCategoryView specializes View {

  @Create
  public ProductCategoryView (
    in title: String,
    in controller: ProductCategoryController) {
    super(
      title => title,
      prompt => "Select a product, h for home, s for shopping cart or x to exit.",
      controller => controller
    );
  }
  
  public getController(): ProductCategoryController {
    return (ProductCategoryController)this.controller;
  }
  
  protected display(): String[*] sequence {
    choices = String[]{"x", "h", "s"};
    i = 1;
    for (product in ((ProductCategoryController)this.controller).products) {
      if (product.currentlyAvailable) {
        choice = IntegerFunctions::ToString(i++);
        choices->add(choice);
        WriteLine(choice + ". " + product.productName);
      }
    }    
    return choices;
  }
  
  protected handle(in choice: String){
    switch (choice) {
      case "x": this.exit();
      case "h": this.home();
      case "s": this.showShoppingCart();
      default: this.showProduct(IntegerFunctions::ToInteger(choice));
    }
  }
  
  private exit() {
    this.getController().Exit();
  }
  
  private home() {
    this.getController().Home();
  }
  
  private showShoppingCart() {
    this.getController().ShowShoppingCart();
  }
  
  private showProduct(in choice: Integer) {
    this.getController().ShowProduct(choice);
  }
  
} do {
}

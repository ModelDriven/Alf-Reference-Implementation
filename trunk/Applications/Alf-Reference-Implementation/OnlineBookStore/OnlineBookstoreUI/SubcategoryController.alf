namespace OnlineBookstoreUI;

private import ProductSpecification::*;

active class SubcategoryController specializes Controller {

  public title: String;
  public subcategories: ProductCategory[*] sequence;
  
  @Create
  public SubcategoryController(
    in title: String,
    in category: ProductCategory
  ) {
    this.title = title + " > " + category.categoryName;
    this.subcategories = category.'is divided into';
  }
  
  public receive signal Home { 
  }
  
  public receive signal ShowShoppingCart {
  }
  
  public receive signal ShowCategory {
    public choice: Integer;
  }
  
  private showCategory(in choice: Integer): Controller {
    category = this.subcategories->at(choice);
    if (category.'is divided into'->isEmpty()) {
      new ProductCategoryController(this.title, category).Display();
    } else {
      new SubcategoryController(this.title, category).Display();
    }
  }
  
} do {

  accept (Display);  
  new SubcategoryView(this.title, this);

  accept (Exit) {
  } or accept (Home) {
    new HomeController().Display();
  } or accept (ShowShoppingCart) {
    new ShoppingCartController().Display();
  } or accept (event: ShowCategory) {
    this.showCategory(event.choice);
  }
  
  this.view.destroy();
  
}

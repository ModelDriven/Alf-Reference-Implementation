private import Testing::*;
/**
 * Test object structure expressions.
 **/
class Expressions_Object specializes Test {

	@Create public Expressions_Object() {
		this.run(null);
	}

	@Create public run(in tester: Tester[0..1]) {
		super(tester);

		this.test(member, names, self);
		
		AssertEqual("member.name", member.name, "A");
		AssertTrue("member.isActive", member.isActive);
		AssertEqual("member.address", member.address, "Easy Street");
		
		AssertEqual("self.principal", self.principal, 1000);
		AssertEqual("self.rate", self.rate, 5);
		AssertEqual("self.interest", self.interest, 500);
		
		AssertList("names", names, String[]{"A", "B"});
	
	  	this.done();
	}

    // Supporting declarations *************************************************
    
  	private members: compose Member[*] sequence;
	private principal: Integer;
	private rate: Integer;
	private interest: Integer;
	
    private class Member { 
      	public isActive: Boolean;
      	public name: String;
      	public address: String;
  	}
  	
	//**************************************************************************

	public test (out member: Member[0..1], out names: String[*], out self: Expressions_Object) {
	
	  this.members[1] = new Member();
	  this.members[2] = new Member();
	  this.members[1].name = "A";
	  this.members[2].name = "B";
	  member = this.members[1];
	  member.isActive = true;
	  member.address = "Easy Street";
	  
	  this.principal = 1000;
	  this.rate = 5;
	  interest = (this.principal * this.rate) / 100 * 10;
	  this.interest = interest != null? interest: 0;

	  names = this.members.name;	  
	  self = this;
	}
}
/**
 * Test active class instantiation
 */
class Units_ActiveClass specializes Test {

	@Create public Units_ActiveClass() {
		this.run(null);
	}

	@Create public run(in tester: Tester[0..1]) {
		super(tester);
  		new TestRunner(this).Start();
	}

  private active class C {
    public i: Integer;
    public j: Integer;
    public t: Base;
    @Create public C(in i: Integer, in t: Base) { 
      this.i = i;
      this.t = t;
    }
  } do {
    $(this.j = this.i);
    this.t.Continue(this);
  }
  
  private abstract active class Base {
  
    public receive signal Start { }
    public receive signal Continue { public c : C; }

  } do {
    accept(Start);
    new C(1, this);
  }
  
  public active class TestRunner specializes Base {
  	
  	private outer: Test;
  	
  	@Create public TestRunner(in outer: Test) {
  		this.outer = outer;
  	}
  
    } do {
      accept (sig: Continue);
      
      AssertEqual("sig.c.j", sig.c.j, 1);
      
      this.outer.done();
    }

}
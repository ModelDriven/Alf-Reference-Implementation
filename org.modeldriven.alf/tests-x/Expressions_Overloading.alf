/**
 * Test the resolution of operation overloading.
 *
**/
class Expressions_Overloading specializes Test {

		@Create public Expressions_Overloading() {
				this.run(null);
		}
		
		@Create public run(in tester: Tester[0..1]) {
				super(tester);
				
				this.test(s, i, n, j);
				
				AssertEqual("this.s1", this.s1, "test1");
				AssertEqual("this.i1", this.i1, 1);
				AssertEqual("this.n1", this.n1, 5);
				
				AssertEqual("this.s2", this.s2, "test4");
				AssertEqual("this.i2", this.i2, 7);
				AssertEqual("this.n2", this.n2, 6);
				
				AssertEqual("this.s3", this.s3, "test6");
				AssertEqual("this.i3", this.i3, 7);
				AssertEqual("this.n3", this.n3, 6);
				
				AssertEqual("j", j, 1);
				
				AssertEqual("s", s, "test4");
				AssertEqual("i", i, 7);
				AssertEqual("n", n, 6);
				
				this.done();
		}
		
		// Supporting declarations ************************************

    public s1: String[0..1];
    public i1: Integer[0..1];
    public n1: Natural[0..1];
    
    public set(in s: String) { this.s1 = s; }
    public set(in i: Integer) { this.i1 = i; }
    public set(in n: Natural) { this.n1 = n; }
    
    public get1(): Integer { return this.i1; }
    public get1(): Natural { return this.n1; }
    
    public s2: String[0..1];
    public i2: Integer[0..1];
    public n2: Natural[0..1];
    
    public set(in s: String, in i: Integer) { 
    		this.s2 = s;
    		this.i2 = i;
    }
    
    public set(in s: String, in n: Natural) { 
    		this.s2 = s;
    		this.n2 = n;
    }
    
    public set(in m: Natural, in i: Integer[0..1]) { 
    		this.i2 = i;
    		this.n2 = m;
    }
    
    public get2(out s: String) { s = this.s2; }
    public get2(out i: Integer) { i = this.i2; }
    public get2(out n: Natural) { n = this.n2; }
    
    public s3: String[0..1];
    public i3: Integer[0..1];
    public n3: Natural[0..1];
    
    public setGet1(inout s: String, in i: Integer) {
    		this.s3 = s;
    		this.i3 = i;
    }
    
    public setGet1(inout s: String, in n: Natural) {
    	  this.s3 = s;
    	  this.n3 = n;
    }
    
    public setGet2(in s: String, inout i: Integer) {
    		this.s3 = s;
    		this.i3 = i;
    }
    
    public setGet2(in s: String, inout n: Natural) {
    	  this.s3 = s;
    	  this.n3 = n;
    }
    
    // ************************************************************
    
    public test(
    		out s: String, out i: Integer, out n: Natural,
    		out j: Integer
    ) {
        this.set("test1");
        this.set(+1);
        this.set(2);
        
        j = this.get1();
                
        this.set("test2", +3);
        this.set("test3", 4);
        
        this.set(n=>5);
        this.set(m=>6);
        this.set(i=>7, s=>"test4");
        
        this.get2(s);
        this.get2(i);
        this.get2(n);
        
        this.setGet1(s, +8);
        this.setGet1(s, 9);
        
        this.setGet2("test5", i);
        this.setGet2("test6", n);
    }
}
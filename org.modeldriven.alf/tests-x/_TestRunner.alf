active class _TestRunner specializes Test::Tester {
} do {
    accept(Continue);
    WriteLine("Expressions_Assignment...");
    new Expressions_Assignment::run(this);
    accept(Continue);
    WriteLine("Expressions_Assignment_Feature...");
    new Expressions_Assignment_Feature::run(this);
    accept(Continue);
    WriteLine("Expressions_Assignment_Feature_Indexed...");
    new Expressions_Assignment_Feature_Indexed::run(this);
    accept(Continue);
    WriteLine("Expressions_Assignment_Indexed...");
    new Expressions_Assignment_Indexed::run(this);
    accept(Continue);
    WriteLine("Expressions_Assignment_Null...");
    new Expressions_Assignment_Null::run(this);
    accept(Continue);
    WriteLine("Expressions_Association...");
    new Expressions_Association::run(this);
    accept(Continue);
    WriteLine("Expressions_Constructor_Destructor...");
    new Expressions_Constructor_Destructor::run(this);
    accept(Continue);
    WriteLine("Expressions_Increment_Decrement...");
    new Expressions_Increment_Decrement::run(this);
    accept(Continue);
    WriteLine("Expressions_Invocation...");
    new Expressions_Invocation::run(this);
    accept(Continue);
    WriteLine("Expressions_Invocation_Reception...");
    new Expressions_Invocation_Reception::run(this);
    accept(Continue);
    WriteLine("Expressions_Literal_Name...");
    new Expressions_Literal_Name::run(this);
    accept(Continue);
    WriteLine("Expressions_Object...");
    new Expressions_Object::run(this);
    accept(Continue);
    WriteLine("Expressions_Operator...");
    new Expressions_Operator::run(this);
    accept(Continue);
    WriteLine("Expressions_Overloading...");
    new Expressions_Overloading::run(this);
    accept(Continue);
    WriteLine("Expressions_Real...");
    new Expressions_Real::run(this);
    accept(Continue);
    WriteLine("Expressions_Sequence_Construction...");
    new Expressions_Sequence_Construction::run(this);
    accept(Continue);
    WriteLine("Expressions_Sequence_Expansion_Reduction...");
    new Expressions_Sequence_Expansion_Reduction::run(this);
    accept(Continue);
    WriteLine("Expressions_Sequence_Operation...");
    new Expressions_Sequence_Operation::run(this);
    accept(Continue);
    WriteLine("Expressions_SuperConstructors...");
    new Expressions_SuperConstructors::run(this);
    accept(Continue);
    WriteLine("Expressions_Template...");
    new Expressions_Template::run(this);
    accept(Continue);
    WriteLine("Statements_Accept...");
    new Statements_Accept::run(this);
    accept(Continue);
    WriteLine("Statements_Classify...");
    new Statements_Classify::run(this);
    accept(Continue);
    WriteLine("Statements_Conditional...");
    new Statements_Conditional::run(this);
    accept(Continue);
    WriteLine("Statements_For_Looping...");
    new Statements_For_Looping::run(this);
    accept(Continue);
    WriteLine("Statements_Return...");
    new Statements_Return::run(this);
    accept(Continue);
    WriteLine("Statements_Simple...");
    new Statements_Simple::run(this);
    accept(Continue);
    WriteLine("Statements_While_Do_Looping...");
    new Statements_While_Do_Looping::run(this);
    accept(Continue);
    WriteLine("Units_ActiveClass...");
    new Units_ActiveClass::run(this);
    accept(Continue);
    WriteLine("Units_Map...");
    new Units_Map::run(this);
    accept(Continue);
    WriteLine("All done!");
}

/**
 * Test expressions involving templates.
 **/
active class Expressions_Template {

    public activity A<T specializes B>(in x: T): Integer { 
      return x.i;
    }
    
    public class B {
      public i: Integer;
      @Create public B(in i: Integer) { this.i = i; }
    }
    
    public class C<T> {
        p: T;
        
        @Create public C(in p: T) { this.p = p; }
        r(): T { return this.p; }
        
        activity E(in x: T): T { return x; }
    }
    
    public active class H<T> {
        public a: T;
        public b: T;
        @Create public H(in a: T) { this.a = a; }
    } do {
        $(this.b = new C<T>(this.a).r());
    }
    
    public activity test(
      out i: Integer, out j: Integer, out k: Integer,
      out s: Set<Integer>, out list: List<Integer>) {
      
      b = new B(1);
      
      i = A<B>(b);
      j = C<B>.E(b).i;
      k = new H<B>(b).b.i;      

      s = new Set<Integer>(null);
      s.add(1);
      
      list = List<Integer>{1, 2, 3};
    }
} do {
  test(i, j, k, s, list);
  
  AssertEqual("i", i, 1);
  AssertEqual("j", j, 1);
  AssertEqual("k", k, 1);
  
  AssertList("s", s.toSequence(), 1);
  AssertList("list", list.toSequence(), Integer[]{1,2,3});
}
